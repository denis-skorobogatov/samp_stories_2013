//******************************************************************************
//================================[Инклуды]====================================.
//******************************************************************************
#include <a_samp>
#include <a_http> 
#include <a_mysql>
#include <sscanf2>
#include <streamer>

native IsValidVehicle(vehicleid);

//******************************************************************************
//================================[Дефайны]=====================================
//******************************************************************************
#define MODENAME	"SA:RPG v1.3.1117"
#define SAMPV		"SAMP 0.3.7"
#define FPHEAD		"{33CCFF}"
#define FPMSG		"{F5DEB3}"

//#undef MAX_PLAYERS
//#define MAX_PLAYERS 300
#define Public:%0(%1) 					forward %0(%1); public %0(%1)
#define AddPVarInt(%0,%1,%2) 			SetPVarInt(%0,%1,GetPVarInt(%0,%1)+%2)

#define SKIN_NULL 252

#define DB_LOAD_SETTINGS		1
#define DB_LOAD_BIZNES			2
#define DB_LOAD_CARS			3
#define DB_LOAD_HOUSES			4
#define DB_CHECK_NAME			5
#define DB_LOAD_FRACTION		6
#define DB_LOAD_ZONES			7
#define DB_CHECK_BONUS			9
#define DB_CHECK_ACCOUNT		10
#define DB_CHECK_PASSWORD		11
#define DB_CHECK_BAN			13
#define DB_LOAD_LIC				14
#define DB_CHECK_ACCOUNT_BAN	15
#define DB_BAN_OFFLINE			16
#define DB_UNBAN				17

#define DB_CHECK_REFER			20
#define DB_CHECK_EMAIL			21
#define DB_LOAD_ADMIN			22
#define DB_BAN_ADMIN			23

#define DB_ADMIN_ONLINE 		26
#define DB_LOAD_PREMIUM 		27
#define DB_CHECK_PREMIUM 		28
#define DB_LOAD_REFERS 			30
#define DB_LOAD_CAR 			31
#define DB_ADD_CAR 				32
#define DB_CHECK_RPNAME 		33
#define DB_LOAD_BAG				35
#define DB_LOAD_TEAM			37
#define DB_LOAD_MUTE			38
#define DB_LOAD_JAIL			39
#define DB_LOAD_WARN			40
#define DB_ADD_WARN 			42
#define DB_ADD_TWARN 			44
#define DB_LOAD_TWARN			46
#define DB_ADD_FORUM			47
#define DB_CHECK_PASS 			48
#define DB_ADD_VOTE				49
#define DB_LOAD_VOTES			50
#define DB_LOAD_VOTERS			51

#define DB_DONATE_NAME			52

#define VT_NONE					0
#define VT_FRACTION				1
#define VT_JOB					2
#define VT_OWNED				3
#define VT_RENT					4

#define VT_EVENT				10


#define COLOR_GREEN 		0x008000FF
#define COLOR_LIGHTBLUE 	0x33CCFFFF
#define COLOR_LIGHTRED 	0xFF4500FF
#define COLOR_WHITE 		0xFFFFFFFF
#define COLOR_PURPLE 		0xC2A2DAFF
#define COLOR_YELLOW 		0xFFFF00FF
#define COLOR_YELLOW2 		0xF5DEB3FF
#define COLOR_ACMD 		0x008080FF

//Фракцuu

#define LSPD 1 //SAPD
#define SFPD 2 //SFPD
#define LVPD 3 //LVPD
#define FBI 4 //FBI
#define DOKI 5 //Армия Дойки
#define EBASE 6 //Easter Base
#define ZONE51 7 //Zone 51
#define MEDIC 8 //Medic
#define CASINO 9 //Казино
#define NEWS 10 //News
#define LIC 11 //Licensers
#define MER 12 //Meria
#define TAXI 13 //Taxi
#define HA 14 //Кuллеры
#define HUN 15 //Головорезы
#define LCN 16 //Лкн
#define YA 17 //Якудза
#define RM 18 //Русская мафия
#define TRIADA 19 //Триада
#define GROOVE 20 //Грув
#define BALLAS 21 //Баллас
#define VAGOS 22 //Вагос
#define ECOR 23 //Ацтеки
#define RIFA 24 //Рифа
#define SRACE 25 //Стрит Рейсеры
#define RAST 26 //Растаманы


//------------------------------------------------------------------------------Работы
#define J_LOADER 1
#define J_FOREST 2
#define J_STEEL 3
#define BDG 4
#define STR 5
#define MECH 6
#define TRUCK 7
#define GUNNER 8
#define GUNNER_GET 9
#define GUNNER_DELIVER 10
#define DRUGER 11
#define DRUGER_GET 12

#define JACK 14
#define DET 15
#define BUS 16


//------------------------------------------------------------------------------Диалоги
#define D_REGISTER 0
#define D_LOGIN 1
#define D_SEX 2
#define D_RACE 3
#define D_RULES 4
#define D_VLIST 5
#define D_CONTROL_AUTO 8
#define D_GPS_JOB 9
#define D_GPS_LOC 10
#define D_GPS_BLIZH 11
#define D_KPK 12
#define D_KPK_ONLINE 13
#define D_NEON 16
#define D_VMENU 17
#define D_AUTO_COLOR1 18
#define D_AUTO_COLOR2 19
#define D_JOB 20
#define D_JOBOFF 21
#define D_RAZDEVALKA 22
#define D_PM 23
#define D_HIT_MAIN 24
#define D_HIT_GUN 25
#define D_HIT_CONTRACT 26
#define D_HIT_CONTRACT_TO 27

#define D_DRUGS_BUY 29
#define D_MATS_BUY 30
#define D_MASK 32
#define D_BANKOMAT_PINCODE 33
#define D_BANKOMAT 34

#define D_FS_TRANING 42
#define D_FS 43

#define D_KPK_ACC 48
#define D_GPS 49
#define D_HELP 50
#define D_SOBSTV 51
#define D_HMENU 52
#define D_HMENU_UP 53

#define D_BMENU 57
#define D_BMENU_DR 60
#define D_BMENU_BANK 61
#define D_SERVICE 62
#define D_TAXI 63
#define D_CHANGE_CHECK 64
#define D_OBSHAK 65
#define D_OBSHAK_SELECT 66
#define D_OBSHAK_PUT 67
#define D_OBSHAK_TAKE 68

#define D_NEWS_SELECT 73
#define D_CHAT 74

#define D_GUNLIC_BUY 79
#define D_CRASHPOS 84
#define D_MAKEGUN 85
#define D_AUTO_NUMBER 86


#define D_BANKOMAT_PEREVOD_ID 106
#define D_BANKOMAT_PEREVOD_SUMMA 107
#define D_SPAWN_TOWN 109
#define D_FUPD 110
#define D_FUPD2 111
#define D_MEDIC_CALL 112
#define D_TAXI_CALL 113
#define D_MECH_CALL 114
#define D_HELP2 115
#define D_DONATE 118
#define D_DONATE_NAME 119
#define D_DONATE_MONEY 120
#define D_DONATE_LVL 121
#define D_REFER 124
#define D_EMAILREG 125
#define D_EMAILCODE 126
#define D_ADUTY 129
#define D_ADUTY_PASS 130
#define D_TEXTDRAWS	131
#define D_CODE_CHECK 132
#define D_PREMIUM_BUY 143
#define D_VIP 144
#define D_VIP_INFO 145
#define D_VIP_REFERS 146
#define D_RADIO 147
#define D_RADIO_INPUT 148
#define D_AUTO_SELL_ID 149
#define D_AUTO_SELL_COST 150
#define D_RPNAME 151
#define D_DONATE_WARN 155
#define D_ADMIN_WARN 156
#define D_ADMIN_TWARN 157
#define D_CHANGE_PRICE 158
#define D_CHANGE_PRICE_VALUE 159
#define D_VRMENU 160
#define D_VIP_SUMMA 161
#define D_VIP_KOSHEL 162
#define D_VIP_OK 163
#define D_VOTE_MAIN 164
#define D_VOTE_NEW 165
#define D_VOTE 166
#define D_VOTE_END 167
#define D_VOTE_DEL 168
#define D_VOTE_RESULT 169
#define D_VOTE_END_OK 170
#define D_VOTE_DEL_OK 171
#define D_VOTE_OK 172
#define D_VOTE_NULL 173

#define D_DROP 174
#define D_LIC_SHOW 175
#define D_SELL_ID 176
#define D_SELL_VALUE 177
#define D_SELL_PRICE 178

#define D_HANDS_TO_BAG 179
#define D_BAG_TO_HANDS 180
#define D_TRUNK_TO_BAG 181
#define D_HOUSE_TO_BAG 182
#define D_BAG_TO_TRUNK 183
#define D_BAG_TO_HOUSE 184

#define D_SKIN 185
#define D_SKIN_MONEY 186
#define D_SKIN_BUY 187
#define D_CLOTHES_NULL 188
#define D_CLOTHES_GET 189
#define D_CLOTHES_REPLACE 190
#define D_CLOTHES_PUT 191

//==============================================================================

//------------------------------------------------------------------------------Античит.
#define SYNC_TYPE_POS           (0)
#define SYNC_TYPE_HEALTH        (1)
#define SYNC_TYPE_ARMOUR        (2)
#define SYNC_TYPE_WEAPONS       (3)
#define SYNC_TYPE_VEHICLE       (4)
#define SYNC_TYPE_MONEY       	(5)
#define SYNC_TYPES				(6)

#define MAX_CHECKS 			(3)
#define MAX_WEAPONS 		(47)
#define MAX_WEAPON_SLOTS	(13)

#define SS_HEALTH			(0)
#define TELEPORT_HACK		(1)
#define REMOTE_CONTROL		(2)
#define MAX_SPEED 			(3)
#define DRIVE_BY			(4)
#define HANCOCK_HACK		(5)
#define SPAWNKILL 			(6)
#define CAR_HEALTH 			(7)
#define CAR_JACK	 		(8)
#define MAX_ZPOS			(9)
#define ADVERTISE			(10)
#define TELEPORT_CP			(11)
#define TP_CAR				(12)
#define CAR_SHOT			(13)
#define MAX_VARIABLES 		(14)

#define ZONES 96

stock ShowPlayerDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[])
{
    SetPVarInt(playerid, "DialogID", dialogid);
    return ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
}
#define ShowPlayerDialog ShowPlayerDialogEx

#define COMMAND:%1(%2)  forward cmd_%1(%2);  public cmd_%1(%2)
#define isnull(%1) ((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
//------------------------------------------------------------------------------
#define ForEachPlayer(%0) for(new index_%0=0, %0=ConnectedPlayerList[0]; index_%0<ConnectedPlayers; index_%0++, %0=ConnectedPlayerList[index_%0])
#define ForEachEvent(%0) for(new index_%0=0, %0=EventPlayerList[0]; index_%0<EventPlayers; index_%0++, %0=EventPlayerList[index_%0])
//------------------------------------------------------------------------------

//******************************************************************************
//================================[Переменные]==================================
//******************************************************************************
new SERVER_IP[16],
	MAX_PLAYER_ID,
	SERVER_NAME[64],
	SERVER_SITE[64];

new Hour,Minute,Second,Day,Month,Year,GetTime; //Время
new ConnectedPlayers,ConnectedPlayerList[MAX_PLAYERS+1]; //Игроки
new EventOpen,EventType,EventFinish,EventPlayers,MaxEventPlayers,EventPlayerList[21]; //Ивенты
new TeamColors[27] = {100, 68, 64, 40, 84, 91, 19, 98, 3, 100, 34, 51, 100, 65, 100, 100, 44, 72, 6, 57, 17, 93, 10, 16, 46, 29, 12}; //Цвета фракций
new BIZNES,HOUSE;
new Text:LoadScreen,ScreenNumber = 1; //Начальный экран
new GasCP[89]; //Заправки

new KAZNA;

static const GasType[4][8] = {"AU-80","AU-92","AU-95","DIESEL"};
//static const FuelType[4][18] = {"Бензин \"АИ-80\"","Бензин \"АИ-92\"","Бензин \"АИ-95\"","Дизельное топливо"};
static const FuelCost[4] = {30,40,50,25}; //{40,50,60,30};

new MakeGun[2][9] =
{
	{22, 24, 25, 28, 29, 30, 31, 32, 33},
	{100, 150, 350, 200, 200, 600, 600, 200, 350}
};

new ShopType[3][6] = 
{
	{68, 55, 67, 54, 53, 59},
	{2500, 5000, 50, 50, 25, 1000},
	{5, 1, 1, 20, 1, 1}
};
new GunType[3][13] =
{
	{1, 5, 8, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33},
	{100, 350, 500, 600, 400, 280, 4000, 1500, 1800, 2400, 4000, 1800, 4000},
	{1, 1, 1, 34, 17, 7, 50, 50, 30, 30, 50, 50, 50}
};

new KfcType[3][15] =
{
	{70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84},
	{25, 50, 100, 25, 50, 100, 25, 50, 100, 25, 50, 100, 25, 50, 100},
	{25, 50, 100, 25, 50, 100, 25, 50, 100, 25, 50, 100, 25, 50, 100}
};

new BarType[3][7] =
{
	{85, 86, 87, 88, 89, 90, 91},
	{100, 100, 100, 100, 100, 100, 100},
	{3000, 2000, 3000, 1500, 1, 2, 0}
};

new SexType[2][5] =
{
	{10, 11, 12, 13, 14},
	{500, 500, 500, 500, 500}
};

static const voters[5][24] = { "Министр культуры", "Министр внутренних дел", "Министр обороны", "Министр правоохранения", "Министр экономики" };

new SnowObject[MAX_PLAYERS][5];
enum prInfo
{
	Level,
	Date,
	Refer[24],
	Rub,
	Players,
};
new PremiumInfo[MAX_PLAYERS][prInfo];

static const Float:ForestPos[5][4] =
{
	{-1928.7151,-2379.8687,30.3223,173.5024},
	{-1931.5598,-2360.9963,30.8575,275.3994},
	{-1913.7424,-2370.4214,29.8897,313.7516},
	{-1922.4819,-2394.2966,29.6428,262.4505},
	{-1936.1277,-2401.4109,30.6250,244.4024}
};
static const Float:SteelPos[5][4] =
{
	{-1796.3679,-1639.2072,24.5959,221.1815},
	{-1801.5494,-1642.5448,24.6292,215.9024},
	{-1804.5625,-1646.8881,24.6201,241.3594},
	{-1806.4772,-1653.3872,24.6403,265.3303},
	{-1804.4296,-1659.4695,24.5773,275.8494}
};

#define RADIO 29
enum radioInfo
{
	Name[24],
	URL[128],
}
static const RadioInfo[][radioInfo] =
{
	{"[1]  SAMP Stories FM","http://s2.radioheart.ru:8017/sstories.m3u"},
	{"[2]  Kazantip","http://music.myradio.com.ua:8000/Kazantip128.mp3"},
	{"[3]  Pop Hit","http://music.myradio.com.ua:8000/pophit128.mp3"},
	{"[4]  Retro","http://music.myradio.com.ua:8000/retro128.mp3"},
	{"[5]  Rock","http://music.myradio.com.ua:8000/rockmusic128.mp3"},
	{"[6]  RUS Lyrics","http://music.myradio.com.ua:8000/RusLyrics128.mp3"},
	{"[7]  RUS Rock","http://music.myradio.com.ua:8000/RusLyrics128.mp3"},
	{"[8]  Rap","http://music.myradio.com.ua:8000/rep128.mp3"},
	{"[9]  RUS Pop","http://music.myradio.com.ua:8000/Rus-pop128.mp3"},
	{"[10] TOP-100 Kiev","http://music.myradio.com.ua:8000/top-100-kiev128.mp3"},
	{"[11] UA Rock","http://music.myradio.com.ua:8000/PopRock128.mp3"},
	{"[12] UA Pop","http://music.myradio.com.ua:8000/UkrPophit128.mp3"},
	{"[13] Hip-Hop","http://music.myradio.com.ua:8000/hip-hop128.mp3"},
	{"[14] Shanson","http://music.myradio.com.ua:8000/shanson128.mp3"},
	{"[15] Alternative Rock","http://music.myradio.com.ua:8000/Alternative_Rock128.mp3"},
	{"[16] Country","http://music.myradio.com.ua:8000/country128.mp3"},
	{"[17] Dance Club","http://music.myradio.com.ua:8000/dance128.mp3"},
	{"[18] Disco 80's","http://music.myradio.com.ua:8000/Disco128.mp3"},
	{"[19] Drum And Bass","http://music.myradio.com.ua:8000/DrumAndBass128.mp3"},
	{"[20] Dubstep","http://music.myradio.com.ua:8000/dubstep128.mp3"},
	{"[21] Electro House","http://music.myradio.com.ua:8000/Electro-House128.mp3"},
	{"[22] Hard Rock","http://music.myradio.com.ua:8000/HardRock128.mp3"},
	{"[23] Heavy Metal","http://music.myradio.com.ua:8000/heavymetal128.mp3"},
	{"[24] Jazz-Rock","http://music.myradio.com.ua:8000/JazzRockFusion128.mp3"},
	{"[25] Punk","http://music.myradio.com.ua:8000/Punk128.mp3"},
	{"[26] RnB","http://music.myradio.com.ua:8000/RnB128.mp3"},
	{"[27] Rock-n-Roll","http://music.myradio.com.ua:8000/rock-n-roll128.mp3"},
	{"[28] Soundtrack","http://music.myradio.com.ua:8000/soundtrack128.mp3"},
	{"[29] Techno","http://music.myradio.com.ua:8000/techno128.mp3"},
	{"[30] World Hit","http://music.myradio.com.ua:8000/world-hit128.mp3"}
};

enum vInfo
{
	vID,
    vModel,
	vType,
	vValue,
    Float:vParkX,
	Float:vParkY,
	Float:vParkZ,
	Float:vParkA,
	vColor1,
	vColor2,
	vDelay,
	vOwner[MAX_PLAYER_NAME],
	vSpoiler,
	vHood,
	vSideskirt,
	vNitro,
	vLamps,
	vExhaust,
	vWheels,
	vRoof,
	vStereo,
	vHydraulics,
	vBullbar,
	vRearBullbars,
	vFrontSign,
	vFrontBullbars,
	vFrontBumper,
	vRearBumper,
	vVents,
	vPaintJob,
	vNeon,
	vPlate[MAX_PLAYER_NAME],

	vtItems[20],
	vtValue[20],
	Float:vtState[20],
	
	Float:vGas,
	Float:vPercent,
	Float:vDrived,
	
	vLock,
	vEngine,
	vLights,
	vAlarm,
	vBonnet,
	vBoot,
	vLeftNeon,
	vRightNeon,
	Float:vHealth,
	vLoadMats,
	Float:vAngle,
	Url[128],
	Float:vPos[3],
}
new VehInfo[MAX_VEHICLES+1][vInfo];

enum voInfo
{
	voID,
	voTime,
	voRank,
	voStatus,
	voCandidates
}
new VoteInfo[5][voInfo];
new VName[50][MAX_PLAYER_NAME];
new VVotes[50];

new Proniknovenie;
new RobTimer[2];
new redver[2];
new hrandver[2];
new banksistem[2];

new Medics = 0;
new MedicCallTime[MAX_PLAYERS];
new MedicAccepted[MAX_PLAYERS];
new Mechanics = 0;
new MechanicCallTime[MAX_PLAYERS];
new MechanicAccepted[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];

new BiznesPickUps[250];
new HousePickUps[500];
new vehcolor1[MAX_PLAYERS], vehcolor2[MAX_PLAYERS];
new Text3D:duty3dtext[MAX_PLAYERS];

new PostCP[10],
	PostS[8];

new PayCP[9];
new CarShopCP[5];

new SchoolS,
	SchoolCP[2]; //Автошкола
	
new PoliceCP[28],
	PoliceS[5],
	PoliceD[5],
	PoliceG[5];
	
new FbiCP[2],
	FbiS;//FBI

new ArmaS,
	ArmaCP[14],
	ArmaG[5];//Zone51

new MedicS[5],
	MedicCP[10];

new NewsCP[2],
	NewsS;//SF News
	
new StreetG, StreetCP[2];
new TAXIS[3],TAXICP[6];

new Mats[3];
new ExitCP[32],EnterCP[51]; //Входы-выходы
new JobCP[16];
new SmenaCP[6];
new KfcCP[9];
new BankomatCP[15];
new BankCP[13];
new DutyCP[6];
new AmmoCP[5];
new TestCP[5];
new ObshagaCP;
new FightCP[2];
new ArrestCP[4];
new ShopCP[2];
new ObshakCP[4];
new CasinoCP;
new SexCP;

new Text:TimeDisp;
new Text:DateDisp;
new Text:Site;

new Text:ShopTXD[9];

new Text:txtAnimHelper;
new Text:SpeedTXD[3];
new Text:ShopTD[11];
new Text:ClothesTXD[6];
new Text:SpecTD[8];
new Text:GasBox[10];
new Text:MenuTXD[90];

new PlayerText:SpecTDEx[MAX_PLAYERS];
new PlayerText:Helper[MAX_PLAYERS];
new PlayerText:LvL[MAX_PLAYERS];
new PlayerText:pShopTXD[MAX_PLAYERS][7];
new PlayerText:pClothesTXD[MAX_PLAYERS][10];
new PlayerText:pSpeedTXD[MAX_PLAYERS][5];
new PlayerText:CarShopTD[MAX_PLAYERS];
new PlayerText:GasBoxEx[MAX_PLAYERS][3];

#define PMENUTXD 33

new PlayerText:pMenuTXD[MAX_PLAYERS][PMENUTXD];
new PlayerText:pInvTXD[MAX_PLAYERS][67];

new TXDCount;

new BT_INVENTORY, BT_ACHEVEMENTS, BT_OTHER,
	BT_HANDS, BT_LICENSES, BT_OBJECTS,
	BT_WANTED; // Подсветка

new BTS_INVENTORY, BTS_ACHEVEMENTS, BTS_OTHER,
	BTS_HANDS, BTS_LICENSES, BTS_OBJECTS,
	BTS_USE, BTS_GIVE, BTS_DROP,
	BTS_PREV, BTS_NEXT; // активные кнопки

new TD_INV, TD_ACHIVE,
	TD_INFO, TD_LIC, TD_SLOT, TD_NAME, TD_STATE,
	TD_TIME, TD_SSM,
	TD_NICK, TD_LVL, TD_MONEY;

new HitList[50];
new MedicList[50];
new TaxiList[50];
new MechList[50];

new Spectate[MAX_PLAYERS];
new noooc;

new Contract[MAX_PLAYERS], Aim[MAX_PLAYERS], Killer[MAX_PLAYERS]; //Заказы для хитманов

new AddLimit;

new Click[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new PlayerUsingLoopingAnim[MAX_PLAYERS];

static Warnings[MAX_PLAYERS][MAX_VARIABLES];

#define MAX_MALE_SKIN 30
new Male[MAX_MALE_SKIN][2] = 
{
	{7, 5000},
	{19, 5000},
	{23, 5000},
	{22, 5000},
	{24, 5000},
	{26, 5000},
	{28, 5000},
	{29, 5000},
	{30, 5000},
	{33, 5000},
	{45, 5000},
	{66, 5000},
	{73, 5000},
	{81, 5000},
	{82, 5000},
	{100, 5000},
	{101, 5000},
	{97, 5000},
	{96, 5000},
	{101, 5000},
	{137, 5000},
	{143, 5000},
	{185, 5000},
	{203, 5000},
	{206, 5000},
	{217, 5000},
	{230, 5000},
	{241, 5000},
	{293, 5000},
	{299, 5000}
};
#define MAX_FEMALE_SKIN 23
new Female[MAX_FEMALE_SKIN][2] = 
{
	{13, 5000},
	{39, 5000},
	{41, 5000},
	{63, 5000},
	{64, 5000},
	{75, 5000},
	{77, 5000},
	{87, 5000},
	{92, 5000},
	{129, 5000},
	{152, 5000},
	{178, 5000},
	{190, 5000},
	{192, 5000},
	{195, 5000},
	{197, 5000},
	{205, 5000},
	{211, 5000},
	{214, 5000},
	{219, 5000},
	{226, 5000},
	{244, 5000},
	{298, 5000}
};

new CarShop[5][21] =
{
	{402,411,415,424,429,434,451,494,495,502,503,506,522,541},
	{463,468,471,477,480,521,535,545,558,559,560,562,565,587,602},
	{418,419,421,445,461,489,491,533,534,554,555,561,579,580,581,586,589,603},
	{401,405,410,412,422,426,467,474,496,500,507,529,536,540,550,551,566,575,576,585,600},
	{400,404,436,439,458,466,475,478,479,492,516,517,518,526,527,542,543,546,547,549,567}
};
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new ClearOffer[MAX_PLAYERS];
new ClearMoney[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS];

new MyCarOffer[MAX_PLAYERS];
new MyCarMoney[MAX_PLAYERS];
new MyCarID[MAX_PLAYERS];

new MyHouseOffer[MAX_PLAYERS];
new MyHouseMoney[MAX_PLAYERS];
new MyBiznesOffer[MAX_PLAYERS];
new MyBiznesMoney[MAX_PLAYERS];

new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new HealOffer[MAX_PLAYERS];
new HealPrice[MAX_PLAYERS];
new HandOffer[MAX_PLAYERS];
new KissOffer[MAX_PLAYERS];
new KissOfferType[MAX_PLAYERS];

enum pInfo
{
	pID,
	pName[24],
	pKey[32],

	pMiSB,

	pEmail[64],
	pRefer[24],
	pDate[20],
	pRub,
	pLastIP[16],
	pAdmin,
	pLevel,
	pExp,
	pSex,
	pOrigin,
	pSpawn,
	pMatsTime,
	pSkin,
	pSkins[5],

	pMoney, // Единый банковский счет
	
	pPayDay,
	pWanted,
	pHeadValue,
	pHunterValue,
	pMySelfTime,
	pJob,
	pJobTime,
	pRobTime,
	pSSM,
	pBankPass,
 	pMobile,
	
	pUrl[128],
	
	pBizKey,
	pHouseKey,
	pCars,
	pCarID[3],
	
	pFStyle,
	pBoxing,
	pKunfu,
	pKneehead,
	pGrabkick,
	
	
 	Float:pHealth,

 	pArmour,

 	Float:pSetPos[3],
	Float:pPos[3],
	pWorld,
	pInt,
	//pPing[5],
	//pPingCheckProgress,

	pMats,
	pDrugs,
	pGun[13],
	pCP,
	pSD,
	pRope,
	pSigs,
	pPivo,
	pTazer,

	AFK_Time,
	Float:AFK_Pos,
	AFK_Stat,
	Text3D:AFK_Text,
	LastUpdate,
	SyncTime[SYNC_TYPES],
	LastSyncUpdate[SYNC_TYPES],
	pSpeed,
	Float:pSpeedZ,
	pVehID,
};
new PlayerInfo[MAX_PLAYERS][pInfo];

enum jInfo
{
	jID,
	jTime,
	jPrice,
	jDate[20],
	jCop[24],
	jReason[64]
}
new JailInfo[MAX_PLAYERS][jInfo];

enum muInfo
{
	mTime,
	mDate[20],
	mAdmin[24],
	mReason[64]
}
new MuteInfo[MAX_PLAYERS][muInfo];

enum wInfo
{
	wWarns,
	wWarn[2],
	wDate1[20],
	wDate2[20],
	wAdmin1[24],
	wAdmin2[24],
	wReason1[64],
	wReason2[64],
}
new WarnInfo[MAX_PLAYERS][wInfo];
new TWarnInfo[MAX_PLAYERS][wInfo];

enum tiInfo
{
	tID,
	tDate[20],
	tType,
	tRank,
	tSkin,
}
new TeamInfo[MAX_PLAYERS][tiInfo];

enum admInfo
{
	aLevel,
	aPassword[32],
	aRank[24],
	aTime,
	
	aLeader,
	aMember,
	aTRank,
}
new AdminInfo[MAX_PLAYERS][admInfo];


enum txdInfo
{
	DateTD,
	TimeTD,
	SpeedTD,
	LevelTD,
}
new TextDrawInfo[MAX_PLAYERS][txdInfo];

enum lInfo
{
    MotoLic,
    TimeMotoLic,
    TookMotoLic[MAX_PLAYER_NAME],
    ReasonMotoLic[64],
    DateMotoLic[24],
	AutoLic,
	TimeAutoLic,
	TookAutoLic[MAX_PLAYER_NAME],
	ReasonAutoLic[64],
	DateAutoLic[24],
	BoatLic,
	TimeBoatLic,
	TookBoatLic[MAX_PLAYER_NAME],
	ReasonBoatLic[64],
	DateBoatLic[24],
	FlyLic,
	TimeFlyLic,
	TookFlyLic[MAX_PLAYER_NAME],
	ReasonFlyLic[64],
	DateFlyLic[24],
	GunLic,
	TimeGunLic,
	TookGunLic[MAX_PLAYER_NAME],
	ReasonGunLic[64],
	DateGunLic[24]
}
new LicInfo[MAX_PLAYERS][lInfo];

new Float:ATest[55][3] =
{
	{1158.3894,1376.1678,10.2383},
	{1022.4277,1375.7448,10.3213},
	{1010.0147,1422.5563,10.2384},
	{1009.5754,1703.5370,10.3369},
	{1009.8339,1800.1531,10.2363},
	{1020.9968,1809.9763,10.2361},
	{1119.2334,1810.9875,10.2314},
	{1205.7347,1811.2090,13.1960},
	{1281.4199,1811.2560,10.2079},
	{1311.2196,1811.3715,10.2190},
	{1331.8513,1867.5428,10.2288},
	{1549.8193,1870.5474,10.2451},
	{1632.9182,1870.6409,10.2427},
	{1693.4042,1870.6648,10.2360},
	{1709.8417,2000.8165,10.2429},
	{1709.6847,2159.0945,10.2185},
	{1753.7631,2170.7166,10.3564},
	{1767.3180,2159.7810,10.3999},
	{1821.2321,2066.1038,10.3769},
	{1854.2051,2050.4006,10.2667},
	{1914.6484,2040.2704,10.2277},
	{2110.2368,2020.0354,10.2359},
	{2125.0129,1866.2736,10.2362},
	{2089.6191,1769.7880,10.2431},
	{2120.4470,1770.2377,10.2203},
	{2314.7256,1770.8928,10.2459},
	{2324.7944,1761.0216,10.2414},
	{2324.6304,1625.9744,10.2311},
	{2325.2461,1545.9941,10.2430},
	{2355.7664,1530.8394,10.2300},
	{2365.0793,1521.3436,10.2431},
	{2364.7288,1386.4760,10.2378},
	{2356.3481,1375.9255,10.2509},
	{2239.5718,1375.2042,10.2653},
	{2084.9331,1375.8077,10.2302},
	{2045.7013,1313.6899,10.2429},
	{2045.2473,1114.7113,10.2365},
	{2044.4626,987.9622,10.2350},
	{2084.8984,971.0847,10.2433},
	{2136.4775,971.3605,10.2317},
	{2139.8486,955.4146,10.3257},
	{2135.8687,976.3331,10.2345},
	{2046.3834,958.9485,9.8296},
	{2045.3945,865.4030,6.3446},
	{1822.5660,855.0231,10.0765},
	{1569.4608,854.8603,6.3391},
	{1259.6376,941.2779,6.3764},
	{1229.0286,1398.9414,6.3058},
	{1255.6896,1722.3319,7.1370},
	{1297.8452,1800.3516,10.2224},
	{1230.8269,1815.5920,13.1704},
	{1021.2896,1815.6641,10.2357},
	{1004.8017,1626.3346,10.3392},
	{1004.7190,1385.9285,10.2435},
	{1158.3894,1376.1678,10.2383}
};
new Float:BTest[48][3] =
{
	{-2031.2626,-72.8022,35.0468},
	{-2009.3896,-85.0799,35.1863},
	{-2009.5248,-285.6289,35.1955},
	{-2201.9312,-288.5379,35.1957},
	{-2204.9351,-205.3070,35.2239},
	{-2235.7229,-187.4252,35.0464},
	{-2333.5664,-187.5195,35.0469},
	{-2369.2798,-85.8136,35.0466},
	{-2406.4634,-67.5623,35.0390},
	{-2418.8196,-54.3001,35.0469},
	{-2418.2800,26.1570,34.9146},
	{-2435.9807,42.2510,34.5760},
	{-2590.4717,42.3527,4.0583},
	{-2606.4661,26.3973,4.0547},
	{-2606.1194,-56.1651,4.0545},
	{-2617.0691,-67.9384,4.0584},
	{-2704.0420,-56.0497,4.0557},
	{-2703.9387,61.2506,4.0547},
	{-2704.0803,204.5721,4.0546},
	{-2704.3130,274.0923,4.0546},
	{-2692.7615,285.7255,4.0546},
	{-2610.6360,299.3587,4.0547},
	{-2592.8425,345.4306,4.4928},
	{-2537.6973,353.9423,19.7465},
	{-2505.3984,442.8077,27.2794},
	{-2386.4370,501.6248,29.1654},
	{-2381.6125,547.1639,25.4845},
	{-2382.9980,654.3364,34.8906},
	{-2382.5417,794.4379,34.8990},
	{-2402.7417,810.7096,34.9063},
	{-2513.7336,810.6658,49.2091},
	{-2524.5120,822.5486,49.7031},
	{-2524.4290,926.0656,64.7551},
	{-2507.0339,1089.0001,55.4531},
	{-2380.5977,1073.1421,55.4531},
	{-2018.4939,1051.6207,55.4453},
	{-2008.0840,1036.2131,55.4453},
	{-2008.2043,824.2534,45.1717},
	{-2007.6350,584.0256,34.8906},
	{-2008.0111,335.0332,34.8835},
	{-2013.9186,176.7005,27.5563},
	{-2014.4244,138.1353,27.5605},
	{-2020.3871,110.9053,27.5736},
	{-2109.6458,96.8472,35.0390},
	{-2089.7085,16.5894,35.0469},
	{-2089.7549,-55.0858,35.0755},
	{-2062.5222,-72.9524,35.0468},
	{-2070.4172,-98.2295,35.0406}
};
new Float:BoatTest[22][3] =
{
	{-2148.7332,2430.4092,-0.2607},
	{-2198.4817,2291.0281,-0.3277},
	{-2293.9421,2216.9795,-0.1159},
	{-2369.4548,2301.1594,0.0574},
	{-2360.0076,2220.8406,-0.1437},
	{-2402.4705,2191.6094,-0.2270},
	{-2567.1028,2207.7820,0.1057},
	{-2669.8506,2027.0854,-0.0198},
	{-2733.9087,1942.7590,-0.1599},
	{-2722.1716,1602.1394,0.0803},
	{-2533.3042,1510.7631,0.0117},
	{-2275.7234,1486.2927,-0.1310},
	{-2319.0791,1588.1302,0.1483},
	{-2569.3040,1595.5055,-0.0614},
	{-2667.1812,1563.3145,-0.2420},
	{-2690.1086,1630.2286,-0.0566},
	{-2632.7415,1926.7458,-0.1508},
	{-2604.4419,2149.8093,-0.1489},
	{-2459.2146,2182.7627,-0.2077},
	{-2226.5310,2216.4951,-0.0918},
	{-2152.0388,2428.2253,-0.0784},
	{-2231.8564,2422.5754,-0.3175}
};
new Float:FlyTest[12][3] =
{
	{365.3763,2503.6497,16.9469},
	{96.0011,2504.9241,51.6597},
	{-275.7811,2491.3794,105.8148},
	{-681.5125,2407.5605,150.9891},
	{-817.8763,2359.4097,133.3739},
	{-992.0128,2532.4001,85.5957},
	{-1111.6962,2738.9749,59.3532},
	{-843.4418,2963.2361,55.8996},
	{-394.2124,2720.3938,107.4808},
	{-46.9859,2500.4543,62.8531},
	{286.3502,2503.7153,16.9734},
	{402.2477,2503.5691,16.9650}
};

new bool:Moving[MAX_PLAYERS];
new WeaponID[MAX_PLAYERS];
new CheckCrouch[MAX_PLAYERS];

new ZoneOnBattle[99];
new BizOnBattle[100];
new ZoneTimer[99];
enum GzoneInfo
{
	gID,
	Float:gCoords[4],
	gFrakVlad,
	gNapad,
	gFrakVladKills,
	gNapadKills,
}
new Text:WarnText[99];
new Text:DMText;
new GZInfo[99][GzoneInfo];
new WarTime[25];

enum bInfo
{
    bID,
    bMessage[32],
    bOwner[MAX_PLAYER_NAME],
    bMafia,
    Float:bEnterX,
	Float:bEnterY,
	Float:bEnterZ,
	bType,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bInt,
 	bPrice,
	bMoney,
	bEnterCost,
	bLevel,
	bProds,
	bMaxProds,
	
	bProdsCount,
	bProdsCost[10],
	
	Text3D:bText,
	bCheckpoint
}
new BiznesInfo[120][bInfo];

enum hInfo
{
    hID,
    hOwner[MAX_PLAYER_NAME],
	Float:hEnterX,
	Float:hEnterY,
	Float:hEnterZ,
	Float:hExitX,
	Float:hExitY,
	Float:hExitZ,
	hInt,
	hPrice,
	hLevel,
	hLock,
	hMoney,
	hMats,
	hDrugs,

	hHel,
	hArm,
	hSafe,

	hItems[20],
	hValue[20],
	Float:hState[20],
	
	hType,
	hCheckpoint,
	hMapIcon,
	Text3D:hText,
	
};
new HouseInfo[500][hInfo];

enum oInfo
{
    oLevel,
    oPoints,
    oMoney,
	oMats,
	oDrugs,
	oMoneyLevel,
	oMatsLevel,
	oDrugsLevel,
	oGunLevel
};
new FractionInfo[27][oInfo];

enum pCrimeInfo
{
	pCrime[64],
	pAccused[MAX_PLAYER_NAME],
	pVictim[MAX_PLAYER_NAME],
};
new CrimeInfo[MAX_PLAYERS][pCrimeInfo];

new Float:JackPos[][] = 
{
	{-1548.3618,123.6438,3.2966},
	{891.6851,-1825.1674,12.6515},
	{1949.8447,-1564.1561,14.1926},
	{2444.3772,-1765.7292,14.1612},
	{797.7731,-616.7458,16.9304},
	{-63.7696,-1111.2340,1.6544},
	{-257.5198,-2189.9482,29.5773}
};

enum zInfo 
{
	zone_name[27],
    Float:zone_minx,
    Float:zone_miny,
    Float:zone_minz,
    Float:zone_maxx,
    Float:zone_maxy,
    Float:zone_maxz
}

new ZoneInfo[355][zInfo] = 
{
	{ "'The Big Ear'",                -410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00},
	{ "Aldea Malvada",               -1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00},
	{ "Angel Pine",                  -2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00},
	{ "Arco del Oeste",               -901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00},
	{ "Avispa Country Club",         -2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00},
	{ "Avispa Country Club",         -2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00},
	{ "Avispa Country Club",         -2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00},
	{ "Avispa Country Club",         -2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10},
	{ "Avispa Country Club",         -2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10},
	{ "Avispa Country Club",         -2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70},
	{ "Back o Beyond",               -1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00},
	{ "Battery Point",               -2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00},
	{ "Bayside",                     -2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00},
	{ "Bayside Marina",              -2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00},
	{ "Beacon Hill",                  -399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50},
	{ "Blackfield",                    964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90},
	{ "Blackfield",                    964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90},
	{ "Blackfield Chapel",            1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90},
	{ "Blackfield Chapel",            1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90},
	{ "Blackfield Intersection",      1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90},
	{ "Blackfield Intersection",      1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90},
	{ "Blackfield Intersection",      1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90},
	{ "Blackfield Intersection",      1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90},
	{ "Blueberry",                     104.50,  -220.10,     2.30,   349.60,   152.20,   200.00},
	{ "Blueberry",                      19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00},
	{ "Blueberry Acres",              -319.60,  -220.10,     0.00,   104.50,   293.30,   200.00},
	{ "Caligula's Palace",            2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90},
	{ "Caligula's Palace",            2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90},
	{ "Calton Heights",              -2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00},
	{ "Chinatown",                   -2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00},
	{ "City Hall",                   -2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00},
	{ "Come-A-Lot",                   2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90},
	{ "Commerce",                     1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90},
	{ "Commerce",                     1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90},
	{ "Commerce",                     1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90},
	{ "Commerce",                     1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90},
	{ "Commerce",                     1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90},
	{ "Commerce",                     1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90},
	{ "Conference Center",            1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90},
	{ "Conference Center",            1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90},
	{ "Cranberry Station",           -2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00},
	{ "Creek",                        2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90},
	{ "Dillimore",                     580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00},
	{ "Doherty",                     -2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00},
	{ "Doherty",                     -2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00},
	{ "Downtown",                    -1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00},
	{ "Downtown",                    -1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00},
	{ "Downtown",                    -1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00},
	{ "Downtown",                    -1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00},
	{ "Downtown",                    -2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00},
	{ "Downtown",                    -1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00},
	{ "Downtown Los Santos",          1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90},
	{ "Downtown Los Santos",          1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90},
	{ "Downtown Los Santos",          1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90},
	{ "Downtown Los Santos",          1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90},
	{ "Downtown Los Santos",          1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90},
	{ "Downtown Los Santos",          1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90},
	{ "Downtown Los Santos",          1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90},
	{ "East Beach",                   2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90},
	{ "East Beach",                   2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90},
	{ "East Beach",                   2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90},
	{ "East Beach",                   2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90},
	{ "East Los Santos",              2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90},
	{ "East Los Santos",              2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90},
	{ "East Los Santos",              2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90},
	{ "East Los Santos",              2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90},
	{ "East Los Santos",              2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90},
	{ "East Los Santos",              2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90},
	{ "East Los Santos",              2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90},
	{ "Easter Basin",                -1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00},
	{ "Easter Basin",                -1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00},
	{ "Easter Bay Airport",          -1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00},
	{ "Easter Bay Airport",          -1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00},
	{ "Easter Bay Airport",          -1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00},
	{ "Easter Bay Airport",          -1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40},
	{ "Easter Bay Airport",          -1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40},
	{ "Easter Bay Chemicals",        -1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00},
	{ "Easter Bay Chemicals",        -1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00},
	{ "El Castillo del Diablo",       -464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00},
	{ "El Castillo del Diablo",       -208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00},
	{ "El Corona",                    1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90},
	{ "El Corona",                    1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90},
	{ "El Quebrados",                -1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00},
	{ "Esplanade East",              -1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00},
	{ "Esplanade East",              -1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00},
	{ "Esplanade East",              -1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30},
	{ "Esplanade North",             -2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00},
	{ "Esplanade North",             -1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00},
	{ "Esplanade North",             -1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00},
	{ "Fallen Tree",                  -792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00},
	{ "Fallow Bridge",                 434.30,   366.50,     0.00,   603.00,   555.60,   200.00},
	{ "Fern Ridge",                    508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00},
	{ "Financial",                   -1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00},
	{ "Fisher's Lagoon",              1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00},
	{ "Flint Intersection",           -187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90},
	{ "Flint Range",                  -594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00},
	{ "Fort Carson",                  -376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00},
	{ "Foster Valley",               -2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00},
	{ "Foster Valley",               -2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00},
	{ "Foster Valley",               -2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00},
	{ "Frederick Bridge",             2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00},
	{ "Gant Bridge",                 -2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00},
	{ "Gant Bridge",                 -2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00},
	{ "Ganton",                       2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90},
	{ "Ganton",                       2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90},
	{ "Garcia",                      -2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00},
	{ "Garcia",                      -2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00},
	{ "Garver Bridge",               -1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90},
	{ "Garver Bridge",               -1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90},
	{ "Garver Bridge",               -1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30},
	{ "Glen Park",                    1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90},
	{ "Glen Park",                    1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90},
	{ "Glen Park",                    1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90},
	{ "Green Palms",                   176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00},
	{ "Greenglass College",            964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90},
	{ "Greenglass College",            964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90},
	{ "Hampton Barns",                 603.00,   264.30,     0.00,   761.90,   366.50,   200.00},
	{ "Hankypanky Point",             2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00},
	{ "Harry Gold Parkway",           1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90},
	{ "Hashbury",                    -2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00},
	{ "Hilltop Farm",                  967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00},
	{ "Hunter Quarry",                 337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70},
	{ "Idlewood",                     1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90},
	{ "Idlewood",                     1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90},
	{ "Idlewood",                     1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90},
	{ "Idlewood",                     1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90},
	{ "Idlewood",                     2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90},
	{ "Idlewood",                     1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90},
	{ "Jefferson",                    1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90},
	{ "Jefferson",                    2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90},
	{ "Jefferson",                    2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90},
	{ "Jefferson",                    2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90},
	{ "Jefferson",                    2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90},
	{ "Jefferson",                    2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90},
	{ "Julius Thruway East",          2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90},
	{ "Julius Thruway East",          2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90},
	{ "Julius Thruway East",          2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90},
	{ "Julius Thruway East",          2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90},
	{ "Julius Thruway North",         2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90},
	{ "Julius Thruway North",         2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90},
	{ "Julius Thruway North",         2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90},
	{ "Julius Thruway North",         1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90},
	{ "Julius Thruway North",         1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90},
	{ "Julius Thruway North",         1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90},
	{ "Julius Thruway North",         1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90},
	{ "Julius Thruway North",         1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90},
	{ "Julius Thruway South",         1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90},
	{ "Julius Thruway South",         2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90},
	{ "Julius Thruway West",          1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90},
	{ "Julius Thruway West",          1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90},
	{ "Juniper Hill",                -2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00},
	{ "Juniper Hollow",              -2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00},
	{ "K.A.C.C. Military Fuels",      2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90},
	{ "Kincaid Bridge",              -1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90},
	{ "Kincaid Bridge",              -1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90},
	{ "Kincaid Bridge",              -1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90},
	{ "King's",                      -2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00},
	{ "King's",                      -2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00},
	{ "King's",                      -2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00},
	{ "LVA Freight Depot",            1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90},
	{ "LVA Freight Depot",            1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90},
	{ "LVA Freight Depot",            1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90},
	{ "LVA Freight Depot",            1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90},
	{ "LVA Freight Depot",            1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90},
	{ "Las Barrancas",                -926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00},
	{ "Las Brujas",                   -365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00},
	{ "Las Colinas",                  1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90},
	{ "Las Colinas",                  2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90},
	{ "Las Colinas",                  2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90},
	{ "Las Colinas",                  2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90},
	{ "Las Colinas",                  2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90},
	{ "Las Colinas",                  2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90},
	{ "Las Colinas",                  2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90},
	{ "Las Payasadas",                -354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00},
	{ "Las Venturas Airport",         1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90},
	{ "Las Venturas Airport",         1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90},
	{ "Las Venturas Airport",         1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90},
	{ "Las Venturas Airport",         1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50},
	{ "Last Dime Motel",              1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90},
	{ "Leafy Hollow",                -1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00},
	{ "Lil' Probe Inn",                -90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00},
	{ "Linden Side",                  2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90},
	{ "Linden Station",               2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90},
	{ "Linden Station",               2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40},
	{ "Little Mexico",                1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90},
	{ "Little Mexico",                1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90},
	{ "Los Flores",                   2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90},
	{ "Los Flores",                   2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90},
	{ "Los Santos International",     1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90},
	{ "Los Santos International",     1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90},
	{ "Los Santos International",     1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90},
	{ "Los Santos International",     1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90},
	{ "Los Santos International",     1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90},
	{ "Los Santos International",     2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90},
	{ "Marina",                        647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90},
	{ "Marina",                        647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90},
	{ "Marina",                        807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90},
	{ "Market",                        787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90},
	{ "Market",                        952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90},
	{ "Market",                       1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90},
	{ "Market",                        926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90},
	{ "Market Station",                787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80},
	{ "Martin Bridge",                -222.10,   293.30,     0.00,  -122.10,   476.40,   200.00},
	{ "Missionary Hill",             -2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00},
	{ "Montgomery",                   1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00},
	{ "Montgomery",                   1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00},
	{ "Montgomery Intersection",      1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00},
	{ "Montgomery Intersection",      1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00},
	{ "Mulholland",                   1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90},
	{ "Mulholland",                   1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90},
	{ "Mulholland",                   1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90},
	{ "Mulholland",                   1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90},
	{ "Mulholland",                   1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90},
	{ "Mulholland",                   1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90},
	{ "Mulholland",                    768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90},
	{ "Mulholland",                    687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90},
	{ "Mulholland",                    737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90},
	{ "Mulholland",                   1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90},
	{ "Mulholland",                    952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90},
	{ "Mulholland",                    911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90},
	{ "Mulholland",                    861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90},
	{ "Mulholland Intersection",      1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90},
	{ "North Rock",                   2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00},
	{ "Ocean Docks",                  2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90},
	{ "Ocean Docks",                  2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90},
	{ "Ocean Docks",                  2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90},
	{ "Ocean Docks",                  2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90},
	{ "Ocean Docks",                  2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90},
	{ "Ocean Docks",                  2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90},
	{ "Ocean Docks",                  2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90},
	{ "Ocean Flats",                 -2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00},
	{ "Ocean Flats",                 -2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00},
	{ "Octane Springs",                338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00},
	{ "Old Venturas Strip",           2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90},
	{ "Palisades",                   -2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00},
	{ "Palomino Creek",               2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00},
	{ "Paradiso",                    -2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00},
	{ "Pershing Square",              1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90},
	{ "Pilgrim",                      2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90},
	{ "Pilgrim",                      2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90},
	{ "Pilson Intersection",          1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90},
	{ "Pirates in Men's Pants",       1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90},
	{ "giveplayerid del Seville",     2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90},
	{ "Prickle Pine",                 1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90},
	{ "Prickle Pine",                 1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90},
	{ "Prickle Pine",                 1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90},
	{ "Prickle Pine",                 1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90},
	{ "Queens",                      -2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00},
	{ "Queens",                      -2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00},
	{ "Queens",                      -2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00},
	{ "Randolph Industrial Estate",   1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90},
	{ "Redsands East",                1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90},
	{ "Redsands East",                1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90},
	{ "Redsands East",                1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90},
	{ "Redsands West",                1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90},
	{ "Redsands West",                1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90},
	{ "Redsands West",                1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90},
	{ "Redsands West",                1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90},
	{ "Regular Tom",                  -405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00},
	{ "Richman",                       647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90},
	{ "Richman",                       647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90},
	{ "Richman",                       225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90},
	{ "Richman",                       225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90},
	{ "Richman",                        72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90},
	{ "Richman",                        72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90},
	{ "Richman",                       321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90},
	{ "Richman",                       321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90},
	{ "Richman",                       321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90},
	{ "Richman",                       321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90},
	{ "Robada Intersection",         -1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90},
	{ "Roca Escalante",               2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90},
	{ "Roca Escalante",               2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90},
	{ "Rockshore East",               2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90},
	{ "Rockshore West",               1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90},
	{ "Rockshore West",               2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90},
	{ "Rodeo",                          72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90},
	{ "Rodeo",                          72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90},
	{ "Rodeo",                         225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90},
	{ "Rodeo",                         225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90},
	{ "Rodeo",                         334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90},
	{ "Rodeo",                         312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90},
	{ "Rodeo",                         422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90},
	{ "Rodeo",                         558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90},
	{ "Rodeo",                         466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90},
	{ "Rodeo",                         422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90},
	{ "Rodeo",                         466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90},
	{ "Rodeo",                         334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90},
	{ "Royal Casino",                 2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90},
	{ "San Andreas Sound",            2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00},
	{ "Santa Flora",                 -2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00},
	{ "Santa Maria Beach",             342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90},
	{ "Santa Maria Beach",              72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90},
	{ "Shady Cabin",                 -1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00},
	{ "Shady Creeks",                -1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00},
	{ "Shady Creeks",                -2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00},
	{ "Sobell Rail Yards",            2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90},
	{ "Spinybed",                     2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90},
	{ "Starfish Casino",              2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90},
	{ "Starfish Casino",              2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90},
	{ "Starfish Casino",              2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90},
	{ "Temple",                       1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90},
	{ "Temple",                       1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90},
	{ "Temple",                       1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90},
	{ "Temple",                        952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90},
	{ "Temple",                       1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90},
	{ "Temple",                       1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90},
	{ "The Camel's Toe",              2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90},
	{ "The Clown's Pocket",           2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90},
	{ "The Emerald Isle",             2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90},
	{ "The Farm",                    -1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90},
	{ "The Four Dragons Casino",      1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90},
	{ "The High Roller",              1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90},
	{ "The Mako Span",                1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00},
	{ "The Panopticon",               -947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00},
	{ "The Pink Swan",                1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90},
	{ "The Sherman Dam",              -968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00},
	{ "The Strip",                    2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90},
	{ "The Strip",                    2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90},
	{ "The Strip",                    2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90},
	{ "The Strip",                    2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90},
	{ "The Visage",                   1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90},
	{ "The Visage",                   1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90},
	{ "Unity Station",                1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50},
	{ "Valle Ocultado",               -936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00},
	{ "Verdant Bluffs",                930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90},
	{ "Verdant Bluffs",               1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90},
	{ "Verdant Bluffs",               1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90},
	{ "Verdant Meadows",                37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00},
	{ "Verona Beach",                  647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90},
	{ "Verona Beach",                  930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90},
	{ "Verona Beach",                  851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90},
	{ "Verona Beach",                 1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90},
	{ "Verona Beach",                 1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90},
	{ "Vinewood",                      787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90},
	{ "Vinewood",                      787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90},
	{ "Vinewood",                      647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90},
	{ "Vinewood",                      647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90},
	{ "Whitewood Estates",             883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90},
	{ "Whitewood Estates",            1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90},
	{ "Willowfield",                  1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90},
	{ "Willowfield",                  2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90},
	{ "Willowfield",                  2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90},
	{ "Willowfield",                  2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90},
	{ "Willowfield",                  2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90},
	{ "Willowfield",                  2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90},
	{ "Willowfield",                  2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90},
	{ "Yellow Bell Station",          1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00}
};

new ZoneInfoM[9][zInfo] = 
{
	{ "Los Santos",                     44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00},
	{ "Las Venturas",                  869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00},
	{ "Bone County",                  -480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00},
	{ "Terra Robada",               -2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00},
	{ "Terra Robada",               -1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00},
	{ "San Fierro",                  -2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00},
	{ "Red Country",                  -1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00},
	{ "Flint Country",                -1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00},
	{ "Whetstone",                   -2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}
};

enum modelInfo
{
    mName[20],
	mMaxSpeed,
	mLicType,
	mClass,
	mPrice,
	mClassName[12], 
	Float:mTank,
	mGasType,
	Float:mPercent,
	mFuelSpent,
	mBoot,
    mBonnet,
}

static const VehMInfo[][modelInfo] =
{
	{"Landstalker", 	140,2,5,130000,"Econom"		,80.0,2,0.92,20	,1,1}, //400
	{"Bravura", 		131,2,4,340000,"Classic"	,35.0,1,0.8,9	,1,1}, //401
	{"Buffalo", 		166,2,1,4800000,"Elite"		,50.0,3,0.95,15	,1,1}, //402
	{"Linerunner", 		130,2,0,0,"None"			,150.0,1,0.8,25	,0,1}, //403
	{"Pereniel", 		118,2,5,100000,"Econom"		,50.0,1,0.8,8	,1,1}, //404
	{"Sentinel", 		146,2,4,400000,"Classic"	,50.0,2,0.92,12	,1,1}, //405
	{"Dumper", 			110,2,0,0,"None"			,200.0,4,0.5,30	}, //406
	{"Firetruck", 		132,2,0,0,"None"			,150.0,4,0.5,25	}, //407
	{"Trashmaster", 	89,	2,0,0,"None"			,150.0,4,0.5,20	,0,1}, //408
	{"Stretch", 		140,2,0,0,"None"			,50.0,1,0.8,15	,1,1}, //409
	{"Manana", 			115,2,4,390000,"Classic"	,35.0,1,0.8,8	,1,1}, //410
	{"Infernus", 		197,2,1,6000000,"Elite"		,50.0,3,0.95,15	,0,1}, //411
	{"Voodoo", 			150,2,4,390000,"Classic"	,35.0,1,0.8,8	,1,1}, //412
	{"Pony", 			110,2,0,0,"None"			,60.0,1,0.8,15	,0,1}, //413
	{"Mule", 			110,2,0,0,"None"			,70.0,1,0.8,15	,1,1}, //414
	{"Cheetah", 		171,2,1,5600000,"Elite"		,50.0,3,0.95,15	,1,1}, //415
	{"Ambulance", 		137,2,0,0,"None"			,70.0,1,0.8,12	,0,1}, //416
	{"Leviathan", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //417
	{"Moonbeam", 		118,2,3,700000,"Premium"	,60.0,1,0.8,15	,1,1}, //418
	{"Esperanto", 		133,2,3,800000,"Premium"	,40.0,1,0.8,12	,1,1}, //419
	{"Taxi", 			129,2,0,0,"None"			,40.0,1,0.8,12	,1,1}, //420
	{"Washington", 		137,2,3,830000,"Premium"	,50.0,2,0.92,15	,1,1}, //421
	{"Bobcat", 			124,2,4,310000,"Classic"	,50.0,1,0.8,15	,1,1}, //422
	{"Mr Whoopee", 		88, 2,0,0,"None"			,50.0,1,0.8,15	,0,1}, //423
	{"BF Injection", 	120,2,1,5000000,"Elite"		,40.0,2,0.92,18	}, //424
	{"Hunter", 			240,4,0,0,"None"			,0.0,0,0.0,0	}, //425
	{"Premier", 		154,2,4,420000,"Classic"	,40.0,1,0.8,15	,1,1}, //426
	{"Enforcer", 		147,2,0,0,"None"			,70.0,1,0.8,18	,0,1}, //427
	{"Securicar", 		139,2,0,0,"None"			,60.0,1,0.8,18	,0,1}, //428
	{"Banshee", 		179,2,1,5400000,"Elite"		,50.0,3,0.95,20	,1,1}, //429
	{"Predator", 		240,3,0,0,"None"			,0.0,0,0.0,0	}, //430
	{"Bus", 			116,2,0,0,"None"			,200.0,4,0.5,25	}, //431
	{"Rhino", 			110,2,0,0,"None"			,0.0,0,0.0,0	}, //432
	{"Barracks", 		110,2,0,0,"None"			,150.0,1,0.8,20	,0,1}, //433
	{"Hotknife", 		148,2,1,4800000,"Elite"		,50.0,3,0.95,25	,1,0}, //434
	{"Trailer", 		0  ,0,0,0,"None"			,0.0,0,0.0,0	}, //435
	{"Previon", 		133,2,5,100000,"Econom"		,40.0,1,0.8,10	,1,1}, //436
	{"Coach", 			140,2,0,0,"None"			,200.0,4,0.5,25	}, //437
	{"Cabbie", 			127,2,0,0,"None"			,40.0,1,0.8,8	,1,1}, //438
	{"Stallion", 		150,2,5,150000,"Econom"		,50.0,2,0.92,12	,1,1}, //439
	{"Rumpo", 			121,2,0,0,"None"			,60.0,1,0.8,18	,0,1}, //440
	{"RC Bandit", 		67 ,0,0,0,"None"			,0.0,0,0.0,0	}, //441
	{"Romero", 			124,2,0,0,"None"			,40.0,2,0.92,15	,1,1}, //442
	{"Packer", 			112,2,0,0,"None"			,70.0,4,0.5,20	,0,1}, //443
	{"Monster Truck A",	110,2,0,0,"None"			,75.0,2,0.92,25	}, //444
	{"Admiral", 		146,2,3,810000,"Premium"	,40.0,2,0.92,10	,1,1}, //445
	{"Squalo", 			240,3,0,0,"None"			,0.0,0,0.0,0	}, //446
	{"Seasparrow", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //447
	{"Pizzaboy", 		162,0,0,0,"None"			,4.5,1,0.8,2	}, //448
	{"Tram", 			240,0,0,0,"None"			,0.0,0,0.0,0	}, //449
	{"Trailer", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //450
	{"Turismo", 		172,2,1,6000000,"Elite"		,50.0,3,0.95,20	,0,1}, //451
	{"Speeder", 		240,3,0,0,"None"			,0.0,0,0.0,0	}, //452
	{"Reefer", 			240,3,0,0,"None"			,0.0,0,0.0,0	}, //453
	{"Tropic", 			240,3,0,0,"None"			,0.0,0,0.0,0	}, //454
	{"Flatbed", 		140,2,0,0,"None"			,70.0,4,0.5,20	,0,1}, //455
	{"Yankee", 			94 ,2,0,0,"None"			,70.0,4,0.5,20	,1,1}, //456
	{"Caddy", 			84 ,2,0,0,"None"			,10.0,1,0.8,7	}, //457
	{"Solair", 			140,2,5,120000,"Econom"		,40.0,2,0.92,12	,1,1}, //458
	{"Berkley's Van",	121,2,0,0,"None"			,60.0,1,0.8,15	,0,1}, //459
	{"Skimmer", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //460
	{"PCJ-600", 		180,1,3,1000000,"Premium"	,15.0,2,0.92,5	}, //461
	{"Faggio", 			155,0,0,0,"None"			,4.5,0,0.0,2	}, //462
	{"Freeway", 		180,1,2,1600000,"Sport"		,20.0,2,0.92,7	}, //463
	{"RC Baron", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //464
	{"RC Raider", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //465
	{"Glendale", 		131,2,5,110000,"Econom"		,40.0,1,0.8,8	,1,1}, //466
	{"Oceanic", 		125,2,4,390000,"Classic"	,40.0,1,0.8,8	,1,1}, //467
	{"Sanchez", 		164,1,2,1500000,"Sport"		,15.0,2,0.92,5	}, //468
	{"Sparrow", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //469
	{"Patriot", 		139,2,0,0,"None"			,60.0,2,0.92,18	,0,1}, //470
	{"Quad", 			98 ,1,2,2100000,"Sport"		,10.0,2,0.92,5	}, //471
	{"Coastguard", 		240,3,0,0,"None"			,0.0,0,0.0,0	}, //472
	{"Dinghy", 			240,3,0,0,"None"			,0.0,0,0.0,0	}, //473
	{"Hermes", 			133,2,4,370000,"Classic"	,40.0,1,0.8,7	,1,1}, //474
	{"Sabre", 			154,2,5,190000,"Econom"		,40.0,2,0.92,9	,1,1}, //475
	{"Rustler", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //476
	{"ZR-350", 			166,2,2,1900000,"Sport"		,50.0,3,0.95,18	,0,1}, //477
	{"Walton", 			105,2,5,100000,"Econom"		,40.0,4,0.5,8	,1,1}, //478
	{"Regina", 			124,2,5,110000,"Econom"		,40.0,1,0.8,10	,1,1}, //479
	{"Comet", 			164,2,2,2000000,"Sport"		,50.0,3,0.95,18	,1,1}, //480
	{"BMX", 			110,0,0,0,"None"			,0.0,0,0.0,0	}, //481
	{"Burrito", 		139,2,0,0,"None"			,60.0,1,0.8,15	,0,1}, //482
	{"Camper", 			109,2,0,0,"None"			,50.0,1,0.8,15	,1,0}, //483
	{"Marquis", 		240,3,0,0,"None"			,0.0,0,0.0,0	}, //484
	{"Baggage", 		88 ,2,0,0,"None"			,30.0,1,0.8,7	,0,1}, //485
	{"Dozer", 			56 ,2,0,0,"None"			,90.0,4,0.5,15	}, //486
	{"Maverick", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //487
	{"News Chopper", 	240,4,0,0,"None"			,0.0,0,0.0,0	}, //488
	{"Rancher", 		124,2,3,880000,"Premium"	,70.0,2,0.92,20	,1,1}, //489
	{"FBI Rancher", 	139,2,0,0,"None"			,70.0,2,0.92,20	,1,1}, //490
	{"Virgo", 			132,2,3,800000,"Premium"	,40.0,2,0.92,12	,1,1}, //491
	{"Greenwood", 		125,2,5,140000,"Econom"		,40.0,1,0.8,8	,1,1}, //492
	{"Jetmax", 			240,3,0,0,"None"			,0.0,0,0.0,0	}, //493
	{"Hotring", 		191,2,1,6000000,"Elite"		,50.0,3,0.95,18	,0,1}, //494
	{"Sandking", 		157,2,1,5800000,"Elite"		,70.0,3,0.95,19	}, //495
	{"Blista Compact",  145,2,4,480000,"Classic"	,50.0,2,0.92,10	}, //496
	{"Police Maverick", 240,4,0,0,"None"			,0.0,0,0.0,0	}, //497
	{"Boxville", 		110,2,0,0,"None"			,70.0,1,0.8,18	,0,1}, //498
	{"Benson", 			109,2,0,0,"None"			,70.0,1,0.8,18	}, //499
	{"Mesa", 			125,2,4,450000,"Classic"	,40.0,2,0.92,17	}, //500
	{"RC Goblin", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //501
	{"Hotring Racer", 	191,2,1,6000000,"Elite"		,50.0,3,0.95,20	,0,1}, //502
	{"Hotring Racer", 	191,2,1,6000000,"Elite"		,50.0,3,0.95,20	,0,1}, //503
	{"Bloodring",		154,2,0,0,"None"			,40.0,2,0.92,13	,1,1}, //504
	{"Rancher", 		124,2,3,900000,"Premium"	,60.0,2,0.92,18	,1,1}, //505
	{"Super GT", 		159,2,1,5100000,"Elite"		,50.0,3,0.95,20	,1,1}, //506
	{"Elegant", 		148,2,4,450000,"Classic"	,40.0,2,0.92,12	,1,1}, //507
	{"Journey", 		110,2,0,0,"None"			,60.0,2,0.92,15	,0,1}, //508
	{"Bike", 			100,0,0,0,"None"			,0.0,0,0.0,0	}, //509
	{"Mountain Bike", 	117,0,0,0,"None"			,0.0,0,0.0,0	}, //510
	{"Beagle", 			240,4,0,0,"None"			,0.0,0,0.0,0	}, //511
	{"Cropdust", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //512
	{"Stunt", 			240,4,0,0,"None"			,0.0,0,0.0,0	}, //513
	{"Tanker", 			130,2,0,0,"None"			,150.0,1,0.8,25	,0,1}, //514
	{"RoadTrain", 		130,2,0,0,"None"			,150.0,1,0.8,25	,0,1}, //515
	{"Nebula", 			140,2,5,140000,"Econom"		,40.0,2,0.92,10	,1,1}, //516
	{"Majestic", 		140,2,5,150000,"Econom"		,40.0,1,0.8,8	,1,1}, //517
	{"Buccaneer", 		146,2,5,170000,"Econom"		,40.0,1,0.8,9	,1,1}, //518
	{"Shamal", 			240,4,0,0,"None"			,0.0,0,0.0,0	}, //519
	{"Hydra", 			240,4,0,0,"None"			,0.0,0,0.0,0	}, //520
	{"FCR-900", 		190,1,2,1500000,"Sport"		,15.0,2,0.92,5	}, //521
	{"NRG-500", 		200,1,1,4600000,"Elite"		,15.0,2,0.92,5	}, //522
	{"HPV1000", 		172,1,0,0,"None"			,15.0,2,0.92,5	}, //523
	{"Cement Truck", 	116,2,0,0,"None"			,80.0,4,0.5,20	,0,1}, //524
	{"Tow Truck", 		143,2,0,0,"None"			,60.0,1,0.8,12	,0,1}, //525
	{"Fortune", 		140,2,5,110000,"Econom"		,40.0,2,0.92,9	,1,1}, //526
	{"Cadrona", 		133,2,5,100000,"Econom"		,40.0,2,0.92,9	,1,1}, //527
	{"FBI Truck", 		157,2,0,0,"None"			,50.0,1,0.8,13	,0,1}, //528
	{"Willard", 		133,2,4,440000,"Classic"	,40.0,1,0.8,10	,1,1}, //529
	{"Forklift", 		54 ,2,0,0,"None"			,30.0,1,0.8,8	}, //530
	{"Tractor", 		90 ,2,0,0,"None"			,35.0,4,0.5,12	,0,1}, //531
	{"Combine", 		110,2,0,0,"None"			,60.0,4,0.5,15	}, //532
	{"Feltzer", 		148,2,3,920000,"Premium"	,40.0,2,0.92,10	,1,1}, //533
	{"Remington", 		150,2,3,760000,"Premium"	,50.0,2,0.92,13	,1,1}, //534
	{"Slamvan", 		140,2,2,1600000,"Sport"		,50.0,2,0.92,15	,0,1}, //535
	{"Blade", 			154,2,4,400000,"Classic"	,50.0,2,0.92,15	,1,1}, //536
	{"Freight", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //537
	{"Streak", 			240,0,0,0,"None"			,0.0,0,0.0,0	}, //538
	{"Vortex", 			89 ,2,0,0,"None"			,30.0,1,0.8,8	}, //539
	{"Vincent", 		136,2,4,330000,"Classic"	,40.0,2,0.92,9	,1,1}, //540
	{"Bullet", 			180,2,1,6000000,"Elite"		,50.0,3,0.95,20	,1,0}, //541
	{"Clover", 			146,2,5,120000,"Econom"		,40.0,1,0.8,13	,1,1}, //542
	{"Sadler", 			134,2,5,100000,"Econom"		,40.0,1,0.8,10	,1,1}, //543
	{"Firetruck", 		132,2,0,0,"None"			,70.0,4,0.5,25	}, //544
	{"Hustler", 		131,2,2,1550000,"Sport"		,50.0,1,0.8,10	,1,1}, //545
	{"Intruder", 		133,2,5,140000,"Econom"		,40.0,1,0.8,10	,1,1}, //546
	{"Primo", 			127,2,5,110000,"Econom"		,40.0,1,0.8,10	,1,1}, //547
	{"Cargobob", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //548
	{"Tampa", 			136,2,5,120000,"Econom"		,40.0,1,0.8,12	,1,1}, //549
	{"Sunrise", 		128,2,4,480000,"Classic"	,40.0,2,0.92,10	,1,1}, //550
	{"Merit", 			140,2,4,480000,"Classic"	,40.0,2,0.92,10	,1,1}, //551
	{"Utility", 		108,2,0,0,"None"			,50.0,1,0.8,14	,1,1}, //552
	{"Nevada", 			240,4,0,0,"None"			,0.0,0,0.0,0	}, //553
	{"Yosemite", 		128,2,3,840000,"Premium"	,60.0,2,0.92,20	,1,1}, //554
	{"Windsor", 		141,2,3,940000,"Premium"	,50.0,3,0.95,18	,1,1}, //555
	{"Monster Truck B",	98 ,2,0,0,"None"			,60.0,2,0.92,20	}, //556
	{"Monster Truck C",	98 ,2,0,0,"None"			,60.0,2,0.92,20	}, //557
	{"Uranus", 			139,2,2,1700000,"Sport"		,50.0,2,0.92,18	,1,1}, //558
	{"Jester", 			158,2,2,1800000,"Sport"		,50.0,3,0.95,20	,1,1}, //559
	{"Sultan", 			160,2,2,1850000,"Sport"		,50.0,3,0.95,20	,1,1}, //560
	{"Stratum", 		137,2,3,910000,"Premium"	,50.0,1,0.8,18	,1,1}, //561
	{"Elegy", 			158,2,2,1800000,"Sport"		,50.0,3,0.95,20	,1,1}, //562
	{"Raindance", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //563
	{"RC Tiger", 		79 ,0,0,0,"None"			,0.0,0,0.0,0	}, //564
	{"Flash", 			146,2,2,1750000,"Sport"		,50.0,3,0.95,18	,1,1}, //565
	{"Tahoma", 			142,2,4,340000,"Classic"	,40.0,1,0.8,11	,1,1}, //566
	{"Savanna", 		154,2,5,200000,"Econom"		,40.0,2,0.92,12	,1,1}, //567
	{"Bandito", 		130,2,0,0,"None"			,30.0,1,0.8,10	}, //568
	{"Freight", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //569
	{"Trailer", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //570
	{"Kart", 			83 ,0,0,0,"None"			,15.0,0,0.0,5	}, //571
	{"Mower", 			54 ,2,0,0,"None"			,30.0,1,0.8,10	,0,1}, //572
	{"Duneride", 		98 ,2,0,0,"None"			,100.0,4,0.5,25	}, //573
	{"Sweeper", 		53, 2,0,0,"None"			,30.0,1,0.8,7	}, //574
	{"Broadway", 		140,2,4,460000,"Classic"	,40.0,1,0.8,10	,1,1}, //575
	{"Tornado",			140,2,4,350000,"Classic"	,40.0,1,0.8,10	,1,1}, //576
	{"AT-400", 			240,4,0,0,"None"			,0.0,0,0.0,0	}, //577
	{"DFT-30", 			116,4,0,0,"None"			,70.0,4,0.5,20	}, //578
	{"Huntley", 		140,2,3,940000,"Premium"	,60.0,2,0.92,18	,1,1}, //579
	{"Stafford", 		136,2,3,1000000,"Premium"	,50.0,2,0.92,15	,1,1}, //580
	{"BF-400", 			170,1,3,1000000,"Premium"	,15.0,2,0.92,5	}, //581
	{"Newsvan", 		121,2,0,0,"None"			,60.0,1,0.8,20	,0,1}, //582
	{"Tug", 			76 ,2,0,0,"None"			,40.0,1,0.8,10	}, //583
	{"Trailer", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //584
	{"Emperor", 		136,2,4,360000,"Classic"	,40.0,2,0.92,11	,1,1}, //585
	{"Wayfarer", 		175,1,3,800000,"Premium"	,15.0,2,0.92,5	}, //586
	{"Euros", 			147,2,2,1750000,"Sport"		,50.0,3,0.95,17	,1,1}, //587
	{"Hotdog", 			96 ,2,0,0,"None"			,50.0,1,0.8,18	,1,0}, //588
	{"Club", 			145,2,3,770000,"Premium"	,40.0,2,0.92,18	,1,1}, //589
	{"Trailer", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //590
	{"Trailer", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //591
	{"Andromada", 		240,4,0,0,"None"			,0.0,0,0.0,0	}, //592
	{"Dodo", 			240,4,0,0,"None"			,0.0,0,0.0,0	}, //593
	{"RC Cam", 			90 ,0,0,0,"None"			,0.0,0,0.0,0	}, //594
	{"Launch", 			240,3,0,0,"None"			,0.0,0,0.0,0	}, //595
	{"Police Car (LS)",	156,2,0,0,"None"			,50.0,2,0.92,10	,1,1}, //596
	{"Police Car (SF)",	156,2,0,0,"None"			,50.0,2,0.92,10	,1,1}, //597
	{"Police Car (LV)",	156,2,0,0,"None"			,50.0,2,0.92,10	,1,1}, //598
	{"Police Ranger", 	140,2,0,0,"None"			,60.0,2,0.92,18	,1,1}, //599
	{"Picador", 		134,2,4,420000,"Classic"	,40.0,1,0.8,8	,1,1}, //600
	{"S.W.A.T. Van", 	110,2,0,0,"None"			,60.0,1,0.8,20	}, //601
	{"Alpha", 			150,2,2,1600000,"Sport"		,50.0,3,0.95,20	,1,1}, //602
	{"Phoenix", 		152,2,3,750000,"Premium"	,50.0,3,0.95,22	,1,1}, //603
	{"Glendale", 		131,2,0,0,"None"			,30.0,1,0.8,9	,1,1}, //604
	{"Sadler", 			134,2,0,0,"None"			,30.0,1,0.8,9	,1,1}, //605
	{"Luggage Trailer",	240,0,0,0,"None"			,0.0,0,0.0,0	}, //606
	{"Luggage Trailer",	240,0,0,0,"None"			,0.0,0,0.0,0	}, //607
	{"Stair Trailer", 	240,0,0,0,"None"			,0.0,0,0.0,0	}, //608
	{"Boxville", 		110,2,0,0,"None"			,60.0,4,0.5,19	,0,1}, //609
	{"Farm Plow", 		240,0,0,0,"None"			,0.0,0,0.0,0	}, //610
	{"Utility Trailer",	240,0,0,0,"None"			,0.0,0,0.0,0	} //611
};

new PlayerColors[100] = {
0xC715FFFF,0x20B2AAFF,0xDC143CFF,0x6495EDFF,//4
0xf0e68cFF,0x778899FF,0xFF1493FF,0xF4A460FF,0xEE82EEFF,//9
0xFFD720FF,0x8b4513FF,0x4949A0FF,0x148b8bFF,0x14ff7fFF,//14
0x556b2fFF,0x0FD9FAFF,0x10DC29FF,0x534081FF,0x0495CDFF,//19
0xEF6CE8FF,0xBD34DAFF,0x247C1BFF,0x0C8E5DFF,0x635B03FF,//24
0xCB7ED3FF,0x65ADEBFF,0x5C1ACCFF,0xF2F853FF,0x11F891FF,//29
0x7B39AAFF,0x53EB10FF,0x54137DFF,0x275222FF,0xF09F5BFF,//34
0x3D0A4FFF,0x22F767FF,0xD63034FF,0x9A6980FF,0xDFB935FF,//39
0x3793FAFF,0x90239DFF,0xE9AB2FFF,0xAF2FF3FF,0x057F94FF,//44
0xB98519FF,0x388EEAFF,0x028151FF,0xA55043FF,0x0DE018FF,//49
0x93AB1CFF,0x95BAF0FF,0x369976FF,0x18F71FFF,0x4B8987FF,//54
0x491B9EFF,0x829DC7FF,0xBCE635FF,0xCEA6DFFF,0x20D4ADFF,//59
0x2D74FDFF,0x3C1C0DFF,0x12D6D4FF,0x48C000FF,0x2A51E2FF,//64
0xE3AC12FF,0xFC42A8FF,0x2FC827FF,0x1A30BFFF,0xB740C2FF,//69
0x42ACF5FF,0x2FD9DEFF,0xFAFB71FF,0x05D1CDFF,0xC471BDFF,//74
0x94436EFF,0xC1F7ECFF,0xCE79EEFF,0xBD1EF2FF,0x93B7E4FF,//79
0x3214AAFF,0x184D3BFF,0xAE4B99FF,0x7E49D7FF,0x4C436EFF,//84
0xFA24CCFF,0xCE76BEFF,0xA04E0AFF,0x9F945CFF,0xDCDE3DFF,//89
0x10C9C5FF,0x70524DFF,0x0BE472FF,0x8A2CD7FF,0x6152C2FF,//94
0xCF72A9FF,0xE59338FF,0xEEDC2DFF,0xD8C762FF,0xD8C762FF,//99
0xFFFFFF30,//100
};

new Float:GasStations[][] = 
{
	{-1609.4375,-2718.416015625,48.539062},
	{-1606.3172607422,-2713.7919921875,48.53347396850},
	{-1603.2186279297,-2709.3579101563,48.53347396850},
	{-2239.2692871094,-2563.0173339844,31.92187},
	{-2244.2819824219,-2560.6748046875,31.92187},
	{-2248.7836914063,-2558.1130371094,31.92187},
	{-2029.859375,156.73370361328,28.835937},
	{-2023.9301757813,156.94151306152,28.835937},
	{-1683.0081787109,406.40560913086,7.179687},
	{-1673.4058837891,415.91857910156,7.179687},
	{-1669.0202636719,420.35302734375,7.179687},
	{-1679.2221679688,410.26022338867,7.179687},
	{-1663.4989013672,415.04461669922,7.179687},
	{-1668.060546875,410.80490112305,7.179687023162},
	{-1673.3493652344,405.50891113281,7.179687},
	{-1677.5407714844,401.34146118164,7.179687},
	{-1688.3726806641,411.81213378906,7.179687},
	{-1684.1895751953,415.94216918945,7.179687},
	{-1678.9178466797,421.69506835938,7.179687},
	{-1674.4351806641,425.48406982422,7.179687},
	{-2407.794921875,981.67755126953,45.29687},
	{-2407.8056640625,976.33709716797,45.29687},
	{-2407.755859375,970.97021484375,45.30161666870},
	{-2414.3237304688,970.65612792969,45.29687},
	{-2414.1552734375,976.16424560547,45.29687},
	{-2414.1530761719,981.55053710938,45.29687},
	{-1328.9210205078,2671.95703125,50.062},
	{-1328.1253662109,2677.5329589844,50.062},
	{-1327.3784179688,2682.8806152344,50.062},
	{622.34484863281,1680.1520996094,6.992187},
	{618.89874267578,1684.943359375,6.992187},
	{615.40374755859,1689.8093261719,6.992187},
	{612.01977539063,1694.8643798828,6.992187},
	{608.76837158203,1699.8084716797,6.992187},
	{605.18286132813,1705.0197753906,6.992187},
	{1602.1967773438,2199.0627441406,10.820312},
	{1596.7563476563,2199.1196289063,10.820312},
	{1590.1235351563,2199.2619628906,10.820312},
	{1590.3629150391,2207.3798828125,10.820312},
	{1596.1693115234,2207.0700683594,10.820312},
	{1601.9636230469,2207.1252441406,10.820312},
	{1602.0748291016,2191.1740722656,10.820312},
	{1596.2547607422,2191.494140625,10.820312},
	{1590.5048828125,2191.1630859375,10.820312},
	{2153.7143554688,2748.1845703125,10.820312},
	{2147.5825195313,2748.1560058594,10.820312},
	{2141.3530273438,2748.1625976563,10.820312},
	{2109.4975585938,920.39233398438,10.820312},
	{2115.9846191406,920.05859375,10.820312},
	{2120.845703125,920.22430419922,10.820312},
	{2121.0134277344,911.62658691406,10.820312},
	{2114.9375,912.00036621094,10.820312},
	{2109.1303710938,912.0478515625,10.820312},
	{2109.0148925781,928.08190917969,10.820312},
	{2114.9130859375,928.14385986328,10.820312},
	{2120.7521972656,928.01629638672,10.820312},
	{1385.3719482422,461.54650878906,20.14608192443},
	{1381.0656738281,463.4140625,20.141096115112},
	{1383.1625976563,456.3444519043,19.93175506591},
	{1378.9193115234,458.48300170898,19.93210601806},
	{658.84100341797,-570.31732177734,16.335937},
	{653.1767578125,-570.52203369141,16.335937},
	{653.23858642578,-559.87579345703,16.335937},
	{658.83612060547,-559.6162109375,16.335937},
	{-88.825729370117,-1163.3898925781,2.2478084564209},
	{-93.702880859375,-1175.2799072266,2.2576327323914},
	{-95.434013366699,-1160.6800537109,2.183941841125},
	{-100.10469055176,-1172.5412597656,2.4556865692139},
	{-87.183349609375,-1177.9819335938,2.059141159057},
	{-82.638580322266,-1166.1596679688,2.233517646789},
	{-91.251174926758,-1168.9095458984,2.449013233184},
	{1000.0470581055,-933.94555664063,42.179687},
	{1007.4846191406,-934.22454833984,42.179687},
	{1008.4683227539,-940.23852539063,42.179687},
	{1000.7403564453,-941.24365234375,42.179687},
	{1938.3853759766,-1769.4689941406,13.382812},
	{1938.6726074219,-1776.51171875,13.390598297119},
	{1944.8792724609,-1776.2408447266,13.390598297119},
	{1944.6721191406,-1769.2556152344,13.390598297119},
	{2202.4008789063,2469.9775390625,10.8203125},
	{2202.4431152344,2474.8942871094,10.8203125},
	{2202.599609375,2480.251953125,10.8203125},
	{2211.2783203125,2470.2009277344,10.8203125},
	{2210.6540527344,2474.5241699219,10.8203125},
	{2210.5739746094,2480.2602539063,10.8203125},
	{2193.2785644531,2480.5246582031,10.8203125},
	{2193.3974609375,2474.8034667969,10.8203125},
	{2193.5520019531,2470.23828125,10.8203125},
	{-39.398777008057,-440.79336547852,1.4913263320923}
};

new Float:Tuning[8][3] = 
{
	{1041.1074,-1019.1157,31.9120}, // LS
	{2644.5935,-2042.9956,13.4571}, // LS
	{-1936.1417,245.7098,34.1697}, // SF
	{2387.2380,1048.9565,10.5539}, // LV
	{-2722.9019,217.7507,4.1894}, // SF
	{620.2633,-119.7673,998.8496},//Arhangels
	{620.1933,-70.9001,997.9922},//Lowriders
	{627.3036,-11.9241,1000.9219}//Transfender
};

new Float:BattleField[20][3] = 
{
	{-1131.2113,1058.1803,1346.4141},
	{-1132.0823,1047.7593,1345.7498},
	{-1132.7184,1028.5190,1345.7363},
	{-1132.3451,1095.7401,1345.7950},
	{-1113.4485,1096.0145,1341.8438},
	{-1110.2643,1062.1495,1342.6641},
	{-1109.6807,1028.4160,1343.2755},
	{-1091.1547,1024.3911,1342.8198},
	{-1084.7542,1054.1556,1343.3308},
	{-1070.1646,1095.0092,1343.0879},
	{-1049.4988,1083.3687,1343.3363},
	{-1054.4944,1025.8263,1343.1794},
	{-1036.0043,1021.1398,1343.1191},
	{-1036.3132,1059.5868,1344.0304},
	{-1037.3981,1092.7552,1343.1731},
	{-1024.6796,1086.2823,1343.6401},
	{-974.6378,1090.4207,1344.9760},
	{-974.2545,1070.4230,1344.9961},
	{-989.2518,1055.7157,1343.0446},
	{-972.7578,1024.7582,1345.0538}
};
new Float:Atrium[20][3] =
{
	{1702.1157,-1671.8633,20.2234}, // Cop
	{1713.7999,-1642.1957,27.2095}, // CS
	{1702.4214,-1668.5430,20.2188}, // Cop
	{1717.1964,-1640.1249,27.2059}, // CS
	{1702.4039,-1663.8788,20.2196}, // Cop
	{1720.6606,-1639.9324,27.1950}, // CS
	{1702.3513,-1659.2195,20.2196}, // Cop
	{1724.8823,-1640.0293,27.2124}, // CS
	{1702.5028,-1654.4951,20.2197}, //Cop
	{1728.6079,-1639.8390,27.2409}, // CS
	{1732.3253,-1639.9661,20.2293}, // Cop
	{1732.2411,-1639.9226,27.2673}, // CS
	{1727.9658,-1639.8495,20.2239}, // Cop
	{1733.6583,-1642.6194,27.2461}, // CS
	{1723.8849,-1640.0062,20.2240}, // Cop
	{1733.7614,-1646.7563,27.2379}, // CS
	{1719.8164,-1640.2256,20.2241}, // Cop
	{1733.8910,-1651.1204,27.2357}, // CS
	{1715.8401,-1640.8376,20.2252}, // Cop
	{1734.0165,-1655.3425,27.2285} // CS
};
new Float:HotRing[12][3] =
{
	{-1403.74597168,-238.50799561,1043.31396484},
	{-1400.65905762,-239.11199951,1043.29101562},
	{-1397.59301758,-239.85400391,1043.31298828},
	{-1405.16003418,-244.74200439,1043.42700195},
	{-1402.02600098,-245.45300293,1043.40502930},
	{-1399.03405762,-246.22799683,1043.40502930},
	{-1400.40405273,-252.61599731,1043.53002930},
	{-1403.48596191,-251.90499878,1043.53405762},
	{-1406.55505371,-251.33500671,1043.54296875},
	{-1407.90100098,-257.70800781,1043.63305664},
	{-1404.84301758,-258.38400269,1043.62597656},
	{-1401.70397949,-259.14898682,1043.62597656}
};
new Float:HotRingCP[7][3] = 
{
	{-1416.5923,-137.7354,1044.1896},
	{-1528.7003,-183.8757,1050.4005},
	{-1440.1180,-283.4401,1050.6968},
	{-1373.7054,-134.7393,1050.7766},
	{-1265.5386,-190.5992,1050.2405},
	{-1331.9266,-280.5829,1046.4521},
	{-1396.4900,-226.1470,1042.7749}
};
new Float:DirtBike[15][3] =
{
	{-1316.22094727,-687.18200684,1055.89294434},
	{-1314.95495605,-685.70599365,1055.90795898},
	{-1313.79699707,-684.38397217,1055.91003418},
	{-1312.62695312,-683.01702881,1055.91796875},
	{-1311.47802734,-681.63000488,1055.92297363},
	{-1313.67700195,-689.45501709,1055.95202637},
	{-1312.43994141,-688.05603027,1055.96105957},
	{-1311.21594238,-686.65502930,1055.96997070},
	{-1309.86401367,-685.20599365,1055.97998047},
	{-1308.55200195,-683.72802734,1055.98901367},
	{-1311.40698242,-691.43298340,1056.00903320},
	{-1310.31005859,-690.17602539,1056.01293945},
	{-1309.03405762,-688.89099121,1056.02502441},
	{-1307.66296387,-687.45202637,1056.03405762},
	{-1306.26293945,-686.04998779,1056.04504395}
};
new Float:DirtBikeCP[7][3] =
{
	{-1407.7714,-664.1976,1057.9679},
	{-1445.9712,-685.2739,1053.2970},
	{-1364.8929,-686.6043,1054.3199},
	{-1344.1718,-632.4101,1053.5913},
	{-1375.5448,-589.7166,1055.7214},
	{-1515.4188,-650.0961,1049.3788},
	{-1299.9381,-699.2109,1056.0251}
};
new Float:Monster[16][4] = 
{
	{-1397.91503906,1211.31005859,1040.31994629,0.0},
	{-1395.35900879,1279.88305664,1040.31994629,180.0},
	{-1362.25402832,1244.55505371,1040.31994629,90.0},
	{-1430.61401367,1246.51501465,1040.31994629,270.0},
	{-1373.59094238,1219.76000977,1040.31994629,45.0},
	{-1371.81005859,1269.36401367,1040.31994629,135.0},
	{-1419.85900879,1271.09704590,1040.31994629,225.0},
	{-1422.26196289,1223.22302246,1040.31994629,315.0},
	{-1384.89599609,1213.35705566,1040.31994629,22.5},
	{-1365.11901855,1232.29296875,1040.31994629,67.5},
	{-1364.93603516,1258.61694336,1040.31994629,115.5},
	{-1383.16699219,1276.95495605,1040.31994629,157.5},
	{-1407.90600586,1277.68701172,1040.31994629,202.5},
	{-1427.76293945,1259.34497070,1040.31994629,250.5},
	{-1429.11096191,1233.60595703,1040.31994629,292.5},
	{-1411.64904785,1215.22399902,1040.31994629,337.5}
};
new Float:Blood[20][4] = 
{
	{-1517.27294922,1000.96398926,1037.50000000,265.00000000},
	{-1516.41003418,985.07098389,1037.94995117,264.99572754},
	{-1511.68298340,1016.43298340,1037.94995117,264.99572754},
	{-1508.92199707,972.98101807,1038.09399414,264.99572754},
	{-1496.63696289,960.90100098,1038.23205566,264.99572754},
	{-1500.37902832,1027.00598145,1038.09399414,264.99572754},
	{-1489.50097656,1036.20397949,1038.23205566,264.99572754},
	{-1479.29602051,1043.02197266,1038.32299805,264.99572754},
	{-1480.05297852,950.78100586,1036.79003906,264.99572754},
	{-1468.52294922,1047.63500977,1038.38098145,264.99572754},
	{-1279.97399902,993.21997070,1037.14501953,88.00000000},
	{-1283.84399414,1005.62200928,1037.35900879,87.99499512},
	{-1288.41699219,1016.03900146,1037.54394531,87.99499512},
	{-1296.79394531,1026.57104492,1037.73498535,87.99499512},
	{-1306.13098145,1034.92297363,1037.89196777,87.99499512},
	{-1315.79895020,1041.05004883,1038.00598145,87.99499512},
	{-1285.44702148,982.06201172,1036.96594238,87.99499512},
	{-1290.82202148,971.59197998,1036.80798340,87.99499512},
	{-1300.22204590,960.55603027,1036.63793945,87.99499512},
	{-1308.99499512,954.53198242,1036.55297852,87.99499512}
};
enum gpsInfo
{
	Locate[32],
	Float:LocateX,
	Float:LocateY,
	Float:LocateZ
}
static const GPS_Job[][gpsInfo] = 
{
	{"[1] Грузчик (0 лвл)",2137.9661,-2282.2017,20.6719},
	{"[2] Лесоруб (0 лвл)",-2000.1516,-2368.3611,30.7474},
	{"[3] Шахтер (0 лвл)",-1854.7560,-1561.2656,21.7500},	
	{"[4] Дальнобойщик", -49.9,-269.4,6.63},
	{"[5] Страховщик", 725.6,-1440.1,13.5},
	{"[6] Механик",	-1924.1,303.6,41.0},
	{"[7] Телохранитель", 2225.4,-1717.1,13.5},
	{"[8] Продавец оружия", 1516.9,-1464.4,9.5},
	{"[9] Продавец наркотиков",2166.0,-1671.2,15.1},
	{"[10] Автоугонщик", -1687.7,-18.3,3.6},
	{"[11] Детектив", -2766.2,375.6,6.3}
};
static const GPS_Loc[][gpsInfo] =
{
	{"[1] Автошкола",-2026.6683349609,-101.81073760986,35.1640625},
	{"[2] Мотошкола",1174.2358,1350.9962,10.9219},
	{"[3] Лодочная школа",-2187.1450,2416.3120,5.1645},
	{"[4] Летная школа",415.5193,2533.7236,19.1484},
	{"[5] Автосалон \"Элитный\"",-1664.0131,1207.7834,7.2546},
	{"[6] Автосалон \"Спортивный\"",-1967.8540,296.3083,35.1719},
	{"[7] Автосалон \"Премиум\"",563.6541,-1293.1981,17.2482},
	{"[8] Автосалон \"Классика\"",2200.8901,1394.2567,11.0625},
	{"[9] Автосалон \"Эконом\"",2131.7759,-1150.9517,24.1005},
	{"[10] Полицейский участок LS",1555.2614,-1675.5676,16.1953}
};

new Float:PayPos[9][3] = 
{
	{487.653,-1739.11,10.16},
	{1024.927,-1025.399,31.2},
	{2067.15,-1831.50,12.7},
	{-1904.55,281.97,40.07},
	{-2425.73,1023.76,49.47},
	{1973.15,2162.35,10.14},
	{720.0,-458.35,15.08},
	{-100.11,1115.46,18.8},
	{-1420.45,2587.57,54.94}
};
new Float:Zapravki[5][3] = 
{
	{1920.1147460938,-1792.1711425781,13.3828125},
	{-65.895622253418,-1160.89453125,1.75},
	{-2047.0633544922,136.32232666016,28.8359375},
	{-2439.3391113281,953.68890380859,45.296875},
	{986.97467041016,-915.46612548828,42.1796875}
};
new Float:Skladi[3][3] = 
{
	{2200.8157,-2236.1428,13.5469},
	{2575.7263,-2226.2986,13.3439},
	{-48.6003,-1138.4033,1.0781}
};
new WeaponName[47][24] =
{
    "Нет", //0
    "Brass Knuckles", //1
    "Golf Club", //2
    "Night Stick", //3
    "Knife", //4
    "Baseball Bat", //5
    "Shovel", //6
    "Pool cue", //7
    "Katana", //8
    "Chainsaw", //9
    "Purple Dildo", //10
    "White Dildo", //11
    "White Dildo", //12
    "White Dildo", //13
    "Flowers", //14
    "Cane", //15
    "Grenades", //16
    "Tear Gas", //17
    "Molotovs", //18
	"Нет", //19
	"Нет", //20
	"Нет", //21
    "Pistol", //22
    "Silenced Pistol", //23
    "Desert Eagle", //24;
    "Shotgun", //25;
    "Sawn Off Shotgun", //26;
    "Combat Shotgun", //27;
    "Micro Uzi", //28;
    "MP5", //29;
    "AK47", //30;
    "M4", //31;
    "Tec9", //32;
    "Rifle", //33;
    "Sniper Rifle", //34;
    "RPG", //35;
    "Missile Launcher", //36;
    "Flame Thrower", //37;
    "Minigun", //38;
    "Sachel Charges", //39
    "Detonator", //40
    "Spray Paint", //41
    "Fire Extinguisher", //42
    "Camera", //43
    "Nightvision Goggles", //44
    "Thermal Goggles", //45
    "Parachute" //46
};
new WebSites[][] ={"http://","www.",".ru",".tk",".com",".org",".net",".su",". ru",". tk",". com",". org",". net",". su",".  ru",".  tk",". com",".  org",".  net",".  su"};

enum hiInfo
{
	HouseName[12],
	Class,
	Int,
	Price,
	Level,
	Float:Exit_X,
	Float:Exit_Y,
	Float:Exit_Z,
	Checkpoint
}
#define MAX_HOUSE_INT 26
static const HIInfo[MAX_HOUSE_INT][hiInfo] =
{
	{"Средний",3,9,1500000,15,260.7390,1237.2318,1084.2578}, //0
	{"Премиум",4,9,2500000,18,83.0496,1322.2825,1083.8662},//1
	{"Эконом",2,8,700000,9,-42.5896,1405.4697,1084.4297},//2
	{"Эконом",2,2,1250000,12,2237.4751,-1081.6454,1049.0234},//3
	{"Гетто",1,1,650000,15,2218.4036,-1076.2455,1050.4844},//4
	{"Эконом",2,6,800000,8,-68.8348,1351.1968,1080.2109},//5
	{"Элитный",5,6,5000000,20,234.1876,1063.7209,1084.2123},//6
	{"Элитный",5,5,2300000,15,140.2985,1365.9218,1083.8594},//7
	{"Средний",3,5,1100000,12,22.7982,1403.3235,1084.4370},//8
	{"Эконом",2,4,1400000,9,-260.4856,1456.7130,1084.3672},//9
	{"Премиум",4,12,2000000,18,2324.4377,-1149.5459,1050.7101},//10
	{"Эконом",2,4,700000,8,221.8477,1140.1952,1082.6094},//11
	{"Средний",3,10,1000000,12,24.0210,1340.1592,1084.3750},//12
	{"Средний",3,4,1500000,9,261.0555,1284.2959,1080.2578},//13
	{"Элитный",5,5,3500000,15,226.2962,1114.3253,1080.9929},//14
	{"Средний",3,15,1200000,12,295.1681,1472.2554,1080.2578},//15
	{"Эконом",2,1,450000,9,223.1101,1287.0778,1082.1406},//16
	{"Эконом",2,2,700000,12,226.7886,1239.9840,1082.1406},//17
	{"Средний",3,3,3000000,15,235.2803,1186.6803,1080.2578},//18
	{"Гетто",1,10,350000,5,2259.3821,-1135.8431,1050.6403},//19
	{"Средний",3,9,1500000,12,2317.8384,-1026.7657,1050.2178},//20
	{"Гетто",1,5,400000,9,2233.6636,-1115.2629,1050.8828},//21
	{"Гетто",1,10,300000,5,422.5723,2536.4946,10.0000},//22
	{"Гетто",1,2,350000,5,266.4990,304.9983,999.1484},//23
	{"Гетто",1,2,500000,12,2468.8430,-1698.3062,1013.5078},//24
	{"Гетто",1,1,200000,3,243.7191,305.0023,999.1484}// 25
};

enum biInfo
{
	BizName[32],
	Level,
	Price,
	Int,
	Float:Exit_X,
	Float:Exit_Y,
	Float:Exit_Z,
	MapIcon,
	ProdsCount,
	Checkpoint
}
#define MAX_BIZ_INT 31
static const BIInfo[MAX_BIZ_INT][biInfo] =
{
	{"Телефонная компания",				7,5000000,0,0.0,0.0,0.0,42,0}, //0
	{"Топливная компания",				7,5000000,0,0.0,0.0,0.0,55,4}, //1
	{"Loco Row",						7,5000000,0,0.0,0.0,0.0,27,0}, //2
	{"Pay N Spray",						7,5000000,0,0.0,0.0,0.0,63,0}, //3
	{"TransFender",						7,5000000,0,0.0,0.0,0.0,27,0},//4
	{"Wheel Arch Angels",				7,5000000,0,0.0,0.0,0.0,27,0}, //5
	{"Live Nude Girls",					7,5000000,2,1204.77,-13.8511,1000.92,38,0}, //6
	{"Бар \"Mysty\"",					7,5000000,11,501.927,-67.5629,998.75,49,0}, //7
	{"Бар \"The Craw\"",				7,5000000,11,501.927,-67.5629,998.75,49,0}, //8
	{"Клуб \"The Camel\"",				7,5000000,17,493.426,-24.9081,1000.67,48,0}, //9
	{"Стриптиз клуб \"Spread Ranch\"",	7,5000000,2,1204.77,-13.8511,1000.92,38,0}, //10
	{"Магазин 24/7",					7,5000000,18,-30.9797,-92.0114,1003.5469,17,6}, // 11 Широкий магазин
	{"Магазин 24/7",					7,5000000,6,-27.3353,-58.2670,1003.5469,17,6}, // 12 Маленький магазин
	{"Оружейный магазин",				7,5000000,1,285.4781,-41.7997,1001.5156,6,10}, // 13 Средняя аммунация
	{"Оружейный магазин",				7,5000000,4,285.8701,-86.7728,1001.5229,6,10}, // 14 Длинная аммунация
	{"Оружейный магазин",				7,5000000,6,296.8623,-112.0662,1001.5156,6,10}, // 15 Маленькая аммунация
	{"Магазин для взрослых",			7,5000000,3,-100.3566,-25.0379,1000.7188,38,0}, // 16
	{"Пиццерия",						7,5000000,5,372.3320,-133.5245,1001.4922,29,0}, // 17
	{"Пончики",							7,5000000,17,377.1154,-193.3047,1000.6328,17,0}, // 18
	{"Закусочная \"Burger Shot\"",		7,5000000,10,362.8931,-75.1895,1001.5078,10,0}, // 19
	{"Закусочная \"Cluckin Bell\"",		7,5000000,9,364.9735,-11.8444,1001.8516,14,0}, // 20
	{"Клуб \"Alhambra\"",				7,5000000,17,493.4255,-24.9081,1000.6719,48,0}, // 21
	{"Бар \"Ten Green Bottles\"",		7,5000000,11,501.9274,-67.5629,998.7578,49,0}, // 22
	{"Стриптиз клуб \"Pig Pen\"",		7,5000000,2,1204.7710,-13.8511,1000.9219,38,0}, // 23
	{"Клуб \"Jizzy\"",					7,5000000,3,-2636.6926,1402.4730,906.4609,48,0}, // 24
	{"Магазин одежды \"ProLaps\"",		7,5000000,3,207.0696,-140.3756,1003.5078,45,0}, // 25
	{"Магазин одежды \"Victim\"",		7,5000000,5,227.4709,-8.1962,1002.2109,45,0}, // 26
	{"Магазин одежды \"Urban\"",		7,5000000,1,203.7902,-50.5895,1001.8047,45,0}, // 27
	{"Магазин одежды \"Zip\"",			7,5000000,18,161.4034,-97.1090,1001.8047,45,0}, // 28
	{"Магазин одежды \"Didier Sachs\"",	7,5000000,14,204.3353,-168.8608,1000.5234,45,0}, // 29
	{"Магазин одежды \"Binco\"",		7,5000000,15,207.6717,-111.2656,1005.1328,45,0} // 30
};

static Float:InvPos[35][2] = 
{
// Левая часть, инвентарь
	{200.0, 52.0},
	{200.0, 91.0},
	{200.0, 130.0},
	{200.0, 169.0},
	{200.0, 208.0},
	{237.0, 52.0},
	{237.0, 91.0},
	{237.0, 130.0},
	{237.0, 169.0},
	{237.0, 208.0},
	{274.0, 52.0},
	{274.0, 91.0},
	{274.0, 130.0},
	{274.0, 169.0},
	{274.0, 208.0},
	{311.0, 52.0},
	{311.0, 91.0},
	{311.0, 130.0},
	{311.0, 169.0},
	{311.0, 208.0},
// Правая часть
	{340.0, 432.0},
	{340.0, 471.0},
	{340.0, 510.0},
	{340.0, 549.0},
	{340.0, 588.0},
// Правая часть, надписи
	{331.0, 432.0},
	{331.0, 471.0},
	{331.0, 510.0},
	{331.0, 549.0},
	{331.0, 588.0},
// Левая часть, медали
	{200.0, 52.0},
	{237.0, 52.0},
	{274.0, 52.0},
	{311.0, 52.0},
	{348.0, 52.0}
};

enum ImPos
{
	imType,
	imModel,
	Float:imX,
	Float:imY,
	Float:imRX,
	Float:imRY,
	Float:imRZ,
	Float:imZoom,
	Float:imBX,
	Float:imBY,
	imCount,

	imName[24],
	imTDName[24]
}
new oData[195][ImPos] =
{
	{0, 0,		0.0, 0.0,		0.0, 0.0, 0.0, 0.0,		0.0, 0.0,		0,"Нет", "мEЏ"},
	{0, 331,	-12.0, 0.0,		0.0, 325.0, 0.0, 0.5,	50.0, 45.0,		0,"кастет", "KACЏEЏ"},
	{1, 333,	-41.0, -2.0,	0.0, 325.0, 0.0, 2.5,	68.0, 55.0,		0,"клюшку для гольфа", "K‡”ЋKA ѓ‡• ‚O‡’ЃA"},
	{1, 334,	-52.0, -20.0,	0.0, 325.0, 0.0, 2.5,	105.0, 82.0,	0,"дубинку", "љYЂ…мKA"},
	{1, 335,	-34.0, -3.0,	0.0, 325.0, 0.0, 1.0,	72.0, 52.0,		0,"нож", "мO„"},
	{1, 336,	-43.0, -8.0,	0.0, 325.0, 0.0, 2.5,	80.0, 60.0,		0,"бейсбольную биту", "—E†CЂO‡’мA• Ђ…ЏA"},
	{1, 337,	-38.0, -3.0,	0.0, 325.0, 90.0, 2.5,	65.0, 40.0,		0,"лопату", "ћOЊAЏA"},
	{1, 338,	-41.0, 0.0,		0.0, 325.0, 90.0, 2.5,	65.0, 40.0,		0,"бильярдный кий", "—…‡’•Pѓм‘† K…†"},
	{1, 339,	-38.0, 0.0,		0.0, 325.0, 0.0, 2.5,	65.0, 40.0,		0,"катану", "KAЏAмA"},
	{1, 341,	-32.0, 0.0,		0.0, 325.0, 0.0, 2.5,	95.0, 50.0,		0,"бензопилу", "—Eм€OЊ…‡A"},
	//10
	{10, 321,	-58.0, -41.0,	0.0, 325.0, 0.0, 2.5,	103.0, 131.0,	0,"фиолетовый дилдо", "Ѓ…O‡EЏOB‘† ѓ…‡ѓO"},
	{10, 322,	-58.0, -44.0,	0.0, 325.0, 0.0, 1.5,	126.0, 131.0,	0,"дилдо", "ѓ…‡ѓO"},
	{10, 323,	-66.0, -36.0,	0.0, 325.0, 0.0, 2.5,	126.0, 121.0,	0,"вибратор", "B…ЂPAЏOP"},
	{10, 324,	-56.0, -34.0,	0.0, 325.0, 0.0, 1.5,	115.0, 110.0,	0,"серебряный вибратор", "CEPEЂP•м‘† B…ЂPAЏOP"},
	{10, 325,	-56.0, -9.0,	0.0, 325.0, 0.0, 2.5,	99.0, 66.0,		0,"цветы", " BEЏ‘"},
	{10, 326,	-36.0, 1.0,		0.0, 325.0, 0.0, 2.5,	63.0, 47.0,		0,"трость", "ЏPOCЏ’"},
	{8, 342,	-22.0, -3.0,	0.0, 325.0, 0.0, 0.5,	63.0, 47.0,		1,"гранату", "‚PAмAЏA"},
	{8, 343,	-26.0, -3.0,	0.0, 325.0, 0.0, 0.6,	63.0, 47.0,		1,"газовая шашку", "‚A€OBA• ЋAЋKA"},
	{8, 344,	-26.0, -9.0,	0.0, 325.0, 0.0, 1.0,	63.0, 47.0,		1,"коктейль Молотова", "KOKЏE†‡’ –O‡OЏOBA"},
	{100,19515, -24.0, -13.0,	0.0, 270.0, 0.0, 1.0,	50.0, 51.0,		0,"бронежилет", "ЂPOмE„…‡EЏ"},
	//20
	{13, 1581,	-25.0, -9.0,	0.0, 45.0, 180.0, 1.3,	50.0, 45.0,		0,"банковскую карту", "ЂAмKOBCKA• KAPЏA"}, 
	{14, 1279,	-24.0, -11.0,	315.0, 0.0, 45.0, 1.3,	50.0, 45.0,		1,"материалы", "–AЏEP…A‡‘"},
	{2, 346,	-42.0, -7.0,	0.0, 325.0, 0.0, 1.0,	100.0, 60.0,	1,"пистолет", "Њ…CЏO‡EЏ"},
	{2, 347,	-39.0, -7.0,	0.0, 325.0, 0.0, 1.4,	100.0, 60.0,	1,"пистолет с глушителем", "Њ…CЏO‡EЏ C ‚‡YЋ…ЏE‡E–"},
	{2, 348,	-37.0, -12.0,	0.0, 325.0, 0.0, 1.4,	100.0, 70.0,	1,"Desert Eagle", "Desert Eagle"},
	{3, 349,	-27.0, -8.0,	0.0, 325.0, 0.0, 2.5,	65.0, 55.0,		1,"дробовик", "ѓPOЂOB…K"},
	{3, 350,	-20.0, -3.0,	0.0, 325.0, 0.0, 1.5,	65.0, 55.0,		1,"обрез", "OЂPE€"},
	{3, 351,	-20.0, -3.0,	0.0, 325.0, 0.0, 1.9,	65.0, 55.0,		1,"боевой дробовик", "ЂOEBO† ѓPOЂOB…K"},
	{4, 352,	-27.0, -13.0,	0.0, 325.0, 0.0, 1.3,	65.0, 55.0,		1,"микро SMG", "–…KPO SMG"},
	{4, 353,	-28.0, -2.0,	0.0, 325.0, 0.0, 1.4,	65.0, 55.0,		1,"MP5", "MP5"},
	//30
	{5, 355,	-28.0, -8.0,	0.0, 325.0, 0.0, 2.7,	65.0, 55.0,		1,"AK-47", "AK-47"},
	{5, 356,	-27.0, -8.0,	0.0, 325.0, 0.0, 2.5,	65.0, 55.0,		1,"M4", "M4"},
	{4, 372,	-22.0, -6.0,	0.0, 325.0, 0.0, 1.3,	65.0, 55.0,		1,"Tec-9", "Tec-9"},
	{6, 357,	-28.0, -8.0,	0.0, 325.0, 0.0, 2.5,	65.0, 55.0,		1,"винтовку", "B…мЏOBKA"},
	{6, 358,	-28.0, -8.0,	0.0, 325.0, 0.0, 2.5,	65.0, 55.0,		1,"снайперскую винтовку", "CмA†ЊEPCKA• B…мЏOBKA"},//
	{7, 359,	-28.0, -14.0,	0.0, 325.0, 0.0, 3.2,	50.0, 55.0,		1,"RPG", "RPG"},
	{7, 360,	-30.0, -12.0,	0.0, 325.0, 0.0, 2.5,	50.0, 55.0,		1,"HS Rocket", "HS Rocket"},
	{7, 361,	-20.0, -28.0,	0.0, 0.0, 0.0, 4.0,		70.0, 93.0,		1,"огнемет", "O‚мE–EЏ"},
	{7, 362,	-18.0, -28.0,	0.0, 0.0, 0.0, 4.0, 	70.0, 93.0,		1,"миниган", "®…м…‚Aм"},
	{8, 363,	-27.0, -32.0,	0.0, 325.0, 0.0, 2.4,	70.0, 93.0,		1,"C4", "C4"},
	//40
	{12, 364,	-57.0, -13.0,	270.0, 0.0, 235.0, 3.0,	100.0, 73.0,	0,"детонатор", "ѓEЏOмAЏOP"},
	{9, 365,	-41.0, -24.0,	0.0, 325.0, 0.0, 1.2,	100.0, 73.0,	0,"балончик с краской", "ЂA‡OмЌ…K C KPACKO†"},
	{9, 366,	-33.0, -27.0,	0.0, 0.0, 0.0, 2.7,		100.0, 73.0,	0,"огнетушитель", "O‚мEЏYЋ…ЏE‡’"},
	{9, 367,	-65.0, -31.0,	325.0, 0.0, 90.0, 1.2,	100.0, 73.0,	0,"камеру", "KA–EPA"},
	{11, 368,	-50.0, -37.0,	325.0, 90.0, 0.0, 0.8,	100.0, 73.0,	0,"очки ночного видения", "OЌK… мOЌмO‚O B…ѓEм…•"},
	{11, 369,	-50.0, -37.0,	325.0, 90.0, 0.0, 0.8,	100.0, 73.0,	0,"тепловизор", "ЏEЊ‡OB…€OP"},
	{11, 371,	-50.0, -21.0,	0.0, 0.0, 0.0, 2.0,		100.0, 73.0,	0,"парашют", "ЊAPAЋ”Џ"},
	{15, 1575,	-24.0, -11.0,	315.0, 0.0, 45.0, 1.3,	50.0, 45.0,		1,"наркотики", "мAPKOЏ…K…"},
	{16, 1576,	-24.0, -11.0,	315.0, 0.0, 45.0, 1.3,	50.0, 45.0,		1,"Drugs", "_"},
	{17, 1577,	-24.0, -11.0,	315.0, 0.0, 45.0, 1.3,	50.0, 45.0,		1,"Drugs", "_"},
	//50
	{18, 1578,	-24.0, -11.0,	315.0, 0.0, 45.0, 1.3,	50.0, 45.0,		1,"Drugs", "_"},
	{19, 1579,	-24.0, -11.0,	315.0, 0.0, 45.0, 1.3,	50.0, 45.0,		1,"Drugs", "_"},
	{20, 1580,	-24.0, -11.0,	315.0, 0.0, 45.0, 1.3,	50.0, 45.0,		1,"Drugs", "_"},
	{21, 1543,	-14.0, -18.0,	0.0, 45.0, 0.0, 1.0,	50.0, 50.0,		1,"пиво", "Њ…BO"},
	{22, 354,	-27.0, -13.0,	315.0, 0.0, 315.0, 0.9,	50.0, 50.0,		1,"сигареты", "C…‚APEЏ‘"},
	{23, 330,	-20.0, -11.0,	30.0, 55.0, 0.0, 0.8,	50.0, 50.0,		1,"взломщик паролей", "B€‡O–Љ…K ЊAPO‡E†"},
	{24, 18865,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", ""},
	{24, 18866,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	{24, 18867,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	{24, 18868,	-29.0, -9.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	//60
	{24, 18869,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	{24, 18870,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	{24, 18871,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	{24, 18872,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	{24, 18873,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	{24, 18874,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	{24, 19513,	-29.0, -19.0,	270.0, 0.0, 225.0, 1.05,50.0, 50.0,		0,"телефон", "ЏE‡EЃOм"},
	{25, 19088,	-25.0, 2.0,		70.0, 0.0, 0.0, 1.1,	50.0, 50.0,		1,"веревку", "BEPEBKA"},
	{26, 18644,	-34.0, -7.0,	0.0, 45.0, 0.0, 0.9,	50.0, 50.0,		1,"отмычки", "OЏ–‘ЌKA"},
	{27, 18642,	-25.0, -12.0,	0.0, 225.0, 0.0, 1.0,	50.0, 50.0,		0,"шокер", "ЋOKEP"},
	//70
	{28, 2215,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"курицу", "KYP…‰A (ѓEЏCKA•)"},
	{28, 2216,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"курицу", "KYP…‰A (CPEѓм••)"},
	{28, 2217,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"курицу", "KYP…‰A (ЂO‡’ЋA•)"},
	{28, 2218,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"пиццу", "Њ…‰‰A (ѓEЏCKA•)"},
	{28, 2219,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"пиццу", "Њ…‰‰A (CPEѓм••)"},
	{28, 2220,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"пиццу", "Њ…‰‰A (ЂO‡’ЋA•)"},
	{28, 2214,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"бургер", "ЂYP‚EP (ѓEЏCKA•)"},
	{28, 2213,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"бургер", "ЂYP‚EP (CPEѓм••)"},
	{28, 2212,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"бургер", "ЂYP‚EP (ЂO‡’ЋA•)"},
	{28, 2354,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"салат", "CA‡AЏ (ѓEЏCKA•)"},
	//80
	{28, 2355,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"салат", "CA‡AЏ (CPEѓм••)"},
	{28, 2353,	-21.0, -61.0,	340.0, 31.0, 340.0, 1.5,65.0, 115.0,	0,"салат", "CA‡AЏ (ЂO‡’ЋA•)"},
	{28, 2221,	-34.0, -46.0,	330.0, 0.0, 90.0, 1.5,	65.0, 115.0,	0,"пончики", "ЊOмЌ…K… (ѓEЏCKA•)"},
	{28, 2223,	-34.0, -46.0,	330.0, 0.0, 90.0, 1.5,	65.0, 115.0,	0,"пончики", "ЊOмЌ…K… (CPEѓм••)"},
	{28, 2222,	-34.0, -46.0,	330.0, 0.0, 90.0, 1.5,	65.0, 115.0,	0,"пончики", "ЊOмЌ…K… (ЂO‡’ЋA•)"},

	{29, 1455,	-29.0, -11.0,	0.0, 0.0, 90.0, 1.0,	50.0, 50.0,		0,"стопку водки", "CЏOЊKA BOѓK…"},
	{29, 1455,	-25.0, -11.0,	0.0, 0.0, 270.0, 1.0,	50.0, 50.0,		0,"виски с колой", "B…CK… C KO‡O†"},
	{29, 1666,	-25.0, -8.0,	0.0, 0.0, 90.0, 1.0,	50.0, 45.0,		0,"стопку виски", "CЏOЊKA B…CK…"},
	{29, 1667,	-25.0, -8.0,	0.0, 0.0, 90.0, 1.0,	50.0, 45.0,		0,"бокал вина", "ЂOKA‡ B…мA"},
	{29, 1486,	-26.0, -13.0,	0.0, 45.0, 0.0, 1.0,	50.0, 50.0,		1,"бутылку вина", "ЂYЏ‘‡KA B…мA"},
	//90
	{29, 1543,	-14.0, -18.0,	0.0, 45.0, 0.0, 1.0,	50.0, 50.0,		1,"бутылку пива", "ЂYЏ‘‡KA Њ…BA"},
	{29, 1546,	-28.0, -9.0,	0.0, 0.0, 90.0, 1.0,	50.0, 45.0,		1,"банку газировки", "‚A€…POBKA"},

	{101,18891,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18892,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18893,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18894,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18895,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18896,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18897,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18898,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	//100
	{101,18899,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18900,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18901,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18902,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18903,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18904,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{101,18905,	-44.0, -22.0,	50.0, 180.0, 0.0, 1.0,	80.0, 70.0,		1,"бандану", "ЂAмѓAмA"},
	{102,18906,	-30.0, -14.0,	0.0, 0.0, 0.0, 1.0,		55.0, 55.0,		1,"бандану", "ЂAмѓAмA"},
	{102,18907,	-30.0, -14.0,	0.0, 0.0, 0.0, 1.0,		55.0, 55.0,		1,"бандану", "ЂAмѓAмA"},
	{102,18908,	-30.0, -14.0,	0.0, 0.0, 0.0, 1.0,		55.0, 55.0,		1,"бандану", "ЂAмѓAмA"},
	//110
	{102,18909,	-30.0, -14.0,	0.0, 0.0, 0.0, 1.0,		55.0, 55.0,		1,"бандану", "ЂAмѓAмA"},
	{102,18910,	-30.0, -14.0,	0.0, 0.0, 0.0, 1.0,		55.0, 55.0,		1,"бандану", "ЂAмѓAмA"},
	{103,18911,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	{103,18912,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	{103,18913,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	{103,18914,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	{103,18915,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	{103,18916,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	{103,18917,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	{103,18918,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	//120
	{103,18919,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	{103,18920,	-30.0, -32.0,	65.0, 180.0, 0.0, 1.0,	80.0, 65.0,		1,"платок", "Њ‡AЏOK"},
	{104,18926,	-40.0, -18.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{104,18927,	-40.0, -18.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{104,18928,	-40.0, -18.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{104,18929,	-40.0, -18.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{104,18930,	-40.0, -18.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{104,18931,	-40.0, -18.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{104,18932,	-40.0, -18.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{104,18933,	-40.0, -18.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	//130
	{105,18939,	-40.0, -4.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{105,18940,	-40.0, -4.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{105,18941,	-40.0, -4.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{105,18942,	-40.0, -4.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{105,18943,	-40.0, -4.0,	270.0, 270.0, 0.0, 1.0,	75.0, 55.0,		1,"кепку", "KEЊKA"},
	{106,18955,	-49.0, -18.0,	0.0, 0.0, 0.0, 1.0,	60.0, 60.0,			1,"кепку", "KEЊKA"},
	{106,18956,	-49.0, -18.0,	0.0, 0.0, 0.0, 1.0,	60.0, 60.0,			1,"кепку", "KEЊKA"},
	{106,18957,	-49.0, -18.0,	0.0, 0.0, 0.0, 1.0,	60.0, 60.0,			1,"кепку", "KEЊKA"},
	{106,18958,	-49.0, -18.0,	0.0, 0.0, 0.0, 1.0,	60.0, 60.0,			1,"кепку", "KEЊKA"},
	{106,18959,	-49.0, -18.0,	0.0, 0.0, 0.0, 1.0,	60.0, 60.0,			1,"кепку", "KEЊKA"},
	//140
	{110,18959,	-31.0, -22.0,	0.0, 35.0, 180.0, 1.0,	60.0, 65.0,		1,"кепку", "KEЊKA ѓA‡’мOЂO†Љ…KA"},
	{111,18954,	-35.0, -22.0,	0.0, 270.0, 0.0, 1.0,70.0, 70.0,		1,"шапку", "ЋAЊKA"},
	{114,18964,	-36.0, -19.0,	0.0, 0.0, 0.0, 1.0,60.0, 65.0,			1,"шапку", "ЋAЊKA"},
	{114,18966,	-36.0, -19.0,	0.0, 0.0, 0.0, 1.0,60.0, 65.0,			1,"шапку", "ЋAЊKA"},
	{113,18966,	-31.0, -19.0,	0.0, 0.0, 0.0, 1.0,60.0, 65.0,			1,"панаму", "ЊAмA–A"},
	{107,18970,	-33.0, -20.0,	0.0, 0.0, 270.0, 1.0,65.0, 65.0,		1,"шляпу", "Ћ‡•ЊA"},
	{107,18971,	-33.0, -20.0,	0.0, 0.0, 270.0, 1.0,65.0, 65.0,		1,"шляпу", "Ћ‡•ЊA"},
	{107,18972,	-33.0, -20.0,	0.0, 0.0, 270.0, 1.0,65.0, 65.0,		1,"шляпу", "Ћ‡•ЊA"},
	{107,18973,	-33.0, -20.0,	0.0, 0.0, 270.0, 1.0,65.0, 65.0,		1,"шляпу", "Ћ‡•ЊA"},
	{112,18973,	-33.0, -22.0,	0.0, 0.0, 0.0, 1.0,50.0, 70.0,			1,"шапку", "ЋAЊKA"},
	//150
	{108,19006,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19007,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19008,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19009,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19010,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19011,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19012,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19013,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19014,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19015,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	//160
	{108,19016,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19017,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19018,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19019,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19020,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19021,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19022,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19023,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19024,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19025,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	//170
	{108,19026,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19027,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19028,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19029,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19030,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19031,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19032,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19033,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19034,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	{108,19035,	-35.0, -30.0,	340.0, 0.0, 90.0, 1.0,70.0, 85.0,		1,"очки", "OЌK…"},
	//180
	{109,19039,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19040,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19041,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19042,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19043,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19044,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19045,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19046,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19047,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19048,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	//190
	{109,19049,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19050,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19051,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19052,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"},
	{109,19053,	-42.0, -30.0,	320.0, 0.0, 10.0, 1.0,85.0, 85.0,		1,"часы", "ЌAC‘"}

};

new Float:ArmourPos[300][9] =
{
	{0.105000, 0.046999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000}, 
	{0.092000, 0.035000, -0.011000, 0.000000, -3.899997, -5.799996, 1.000000, 1.103003, 1.102998},
	{0.095000, 0.035000, 0.008000, 0.000000, 0.000003, -4.799996, 1.000000, 1.225003, 1.141999}, 
	{0.098000, 0.023000, 0.008000, 0.000000, 0.000003, -4.799996, 1.000000, 1.074003, 1.141999}, 
	{0.095000, 0.033000, 0.008000, 0.000000, -2.599996, 4.800005, 1.000000, 1.109004, 1.051999}, 
	{0.125000, 0.033000, 0.008000, 0.000000, -2.599996, 5.300004, 1.000000, 1.543004, 1.521000}, 
	{0.099000, 0.033000, 0.008000, 0.000000, -2.599996, -2.199992, 1.000000, 1.242004, 1.086999}, 
	{0.076000, 0.051999, 0.008000, 0.000000, -2.599996, -0.699992, 1.000000, 1.184005, 1.086999}, 
	{0.076000, 0.051999, 0.008000, 0.000000, -2.599996, -0.699992, 1.000000, 1.184005, 1.086999}, 
	{0.111000, 0.035999, 0.008000, 0.000000, -2.599996, -0.699992, 1.000000, 1.184005, 1.015999}, 
	{0.017000, 0.055999, 0.008000, 0.000000, -2.599996, -0.699992, 1.000000, 1.376004, 1.008999}, 
	{0.113000, 0.040999, 0.008000, 0.000000, -2.599996, -0.699992, 1.000000, 1.051003, 0.923999}, 
	{0.094000, 0.040999, 0.008000, 0.000000, -2.599996, -0.699992, 1.000000, 1.051003, 0.923999}, 
	{0.149000, 0.055999, 0.008000, 0.000000, -2.599996, -0.699992, 1.000000, 1.093003, 0.923999}, 
	{0.085000, 0.055999, 0.008000, 0.000000, -2.599996, -0.699992, 1.000000, 1.133003, 0.988998}, 
	{0.085000, 0.055999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.265003, 1.032998}, 
	{0.116000, 0.041999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.350003, 1.137999}, 
	{0.091000, 0.046999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.105003, 1.137999}, 
	{0.056000, 0.046999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.105003, 1.137999}, 
	{0.128000, 0.033999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.105003, 1.137999}, 
	{0.091000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.105003, 1.137999}, 
	{0.111000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.105000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.080000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.080000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.080000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.080000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.080000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.080000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.040999, 0.050999, -0.001000, 0.000000, 0.000000, 0.000000, 1.129000, 1.468999, 1.221999}, 
	{0.080000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.024000, 0.048999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.253003, 1.137999}, 
	{0.076000, 0.037999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.021003, 0.990998}, 
	{0.060000, 0.037999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.021003, 0.990998}, 
	{0.090000, 0.037999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.058004, 0.990998}, 
	{0.102000, 0.037999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.199004, 1.112998}, 
	{0.080000, 0.051999, 0.000000, 0.000000, -2.599996, -0.699992, 1.000000, 1.199004, 1.034998}, 
	{0.080000, 0.051999, 0.001999, 0.000000, -2.599996, -0.699992, 1.000000, 1.292004, 1.111998}, 
	{0.089000, 0.040999, 0.001999, 0.000000, -2.599996, -0.699992, 0.809000, 1.086003, 0.899997}, 
	{0.068000, 0.052999, 0.001999, 0.000000, -2.599996, -0.699992, 0.809000, 1.265002, 0.997997}, 
	{0.133000, 0.052999, 0.001999, 0.000000, -2.599996, -0.699992, 0.870000, 1.007002, 0.997997}, 
	{0.181000, 0.057999, 0.001999, 0.000000, -2.599996, -0.699992, 0.943999, 1.007002, 0.922998}, 
	{0.105000, 0.057999, 0.001999, 0.000000, -2.599996, -0.699992, 0.943999, 1.210002, 1.073998}, 
	{0.056000, 0.057999, 0.001999, 0.000000, -2.599996, -0.699992, 0.943999, 1.210002, 0.893998}, 
	{0.056000, 0.057999, 0.001999, 0.000000, -2.599996, -0.699992, 0.943999, 1.210002, 0.893998}, 
	{0.092000, 0.057999, 0.001999, 0.000000, -2.599996, -0.699992, 0.943999, 1.210002, 0.893998}, 
	{0.071000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.030999, 1.220003, 1.148998}, 
	{0.071000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.030999, 1.220003, 1.148998}, 
	{0.071000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.030999, 1.220003, 1.148998}, 
	{0.083000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.030999, 1.101003, 0.948998}, 
	{0.078000, 0.065999, 0.004999, 0.000000, -2.599996, -0.699992, 1.129999, 1.373004, 1.312999}, 
	{0.089000, 0.033999, 0.004999, 0.000000, -2.599996, -0.699992, 1.129999, 1.121003, 0.975999}, 
	{0.089000, 0.033999, 0.004999, 0.000000, -2.599996, -0.699992, 1.129999, 1.121003, 0.975999}, 
	{0.043000, 0.033999, 0.004999, 0.000000, -2.599996, -0.699992, 0.963000, 1.121003, 0.975999},
	{0.043000, 0.033999, 0.004999, 0.000000, -2.599996, -0.699992, 0.963000, 1.121003, 0.975999}, 
	{0.098000, 0.045000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.134000, 0.807000}, 
	{0.123000, 0.040999, 0.004999, 0.000000, -2.599996, -0.699992, 0.963000, 1.021003, 0.915999}, 
	{0.112000, 0.040999, 0.004999, 0.000000, -2.599996, -0.699992, 1.056000, 1.133003, 0.915999}, 
	{0.028000, 0.060999, 0.004999, 0.000000, -2.599996, -0.699992, 1.056000, 1.133003, 0.915999}, 
	{0.048000, 0.033999, 0.004999, 0.000000, -2.599996, -0.699992, 1.115000, 1.183004, 0.959998}, 
	{0.074000, 0.033999, 0.004999, 0.000000, -2.599996, -0.699992, 1.115000, 1.264004, 1.074998}, 
	{0.059000, 0.055999, 0.004999, 0.000000, -2.599996, -0.699992, 1.115000, 1.157004, 1.074998}, 
	{0.072000, 0.040999, 0.004999, 0.000000, -2.599996, -0.699992, 1.115000, 1.214004, 1.108999}, 
	{0.151000, 0.077999, 0.004999, 0.000000, -2.599996, -0.699992, 0.975000, 1.173004, 0.840999}, 
	{0.115000, 0.056999, 0.004999, 0.000000, -2.599996, -0.699992, 0.975000, 1.114004, 0.840999}, 
	{0.166000, 0.056999, 0.004999, 0.000000, -2.599996, -0.699992, 0.975000, 1.114004, 0.840999}, 
	{0.092000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.299004, 1.149000}, 
	{0.077000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.299004, 1.149000}, 
	{0.077000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.111004, 1.059999}, 
	{0.113000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 0.968004, 0.954000}, 
	{0.069000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.140004, 1.134999}, 
	{0.069000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.140004, 1.134999}, 
	{0.069000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.140004, 1.134999}, 
	{0.069000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.140004, 1.134999}, 
	{0.090000, 0.043999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.140004, 1.054999}, 
	{0.131000, 0.066999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.158004, 0.880999}, 
	{0.070000, 0.062999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.101003, 0.880999}, 
	{0.035000, 0.062999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.391002, 1.010999}, 
	{0.102000, 0.046999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.228002, 1.039000}, 
	{0.086000, 0.078999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.367001, 1.039000}, 
	{0.076000, 0.031999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.079002, 1.039000}, 
	{0.094000, 0.047999, 0.004999, 0.000000, -2.599996, -0.699992, 1.058000, 1.094002, 1.039000}, 
	{0.065000, 0.065999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.216002, 1.039000}, 
	{0.065000, 0.065999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.216002, 1.039000}, 
	{0.065000, 0.065999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.216002, 1.039000}, 
	{0.105000, 0.079999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.216002, 1.039000}, 
	{0.056000, 0.036999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.258003, 1.131000}, 
	{0.100000, 0.076999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.258003, 0.907999}, 
	{0.018000, 0.051000, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.114003, 0.907999}, 
	{0.005000, 0.074000, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.473003, 0.982000}, 
	{0.085000, 0.083999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.191003, 0.982000}, 
	{0.085000, 0.050999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.060003, 0.982000}, 
	{0.090000, 0.083000, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.133003, 0.982000}, 
	{0.098000, 0.051000, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 0.998003, 0.982000}, 
	{0.026000, 0.053000, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.021003, 0.924000}, 
	{0.026000, 0.076000, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.101003, 0.970000}, 
	{0.100000, 0.043000, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.166003, 0.970000}, 
	{0.036000, 0.061999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.203003, 0.970000}, 
	{0.054000, 0.061999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.203003, 0.970000}, 
	{0.098000, 0.033999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.072004, 0.970000}, 
	{0.086000, 0.055999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.174004, 0.970000}, 
	{0.086000, 0.045999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.247004, 1.157000}, 
	{0.048000, 0.051999, 0.004999, 0.000000, -2.599996, -0.699992, 1.099000, 1.285004, 1.191000}, 
	{0.091000, 0.050999, 0.004999, 0.000000, -2.599996, 9.200006, 1.099000, 1.527005, 1.466999}, 
	{0.036000, 0.050999, 0.004999, 0.000000, -2.599996, 9.200006, 1.099000, 1.332004, 1.062999}, 
	{0.098000, 0.050999, 0.004999, 0.000000, -2.599996, 9.200006, 1.099000, 1.620004, 1.354999}, 
	{0.042000, 0.055999, 0.004999, 0.000000, -2.599996, 5.200007, 1.099000, 1.365003, 1.218999}, 
	{0.049000, 0.043000, 0.004999, 0.000000, -2.599996, 5.200007, 1.099000, 1.299003, 1.206999}, 
	{0.064000, 0.043000, 0.004999, 0.000000, -2.599996, 5.200007, 1.099000, 1.126003, 0.925998}, 
	{0.043000, 0.043000, 0.004999, 0.000000, -2.599996, 5.200007, 1.099000, 1.259003, 1.132999}, 
	{0.049000, 0.055999, 0.004999, 0.000000, -2.599996, 5.200007, 1.099000, 1.270003, 1.132999}, 
	{0.077000, 0.075999, 0.004999, 0.000000, -2.599996, 5.200007, 1.099000, 1.352003, 1.132999}, 
	{0.058000, 0.045000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.185000, 1.107000}, 
	{0.078000, 0.044000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.373000, 1.107000}, 
	{0.061000, 0.044000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.141999, 1.107000}, 
	{0.050000, 0.044000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.240000, 1.151000}, 
	{0.057000, 0.044000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.431000, 1.167001}, 
	{0.055000, 0.044000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.176000, 1.054001}, 
	{0.055000, 0.045000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.248000, 1.091001}, 
	{0.072000, 0.045000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.080000, 1.091001}, 
	{0.052000, 0.045000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.206000, 1.108001}, 
	{0.066000, 0.045000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.239000, 1.106001}, 
	{0.072000, 0.045000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.151000, 0.975001}, 
	{0.048000, 0.057000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.278000, 1.139001}, 
	{0.067000, 0.057000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.204000, 1.131001}, 
	{0.075000, 0.063000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.251000, 1.080001}, 
	{0.063000, 0.037000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.135000, 1.080001}, 
	{0.063000, 0.061000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.487000, 1.184001}, 
	{0.063000, 0.061000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.050000, 1.036001}, 
	{0.000000, 0.044000, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 0.957000, 0.903001}, 
	{0.021000, 0.065999, 0.000000, 0.000000, 0.000000, 0.000000, 1.078999, 1.533000, 1.045001}, 
	{0.103000, 0.065999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.240000, 1.006001}, 
	{0.022000, 0.030999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 0.952999, 0.931001}, 
	{0.081000, 0.036000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.088999, 0.962001}, 
	{0.017000, 0.043999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.034999, 0.962001}, 
	{0.070000, 0.043999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.226999, 1.150001}, 
	{0.009000, 0.043999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 0.973999, 0.913001}, 
	{0.068000, 0.043999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 0.973999, 0.913001}, 
	{0.133000, 0.064999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.268000, 0.913001}, 
	{0.133000, 0.070999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.268000, 0.913001}, 
	{0.127000, 0.093000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.355000, 0.960001}, 
	{0.096000, 0.043000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.073000, 0.860001}, 
	{0.077000, 0.043000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.303000, 1.142001}, 
	{0.077000, 0.048000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.356000, 1.274001}, 
	{0.054000, 0.048000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.356000, 1.225001}, 
	{0.123000, 0.080000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.314000, 0.870001}, 
	{0.123000, 0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.150000, 0.895001}, 
	{0.076000, 0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.150000, 1.069001}, 
	{0.062000, 0.074000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.056000, 0.976001}, 
	{0.092000, 0.043000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.658000, 1.408001}, 
	{0.062000, 0.062000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.127000, 0.909001}, 
	{0.062000, 0.088000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.447000, 1.214001}, 
	{0.062000, 0.077000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.265000, 0.911001}, 
	{0.085000, 0.055000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.118000, 1.027001}, 
	{0.067000, 0.034000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.180000, 1.027001}, 
	{0.075000, 0.036000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.269000, 1.195001}, 
	{0.074000, 0.036000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.181000, 1.083001}, 
	{0.088000, 0.071000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.288000, 0.980001}, 
	{0.094000, 0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.072001, 0.980001}, 
	{0.094000, 0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.072001, 0.980001}, 
	{0.065000, 0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.072001, 0.932001}, 
	{0.098000, 0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.072001, 0.932001}, 
	{0.090000, 0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.072001, 0.932001}, 
	{0.118000, 0.063000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.226001, 1.050001}, 
	{0.118000, 0.063000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.266001, 1.111001}, 
	{0.021000, 0.053999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.277001, 1.040001}, 
	{0.021000, 0.053999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.200001, 1.040001}, 
	{0.081000, 0.053999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.200001, 1.040001}, 
	{0.081000, 0.053999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.200001, 1.040001}, 
	{0.085000, 0.052000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.050001, 0.922001}, 
	{0.085000, 0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.234001, 1.062002}, 
	{0.061000, 0.042000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.234001, 1.062002}, 
	{0.120000, 0.035000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.059001, 0.891002}, 
	{0.068000, 0.056999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.224000, 1.088002}, 
	{0.068000, 0.056999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.224000, 1.088002}, 
	{0.068000, 0.056999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.224000, 1.088002}, 
	{0.073000, 0.047000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.360000, 1.166002}, 
	{0.073000, 0.047000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.360000, 1.166002}, 
	{0.102000, 0.074999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.214000, 0.970001}, 
	{0.111000, 0.053999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.092000, 0.996001}, 
	{0.090000, 0.035000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.339000, 0.996001}, 
	{0.090000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.082001, 0.996001}, 
	{0.090000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.207001, 1.149002}, 
	{0.068000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.090000, 1.094001}, 
	{0.075000, 0.043000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.180001, 1.094001}, 
	{0.075000, 0.043000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.132001, 1.094001}, 
	{0.075000, 0.043000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.132001, 1.094001}, 
	{0.075000, 0.043000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.132001, 1.094001}, 
	{0.075000, 0.043000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.132001, 1.094001}, 
	{0.075000, 0.043000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.132001, 1.094001}, 
	{0.120000, 0.062000, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.132001, 0.995002}, 
	{0.131000, 0.049999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.060001, 0.901002}, 
	{0.141000, 0.049999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.125001, 0.901002}, 
	{0.141000, 0.049999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.125001, 0.901002}, 
	{0.123000, 0.049999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.125001, 0.901002}, 
	{0.123000, 0.067999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.125001, 0.901002}, 
	{0.010000, 0.053999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 0.996001, 0.901002}, 
	{0.033000, 0.072999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.432001, 1.074002}, 
	{0.115000, 0.076999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.119001, 0.910002}, 
	{0.036000, 0.087999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.417001, 1.119002}, 
	{0.082000, 0.043999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.154001, 1.002002}, 
	{0.089000, 0.069999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.310001, 1.002002}, 
	{0.096000, 0.051999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.063001, 1.002002}, 
	{0.083000, 0.051999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.147001, 1.092002}, 
	{0.075000, 0.051999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.147001, 1.092002}, 
	{0.106000, 0.065999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.550001, 1.236002}, 
	{0.075000, 0.035999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.095001, 0.959003}, 
	{0.075000, 0.035999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.095001, 0.959003}, 
	{0.075000, 0.035999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.095001, 1.031003}, 
	{0.035000, 0.035999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 0.963001, 0.859003}, 
	{0.035000, 0.035999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.034001, 0.900003}, 
	{0.113000, 0.051999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.034001, 0.900003}, 
	{0.001000, 0.051999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.034001, 0.900003}, 
	{0.078000, 0.061999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.313001, 1.143002}, 
	{0.102000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.113001, 0.877002}, 
	{0.102000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.113001, 0.921002}, 
	{0.090000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 0.969001, 0.921002}, 
	{0.058000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.184001, 1.020002}, 
	{0.040000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.394001, 1.061002}, 
	{0.086000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.076001, 0.875001}, 
	{0.086000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.224001, 1.147001}, 
	{0.086000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.189002, 1.059002}, 
	{0.061000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.127001, 1.036002}, 
	{0.071000, 0.047999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.256001, 1.090002}, 
	{0.078000, 0.060999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.022002, 0.866002}, 
	{0.078000, 0.060999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.022002, 0.866002}, 
	{0.124000, 0.052999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.057002, 0.866002}, 
	{0.124000, 0.037999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.251002, 0.977002}, 
	{0.070000, 0.058999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.308002, 1.038002}, 
	{0.014000, 0.066999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.160001, 1.005002}, 
	{0.055000, 0.052999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.013001, 0.889002}, 
	{0.025000, 0.052999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.113001, 0.977002}, 
	{0.045000, 0.064999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.442002, 1.084002}, 
	{0.103000, 0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.088001, 0.858002}, 
	{0.030000, 0.053999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 0.987001, 0.858002}, 
	{0.040000, 0.036999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.066001, 0.858002}, 
	{0.040000, 0.072999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.066001, 0.925002}, 
	{0.084000, 0.073999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.301001, 0.925002}, 
	{0.108000, 0.084999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.360001, 0.925002}, 
	{0.115000, 0.040999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.205001, 1.079003}, 
	{0.066000, 0.040999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.110001, 0.952003}, 
	{0.094000, 0.040999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.405001, 1.307003}, 
	{0.094000, 0.040999, 0.000000, 0.000000, 0.000000, 0.000000, 1.023999, 1.455001, 1.171003}, 
	{0.121000, 0.040999, 0.000000, 0.000000, 0.000000, 0.000000, 0.923999, 1.194001, 0.915003}, 
	{0.137000, 0.040999, 0.000000, 0.000000, 0.000000, 0.000000, 0.923999, 1.323001, 1.014003}, 
	{0.083000, 0.069999, 0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.555002, 1.133003}, 
	{0.102000, 0.092999, 0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.368001, 0.978003}, 
	{0.078000, 0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.150002, 1.009003}, 
	{0.078000, 0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.150002, 1.009003}, 
	{0.087000, 0.044999, 0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.364002, 1.210002}, 
	{0.087000, 0.033999, 0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.158002, 1.081002}, 
	{0.132000, 0.065999, 0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.289002, 0.919002}, 
	{0.079000, 0.049999, 0.017000, 0.000000, 0.000000, 0.000000, 1.057000, 1.085002, 0.972001}, 
	{0.032000, 0.038999, 0.017000, 0.000000, 0.000000, 0.000000, 1.057000, 0.951001, 0.896001}, 
	{0.093000, 0.054999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.156001, 0.896001}, 
	{0.054000, 0.060999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.156001, 1.006001}, 
	{0.123000, 0.079999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.305001, 0.894001}, 
	{0.104000, 0.068999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.305001, 0.894001}, 
	{0.104000, 0.054999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.481001, 1.185001}, 
	{0.067000, 0.054999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.481001, 1.290001}, 
	{0.079000, 0.042999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.189001, 1.012001}, 
	{-0.001999, 0.042999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 0.983000, 1.012001}, 
	{0.054000, 0.057999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.295000, 1.107001}, 
	{0.088000, 0.051999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.091000, 0.875001}, 
	{0.088000, 0.051999, -0.000000, 0.000000, 0.000000, 0.000000, 1.057000, 1.556001, 1.302001}, 
	{0.071999, 0.027000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.292000, 1.071999}, 
	{0.036999, 0.037000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.292000, 1.071999}, 
	{0.281999, 0.036000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.144000, 1.071999}, 
	{0.080000, 0.036000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.051000, 1.079999}, 
	{0.080000, 0.027000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.543000, 1.316999}, 
	{0.092000, 0.049999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.187000, 1.111999}, 
	{0.073000, 0.049999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.270000, 1.189999}, 
	{0.073000, 0.051999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.317000, 1.263999}, 
	{0.050000, 0.051999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.110000, 1.142999}, 
	{0.099000, 0.042999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.221000, 1.142999}, 
	{0.099000, 0.042999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.221000, 1.142999}, 
	{0.099000, 0.042999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.221000, 1.142999}, 
	{0.082000, 0.057000, 0.016999, 0.000000, 0.000000, 0.000000, 1.198000, 1.564000, 1.356999}, 
	{0.082000, 0.057000, 0.016999, 0.000000, 0.000000, 0.000000, 1.198000, 1.564000, 1.356999}, 
	{0.082000, 0.057000, 0.016999, 0.000000, 0.000000, 0.000000, 1.198000, 1.564000, 1.356999}, 
	{0.040000, 0.038000, 0.002999, 0.000000, 0.000000, 0.000000, 1.198000, 1.138000, 1.044999}, 
	{0.040000, 0.038000, 0.002999, 0.000000, 0.000000, 0.000000, 1.198000, 1.138000, 1.044999}, 
	{0.040000, 0.038000, 0.002999, 0.000000, 0.000000, 0.000000, 1.198000, 1.138000, 1.044999}, 
	{0.040000, 0.038000, 0.002999, 0.000000, 0.000000, 0.000000, 1.198000, 1.138000, 1.044999}, 
	{0.045000, 0.055000, 0.002999, 0.000000, 0.000000, 0.000000, 1.129999, 1.192000, 1.044999}, 
	{0.060000, 0.055000, 0.002999, 0.000000, 0.000000, 0.000000, 1.129999, 1.192000, 1.044999}, 
	{0.060000, 0.040000, 0.002999, 0.000000, 0.000000, 0.000000, 1.129999, 1.243000, 1.210000}, 
	{0.060000, 0.057000, 0.002999, 0.000000, 0.000000, 0.000000, 1.129999, 1.059000, 1.016000}, 
	{0.060000, 0.040000, 0.002999, 0.000000, 0.000000, 0.000000, 1.129999, 1.123000, 1.089000}, 
	{0.034000, 0.040000, -0.003000, 0.000000, 0.000000, 0.000000, 1.129999, 1.164000, 1.142000}, 
	{0.034000, 0.040000, -0.003000, 0.000000, 0.000000, 0.000000, 1.129999, 1.164000, 1.142000}, 
	{0.034000, 0.040000, 0.001999, 0.000000, 0.000000, 0.000000, 1.129999, 1.060001, 1.116000}, 
	{0.074000, 0.040000, -0.002000, 0.000000, 0.000000, 0.000000, 1.129999, 1.052001, 0.909000}, 
	{0.085000, 0.040000, -0.002000, 0.000000, 0.000000, 0.000000, 1.129999, 1.086001, 0.909000}, 
	{0.072000, 0.040000, -0.002000, 0.000000, 0.000000, 0.000000, 1.129999, 1.159001, 0.996000}, 
	{-0.003999, 0.040000, -0.002000, 0.000000, 0.000000, 0.000000, 1.129999, 1.254001, 1.079000}, 
	{-0.003999, 0.040000, 0.002999, 0.000000, 0.000000, 0.000000, 1.129999, 1.254001, 1.079000}, 
	{0.039000, 0.040000, 0.002999, 0.000000, 0.000000, 0.000000, 1.129999, 1.254001, 1.079000}, 
	{0.066000, 0.064000, 0.002999, 0.000000, 0.000000, 0.000000, 1.129999, 1.154000, 0.919000}, 
	{0.100000, 0.035000, 0.002999, 0.000000, 0.000000, 0.000000, 1.129999, 1.248000, 1.187000}
};

enum InvInfo
{
	inItems[25],
	Float:inState[25],
	inValue[25],
}

new iData[MAX_PLAYERS][InvInfo];

enum atInfo
{
	at_id[5],
	atModel[5],
	Float:atState[5],

	at_index[5],
	at_bone[5],
	Float:at_x[5],
	Float:at_y[5],
	Float:at_z[5],
	Float:at_rx[5],
	Float:at_ry[5],
	Float:at_rz[5],
	Float:at_sx[5],
	Float:at_sy[5],
	Float:at_sz[5]
}
new atData[MAX_PLAYERS][atInfo];


main() 
{ 

}

public OnPlayerCommandText(playerid, cmdtext[])
{
	#if defined LOGGING
		printf("OPCT: %d | %s",playerid, cmdtext);
	#endif
	if(!strlen(cmdtext)) return BanEx(playerid, "Null command");
	if(GetPVarInt(playerid,"FLOODS") >= GetTime) return ErrorMes(playerid,"Ты используешь команды слишком часто.");
    if(!GetPVarInt(playerid,"Login"))return ErrorMes(playerid,"Для uспользованuя команды необходuмо авторuзоваться.");

    new pos, funcname[32];
    while (cmdtext[++pos] > ' ') funcname[pos-1] = tolower(cmdtext[pos]);
	if(funcname[0] >= 'а' && funcname[0] <= 'я')
	{
		if(!strcmp("вопрос",funcname,true)) format(funcname, sizeof(funcname), "cmd_ask");
		if(!strcmp("жалоба",funcname,true)) format(funcname, sizeof(funcname), "cmd_report");
		
		if(!strcmp("ответить",funcname,true)) format(funcname, sizeof(funcname), "cmd_pickup");
		if(!strcmp("сбросить",funcname,true)) format(funcname, sizeof(funcname), "cmd_hangup");

	}
	else format(funcname, sizeof(funcname), "cmd_%s", funcname);
	if(funcidx(funcname) == -1) return SendClientMessage(playerid,-1,"Данная команда отсутствует на сервере, список доступных команд: {00CC00}\"/kpk\"{FFFFFF}.");

	while (cmdtext[pos] == ' ') pos ++;
	if (!cmdtext[pos]) CallLocalFunction(funcname, "is", playerid,"\1");
	else CallLocalFunction(funcname, "is", playerid, cmdtext[pos]);
	return 1;
}

//******************************************************************************
//==================================[Стандартные паблики]=======================
//******************************************************************************
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat)
{
	#if defined LOGGING
		printf("OUVU: %d | %d | %s",vehicleid, playerid, passenger_seat);
	#endif
	new Float:Distance = GetVehicleDistanceFromPoint(vehicleid, VehInfo[vehicleid][vPos][0], VehInfo[vehicleid][vPos][1], VehInfo[vehicleid][vPos][2]);
	if(passenger_seat)
	{
		if(Distance > 25.0 && PlayerInfo[playerid][pVehID] == vehicleid)
		{
			new Float:fPos[3];
			GetVehiclePos(vehicleid,fPos[0],fPos[1],fPos[2]);
			if(fPos[2] > PlayerInfo[playerid][pPos][2])
			{
				if(Warnings[playerid][CAR_SHOT] > MAX_CHECKS)
				{
					SetVehicleToRespawn(vehicleid);
					FP_Kick(playerid,"CarShot");
				}
				else GetVehiclePos(vehicleid,VehInfo[vehicleid][vPos][0],VehInfo[vehicleid][vPos][1],VehInfo[vehicleid][vPos][2]);	
				Warnings[playerid][CAR_SHOT]++;
			}	
		}			
		return 1;
	}
	if(Distance < 5.0) GetVehiclePos(vehicleid,VehInfo[vehicleid][vPos][0],VehInfo[vehicleid][vPos][1],VehInfo[vehicleid][vPos][2]);
	else if(Distance > 15.0 && !PlayerInfo[playerid][pSpeed])
	{
		new Float:fPos[4];
		fPos[0] = PlayerInfo[playerid][pPos][0];
		fPos[1] = PlayerInfo[playerid][pPos][1];
		fPos[2] = PlayerInfo[playerid][pPos][2];
		GetPlayerFacingAngle (playerid, fPos[3]);
		fPos[0] += (5.0 * floatsin (-fPos[3], degrees));
		fPos[1] += (5.0 * floatcos (-fPos[3], degrees));
		if(GetVehicleDistanceFromPoint(vehicleid, fPos[0], fPos[1], fPos[2]) < 3.0)
		{
			SetVehicleToRespawn(vehicleid);
			if(GetPVarInt(playerid,"VehicleUpdate") >= GetTime && GetPVarInt(playerid,"VehicleUpdateID") != vehicleid)
			{
				if(!Warnings[playerid][TP_CAR]) Report(playerid,"подозрение на телепорт Транспорта к себе.");
				else FP_Kick(playerid,"Телепорт транспорта");
				Warnings[playerid][TP_CAR]++;
			}
			SetPVarInt(playerid,"VehicleUpdate", GetTime + 10);
			SetPVarInt(playerid,"VehicleUpdateID", vehicleid);
		}
	}
	return 1;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
	#if defined LOGGING
		//printf("OPD: %d | %d | %d", playerid, killerid, reason);
	#endif
	if(!GetPVarInt(playerid,"GateCheck"))
	{
		if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
		{
		    if(IsACop(playerid))
			{
				if(checkpointid == PoliceCP[6] || checkpointid == PoliceCP[7])return  DText(playerid);
				else if(checkpointid == PoliceCP[16] || checkpointid == PoliceCP[17])return  DText(playerid);
				else if(checkpointid == PoliceCP[26] || checkpointid == PoliceCP[27])return  DText(playerid);
				else if(checkpointid == PoliceCP[8] || checkpointid == PoliceCP[9])return  DText(playerid);
			}
 			else if((checkpointid == ArmaCP[12] || checkpointid == ArmaCP[13]) && (TeamInfo[playerid][tID] >= DOKI && TeamInfo[playerid][tID] <= ZONE51))return DText(playerid);
		}
		else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    if(checkpointid >= PayCP[0] && checkpointid <= PayCP[8])
			{
				new Cash = floatround((1000-VehInfo[PlayerInfo[playerid][pVehID]][vHealth])*5/7, floatround_round);
				if(PlayerInfo[playerid][pMoney] < Cash) return ErrorMes(playerid, "Недостаточно средств на банковской карте.");

				FP_SetVehicleHealth(PlayerInfo[playerid][pVehID],1000);
				if(Cash)
				{
					if(PremiumInfo[playerid][Level] >= 3) return SendClientMessage(playerid,COLOR_YELLOW,"Для VIP с 3 уровня ремонт бесплатный.");
					new message[48];
					format(message,sizeof(message),"Счёт за починку траспорта составил $%d.", Cash);
					SendClientMessage(playerid,COLOR_YELLOW,message);
					FP_GivePlayerMoney(playerid, - Cash);
					MoneyToBiznes(playerid,Cash);	
				}
			}
		}
		if(TeamInfo[playerid][tID] == MEDIC)
		{
			if(checkpointid == MedicCP[0] || checkpointid == MedicCP[1] || checkpointid == MedicCP[2] || checkpointid == MedicCP[3] ||
		    checkpointid == MedicCP[4] || checkpointid == MedicCP[5] || checkpointid == MedicCP[6] || checkpointid == MedicCP[7] ||
			checkpointid == MedicCP[8] || checkpointid == MedicCP[9])return SText(playerid);
		}
	    if((checkpointid == SchoolCP[0] || checkpointid == SchoolCP[1]) && GetPVarInt(playerid,"TakingLesson"))return SText(playerid);

		if((checkpointid == FbiCP[0] || checkpointid == FbiCP[1]) && TeamInfo[playerid][tID] == FBI )return SText(playerid);


        if(checkpointid >= PostCP[0] && checkpointid <= PostCP[9])return SText(playerid);

        if(IsACop(playerid))
		{
			if(checkpointid == PoliceCP[0] || checkpointid == PoliceCP[1] || checkpointid == PoliceCP[2] || checkpointid == PoliceCP[3])return SText(playerid);
			else if(checkpointid == PoliceCP[4] || checkpointid == PoliceCP[5])return GText(playerid);

		    else if(checkpointid == PoliceCP[20] || checkpointid == PoliceCP[21])return SText(playerid);
			else if(checkpointid == PoliceCP[22] || checkpointid == PoliceCP[23] || checkpointid == PoliceCP[24] || checkpointid == PoliceCP[25])return GText(playerid);

            if(checkpointid == PoliceCP[14] || checkpointid == PoliceCP[15]) return GText(playerid);
			else if(checkpointid == PoliceCP[10] || checkpointid == PoliceCP[11] || checkpointid == PoliceCP[12] || checkpointid == PoliceCP[13])return SText(playerid);

		    else if(checkpointid == PoliceCP[18] || checkpointid == PoliceCP[19])return GText(playerid);
	    }
		if(TeamInfo[playerid][tID] >= DOKI || TeamInfo[playerid][tID] == ZONE51)
		{
	    	if(checkpointid == ArmaCP[10] || checkpointid == ArmaCP[11])return SText(playerid);
	    	else if(checkpointid >= ArmaCP[0] && checkpointid <= ArmaCP[9])return GText(playerid);
	    	
	    }
	    if(TeamInfo[playerid][tID] == TAXI)
		{
			if(checkpointid >= TAXICP[0] && checkpointid <= TAXICP[5])return SText(playerid);
	    }

	    if((checkpointid == StreetCP[0] || checkpointid == StreetCP[1]) && TeamInfo[playerid][tID] == SRACE)return GText(playerid);
 		if((checkpointid == NewsCP[0] || checkpointid == NewsCP[1]) && TeamInfo[playerid][tID] == NEWS)return GText(playerid);
	}
	if(!GetPVarInt(playerid,"KfcCheck"))
	{
	    for(new i;i<sizeof(KfcCP);i++)
	    {
			if(checkpointid == KfcCP[i])
			{
			    PlayerTextDrawShow(playerid, Helper[playerid]);
			    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВКУСИТЬ ПИЩИ"));
				else PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~VEHICLE_HORN~~w~ ЧТОБЫ ВКУСИТЬ ПИЩИ"));
			    SetPVarInt(playerid,"KfcCheck",1);
				return 1;
			}
		}
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(!GetPVarInt(playerid,"GasCheck") && GetVehicleModel(PlayerInfo[playerid][pVehID]))
		{
			if(VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mGasType])
			{
				if(VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mTank] - VehInfo[PlayerInfo[playerid][pVehID]][vGas] >= 0.25)
				{
					for(new i;i<sizeof(GasStations);i++)
					{
						if(checkpointid != GasCP[i])continue;
						PlayerTextDrawShow(playerid, Helper[playerid]);
						PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~VEHICLE_HORN~~w~ ЧТОБЫ ЗАПРАВИТЬСЯ"));
						SetPVarInt(playerid,"GasCheck",1);
						return 1;
					}
				}
			}
		}
		if(!GetPVarInt(playerid,"ArrestCheck"))
		{
			for(new i;i<sizeof(ArrestCP);i++)
			{
				if(checkpointid == ArrestCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~VEHICLE_HORN~~w~ ЧТОБЫ ПОСАДИТЬ ПРЕСТУПНИКА"));
					SetPVarInt(playerid,"ArrestCheck",1);
					return 1;
				}
			}
		}
	}
	else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		if(!GetPVarInt(playerid,"CarShopCHeck"))
		{
			for(new i;i<sizeof(CarShopCP);i++)
			{
				if(checkpointid == CarShopCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВОЙТИ В АВТОСАЛОН"));
					SetPVarInt(playerid,"CarShopCHeck",i + 1);
					return 1;
				}
			}
		}
		if(!GetPVarInt(playerid,"TeleportCheck"))
		{
			for(new i;i<sizeof(ExitCP);i++)
			{
				if(checkpointid != ExitCP[i])continue;
				PlayerTextDrawShow(playerid, Helper[playerid]);
				if(i >= 14 && i <= 16)PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЫЙТИ НА ПАРКОВКУ"));
				else if(i == 17 || i == 18)PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЫЙТИ НА КРЫШУ"));
				else PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЫЙТИ ИЗ ЗДАНИЯ"));
				SetPVarInt(playerid,"TeleportCheck",1);
				SetPVarInt(playerid,"Teleport",i);
				return 1;
			}
			for(new i;i<sizeof(EnterCP);i++)
			{
				if(checkpointid != EnterCP[i])continue;
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВОЙТИ В ЗДАНИЕ"));
				SetPVarInt(playerid,"TeleportCheck",2);
				SetPVarInt(playerid,"Teleport",i);
				return 1;
			}
			for(new i=1;i<=BIZNES;i++)
			{
				if(PlayerInfo[playerid][pWorld])
				{
					if(PlayerInfo[playerid][pWorld] == i)
					{
						for(new j; j<MAX_BIZ_INT; j++)
						{
							if(checkpointid == BIInfo[j][Checkpoint])
							{
								PlayerTextDrawShow(playerid, Helper[playerid]);
								PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЫЙТИ ИЗ ЗДАНИЯ"));
								SetPVarInt(playerid,"TeleportCheck",4);
								SetPVarInt(playerid,"Teleport",i);
								return 1;
							}
						}
					}
				}	
				else if(checkpointid == BiznesInfo[i][bCheckpoint])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВОЙТИ В ЗДАНИЕ"));
					SetPVarInt(playerid,"TeleportCheck",3);
					SetPVarInt(playerid,"Teleport",i);
					return 1;
				}
				
			}
			for(new i = 1; i <= HOUSE; i++)
			{
				if(PlayerInfo[playerid][pWorld])
				{
					if(PlayerInfo[playerid][pWorld] == i)
					{
						for(new j; j<MAX_HOUSE_INT; j++)
						{
							if(checkpointid == HIInfo[j][Checkpoint])
							{
								PlayerTextDrawShow(playerid, Helper[playerid]);
								PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЫЙТИ ИЗ ДОМА"));
								SetPVarInt(playerid,"TeleportCheck",6);
								SetPVarInt(playerid,"Teleport",i);
								return 1;
							}
						}
					}
				}	
				else if(checkpointid == HouseInfo[i][hCheckpoint])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВОЙТИ В ДОМ"));
					SetPVarInt(playerid,"TeleportCheck",5);
					SetPVarInt(playerid,"Teleport",i);
					return 1;
				}
				
			}
		}
		if(!GetPVarInt(playerid,"JobCheck"))
		{
			if(checkpointid == JobCP[BDG])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ УСТРОИТЬСЯ НА РАБОТУ"));
				SetPVarInt(playerid,"JobCheck",BDG);
				return 1;
			}
			else if(checkpointid == JobCP[STR])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ УСТРОИТЬСЯ НА РАБОТУ"));
				SetPVarInt(playerid,"JobCheck",STR);
				return 1;
			}
			else if(checkpointid == JobCP[MECH])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ УСТРОИТЬСЯ НА РАБОТУ"));
				SetPVarInt(playerid,"JobCheck",MECH);
				return 1;
			}
			else if(checkpointid == JobCP[TRUCK])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ УСТРОИТЬСЯ НА РАБОТУ"));
				SetPVarInt(playerid,"JobCheck",TRUCK);
				return 1;
			}
			else if(checkpointid == JobCP[J_LOADER])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ПЕРЕОДЕТЬСЯ"));
				SetPVarInt(playerid,"JobCheck",J_LOADER);
				return 1;
			}
			else if(checkpointid == JobCP[J_FOREST])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ПЕРЕОДЕТЬСЯ"));
				SetPVarInt(playerid,"JobCheck",J_FOREST);
				return 1;
			}
			else if(checkpointid == JobCP[J_STEEL])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ПЕРЕОДЕТЬСЯ"));
				SetPVarInt(playerid,"JobCheck",J_STEEL);
				return 1;
			}
			else if(checkpointid == JobCP[GUNNER])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ УСТРОИТЬСЯ НА РАБОТУ"));
				SetPVarInt(playerid,"JobCheck",GUNNER);
				return 1;
			}
			else if(checkpointid == JobCP[GUNNER_GET])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЗЯТЬ ПАКЕТЫ"));
				SetPVarInt(playerid,"JobCheck",GUNNER_GET);
				return 1;
			}
			else if(checkpointid == JobCP[GUNNER_DELIVER])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ СДАТЬ ПАКЕТЫ"));
				SetPVarInt(playerid,"JobCheck",GUNNER_DELIVER);
				return 1;
			}
			else if(checkpointid == JobCP[DRUGER])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ УСТРОИТЬСЯ НА РАБОТУ"));
				SetPVarInt(playerid,"JobCheck",DRUGER);
				return 1;
			}
			else if(checkpointid == JobCP[DRUGER_GET])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ КУПИТЬ НАРКОТИКИ"));
				SetPVarInt(playerid,"JobCheck",DRUGER_GET);
				return 1;
			}
			else if(checkpointid == JobCP[JACK])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ УСТРОИТЬСЯ НА РАБОТУ"));
				SetPVarInt(playerid,"JobCheck",JACK);
				return 1;
			}
			else if(checkpointid == JobCP[DET])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ УСТРОИТЬСЯ НА РАБОТУ"));
				SetPVarInt(playerid,"JobCheck",DET);
				return 1;
			}
		}
		if(!GetPVarInt(playerid,"SmenaCheck"))
		{
			for(new i;i<sizeof(SmenaCP);i++)
			{
				if(checkpointid == SmenaCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ СМЕНИТЬ СКИН"));
					SetPVarInt(playerid,"SmenaCheck",1);
					return 1;
				}
			}
		}
		if(!GetPVarInt(playerid,"BankCheck"))
		{
			for(new i;i<sizeof(BankomatCP);i++)
			{
				if(checkpointid == BankomatCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВОСПОЛЬЗОВАТЬСЯ БАНКОМАТОМ"));
					SetPVarInt(playerid,"BankCheck",i+1);
					return 1;
				}
			}
		}
		if(!GetPVarInt(playerid,"BankRobCheck"))
		{
			for(new i;i<sizeof(BankCP);i++)
			{
				if(checkpointid == BankCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					if(i == 0) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ПЕРЕЙТИ В ХРАНИЛИЩЕ"));
					else if(i == 1 || i == 7) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЕРНУТЬСЯ В БАНК"));
					else if(i == 2 || i == 8) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЫЙТИ ИЗ БАНКА"));
					else if(i == 3 || i == 9) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЗЛОМАТЬ"));
					else if(i == 4 || i == 10) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЗЛОМАТЬ"));
					else if(i == 5 || i == 11) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ОТКЛЮЧИТЬ"));
					else if(i == 6 || i == 12) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЗЛОМАТЬ"));
					SetPVarInt(playerid,"BankRobCheck",i+1);
					return 1;
				}
			}
		}	

		if(!GetPVarInt(playerid,"DutyCheck"))
		{
			for(new i;i<sizeof(DutyCP);i++)
			{
				if(checkpointid == DutyCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ПОЛУЧИТЬ СНАРЯЖЕНИЕ"));
					SetPVarInt(playerid,"DutyCheck",1);
					return 1;
				}
			}
		}
		if(!GetPVarInt(playerid,"AmmoCheck"))
		{
			if(checkpointid >= AmmoCP[0] && checkpointid <= AmmoCP[2])
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ КУПИТЬ ОРУЖИЕ"));
				SetPVarInt(playerid,"AmmoCheck",1);
				return 1;
			}
			else if(checkpointid == AmmoCP[3] && TeamInfo[playerid][tID] >= LCN && TeamInfo[playerid][tID] <= RAST)
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЗЯТЬ ЯЩИК"));
				SetPVarInt(playerid,"AmmoCheck",2);
				return 1;
			}
			else if(checkpointid == AmmoCP[4] && TeamInfo[playerid][tID] == HA)
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЗЯТЬ СНАРЯЖЕНИЕ"));
				SetPVarInt(playerid,"AmmoCheck",3);
				return 1;
			}

		}
		if(!GetPVarInt(playerid,"SexCheck"))
		{
			if(checkpointid == SexCP)
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ КУПИТЬ"));
				SetPVarInt(playerid,"SexCheck",1);
				return 1;
			}
		}
		if(!GetPVarInt(playerid,"TestCheck"))
		{
			for(new i;i<sizeof(TestCP);i++)
			{
				if(checkpointid == TestCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					switch(i)
					{
						case 0: PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ НАЧАТЬ ЭКЗАМЕН"));
						case 1: PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ НАЧАТЬ ЭКЗАМЕН"));
						case 2: PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ НАЧАТЬ ЭКЗАМЕН"));
						case 3: PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ НАЧАТЬ ЭКЗАМЕН"));
						case 4: PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ КУПИТЬ ЛИЦЕНЗИЮ"));
					}
					SetPVarInt(playerid,"TestCheck",i+1);
					return 1;
				}
			}
		}	
		if(!GetPVarInt(playerid,"ObshagaCheck") && checkpointid == ObshagaCP)
		{
			PlayerTextDrawShow(playerid, Helper[playerid]);
			PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ПРОПИСАТЬСЯ ЗДЕСЬ"));
			SetPVarInt(playerid,"ObshagaCheck",1);
			return 1;
		}
		if(!GetPVarInt(playerid,"FightCheck"))
		{
			for(new i;i<sizeof(FightCP);i++)
			{
				if(checkpointid == FightCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ОБУЧИТЬСЯ ПРИЁМАМ"));
					SetPVarInt(playerid,"FightCheck",1);
					return 1;
				}
			}
		}
		if(!GetPVarInt(playerid,"ShopCheck"))
		{
			for(new i;i<sizeof(ShopCP);i++)
			{
				if(checkpointid == ShopCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ КУПИТЬ"));
					SetPVarInt(playerid,"ShopCheck",1);
					return 1;
				}
			}
		}
		if(!GetPVarInt(playerid,"ObshakCheck"))
		{
			for(new i;i<sizeof(ObshakCP);i++)
			{
				if(checkpointid == ObshakCP[i])
				{
					PlayerTextDrawShow(playerid, Helper[playerid]);
					PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ОСМОТРЕТЬ ОБЩАК"));
					SetPVarInt(playerid,"ObshakCheck",1);
					return 1;
				}
			}
		}
		if(!GetPVarInt(playerid,"CasinoCheck"))
		{
			if(checkpointid == CasinoCP)
			{
				PlayerTextDrawShow(playerid, Helper[playerid]);
				PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ВЗЯТЬ КОСТИ"));
				SetPVarInt(playerid,"CasinoCheck",1);
				return 1;
			}
		}
	}

	return 1;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
	#if defined LOGGING

	#endif
	PlayerTextDrawHide(playerid, Helper[playerid]);
    if(GetPVarInt(playerid,"GasCheck") == 1) DeletePVar(playerid,"GasCheck");
    if(GetPVarInt(playerid,"GateCheck") == 1) DeletePVar(playerid,"GateCheck");
    if(GetPVarInt(playerid,"TeleportCheck") != 0) { DeletePVar(playerid,"TeleportCheck"); DeletePVar(playerid,"Teleport"); }
    if(GetPVarInt(playerid,"JobCheck") != 0) DeletePVar(playerid,"JobCheck");
    if(GetPVarInt(playerid,"SmenaCheck") != 0) DeletePVar(playerid,"SmenaCheck");
    if(GetPVarInt(playerid,"KfcCheck") != 0) DeletePVar(playerid,"KfcCheck");
	if(GetPVarInt(playerid,"CarShopCheck") != 0) DeletePVar(playerid,"CarShopCheck");
    if(GetPVarInt(playerid,"BankCheck") != 0) DeletePVar(playerid,"BankCheck");
    if(GetPVarInt(playerid,"BankRobCheck") != 0) DeletePVar(playerid,"BankRobCheck");
    if(GetPVarInt(playerid,"DutyCheck") != 0) DeletePVar(playerid,"DutyCheck");
    if(GetPVarInt(playerid,"AmmoCheck") != 0) DeletePVar(playerid,"AmmoCheck");
    if(GetPVarInt(playerid,"SexCheck") != 0) DeletePVar(playerid,"SexCheck");
    if(GetPVarInt(playerid,"TestCheck") != 0) DeletePVar(playerid,"TestCheck");
    if(GetPVarInt(playerid,"FightCheck") != 0) DeletePVar(playerid,"FightCheck");
    if(GetPVarInt(playerid,"ObshagaCheck") != 0) DeletePVar(playerid,"ObshagaCheck");
    if(GetPVarInt(playerid,"ArrestCheck") != 0) DeletePVar(playerid,"ArrestCheck");
    if(GetPVarInt(playerid,"ShopCheck") != 0) DeletePVar(playerid,"ShopCheck");
    if(GetPVarInt(playerid,"ObshakCheck") != 0) DeletePVar(playerid,"ObshakCheck");
    if(GetPVarInt(playerid,"CasinoCheck") != 0) DeletePVar(playerid,"CasinoCheck");
    return 1;
}
AntiDeAMX()
{
    new b;
    #emit load.pri b
    #emit stor.pri b
}


public OnGameModeInit()
{

	AntiDeAMX();
	
	GetServerVarAsString("bind", SERVER_IP, sizeof(SERVER_IP));
	GetServerVarAsString("hostname", SERVER_NAME, sizeof(SERVER_NAME));
	GetServerVarAsString("weburl", SERVER_SITE, sizeof(SERVER_SITE));

	mysql_log();
	mysql_connect_file();
	
	//zmap_Init("SAfull.hmap",ZMAP_MODE_CHACHE);
	SetGameModeText(MODENAME);
	SendRconCommand("mapname Россия | Україна");
	EnableStuntBonusForAll(false);
	UsePlayerPedAnims();
 	DisableInteriorEnterExits();
	ManualVehicleEngineAndLights();
	LimitGlobalChatRadius(30.0);
	SetNameTagDrawDistance(30.0);
	LimitPlayerMarkerRadius(100.0);
	AddPlayerClass(0, -1971.7006,137.9194,27.6875,90.0, 0, 0, 0, 0, 0, 0);
	for(new i; i<50; i++) VVotes[i] = 0;

	CreateDynamicCube(-2010.0, -80.0, 0.0, -2100.0, -110.0, 1040.0, -1, -1, -1); // Автошкола
	CreateDynamicCube(-1955.0, 65.0, 0.0, -2000.0, 225.0, 50.0, -1, -1, -1); // Вокзал
	CreateDynamicCube(2180.0, -2350.0, 0.0, 2200.0, -2180.0, 50.0, -1, -1, -1); // Грузчики
	CreateDynamicCube(-2090.0, -2375.0, 0.0, -1900.0, -2350.0, 50.0, -1, -1, -1); // Лесопилка
	CreateDynamicCube(-1925.0, -1760.0, 0.0, -1830.0, -1545.0, 50.0, -1, -1, -1); // Угольная шахта
	
	mysql_set_charset("cp1251");
		
	getdate(Year, Month, Day);
	
	mysql_tquery(MYSQL_DEFAULT_HANDLE, "TRUNCATE TABLE `samp_online`");

	mysql_tquery(MYSQL_DEFAULT_HANDLE, "SELECT * FROM `samp_settings`", 
		"OnQueryFinish","dd",-1,DB_LOAD_SETTINGS);

	mysql_tquery(MYSQL_DEFAULT_HANDLE, "SELECT * FROM `samp_biznes` ORDER BY `ID`", 
		"OnQueryFinish","dd",-1,DB_LOAD_BIZNES);
	
	mysql_tquery(MYSQL_DEFAULT_HANDLE, "SELECT * FROM `samp_houses` ORDER BY `ID`", 
		"OnQueryFinish","dd",-1,DB_LOAD_HOUSES);
	
	mysql_tquery(MYSQL_DEFAULT_HANDLE, "SELECT * FROM `samp_vehicles` WHERE `Type` != 3 AND `Type` != 4 ORDER BY `ID`", 
		"OnQueryFinish","dd",-1,DB_LOAD_CARS);
	
	mysql_tquery(MYSQL_DEFAULT_HANDLE, "SELECT * FROM `samp_fracs` ORDER BY `ID`", 
		"OnQueryFinish","dd",-1,DB_LOAD_FRACTION);
	
	mysql_tquery(MYSQL_DEFAULT_HANDLE, "SELECT * FROM `samp_zones` ORDER BY `ID`", 
	"OnQueryFinish","dd",-1,DB_LOAD_ZONES);

	mysql_tquery(MYSQL_DEFAULT_HANDLE, "SELECT * FROM `samp_votes` WHERE `status` != 0 ORDER BY `id`",
		"OnQueryFinish","dd",-1,DB_LOAD_VOTES);
	
	CreateResp();
	CreateTextDraws();
	CreateTeleports();
	CreateIcons();
	CreatePickups();
	
	for(new i;i < MAX_HOUSE_INT; i++)HIInfo[i][Checkpoint] = CreateDynamicCP(HIInfo[i][Exit_X],HIInfo[i][Exit_Y],HIInfo[i][Exit_Z], 1.0,-1,HIInfo[i][Int], -1, 4.0);
	for(new i;i < MAX_BIZ_INT; i++)  BIInfo[i][Checkpoint] = CreateDynamicCP(BIInfo[i][Exit_X],BIInfo[i][Exit_Y],BIInfo[i][Exit_Z], 1.0,-1,BIInfo[i][Int], -1, 4.0);
	for(new i;i < sizeof(GasStations); i++) GasCP[i] = CreateDynamicCP(GasStations[i][0],GasStations[i][1],GasStations[i][2], 4.0, 0, 0, -1, 5.0);

	SetTimer("MainTimer",200,false);
	return 1;
}
public OnGameModeExit() 
{

	return 1;
}	

public OnEnterExitModShop(playerid, enterexit, interiorid)
{
	#if defined LOGGING

	#endif
	SetSyncTime(playerid, SYNC_TYPE_POS);
    if(!enterexit) if(GetPVarInt(playerid,"TuneMoney")) SetTimerEx("GiveTuneMoney",1000,false,"i",playerid);
    return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	#if defined LOGGING

	#endif
	if(GetPVarInt(playerid,"Login")) return 1;
	
	new query[80];
	SetPlayerColor(playerid,0xFFFFFF30);
	format(query,sizeof(query),"SELECT * FROM `samp_bans` WHERE `Name` = '%s'",
		PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dd",playerid,DB_CHECK_BAN);
	
	ApplyAnimation(playerid,"BOMBER","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"RAPPING","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"SHOP","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"BEACH","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"SMOKING","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"FOOD","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"ON_LOOKERS","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"DEALER","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"CRACK","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"CARRY","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"COP_AMBIENT","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"PARK","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"INT_HOUSE","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"FOOD","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"GANGS","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"KISSING","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"CAR_CHAT","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"DODGE","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"MD_END","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"MUSCULAR","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"MD_CHASE","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"FAT","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"SCRATCHING","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"GYMNASIUM","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"JST_BUISNESS","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"OTB","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"PLAYIDLES","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"ROB_BANK","null",0.0,0,0,0,0,0);
	ApplyAnimation(playerid,"PED","null",0.0,0,0,0,0,0);

	RemoveBuildingForPlayer(playerid, 2371, 201.8750, -109.0625, 1004.1094, 0.25); // Binco
	RemoveBuildingForPlayer(playerid, 2371, 212.0547, -109.0625, 1004.1094, 0.25); // Binco
	RemoveBuildingForPlayer(playerid, 2376, 207.1875, -167.1016, 999.5078, 0.25); // DS

	return 1;
}

public OnPlayerConnect(playerid)
{
	#if defined LOGGING

	#endif

    if(playerid < 0 || playerid >= MAX_PLAYERS || ConnectedPlayers >= MAX_PLAYERS) return 1;
	
	if(playerid > MAX_PLAYER_ID) MAX_PLAYER_ID = playerid;
	
	new bool:IsConnected = false;
	for(new i = ConnectedPlayers - 1; i != -1 ; i--)
	{
		if(ConnectedPlayerList[i] != playerid) continue;
		IsConnected = true;
		break;
	}
	if(IsConnected == false)
	{
		ConnectedPlayerList[ConnectedPlayers] = playerid;
		ConnectedPlayers ++;
	}
	SetSpawnInfo(playerid,0,0,-1971.7006,137.9194,27.6875,90.0,0,0,0,0,0,0);
    TextDrawShowForPlayer(playerid,Site);
	TextDrawShowForPlayer(playerid, LoadScreen);

	PlayerInfo[playerid][pID] = 0;

	PlayerInfo[playerid][pMiSB] = 999999999;
	
	PlayerInfo[playerid][pLastIP] = EOS;
	PlayerInfo[playerid][pEmail] = EOS;
	PlayerInfo[playerid][pRefer] = EOS;
	PlayerInfo[playerid][pDate] = EOS;
	PlayerInfo[playerid][pRub] = 0;
	
    PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pOrigin] = 0;
	PlayerInfo[playerid][pSpawn] = 0;
	PlayerInfo[playerid][pSkin] = 0;

	PlayerInfo[playerid][pSkins][0] = SKIN_NULL;
	PlayerInfo[playerid][pSkins][1] = SKIN_NULL;
	PlayerInfo[playerid][pSkins][2] = SKIN_NULL;
	PlayerInfo[playerid][pSkins][3] = SKIN_NULL;
	PlayerInfo[playerid][pSkins][4] = SKIN_NULL;
	
	PlayerInfo[playerid][pPayDay] = 3600;
	PlayerInfo[playerid][pWanted] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pHunterValue] = 0;
	PlayerInfo[playerid][pMySelfTime] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pJobTime] = 0;
	PlayerInfo[playerid][pRobTime] = 0;

	PlayerInfo[playerid][pMoney] = 0;
	PlayerInfo[playerid][pSSM] = 0;
	
	

// Переписать все
	PlayerInfo[playerid][pMobile] = 0;
	PlayerInfo[playerid][pBankPass] = 0;
    PlayerInfo[playerid][pMats] = -1;
    PlayerInfo[playerid][pDrugs] = -1;
    PlayerInfo[playerid][pCP] = -1;
    PlayerInfo[playerid][pSD] = -1;
    PlayerInfo[playerid][pRope] = -1;
    PlayerInfo[playerid][pPivo] = -1;
    PlayerInfo[playerid][pSigs] = -1;
    PlayerInfo[playerid][pTazer] = -1;

	strmid(PlayerInfo[playerid][pUrl], "None", 0, strlen("None"),128);
	
    PlayerInfo[playerid][pBizKey] = 0;
    PlayerInfo[playerid][pHouseKey] = 0;
	
	PlayerInfo[playerid][pCars] = 0;
	for(new i = 0; i < 3; i ++) 
		PlayerInfo[playerid][pCarID][i] = 0;

	PlayerInfo[playerid][pHealth] = 100.0;
	PlayerInfo[playerid][pArmour] = -1;

	PlayerInfo[playerid][AFK_Time] = 0;
    PlayerInfo[playerid][AFK_Stat] = 0;
	
	PlayerInfo[playerid][pSpeed] = 0;
	PlayerInfo[playerid][pSpeedZ] = 0.0;
	
	PlayerInfo[playerid][pVehID] = INVALID_VEHICLE_ID;
	
	for(new i = 0; i < 13; i ++)
		PlayerInfo[playerid][pGun][i] = -1;
	
	for(new i = 0; i < 25; i ++)
	{
		iData[playerid][inItems][i] = 0;
		iData[playerid][inValue][i] = 0;
		iData[playerid][inState][i] = 0.0;
	}
	
	for(new i = 0; i < 5; i ++)
	{
		atData[playerid][atModel][i] = 0;
		atData[playerid][atState][i] = 0.0;
	}
	
	for(new i; i < MAX_VARIABLES; i++) 
		Warnings[playerid][i] = 0;


	PremiumInfo[playerid][Level] = 0;
	JailInfo[playerid][jID] = 0;
	JailInfo[playerid][jTime] = 0;
	MuteInfo[playerid][mTime] = 0;
	WarnInfo[playerid][wWarns] = 0;
	TWarnInfo[playerid][wWarns] = 0;
	TeamInfo[playerid][tID] = 0;
	AdminInfo[playerid][aLevel] = 0;
	
	Spectate[playerid] = -1;
	Contract[playerid] = -1;
	Aim[playerid] = -1;
	Killer[playerid] = -1;
	MatsHolding[playerid] = 0;
	PlayerUsingLoopingAnim[playerid] = 0;

	MedicCallTime[playerid] = 0;
	MedicAccepted[playerid] = -1;
	MechanicCallTime[playerid] = 0;
	MechanicAccepted[playerid] = -1;
	TaxiCallTime[playerid] = 0;
	TaxiAccepted[playerid] = -1;
	TransportValue[playerid] = 0;
 	TransportMoney[playerid] = 0;
	TransportTime[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = -1;
 	Mobile[playerid] = -1;

	TicketOffer[playerid] = -1;
	TicketMoney[playerid] = 0;
	ClearOffer[playerid] = -1;
	ClearMoney[playerid] = 0;
	InviteOffer[playerid] = -1;

	MyCarOffer[playerid] = -1;
	MyCarMoney[playerid] = 0;
	MyCarID[playerid] = 0;
	MyHouseOffer[playerid] = -1;
	MyHouseMoney[playerid] = 0;
	MyBiznesOffer[playerid] = -1;
	MyBiznesMoney[playerid] = 0;
	
	GuardOffer[playerid] = -1;
	GuardPrice[playerid] = 0;
	CarOffer[playerid] = -1;
	CarPrice[playerid] = 0;
	CarID[playerid] = 0;
	RefillOffer[playerid] = -1;
	RefillPrice[playerid] = 0;
	RepairOffer[playerid] = -1;
	RepairPrice[playerid] = 0;
	HealOffer[playerid] = -1;
	HealPrice[playerid] = 0;
	HandOffer[playerid] = -1;
	KissOffer[playerid] = -1;
	KissOfferType[playerid] = 0;

	ForEachPlayer(i)
	{
		if(playerid == i) continue;
		if(playerid == TicketOffer[i]) TicketOffer[i] = -1;
		if(playerid == ClearOffer[i]) ClearOffer[i] = -1;
		if(playerid == InviteOffer[i]) InviteOffer[i] = -1;
		if(playerid == MyCarOffer[i]) MyCarOffer[i] = -1;
		if(playerid == MyHouseOffer[i]) MyHouseOffer[i] = -1;
		if(playerid == MyBiznesOffer[i]) MyBiznesOffer[i] = -1;
		if(playerid == GuardOffer[i]) GuardOffer[i] = -1;
		if(playerid == CarOffer[i]) CarOffer[i] = -1;
		if(playerid == RefillOffer[i]) RefillOffer[i] = -1;
		if(playerid == RepairOffer[i]) RepairOffer[i] = -1;
		if(playerid == HealOffer[playerid]) HealOffer[i] = -1;
		if(playerid == HandOffer[i]) HandOffer[i] = -1;
		if(playerid == KissOffer[i]) KissOffer[i] = -1;
	}
	
	SetPVarInt(playerid,"OChat",1);
	SetPVarInt(playerid,"FamilyChat",1);
	SetPVarInt(playerid,"JobChat",1);
	SetPVarInt(playerid,"HidePM",1);
	SetPVarInt(playerid,"NewsChat",1);
	
    GetPlayerName(playerid, PlayerInfo[playerid][pName], 24);
    GetPlayerIp(playerid, PlayerInfo[playerid][pLastIP], 16);

    for(new i = 0, count = 0; i < strlen(PlayerInfo[playerid][pName]); i++)
	{
	    switch(PlayerInfo[playerid][pName][i])
	    {
	        case '0'..'9':
			{
			    if(count > 7) 
			    {
			    	ErrorMes(playerid, "Слишком большое количество цифр в нике.");
			    	return Kick(playerid);
			    }	
				count ++;
			}
			default:
			 continue;
	    }
	}
	
    //EmptyMessages(playerid,50);
    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Используй \"/menu\", чтобы открыть основное меню персонажа.");
    //SendClientMessage(playerid, COLOR_LIGHTRED, "Для корректного отображения информации, скачайте и установите русификатор.");
	
	if(!PlayerInfo[playerid][pAdmin])
	{
		new string[64];
		format(string,sizeof(string),"%s[%d] подключается к серверу.",PlayerInfo[playerid][pName],playerid);
		ForEachPlayer(i) if(GetPVarInt(i,"LoginMSG") && !PlayerInfo[i][pAdmin]) SendClientMessage(i,0xFF7F50FF,string);
	}
				
	return 1;
}
public OnPlayerDisconnect(playerid, reason)
{
	#if defined LOGGING

	#endif
	for(new i; i < ConnectedPlayers; i++)
	{
	    if(ConnectedPlayerList[i] != playerid) continue;
	    ConnectedPlayers --;
	    ConnectedPlayerList[i] = ConnectedPlayerList[ConnectedPlayers];
		break;
	}
	
	MAX_PLAYER_ID = 0;
	
	ForEachPlayer(i) 
	{
		if(i > MAX_PLAYER_ID) MAX_PLAYER_ID = i;
		
		if(Spectate[i] == playerid)
			SpectateTextDrawHide(Spectate[i]);
	}
	new string[200];
	format(string,sizeof(string),"DELETE FROM `samp_online` WHERE `ID` = '%d'",
		playerid);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	format(string,sizeof(string),"UPDATE `samp_team` SET `Online`='0' WHERE `Name` = '%s'",
		PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	if(!GetPVarInt(playerid,"Login")) return 0;
	
 	if(GetPVarInt(playerid,"CreateCar")) DestroyVehicle(GetPVarInt(playerid,"CreateCar"));
	if(GetPVarInt(playerid,"EventCar")) DestroyVehicle(GetPVarInt(playerid,"EventCar"));
	if(GetPVarInt(playerid,"BuyCar")) DestroyVehicle(GetPVarInt(playerid,"BuyCar"));

	for(new i = 20; i < 25; i ++)
	{
		if(iData[playerid][inValue][i] > 0) continue;

		iData[playerid][inItems][i] = 0;
		iData[playerid][inValue][i] = 0;
		iData[playerid][inState][i] = 0.0;
	}

	for(new i = 1; i <= MAX_VEHICLES; i++)
	{
		if(IsValidVehicle(i) && strlen(VehInfo[i][vOwner]) && !strcmp(VehInfo[i][vOwner],PlayerInfo[playerid][pName],true))
		{
			format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Gas`='%f',`Procent`='%f',`Drived`='%f' WHERE `ID`='%d'", 
				VehInfo[i][vGas],VehInfo[i][vPercent],VehInfo[i][vDrived],VehInfo[i][vID]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			strmid(VehInfo[i][vOwner],"The State",0,24,24);
			DestroyVehicle(i);
			if(VehInfo[i][vNeon])
			{
				VehInfo[i][vNeon] = 0;
				DestroyObject(VehInfo[i][vLeftNeon]);
				DestroyObject(VehInfo[i][vRightNeon]);
			}	
		}
	}
    if(PlayerInfo[playerid][AFK_Stat]) Delete3DTextLabel(PlayerInfo[playerid][AFK_Text]);

	if(GetPVarInt(playerid,"EventStart") > GetTime)
	{
		for(new i; i < EventPlayers; i++)
		{
			if(EventPlayerList[i] != playerid) continue;
			EventPlayers --;
			EventPlayerList[i] = EventPlayerList[EventPlayers];
			break;
		}
		ForEachEvent(i)
		{
			format(string,sizeof(string),"{A020F0}%s[%d] покинул(а) ивент | Выход.",PlayerInfo[playerid][pName],playerid);
			SendClientMessage(i,-1, string);
		}
		UpdateDMText();
	}
	
	if(PlayerInfo[playerid][pAdmin])
	{
		format(string,sizeof(string),"%s %s[%d] завершил(а) дежурство.",AdminInfo[playerid][aRank],PlayerInfo[playerid][pName],playerid);
		ABroadCast(COLOR_YELLOW,string, 1);
		format(string,sizeof(string),"UPDATE `logs_admin_online` SET `Online`='0',`Time`=`Time`+%d WHERE `Date` = '%02d.%02d.%d' AND `Name`='%s'",
			AdminInfo[playerid][aTime],Day,Month,Year,PlayerInfo[playerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		AdminInfo[playerid][aTime] = 0;
		AdminInfo[playerid][aLevel] = 0;
	}
    switch (reason)
	{
		case 0:
		{
			format(string, sizeof(string), "(( %s[%d] вылетел(а) | IP: %s ))",PlayerInfo[playerid][pName],playerid , PlayerInfo[playerid][pLastIP]);
		}
		case 1:
		{
			/*if(!IsACop(playerid) && PlayerInfo[playerid][pWanted])
			{
				ForEachPlayer(i)
				{
				    if(IsACop(i) && DistPlayerToPlayer(5.0,playerid,i))
				    {
						format(string,sizeof(string),"UPDATE `samp_users` SET `Wanted`='0' WHERE `Name`='%s'",
							PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
						
						format(string,sizeof(string),"INSERT INTO `samp_jail` (Name,Date,Jail,Cop,Time,Reason) VALUES ('%s','%02d.%02d.%d %02d:%02d:%02d','%d','Сервер','%d','Выход при аресте')",
							PlayerInfo[playerid][pName],Day,Month,Year,Hour,Minute,Second,TeamInfo[i][tID],6000);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
						
						format(string,sizeof(string),"INSERT INTO `samp_warns` (Name,Date,Admin,Reason) VALUES ('%s','%02d.%02d.%d %02d:%02d:%02d','Сервер','Выход при аресте')",
							PlayerInfo[playerid][pName],Day,Month,Year,Hour,Minute,Second);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
						if(WarnInfo[playerid][wWarns] >= 2) TempBan(PlayerInfo[playerid][pName],PlayerInfo[playerid][pLastIP],"Сервер",5,"3 предупреждения");
						Report(playerid,"получил предупреждение за выход при аресте.");
						break;
					}
				}
			}*/
			format(string, sizeof(string), "(( %s[%d] вышел(а) | IP: %s ))",PlayerInfo[playerid][pName],playerid , PlayerInfo[playerid][pLastIP]);
		}
		case 2: format(string, sizeof(string), "(( %s[%d] кикнут(а) | IP: %s ))",PlayerInfo[playerid][pName],playerid , PlayerInfo[playerid][pLastIP]);
	}
	OnPlayerSave(playerid);
	ABroadCast(0xBFC0C2FF,string, 1);
	ForEachPlayer(i)
	{
	    if(GetPVarInt(i,"LoginMSG") && !PlayerInfo[i][pAdmin])
	    {
	        switch (reason)
			{
				case 0: format(string,sizeof(string), "%s вылетел(а) с сервера.",PlayerInfo[playerid][pName]);
				case 1: format(string,sizeof(string), "%s покинул(а) сервер.",PlayerInfo[playerid][pName]);
				case 2: format(string,sizeof(string), "%s был(а) кикнут(а).",PlayerInfo[playerid][pName]);
			}
			SendClientMessage(i,0xFF7F50FF,string);
	    }
	}
    if(Killer[playerid] != -1)
	{
		SendClientMessage(Killer[playerid], COLOR_YELLOW, "Твоя цель покинула сервер.");
	    Aim[Killer[playerid]] = -1;
	}
	if(TransportCost[playerid] && TransportDriver[playerid] != -1)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string, sizeof(string), FixText("~w~пассажир вышел~n~~g~заработано $%d"),TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		}
	}
	if(Mobile[playerid] != -1)
	{
		ErrorMes(Mobile[playerid], "Абонент недоступен для входящей связи (Покинул сервер).");
		if(GetPVarInt(playerid,"CallTime"))
		{
			new Cost = floatround((GetTime-GetPVarInt(playerid,"CallTime"))/3)+5;
			FP_GivePlayerMoney(playerid, -Cost);
			FP_GivePlayerMoney(Mobile[playerid], -Cost);
			for(new i=1; i<=BIZNES; i++)
			{
				if(!BiznesInfo[i][bType])
				{
					BiznesInfo[i][bMoney] += Cost;
					if(BiznesInfo[i][bMafia]) FractionInfo[BiznesInfo[i][bMafia]][oMoney] += floatround(Cost*0.25);
					KAZNA += floatround(Cost*0.25);
					format(string,sizeof(string),"UPDATE `samp_biznes` SET `Money` = '%d' WHERE `ID` = '%d'",
						BiznesInfo[i][bMoney],i);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					break;
				}
			}
		}
		DeletePVar(playerid,"CallTime");
		DeletePVar(Mobile[playerid],"CallTime");
		SetPlayerSpecialAction(Mobile[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
		Mobile[Mobile[playerid]] = -1;
		Mobile[playerid] = -1;
	}
	PlayerInfo[playerid][pName] = EOS;
	return 1;
}
public OnPlayerRequestSpawn(playerid) 
{
	#if defined LOGGING
		printf("OPRS: %d", playerid);
	#endif
	if(GetPVarInt(playerid,"Login"))return 1;
	return 0;
}	
public OnPlayerSpawn(playerid)
{
	#if defined LOGGING
		printf("OPS: %d", playerid);
	#endif
    DeletePVar(playerid,"DeathCheck");
	if(!GetPVarInt(playerid,"Login"))
	{
	    SendClientMessage(playerid,-1,"{FF0000}[ОШИБКА]{FFFFFF} Перед спавном необходимо авторизоваться.");
		SetTimerEx("KickTimer",1000,false,"d",playerid);
		return 1;
	}

	ForEachPlayer(i) if(Spectate[i] == playerid) PlayerSpectatePlayer(i,playerid);
	
    FP_SetPlayerHealth(playerid,100);
	
    SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
    ResetPlayerWeapons(playerid);
   	for(new i = 0; i < 13; i++)
   	{
   		if(PlayerInfo[playerid][pGun][i] == -1) continue;
   		GivePlayerWeapon(playerid, iData[playerid][inItems][PlayerInfo[playerid][pGun][i]], iData[playerid][inValue][PlayerInfo[playerid][pGun][i]]);
   	}
	
    for(new i = 0; i < 6; i++)  RemovePlayerAttachedObject(playerid, i);

    if(GetPVarInt(playerid,"Snow"))
	{
	    DeleteSnow(playerid);
		CreateSnow(playerid);
	}
	
	if(GetPVarInt(playerid,"Mask")) 
	{
		SetPlayerSkin(playerid,GetPVarInt(playerid,"MaskSkin"));
		SetPlayerColor(playerid,0xFFFFFF00);
	}
    else if(!TeamInfo[playerid][tID] || (IsACop(playerid) && !GetPVarInt(playerid,"OnDuty"))) 
    	SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	else SetPlayerSkin(playerid, TeamInfo[playerid][tSkin]);
	
	
	if(!PlayerInfo[playerid][pSex])
	{
		SetPos(playerid,-1971.7006,137.9194,27.6875,90.0,0,0);
		return ShowDialog(playerid,D_SEX);
	}
	else if(!PlayerInfo[playerid][pSkin])
	{
		SetPos(playerid,-1971.7006,137.9194,27.6875,90.0,0,0);
		return ShowDialog(playerid,D_RACE);
	}
	
	if(JailInfo[playerid][jTime]) return Jail(playerid);
 	
	if(GetPVarInt(playerid,"Recon"))
		return LoadStats(playerid);


	GiveTeamGun(playerid);

	SetPVarInt(playerid,"SpawnKill",GetTime+10);

	new house = PlayerInfo[playerid][pHouseKey];
	if (house && !GetPVarInt(playerid,"OnDuty") && PlayerInfo[playerid][pSpawn]) 
		SetPos(playerid,HouseInfo[house][hExitX],HouseInfo[house][hExitY],HouseInfo[house][hExitZ],0.0,HouseInfo[house][hInt],HouseInfo[house][hID]);
	else if (!TeamInfo[playerid][tID] || (IsACop(playerid) && !GetPVarInt(playerid,"OnDuty"))) 
	{
		if(PlayerInfo[playerid][pOrigin] == 1) SetPos(playerid,1219.0233,-1812.7936,16.5938,180.0, 0, 0);
		else if(PlayerInfo[playerid][pOrigin] == 2) SetPos(playerid,-1971.7006,137.9194,27.6875,90.0,0,0);
		else if(PlayerInfo[playerid][pOrigin] == 3) SetPos(playerid,2845.0928,1290.4047,11.3906,90.0, 0, 0);
	}	
	else if (TeamInfo[playerid][tID] == LSPD) SetPos(playerid,233.8388671875,77.8779296875,1005.0390625,180.0, 6, LSPD);
	else if (TeamInfo[playerid][tID] == SFPD) SetPos(playerid,275.16357421875,110.8249206543,1004.6171875,0.0, 10, SFPD);
	else if (TeamInfo[playerid][tID] == LVPD) SetPos(playerid,220.16752624512,164.82151794434,1003.0234375,0.0, 3, LVPD);
	else if (TeamInfo[playerid][tID] == FBI) SetPos(playerid,275.16357421875,110.8249206543,1004.6171875,0.0, 10, FBI);
	else if (TeamInfo[playerid][tID] == DOKI) SetPos(playerid,2755.45,-2382.5,13.6328,270.0, 0, 0);
	else if (TeamInfo[playerid][tID] == EBASE) SetPos(playerid,-1346.2145996094,492.34631347656,11.202690124512,0.0, 0, 0);
	else if (TeamInfo[playerid][tID] == ZONE51) SetPos(playerid,244.31317138672,1859.9055175781,14.084012985229,0.0, 0, 0);
	else if (TeamInfo[playerid][tID] == MEDIC) 
	{
		if(PlayerInfo[playerid][pOrigin] == 1) SetPos(playerid,371.00769042969,175.26422119141,1019.984375,0.0, 3, 1);
		else if(PlayerInfo[playerid][pOrigin] == 2) SetPos(playerid,371.00769042969,175.26422119141,1019.984375,0.0, 3, 2);
		else if(PlayerInfo[playerid][pOrigin] == 3) SetPos(playerid,371.00769042969,175.26422119141,1019.984375,0.0, 3, 3);
	}
	else if (TeamInfo[playerid][tID] == CASINO) SetPos(playerid,1142.6700,6.2676,1000.6797,90.0, 12, 1);
	else if (TeamInfo[playerid][tID] == NEWS)
	{
		if(PlayerInfo[playerid][pOrigin] == 1) SetPos(playerid,348.37677001953,162.14004516602,1025.7890625,270.0, 3, 1);
		else if(PlayerInfo[playerid][pOrigin] == 2) SetPos(playerid,348.37677001953,162.14004516602,1025.7890625,270.0, 3, 2);
		else if(PlayerInfo[playerid][pOrigin] == 3) SetPos(playerid,348.37677001953,162.14004516602,1025.7890625,270.0, 3, 3);
	}
	else if (TeamInfo[playerid][tID] == LIC) SetPos(playerid,-2034.8483886719,-115.54626464844,1035.171875,0.0, 3, LIC);
	else if (TeamInfo[playerid][tID] == TAXI) SetPos(playerid,2443.3933105469,1663.0155029297,10.8203125,0.0, 0, 0);
	else if (TeamInfo[playerid][tID] == MER) 
	{
		if(TeamInfo[playerid][tRank] < 2) SetPos(playerid,354.93347167969,173.90582275391,1008.3828125,0.0, 3, MER);
		else SetPos(playerid,347.5073,193.3487,1014.1875, 270.0, 3, MER);
	}		
	else if (TeamInfo[playerid][tID] == HA) SetPos(playerid,1212.4810791016,-35.65941619873,1000.953125,0.0, 3, HA);
	else if (TeamInfo[playerid][tID] == HUN) SetPos(playerid,508.92767333984,-72.391418457031,998.7578125,0.0, 11, HUN);
	else if (TeamInfo[playerid][tID] == LCN) SetPos(playerid,2548.0231933594,-1283.509765625,1060.984375,180.0, 2, LCN);
	else if (TeamInfo[playerid][tID] == YA) SetPos(playerid,-2164.6101074219,645.91571044922,1057.59375,180.0, 1, YA);
	else if (TeamInfo[playerid][tID] == RM) SetPos(playerid,2548.0231933594,-1283.509765625,1060.984375,180.0, 2, RM);
	else if (TeamInfo[playerid][tID] == TRIADA) SetPos(playerid,-2164.6101074219,645.91571044922,1057.59375,180.0, 1, TRIADA);
	else if (TeamInfo[playerid][tID] == GROOVE) SetPos(playerid,2491.5205078125,-1697.9177246094,1014.7545776367,0.0, 3, GROOVE);
	else if (TeamInfo[playerid][tID] == BALLAS) SetPos(playerid,-2164.6101074219,645.91571044922,1057.59375,180.0, 1, BALLAS);
	else if (TeamInfo[playerid][tID] == VAGOS) SetPos(playerid,2548.0231933594,-1283.509765625,1060.984375,180.0, 2, VAGOS);
	else if (TeamInfo[playerid][tID] == ECOR) SetPos(playerid,-2164.6101074219,645.91571044922,1057.59375,180.0, 1, ECOR);
	else if (TeamInfo[playerid][tID] == RIFA) SetPos(playerid,2548.0231933594,-1283.509765625,1060.984375,180.0, 2, RIFA);
	else if (TeamInfo[playerid][tID] == SRACE) SetPos(playerid,2548.0231933594,-1283.509765625,1060.984375,180.0, 2, SRACE);
	else if (TeamInfo[playerid][tID] == RAST) SetPos(playerid,315.3768,1122.5792,1083.8828,280.0, 5, RAST);
	return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
	#if defined LOGGING
		printf("OPD: %d | %d | %d", playerid, killerid, reason);
	#endif
	if(GetPVarInt(playerid,"DeathCheck"))
		return FP_Kick(playerid,"Самоубийца");
	AddPVarInt(playerid,"DeathCheck",1);

    if(GetTickCount() - GetPVarInt(playerid,"LastDeath") < 1000)
    	return FP_Kick(playerid,"Самоубийца (NEW)");
    SetPVarInt(playerid,"LastDeath", GetTickCount());

	DropItem(playerid, PlayerInfo[playerid][pArmour], 2);
	FP_ResetPlayerWeapons(playerid);

	if(GetPVarInt(playerid,"Cuffed"))DeletePVar(playerid,"Cuffed");

	if(GetPVarInt(playerid, "TypeTextDraw") == 1) 
	{
		DeletePVar(playerid, "CarShop");
		DeletePVar(playerid, "TypeTextDraw");
		CarShopTextDrawExit(playerid);
	}	
	else if(GetPVarInt(playerid, "TypeTextDraw") == 2) 
	{
		DeletePVar(playerid, "TypeTextDraw");
		GasTextDrawHide(playerid);
	}
	else if(GetPVarInt(playerid, "TypeTextDraw") == 3) 
	{
		DeletePVar(playerid, "TypeTextDraw");
		SpectateTextDrawHide(playerid);
	}
	else if(GetPVarInt(playerid, "TypeTextDraw") == 4) 
	{
		DeletePVar(playerid, "TypeTextDraw");
		MenuHide(playerid);
	}
	else if(GetPVarInt(playerid, "TypeTextDraw") == 5) 
	{
		DeletePVar(playerid, "TypeTextDraw");
		SkinShopHide(playerid);
	}
	else if(GetPVarInt(playerid, "TypeTextDraw") == 6) 
	{
		DeletePVar(playerid, "TypeTextDraw");
		ClothesHide(playerid);
	}
	if(PlayerUsingLoopingAnim[playerid])
	{
		TextDrawHideForPlayer(playerid,txtAnimHelper);
		PlayerUsingLoopingAnim[playerid] = 0;
	}
    if(killerid == INVALID_PLAYER_ID) return 1;
	
    new string[320];

    if(GetPlayerWeapon(killerid) != reason)
    {
	    if(!GetPVarInt(killerid, "Login"))
	    {
	    	FP_Kick(playerid,"FakeKill(UL)");
	    	return 1;
	    }
	    else if(!PlayerInfo[killerid][pVehID])
	    {
	    	FP_Kick(playerid,"FakeKill");
	    	return 1;	
	    }
	}

    if(GetPVarInt(playerid,"SpawnKill") > GetTime)
	{
		if(!Warnings[killerid][SPAWNKILL]) SendClientMessage(killerid, COLOR_YELLOW, "Внимание: Прекрати SpawnKill, иначе будешь кикнут(а) с сервера.");
		else FP_Kick(killerid,"SpawnKill");
		Warnings[killerid][SPAWNKILL]++;
	}
	new Model = GetVehicleModel(PlayerInfo[killerid][pVehID]);
	if(GetPlayerState(killerid) == 2 && Model != 432 && Model != 425 && Model != 520)
	{
		//if(DistPlayerToPlayer(playerid, killerid, 50))
		if(!Warnings[killerid][DRIVE_BY])
		{
			SendClientMessage(killerid, COLOR_YELLOW, "Внимание: Убuйство с транспортного средства запрещено, штраф $2500.");
	       	FP_GivePlayerMoney(killerid, - 2500);
	    }
	    else
		{
		    PlayerInfo[killerid][pWanted] = 0;
			UpdateWanted(killerid,0);
			
			JailInfo[killerid][jID] = 1;
			JailInfo[killerid][jTime] = 1800;
			JailInfo[killerid][jPrice] = 0;
			format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
			strmid(JailInfo[killerid][jDate],string,0,20,20);
			strmid(JailInfo[killerid][jCop],"Сервер",0,24,24);
			strmid(JailInfo[killerid][jReason],"Drive-By",0,64,64);
			
			Warnings[killerid][DRIVE_BY] = 0;
			
			format(string,sizeof(string),"UPDATE `samp_users` SET `Wanted`='0' WHERE `Name`='%s'",
				PlayerInfo[killerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			format(string,sizeof(string),"INSERT INTO `samp_jail` (Name,Date,Jail,Cop,Time,Reason) VALUES ('%s','%s','%d','%s','%d','%s')",
				PlayerInfo[killerid][pName],JailInfo[killerid][jDate],JailInfo[killerid][jID],JailInfo[killerid][jCop],JailInfo[killerid][jTime],JailInfo[killerid][jReason]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			SetPlayerPos(killerid,PlayerInfo[killerid][pPos][0],PlayerInfo[killerid][pPos][1],PlayerInfo[killerid][pPos][2]+5);
			SpawnPlayer(killerid);
			
			SendClientMessage(killerid, COLOR_WHITE, "Тебя посадuлu на 30 минут. Залог: Невозможен.");
			
			new message[80];
			format(message,sizeof(message), "%s был(а) посажен(а) в тюрьму на 30 минут. Причина: Drive By", PlayerInfo[killerid][pName]);
			SendClientMessageToAll(COLOR_LIGHTRED,message);
		}
		Warnings[killerid][DRIVE_BY]++;
	}
	if(JailInfo[killerid][jTime])
	{
		new message[96];
		format(message,sizeof(message),"Ты убuл(а) игрока %s[%d] в тюрьме u получuл(а) еще 5 минут заключения.",PlayerInfo[playerid][pName],playerid);
	    SendClientMessage(killerid,COLOR_YELLOW,message);
		
		JailInfo[killerid][jTime] += 300;
		
		format(string,sizeof(string),"UPDATE `samp_jail` SET `Time`='%d' WHERE `Name`='%s'",
			JailInfo[killerid][jTime],PlayerInfo[killerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		return 1;
	}
	if(Mobile[playerid] != -1)
	{
		ErrorMes(Mobile[playerid], "Абонент недоступен для входящей связи (Попал в больницу).");
		if(GetPVarInt(playerid,"CallTime"))
		{
			new Cost = floatround((GetTime-GetPVarInt(playerid,"CallTime"))/3)+5;
			FP_GivePlayerMoney(playerid, -Cost);
			FP_GivePlayerMoney(Mobile[playerid], -Cost);
			for(new i=1; i<=BIZNES; i++)
			{
				if(!BiznesInfo[i][bType])
				{
					BiznesInfo[i][bMoney] += Cost;
					if(BiznesInfo[i][bMafia]) FractionInfo[BiznesInfo[i][bMafia]][oMoney] += floatround(Cost*0.25);
					KAZNA += floatround(Cost*0.25);
					format(string,sizeof(string),"UPDATE `samp_biznes` SET `Money` = '%d' WHERE `ID` = '%d'",
						BiznesInfo[i][bMoney],i);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					break;
				}
			}
		}
		DeletePVar(playerid,"CallTime");
		DeletePVar(Mobile[playerid],"CallTime");
		SetPlayerSpecialAction(Mobile[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
		Mobile[Mobile[playerid]] = -1;
		Mobile[playerid] = -1;		
	}
	for(new i = 0; i < sizeof(GZInfo); i++)
	{
	    if(!ZoneOnBattle[i])continue;
		if(TeamInfo[playerid][tID] == TeamInfo[killerid][tID])continue;
		if(TeamInfo[playerid][tID] != GZInfo[i][gNapad] && TeamInfo[playerid][tID] != GZInfo[i][gFrakVlad])continue;
		if(TeamInfo[killerid][tID] != GZInfo[i][gNapad] && TeamInfo[killerid][tID] != GZInfo[i][gFrakVlad])continue;
		{
		    if(TeamInfo[killerid][tID] == GZInfo[i][gNapad]) GZInfo[i][gNapadKills] ++;
		    else if(TeamInfo[killerid][tID] == GZInfo[i][gFrakVlad]) GZInfo[i][gFrakVladKills] ++;
			break;
		}
	}
	if(GetPVarInt(playerid,"EventCar")) 
	{
		DestroyVehicle(GetPVarInt(playerid,"EventCar"));
		DeletePVar(playerid,"EventCar");
	}
	if(GetPVarInt(playerid,"EventStart") > GetTime)
	{
	    ForEachEvent(i)
		{
			new message[128];
			if(reason < 46) format(message,sizeof(message),"{A020F0}%s[%d] убuл(а) %s[%d] c помощью %s.",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid,WeaponName[reason]);
			else format(message,sizeof(message),"{A020F0}%s[%d] убuл(а) %s[%d].",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid);
			SendClientMessage(i,-1, message);
		}
		for(new i; i < EventPlayers; i++)
		{
			if(EventPlayerList[i] != playerid) continue;
			EventPlayers --;
			EventPlayerList[i] = EventPlayerList[EventPlayers];
			break;
		}
		TextDrawHideForPlayer(playerid,DMText);
		UpdateDMText();
		SetPVarInt(playerid,"EventStart",GetTime);
		return 1;
	}
    if(IsACop(killerid))
	{
		if(PlayerInfo[playerid][pWanted] && GetPVarInt(killerid,"OnDuty"))
		{
		    SendDeathMessage(killerid,playerid,reason);
		    if(IsACop(playerid))return 1;
		    ForEachPlayer(i)
			{
				if(IsACop(i) && GetPVarInt(i,"OnDuty") && DistPlayerToPlayer(30.0,playerid,i) && i != killerid)
				FP_GivePlayerMoney(i, PlayerInfo[playerid][pWanted] * 150); //Вип-Деньги
			}
			
			JailInfo[playerid][jTime] += PlayerInfo[playerid][pWanted]*600;
			JailInfo[playerid][jID] = TeamInfo[killerid][tID];
			JailInfo[playerid][jPrice] = PlayerInfo[playerid][pWanted]*10000;
			
			format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
			strmid(JailInfo[playerid][jDate],string,0,20,20);
			strmid(JailInfo[playerid][jCop],PlayerInfo[killerid][pName],0,24,24);
			strmid(JailInfo[playerid][jReason],"Розыск",0,64,64);
			
			format(string,sizeof(string),"UPDATE `samp_users` SET `Wanted`='0' WHERE `Name`='%s'",
				PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			format(string,sizeof(string),"INSERT INTO `samp_jail` (Name,Date,Jail,Cop,Time,Price,Reason) VALUES ('%s','%s','%d','%s','%d','%d','%s')",
				PlayerInfo[playerid][pName],JailInfo[playerid][jDate],JailInfo[playerid][jID],JailInfo[playerid][jCop],JailInfo[playerid][jTime],JailInfo[playerid][jPrice],JailInfo[playerid][jReason]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			FP_GivePlayerMoney(playerid, -PlayerInfo[playerid][pWanted]*300);
			FP_GivePlayerMoney(killerid, PlayerInfo[playerid][pWanted]*300); //Вип-Деньги
			
			new message[80];
			format(message,sizeof(message),"Ты посадuл(а) игрока %s[%d] в тюрьму u получuл %d$.",PlayerInfo[playerid][pName],playerid,PlayerInfo[playerid][pWanted]*300);
			SendClientMessage(killerid,COLOR_YELLOW,message);
			format(message,sizeof(message),"Тебя посадuл(а) в тюрьму %s[%d].",PlayerInfo[killerid][pName],killerid);
			SendClientMessage(playerid,COLOR_YELLOW,message);
			
			PlayerInfo[playerid][pWanted] = 0;
			UpdateWanted(playerid,0);
			return 1;
		}
		else
		{
		    FP_GivePlayerMoney(killerid, -500);
		    new rand = random(250);
		    PlayerInfo[killerid][pHunterValue] +=rand;
		    if(PlayerInfo[playerid][pHunterValue] > 10000) PlayerInfo[playerid][pHunterValue] = 10000;
			
			format(string,sizeof(string),"UPDATE `samp_users` SET `HunterValue`='%d' WHERE `Name`='%s'",
				PlayerInfo[playerid][pHunterValue],PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			if(!GetPVarInt(killerid,"Mask"))SendDeathMessage(killerid,playerid,reason);
		    else
			{
				if(reason < 46) format(string,sizeof(string),"[Убuйство в маске] %s[%d] убuл(а) %s[%d] c помощью %s.",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid,WeaponName[reason]);
				else format(string,sizeof(string),"[Убuйство в маске] %s[%d] убuл(а) %s[%d].",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid);
				ABroadCast(COLOR_YELLOW,string,4);
		    }
	  		return 1;
		}
	}
	else if(TeamInfo[killerid][tID] == HA)
	{
		if(PlayerInfo[playerid][pHeadValue] && Aim[killerid] == playerid)
		{
		    FP_GivePlayerMoney(killerid, PlayerInfo[playerid][pHeadValue]);
			format(string,sizeof(string),"<< Наемный убuйца %s выполнuл(а) контракт на %s u забрал(а) $%d >>",PlayerInfo[killerid][pName],PlayerInfo[playerid][pName],PlayerInfo[playerid][pHeadValue]);
			SendRadioMessage(HA, COLOR_YELLOW, string);
			SendClientMessage(playerid, COLOR_YELLOW, "Ничего личного, это просто заказ.");
			PlayerInfo[playerid][pHeadValue] = 0;
			Killer[playerid] = -1;
			Aim[killerid] = -1;
			
			format(string,sizeof(string),"UPDATE `samp_users` SET `HeadValue`='%d' WHERE `Name`='%s'",
				PlayerInfo[playerid][pHeadValue],PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			return 1;
		}
		else
		{
			//SetPlayerCriminal(killerid,-1,"Убuйство",1);
			if(!GetPVarInt(killerid,"Mask"))SendDeathMessage(killerid,playerid,reason);
		    else
			{
				if(reason < 46) format(string,sizeof(string),"[Убuйство в маске] %s[%d] убuл(а) %s[%d] c помощью %s.",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid,WeaponName[reason]);
				format(string,sizeof(string),"[Убuйство в маске] %s[%d] убuл(а) %s[%d].",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid);
				ABroadCast(COLOR_YELLOW,string,4);
				ForEachPlayer(i)
				{
					if(TeamInfo[i][tID] != HA || !TeamInfo[i][tType]) continue;
					if(reason < 46) format(string,sizeof(string),"[Убuйство в маске] %s[%d] убuл(а) %s[%d] c помощью %s.",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid,WeaponName[reason]);
					format(string,sizeof(string),"[Убuйство в маске] %s[%d] убuл(а) %s[%d].",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid);
					SendClientMessage(i,COLOR_YELLOW,string);
				}
		    }
		}
	}
	else if(TeamInfo[killerid][tID] == HUN)
	{
		if(PlayerInfo[playerid][pHunterValue])
		{
			format(string,sizeof(string),"<< Охотник за головами %s снял(а) скальп с %s u получuл(а) $%d >>",PlayerInfo[killerid][pName],PlayerInfo[playerid][pName],PlayerInfo[playerid][pHunterValue]);
			SendRadioMessage(HUN, COLOR_YELLOW, string);
			FP_GivePlayerMoney(killerid,PlayerInfo[playerid][pHunterValue]);
			FP_GivePlayerMoney(playerid,-PlayerInfo[playerid][pHunterValue]);
			
			format(string,sizeof(string),"Ты заплатuл(а) %d за убuйства невинных.",PlayerInfo[playerid][pHunterValue]);
			SendClientMessage(playerid, COLOR_YELLOW,string);
			PlayerInfo[playerid][pHunterValue] = 0;
			
			format(string,sizeof(string),"UPDATE `samp_users` SET `HunterValue`='0' WHERE `Name`='%s'",
				PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
		else if(reason == 9)
		{
			CreateExplosion(PlayerInfo[killerid][pPos][0], PlayerInfo[killerid][pPos][1], PlayerInfo[killerid][pPos][2], 1, 5.0);
			FP_SetPlayerHealth(killerid,PlayerInfo[killerid][pHealth] - 50);
		 	FP_ResetPlayerWeapons(killerid);
		    SetPlayerCriminal(killerid,playerid,"Убuйство",1);
		    SendDeathMessage(killerid,playerid,reason);
		}
	}
	else
	{
	    if(!GetPVarInt(killerid,"Mask")) SendDeathMessage(killerid,playerid,reason);
	    else
		{
			if(reason < 46) format(string,sizeof(string),"[Убuйство в маске] %s[%d] убuл(а) %s[%d] c помощью %s",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid,WeaponName[reason]);
			else format(string,sizeof(string),"[Убuйство в маске] %s[%d] убuл(а) %s[%d].",PlayerInfo[killerid][pName],killerid,PlayerInfo[playerid][pName],playerid);
			ABroadCast(COLOR_YELLOW,string,4);
	    }
	    if((TeamInfo[killerid][tID] >= DOKI && TeamInfo[killerid][tID] <= MEDIC) || TeamInfo[killerid][tID] == MER || TeamInfo[killerid][tID] == LIC)return 1;
	    SetPlayerCriminal(killerid,playerid,"Убuйство",1);
		return 1;
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	#if defined LOGGING
		printf("OVS: %d", vehicleid);
	#endif
	if(VehInfo[vehicleid][vType] == VT_EVENT)
	{
		ForEachPlayer(i)
		{
			if(GetPVarInt(i,"EventCar") == vehicleid) DeletePVar(i,"EventCar");
			if(GetPVarInt(i,"CreateCar") == vehicleid) DeletePVar(i,"CreateCar");
			if(GetPVarInt(i,"BuyCar") == vehicleid) DeletePVar(i,"BuyCar");
		}
		VehInfo[vehicleid][vType] = VT_NONE;
		DestroyVehicle(vehicleid);
		return 1;
	}
	strmid(VehInfo[vehicleid][Url], "None", 0, strlen("None"),128);
	VehInfo[vehicleid][vPos][0] = VehInfo[vehicleid][vParkX];
	VehInfo[vehicleid][vPos][1] = VehInfo[vehicleid][vParkY];
	VehInfo[vehicleid][vPos][2] = VehInfo[vehicleid][vParkZ];
    VehInfo[vehicleid][vEngine] = 0;
    VehInfo[vehicleid][vLights] = 0;
    VehInfo[vehicleid][vAlarm] = 0;
	if(VehInfo[vehicleid][vType] < VT_OWNED) VehInfo[vehicleid][vLock] = 0;
	else VehInfo[vehicleid][vLock] = 1;
    VehInfo[vehicleid][vBonnet] = 0;
    VehInfo[vehicleid][vBoot] = 0;
	SetVehicleParamsEx(vehicleid, 0, 0, 0, 0, 0, 0, 0);
    VehInfo[vehicleid][vLoadMats] = 0;
	FP_SetVehiclePos(vehicleid,VehInfo[vehicleid][vParkX],VehInfo[vehicleid][vParkY],VehInfo[vehicleid][vParkZ]);
	if(VehInfo[vehicleid][vPaintJob] != -1)ChangeVehiclePaintjob(vehicleid,VehInfo[vehicleid][vPaintJob]);
	ChangeVehicleColor(vehicleid,VehInfo[vehicleid][vColor1],VehInfo[vehicleid][vColor2]);
	SetTimerEx("OnVehicleSpawnAngle",500,false,"if",vehicleid,VehInfo[vehicleid][vParkA]);
	LinkVehicleToInterior(vehicleid, 0);
	SetVehicleVirtualWorld(vehicleid, 0);
    FP_SetVehicleHealth(vehicleid,1000);
	
    if(VehInfo[vehicleid][vType] == VT_FRACTION && VehInfo[vehicleid][vValue] == SRACE)
	{
		new style = random(1);
		if(GetVehicleModel(vehicleid) == 558)
		{
			if(!style) VehicleUpgrade(vehicleid, 1088,1090,1092,1094,1164,1166,1168, random(2));
			else VehicleUpgrade(vehicleid, 1089,1091,1093,1095,1163,1165,1167, random(2));
		}
		else if(GetVehicleModel(vehicleid) == 559)
		{
			if(!style) VehicleUpgrade(vehicleid, 1065, 1067, 1069, 1071, 1158, 1161, 1173, random(2));
			else VehicleUpgrade(vehicleid, 1066, 1068, 1070, 1072, 1159, 1160, 1162, random(2));
		}
		else if(GetVehicleModel(vehicleid) == 560)
		{
			if(!style) VehicleUpgrade(vehicleid, 1026, 1027, 1028, 1132, 1138, 1141, 1169, random(2));
			else VehicleUpgrade(vehicleid, 1030, 1031, 1029, 1133, 1139, 1140, 1170, random(2));
		}
		else if(GetVehicleModel(vehicleid) == 562)
		{
			if(!style) VehicleUpgrade(vehicleid, 1034, 1036, 1038, 1040, 1147, 1149, 1171, random(2));
			else VehicleUpgrade(vehicleid, 1035, 1037, 1039, 1041, 1146, 1148, 1172, random(2));
		}
		else if(GetVehicleModel(vehicleid) == 565)
		{
			if(!style) VehicleUpgrade(vehicleid, 1046, 1048, 1050, 1052, 1054, 1150, 1152, random(2));
			else VehicleUpgrade(vehicleid, 1045, 1047, 1049, 1051, 1053, 1151, 1153, random(2));
		}
	}
	else
	{
		if(VehInfo[vehicleid][vSpoiler]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vSpoiler]);
		if(VehInfo[vehicleid][vHood]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vHood]);
		if(VehInfo[vehicleid][vSideskirt]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vSideskirt]);
		if(VehInfo[vehicleid][vNitro]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vNitro]);
		if(VehInfo[vehicleid][vLamps]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vLamps]);
		if(VehInfo[vehicleid][vExhaust]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vExhaust]);
		if(VehInfo[vehicleid][vWheels]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vWheels]);
		if(VehInfo[vehicleid][vRoof]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vRoof]);
		if(VehInfo[vehicleid][vStereo]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vStereo]);
		if(VehInfo[vehicleid][vHydraulics]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vHydraulics]);
		if(VehInfo[vehicleid][vBullbar]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vBullbar]);
		if(VehInfo[vehicleid][vRearBullbars]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vRearBullbars]);
		if(VehInfo[vehicleid][vFrontSign]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vFrontSign]);
		if(VehInfo[vehicleid][vFrontBullbars]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vFrontBullbars]);
		if(VehInfo[vehicleid][vFrontBumper]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vFrontBumper]);
		if(VehInfo[vehicleid][vRearBumper]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vRearBumper]);
		if(VehInfo[vehicleid][vVents]) AddVehicleComponent(vehicleid,VehInfo[vehicleid][vVents]);
		if(VehInfo[vehicleid][vPaintJob] != -1)ChangeVehiclePaintjob(vehicleid,VehInfo[vehicleid][vPaintJob]);
	}
	return 1;
}
public OnVehicleDeath(vehicleid, killerid)
{
	#if defined LOGGING
		printf("OVD: %d | %d", vehicleid, killerid);
	#endif
    if(VehInfo[vehicleid][vType] == VT_EVENT)
	{
		ForEachPlayer(i)
		{
			if(GetPVarInt(i,"EventCar") == vehicleid) DeletePVar(i,"EventCar");
			if(GetPVarInt(i,"CreateCar") == vehicleid) DeletePVar(i,"CreateCar");
			if(GetPVarInt(i,"BuyCar") == vehicleid) DeletePVar(i,"BuyCar");
		}
		VehInfo[vehicleid][vType] = VT_NONE;
		DestroyVehicle(vehicleid);
	}
    return 1;
}
public OnPlayerText(playerid, text[])
{
	#if defined LOGGING
		printf("OPT: %d | %s", playerid, text);
	#endif

	if(strfind(text, "[Aliance of Cheaters]Site Clan: AoC-GTA.RU[PizDoS Bot 0.3x || by AlexDrift]", true) != -1) return BanEx(playerid,"Anti PizDos");
	
	/*new iTickCount = GetTickCount();
	if(GetPVarInt(playerid, "text") > iTickCount)
	{
		if(!GetPVarInt(playerid,"Login")) return BanEx(playerid, "OnPlayertext Flood");
		else return FP_Kick(playerid, "OnPlayertext Flood", true);
	}		
	else SetPVarInt(playerid, "text", iTickCount + 25);*/

	if(!GetPVarInt(playerid,"Login"))
	{
		ErrorMes(playerid,"Для uспользованuя чата необходuмо авторuзоваться.");
		return 0;
	}
	

	if(GetPVarInt(playerid,"FLOODT") >= GetTime)
	{
	    ErrorMes(playerid,"Ты пишешь в чат слишком часто. Повтори попытку немного позже.");
	    return 0;
	}
	SetPVarInt(playerid,"FLOODT",GetTime+1);
    if(MuteInfo[playerid][mTime])
    {
		CheckMuteTime(playerid);
		return 0;
	}
	if(CheckText(playerid,text))return 0;

	new string[128];
	if(Mobile[playerid] != -1)
	{
	    if(GetPVarInt(playerid,"Mask")) format(string, sizeof(string), "Неuзвестный (в трубку):{FFFFFF} %s",text);
		else format(string, sizeof(string), "%s[%d] (в трубку):{FFFFFF} %s",PlayerInfo[playerid][pName],playerid,text);
		ProxDetector(15.0, playerid,string,COLOR_YELLOW2);
		format(string,sizeof(string),"%s[%d] (из трубки):{FFFFFF} %s",PlayerInfo[playerid][pName],playerid,text);
		SendClientMessage(Mobile[playerid],COLOR_YELLOW2,string);
	}
	else
	{
		if(GetPVarInt(playerid,"Mask")) format(string, sizeof(string), "Неuзвестный говорит:{FFFFFF} %s",text);
		else format(string, sizeof(string), "%s[%d] говорит:{FFFFFF} %s",PlayerInfo[playerid][pName],playerid,text);
		ProxDetector(15.0, playerid,string,COLOR_GREEN);
	}
	return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	#if defined LOGGING
		printf("OPEV: %d | %d | %d", playerid, vehicleid, ispassenger);
	#endif
	if(!IsValidVehicle(vehicleid) || ispassenger) return 1;
	SetPVarInt(playerid,"EnterVehicle",vehicleid);
	switch(VehInfo[vehicleid][vType])
	{
		case VT_FRACTION:
		{
			switch(VehInfo[vehicleid][vValue])
			{
				case LSPD: if(!IsACop(playerid))return VehMes(playerid,"Ты не работаешь в \"San Andreas Police Dept\".", false);
				case FBI: if(TeamInfo[playerid][tID] != FBI)return VehMes(playerid,"Ты не работаешь в \"FBI\".", false);
				case DOKI: if(TeamInfo[playerid][tID] != DOKI)return VehMes(playerid,"Ты не служишь в армuu.", false);
				case EBASE: if(TeamInfo[playerid][tID] != EBASE)return VehMes(playerid,"Ты не служишь в армuu.", false);
				case ZONE51: if(TeamInfo[playerid][tID] != ZONE51)return VehMes(playerid,"Ты не служишь в армuu.", false);
				case MEDIC: if(TeamInfo[playerid][tID] != MEDIC)return VehMes(playerid,"Ты не работаешь в \"San Andreas Medical Dept\".", false);
				case NEWS: if(TeamInfo[playerid][tID] != NEWS)return VehMes(playerid,"Ты не работаешь в \"Los Santos News\".", false);
				case LIC: if(!GetPVarInt(playerid,"TakingLesson"))return VehMes(playerid,"Этот транспорт доступен только для сдачи экзамена.", false);
				case MER: if(TeamInfo[playerid][tID] != MER)return VehMes(playerid,"Ты не работаешь в мэрuu.", false);
				case TAXI: if(TeamInfo[playerid][tID] != TAXI)return VehMes(playerid,"Ты не таксист.", false);
				case HUN: if(TeamInfo[playerid][tID] != HUN)return VehMes(playerid,"Ты не состоишь в \"Bounty Hunters\".", false);
				case HA: if(TeamInfo[playerid][tID] != HA)return VehMes(playerid,"Ты не состоишь в \"Hitman Agency\".", false);
				case LCN: if(TeamInfo[playerid][tID] != LCN)return VehMes(playerid,"Ты не состоишь в \"La Cosa Nostra\".", false);
				case YA: if(TeamInfo[playerid][tID] != YA)return VehMes(playerid,"Ты не состоишь в \"Yakuza\".", false);
				case RM: if(TeamInfo[playerid][tID] != RM)return VehMes(playerid,"Ты не состоишь в \"Russian Mafia\".", false);
				case TRIADA: if(TeamInfo[playerid][tID] != TRIADA)return VehMes(playerid,"Ты не состоишь в \"Triada\".", false);
				case GROOVE: if(TeamInfo[playerid][tID] != GROOVE)return VehMes(playerid,"Ты не состоишь в \"Grove Street Family\".", false);
				case BALLAS: if(TeamInfo[playerid][tID] != BALLAS)return VehMes(playerid,"Ты не состоишь в \"The Ballas Gang\".", false);
				case VAGOS: if(TeamInfo[playerid][tID] != VAGOS)return VehMes(playerid,"Ты не состоишь в \"Los Santos Vagos\".", false);
				case ECOR: if(TeamInfo[playerid][tID] != ECOR)return VehMes(playerid,"Ты не состоишь в \"El Coronos\".", false);
				case RIFA: if(TeamInfo[playerid][tID] != RIFA)return VehMes(playerid,"Ты не состоишь в \"Rifa Gang\".", false);
				case SRACE: if(TeamInfo[playerid][tID] != SRACE)return VehMes(playerid,"Ты не состоишь в \"Street Racers\".", false);
				case RAST: if(TeamInfo[playerid][tID] != RAST)return VehMes(playerid,"Ты не растаман.", false);
				default: return 1;
			}
		}
		case VT_JOB:
		{
			switch(VehInfo[vehicleid][vValue])
			{
				case MECH: if(PlayerInfo[playerid][pJob] != MECH)return VehMes(playerid,"Ты не механик.", false);
				case TRUCK: if(PlayerInfo[playerid][pJob] != TRUCK)return VehMes(playerid,"Ты не дальнобойщик.", false);
				case BUS: if(PlayerInfo[playerid][pJob] != BUS)return VehMes(playerid,"Ты не водитель автобуса.", false);
				
				default:return 1;
			}
		}
		default:return 1;
	}
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	#if defined LOGGING
		printf("OPSC: %d | %d | %d", playerid, newstate, oldstate);
	#endif
	for(new i; i<SYNC_TYPES; i++) SetSyncTime(playerid, i);
	PlayerInfo[playerid][pVehID] = GetPlayerVehicleID(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
	if(GetPVarInt(playerid,"ArmaMats")) DeletePVar(playerid,"ArmaMats");
	
	if(newstate == PLAYER_STATE_SPECTATING && !PlayerInfo[playerid][pAdmin]) FP_Kick(playerid,"Невидимка");
	
    if(newstate == PLAYER_STATE_DRIVER)
    {
    	if(PlayerInfo[playerid][pGun][4] == -1) SetPlayerArmedWeapon(playerid, 0);
        else SetPlayerArmedWeapon(playerid, iData[playerid][inItems][PlayerInfo[playerid][pGun][4]]);

	    if(VehInfo[PlayerInfo[playerid][pVehID]][vHealth] > 1000.0) FP_SetVehicleHealth(PlayerInfo[playerid][pVehID],1000.0);
	    else if(VehInfo[PlayerInfo[playerid][pVehID]][vHealth] < 300.0) FP_SetVehicleHealth(PlayerInfo[playerid][pVehID],300.0);

		if(!PlayerInfo[playerid][pAdmin] && GetPVarInt(playerid,"EnterVehicle") != PlayerInfo[playerid][pVehID]) 
		{
			DeletePVar(playerid,"EnterVehicle");
			Report(playerid,"подозрение на CarJack");
			return FP_RemovePlayerFromVehicle(playerid);
		}	
		DeletePVar(playerid,"EnterVehicle");

        SetPVarInt(playerid,"LastCarTime",GetTickCount());
		SetPVarInt(playerid,"LastCarForCheck",PlayerInfo[playerid][pVehID]);
		
		switch(VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType])
        {
            case 1:
            {
				if(VehInfo[PlayerInfo[playerid][pVehID]][vType] == VT_FRACTION && VehInfo[PlayerInfo[playerid][pVehID]][vValue] == LIC)
				{
					if(LicInfo[playerid][MotoLic]) return VehMes(playerid,"Этот транспорт только для сдачи экзамена.",true);
					else if(GetPVarInt(playerid,"TakingLesson") != 1) return VehMes(playerid,"У тебя нет ключей от этого транспорта.",true);
					else if(!GetPVarInt(playerid,"PracticeCP")) 
					{
						VehInfo[PlayerInfo[playerid][pVehID]][vGas] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mTank];
						VehInfo[PlayerInfo[playerid][pVehID]][vPercent] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mPercent];
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 0,ATest[0][0],ATest[0][1],ATest[0][2],ATest[1][0],ATest[1][1],ATest[1][2], 3.0);
						SetPVarInt(playerid,"PracticeCP",1);
					}	
		 		}
				else if(!LicInfo[playerid][MotoLic]) return VehMes(playerid,"У тебя нет лuцензuu на управление мотоциклом.",true);
            }
            case 2:
            {
				if(VehInfo[PlayerInfo[playerid][pVehID]][vType] == VT_FRACTION && VehInfo[PlayerInfo[playerid][pVehID]][vValue] == LIC)
				{
					if(LicInfo[playerid][AutoLic]) return VehMes(playerid,"Этот транспорт только для сдачи экзамена.",true);
					if(GetPVarInt(playerid,"TakingLesson") != 2)return VehMes(playerid,"У тебя нет ключей от этого транспорта.",true);
					else if(!GetPVarInt(playerid,"PracticeCP"))
					{
						VehInfo[PlayerInfo[playerid][pVehID]][vGas] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mTank];
						VehInfo[PlayerInfo[playerid][pVehID]][vPercent] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mPercent];
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 0,BTest[0][0],BTest[0][1],BTest[0][2],BTest[1][0],BTest[1][1],BTest[1][2], 3.0);
						SetPVarInt(playerid,"PracticeCP",1);
					}	
		 		}
				else if(!LicInfo[playerid][AutoLic]) return VehMes(playerid,"У тебя нет лuцензuu на управление автомобuлем.",true);

            }
            case 3:
            {
				if(VehInfo[PlayerInfo[playerid][pVehID]][vType] == VT_FRACTION && VehInfo[PlayerInfo[playerid][pVehID]][vValue] == LIC)
				{
					if(LicInfo[playerid][BoatLic]) return VehMes(playerid,"Этот транспорт только для сдачи экзамена.",true);
					if(GetPVarInt(playerid,"TakingLesson") != 3)return VehMes(playerid,"У тебя нет ключей от этого транспорта.",true);
					else if(!GetPVarInt(playerid,"PracticeCP"))
					{
						VehInfo[PlayerInfo[playerid][pVehID]][vGas] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mTank];
						VehInfo[PlayerInfo[playerid][pVehID]][vPercent] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mPercent];
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 0,BoatTest[0][0],BoatTest[0][1],BoatTest[0][2],BoatTest[1][0],BoatTest[1][1],BoatTest[1][2], 5.0);
						SetPVarInt(playerid,"PracticeCP",1);
					}
		 		}
				else if(!LicInfo[playerid][BoatLic]) return VehMes(playerid,"У тебя нет лuцензuu на управление водным транспортом.",true);

            }
            case 4:
            {
                if(VehInfo[PlayerInfo[playerid][pVehID]][vType] == VT_FRACTION && VehInfo[PlayerInfo[playerid][pVehID]][vValue] == LIC)
				{
					if(LicInfo[playerid][FlyLic]) return VehMes(playerid,"Этот транспорт только для сдачи экзамена.",true);
					if(GetPVarInt(playerid,"TakingLesson") != 4)return VehMes(playerid,"У тебя нет ключей от этого транспорта.",true);
					else if(!GetPVarInt(playerid,"PracticeCP"))
					{
						VehInfo[PlayerInfo[playerid][pVehID]][vGas] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mTank];
						VehInfo[PlayerInfo[playerid][pVehID]][vPercent] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mPercent];
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 0,FlyTest[0][0],FlyTest[0][1],FlyTest[0][2],FlyTest[1][0],FlyTest[1][1],FlyTest[1][2], 5.0);
						SetPVarInt(playerid,"PracticeCP",1);
					}
		 		}
				else if(!LicInfo[playerid][FlyLic]) return VehMes(playerid,"У тебя нет лuцензuu на управление воздушным транспортом.",true);

            }
			default: {}
        }
		
		switch(VehInfo[PlayerInfo[playerid][pVehID]][vType])
		{
			case VT_FRACTION:
			{
				switch(VehInfo[PlayerInfo[playerid][pVehID]][vValue])
				{
					case LSPD: if(!IsACop(playerid))return VehMes(playerid,"Ты не работаешь в \"San Andreas Police Dept\".", false);
					case FBI: if(TeamInfo[playerid][tID] != FBI)return VehMes(playerid,"Ты не работаешь в \"FBI\".", false);
					case DOKI: if(TeamInfo[playerid][tID] != DOKI)return VehMes(playerid,"Ты не служишь в армuu.", false);
					case EBASE: if(TeamInfo[playerid][tID] != EBASE)return VehMes(playerid,"Ты не служишь в армuu.", false);
					case ZONE51: if(TeamInfo[playerid][tID] != ZONE51)return VehMes(playerid,"Ты не служишь в армuu.", false);
					case MEDIC: if(TeamInfo[playerid][tID] != MEDIC)return VehMes(playerid,"Ты не работаешь в \"San Andreas Medical Dept\".", false);
					case NEWS: if(TeamInfo[playerid][tID] != NEWS)return VehMes(playerid,"Ты не работаешь в \"Los Santos News\".", false);
					case LIC: if(!GetPVarInt(playerid,"TakingLesson"))return VehMes(playerid,"Этот транспорт доступен только для сдачи экзамена.", false);
					case MER: if(TeamInfo[playerid][tID] != MER)return VehMes(playerid,"Ты не работаешь в мэрuu.", false);
					case TAXI: if(TeamInfo[playerid][tID] != TAXI)return VehMes(playerid,"Ты не таксист.", false);
					case HUN: if(TeamInfo[playerid][tID] != HUN)return VehMes(playerid,"Ты не состоишь в \"Bounty Hunters\".", false);
					case HA: if(TeamInfo[playerid][tID] != HA)return VehMes(playerid,"Ты не состоишь в \"Hitman Agency\".", false);
					case LCN: if(TeamInfo[playerid][tID] != LCN)return VehMes(playerid,"Ты не состоишь в \"La Cosa Nostra\".", false);
					case YA: if(TeamInfo[playerid][tID] != YA)return VehMes(playerid,"Ты не состоишь в \"Yakuza\".", false);
					case RM: if(TeamInfo[playerid][tID] != RM)return VehMes(playerid,"Ты не состоишь в \"Russian Mafia\".", false);
					case TRIADA: if(TeamInfo[playerid][tID] != TRIADA)return VehMes(playerid,"Ты не состоишь в \"Triada\".", false);
					case GROOVE: if(TeamInfo[playerid][tID] != GROOVE)return VehMes(playerid,"Ты не состоишь в \"Grove Street Family\".", false);
					case BALLAS: if(TeamInfo[playerid][tID] != BALLAS)return VehMes(playerid,"Ты не состоишь в \"The Ballas Gang\".", false);
					case VAGOS: if(TeamInfo[playerid][tID] != VAGOS)return VehMes(playerid,"Ты не состоишь в \"Los Santos Vagos\".", false);
					case ECOR: if(TeamInfo[playerid][tID] != ECOR)return VehMes(playerid,"Ты не состоишь в \"El Coronos\".", false);
					case RIFA: if(TeamInfo[playerid][tID] != RIFA)return VehMes(playerid,"Ты не состоишь в \"Rifa Gang\".", false);
					case SRACE: if(TeamInfo[playerid][tID] != SRACE)return VehMes(playerid,"Ты не состоишь в \"Street Racers\".", false);
					case RAST: if(TeamInfo[playerid][tID] != RAST)return VehMes(playerid,"Ты не растаман.", false);
					default: {}
				}
			}
			case VT_JOB:
			{
				switch(VehInfo[PlayerInfo[playerid][pVehID]][vValue])
				{
					case MECH: if(PlayerInfo[playerid][pJob] != MECH)return VehMes(playerid,"Ты не механик.", false);
					case TRUCK:
					{
						if(PlayerInfo[playerid][pJob] != TRUCK)return VehMes(playerid,"Ты не дальнобойщик.", false);
					}
					case BUS: 
					{
						if(PlayerInfo[playerid][pJob] != BUS)return VehMes(playerid,"Ты не водитель автобуса.", false);
					}
					default: {}
				}
			}
			case VT_OWNED:
			{
				if(strcmp(VehInfo[PlayerInfo[playerid][pVehID]][vOwner],"The State",true))
				{
					new message[64];
					format(message,sizeof(message),"Личный транспорт {33CCFF}%s{FFFFFF}.",VehInfo[PlayerInfo[playerid][pVehID]][vOwner]);
					SendClientMessage(playerid,COLOR_WHITE,message);
				}	
			}
			case VT_RENT:
			{
				if(strcmp(VehInfo[PlayerInfo[playerid][pVehID]][vOwner],"The State",true))
				{
					new message[64];
					format(message,sizeof(message),"Транспорт арендует {33CCFF}%s{FFFFFF}.",VehInfo[PlayerInfo[playerid][pVehID]][vOwner]);
					SendClientMessage(playerid,COLOR_WHITE,message);
				}	
			}
			default: {}
		}
		if(!VehInfo[PlayerInfo[playerid][pVehID]][vEngine] && !PlayerInfo[playerid][pInt])
		{
			PlayerTextDrawShow(playerid, Helper[playerid]);
			PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~VEHICLE_HANDBRAKE~~w~ ЧТОБЫ ЗАВЕСТИ ДВИГАТЕЛЬ"));
		}
		if(TextDrawInfo[playerid][SpeedTD])
		{
			SpeedometerShow(playerid);
		}
		ForEachPlayer(i) if(Spectate[i] == playerid) PlayerSpectateVehicle(i,PlayerInfo[playerid][pVehID]);

		if(strlen(VehInfo[PlayerInfo[playerid][pVehID]][Url]) > 4) return PlayAudioStreamForPlayer(playerid, VehInfo[PlayerInfo[playerid][pVehID]][Url]);
	    else if(VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType]) PlayAudioStreamForPlayer(playerid, "Для включения радио, нажми \"R\". Чтобы отключить подобные сообщения, используй \"/audiomsg\".");
		else if(strlen(PlayerInfo[playerid][pUrl]) > 4) return PlayAudioStreamForPlayer(playerid, PlayerInfo[playerid][pUrl]);
		else PlayAudioStreamForPlayer(playerid, "Чтобы отключить подобные сообщения, используй \"/audiomsg\".");
		StopAudioStreamForPlayer(playerid);

    }
    else if(newstate == PLAYER_STATE_ONFOOT)
    {
		ForEachPlayer(i) if(Spectate[i] == playerid) PlayerSpectatePlayer(i,playerid);
	}
    else if(newstate == PLAYER_STATE_PASSENGER)
	{
		if(PlayerInfo[playerid][pGun][4] == -1) SetPlayerArmedWeapon(playerid, 0);
        else SetPlayerArmedWeapon(playerid, iData[playerid][inItems][PlayerInfo[playerid][pGun][4]]);

		if(strlen(VehInfo[PlayerInfo[playerid][pVehID]][Url]) > 4) return PlayAudioStreamForPlayer(playerid, VehInfo[PlayerInfo[playerid][pVehID]][Url]);
	    else if(VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType]) PlayAudioStreamForPlayer(playerid, "Для включения радио, нажми \"R\". Чтобы отключить подобные сообщения, используй \"/audiomsg\".");
		else if(strlen(PlayerInfo[playerid][pUrl]) > 4) return PlayAudioStreamForPlayer(playerid, PlayerInfo[playerid][pUrl]);
		else PlayAudioStreamForPlayer(playerid, "Чтобы отключить подобные сообщения, используй \"/audiomsg\".");
		StopAudioStreamForPlayer(playerid);
		
	    ForEachPlayer(i)
	    {
			if(Spectate[i] == playerid) PlayerSpectateVehicle(i,PlayerInfo[playerid][pVehID]);
			
	        if(!IsPlayerInVehicle(i, PlayerInfo[playerid][pVehID]))continue;
	        if(GetPlayerState(i) != 2 || !GetPVarInt(i,"taxi"))continue;
	        if(PlayerInfo[playerid][pMoney] < TransportValue[i])
	        {
				new string[32];
	        	format(string, sizeof(string), "* Пpoeзд cтouт $%d.", TransportValue[i]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				return FP_RemovePlayerFromVehicle(playerid);
	        }
	        if(!PlayerInfo[playerid][pLevel]) return SendClientMessage(playerid,COLOR_YELLOW2,"Новичкам бесплатно.");
			
			if(GetPVarInt(playerid,"Mask")) SendClientMessage(i, COLOR_LIGHTBLUE, "* Неизвестный caдuтcя в твоё тaкси.");
			else 
			{
				new string[48];
				format(string,sizeof(string),"* %s caдuтcя в твоё тaкси.", PlayerInfo[playerid][pName]);
				SendClientMessage(i, COLOR_LIGHTBLUE,string);
			}
			TransportTime[i] = 1;
	        TransportTime[playerid] = 1;
	        TransportCost[playerid] = TransportValue[i];
	        TransportCost[i] = TransportValue[i];
	        TransportDriver[playerid] = i;
	    }
	}
	
	if(oldstate == PLAYER_STATE_DRIVER)
	{
		if(strfind(VehInfo[GetPVarInt(playerid,"LastCarForCheck")][Url],"http://music.myradio.com.ua:8000/",true) == -1 && strfind(VehInfo[GetPVarInt(playerid,"LastCarForCheck")][Url],"http://s1.radioheart.ru:8015/sstories.m3u",true) == -1 )
		strmid(VehInfo[GetPVarInt(playerid,"LastCarForCheck")][Url], "None", 0, strlen("None"),128);
		if(strlen(PlayerInfo[playerid][pUrl]) > 4) PlayAudioStreamForPlayer(playerid, PlayerInfo[playerid][pUrl]);
		else StopAudioStreamForPlayer(playerid);
		
		if(TextDrawInfo[playerid][SpeedTD])
		{
			SpeedometerHide(playerid);
		}
	
		PlayerTextDrawHide(playerid, Helper[playerid]);
		
		if((GetTickCount()-GetPVarInt(playerid,"LastCarTime")) < 110)
		{
			SetVehicleToRespawn(GetPVarInt(playerid,"LastCarForCheck"));
			if(!Warnings[playerid][CAR_JACK]) Report(playerid,"подозрение на CarSpam(CarJack)");
			Warnings[playerid][CAR_JACK]++;
			if(Warnings[playerid][CAR_JACK] >= MAX_CHECKS) return FP_Kick(playerid,"CarSpam(CarJack)");
		}
		
	    if(VehInfo[GetPVarInt(playerid,"LastCarForCheck")][vType] == VT_NONE || VehInfo[GetPVarInt(playerid,"LastCarForCheck")][vType] == VT_JOB) 
		{
			UnLockCar(-1,GetPVarInt(playerid,"LastCarForCheck"));  
		}
		if(GetPVarInt(playerid,"EventCar")) 
		{
			DestroyVehicle(GetPVarInt(playerid,"EventCar"));
			DeletePVar(playerid,"EventCar");
		}
		if(GetPVarInt(playerid,"EventStart") > GetTime && VehInfo[GetPVarInt(playerid,"LastCarForCheck")][vHealth] > 350)
		{
			ForEachEvent(i)
			{
				new message[128];
				format(message,sizeof(message),"{A020F0}%s[%d] покинул(а) ивент | Выход из транспорта.",PlayerInfo[playerid][pName],playerid);
				SendClientMessage(i,-1, message);
			}
			TextDrawHideForPlayer(playerid,DMText);
			cmd_kill(playerid,"");
			UpdateDMText();
			return 1;
		}
		if(GetPVarInt(playerid,"TypeTextDraw") == 2)
			GasTextDrawHide(playerid);

		if(GetPVarInt(playerid,"taxi"))
		{
			new string[64];
		    TaxiDrivers -= 1;
			DeletePVar(playerid,"taxi");
			format(string, sizeof(string), "* Ты закончuл(а) дежурство и заработал(а) $%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			FP_GivePlayerMoney(playerid, TransportMoney[playerid]);
			TransportValue[playerid] = 0;
			TransportMoney[playerid] = 0;
			TaxiCallTime[playerid] = 0;
			TaxiAccepted[playerid] = -1;
			Delete3DTextLabel(duty3dtext[playerid]);
		}
	}
	else if(oldstate == PLAYER_STATE_PASSENGER)
	{
		if(strlen(PlayerInfo[playerid][pUrl]) > 4) PlayAudioStreamForPlayer(playerid, PlayerInfo[playerid][pUrl]);
		else StopAudioStreamForPlayer(playerid);
		
		if(TransportCost[playerid] && TransportDriver[playerid] != -1 && IsPlayerConnected(TransportDriver[playerid]))
		{
			new string[64];
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(string, sizeof(string), "* Ты зanлaтuл(а) $%d тakcucтy.", TransportCost[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    format(string, sizeof(string), FixText("~w~оплата за проезд~n~~r~$%d"),TransportCost[playerid]);
		    GameTextForPlayer(playerid, string, 5000, 1);
		    format(string, sizeof(string), FixText("~w~пассажир вышел~n~~g~заработано $%d"),TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
		    FP_GivePlayerMoney(playerid, -TransportCost[playerid]);
			TransportCost[playerid] = 0;
			TransportTime[playerid] = 0;
			TransportDriver[playerid] = -1;
		}
	}
	return 1;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
	#if defined LOGGING
		printf("OPERC: %d", playerid);
	#endif
	if(!PlayerInfo[playerid][SyncTime][SYNC_TYPE_POS] && PlayerInfo[playerid][pAdmin] < 3)
	{
		if(!IsPlayerInRangeOfPoint(playerid,5.0,PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2]) && PlayerInfo[playerid][pSpeed] < 40)
		{
			new Float:fSpeed[3];
			if(PlayerInfo[playerid][pVehID]) GetVehicleVelocity(PlayerInfo[playerid][pVehID],fSpeed[0],fSpeed[1],fSpeed[2]);
			else GetPlayerVelocity(playerid,fSpeed[0],fSpeed[1],fSpeed[2]);
			if(!fSpeed[0] && !fSpeed[1])
			{
				if(!Warnings[playerid][TELEPORT_CP]) Report(playerid,"подозрение на Телепорт по чекпоинтам.");
				Warnings[playerid][TELEPORT_CP]++;
				if(Warnings[playerid][TELEPORT_CP] >= MAX_CHECKS)
				{
					FP_Kick(playerid,"Телепорт по чекпоинтам");
					return 1;
				}
			}	
		}	
	}
	new string[128];
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && VehInfo[PlayerInfo[playerid][pVehID]][vType] == VT_FRACTION && VehInfo[PlayerInfo[playerid][pVehID]][vValue] == LIC)
	{
		new CpID = GetPVarInt(playerid,"PracticeCP");
		if(GetPVarInt(playerid,"TakingLesson") == 1)
		{
			switch(CpID)
			{
				case 1..53:
				{
					if(IsPlayerInRangeOfPoint(playerid, 5.0, ATest[CpID-1][0],ATest[CpID-1][1],ATest[CpID-1][2]) )
					{
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 0, ATest[CpID][0],ATest[CpID][1],ATest[CpID][2],ATest[CpID+1][0],ATest[CpID+1][1],ATest[CpID+1][2], 3.0);
						SetPVarInt(playerid,"PracticeCP",CpID + 1);
						return 1;
					}
				}
				case 54:
				{
					if(IsPlayerInRangeOfPoint(playerid, 5.0, ATest[CpID-1][0],ATest[CpID-1][1],ATest[CpID-1][2]) )
					{
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 1, ATest[CpID][0],ATest[CpID][1],ATest[CpID][2],0.0,0.0,0.0, 3.0);
						SetPVarInt(playerid,"PracticeCP",CpID + 1);
						return 1;
					}
				}
				case 55:
				{
					if(IsPlayerInRangeOfPoint(playerid, 5.0, ATest[CpID-1][0],ATest[CpID-1][1],ATest[CpID-1][2]) )
					{
						if(VehInfo[PlayerInfo[playerid][pVehID]][vHealth] > 900)
						{
							SendClientMessage(playerid, 0x33CCFFFF, "* Ты успешно сдал(а) практику! Вот твоя лицензия на мотоцикл.");
							LicInfo[playerid][MotoLic] = 1;
							SetVehicleToRespawn(PlayerInfo[playerid][pVehID]);
							DeletePVar(playerid,"TakingLesson");
							DeletePVar(playerid,"PracticeCP");
							FP_DisablePlayerRaceCheckpoint(playerid);
							format(string,sizeof(string),"UPDATE `samp_licenses` SET `MotoLic`='1' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
							mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, -1, "* Ты разбuл(а) школьный транспорт u не сдал(а) практику.");
							DeletePVar(playerid,"TakingLesson");
							DeletePVar(playerid,"PracticeCP");
							FP_DisablePlayerRaceCheckpoint(playerid);
							SetVehicleToRespawn(PlayerInfo[playerid][pVehID]);
							return 1;
						}
					}
				}
				default: {}
			}
		}
		else if(GetPVarInt(playerid,"TakingLesson") == 2)
		{
			switch(CpID)
			{
				case 1..46:
				{
					if(IsPlayerInRangeOfPoint(playerid, 5.0, BTest[CpID-1][0],BTest[CpID-1][1],BTest[CpID-1][2]) )
					{
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 0, BTest[CpID][0],BTest[CpID][1],BTest[CpID][2],BTest[CpID+1][0],BTest[CpID+1][1],BTest[CpID+1][2], 3.0);
						SetPVarInt(playerid,"PracticeCP",CpID + 1);
						return 1;
					}
				}
				case 47:
				{
					if(IsPlayerInRangeOfPoint(playerid, 5.0, BTest[CpID-1][0],BTest[CpID-1][1],BTest[CpID-1][2]) )
					{
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 1, BTest[CpID][0],BTest[CpID][1],BTest[CpID][2],0.0,0.0,0.0, 3.0);
						SetPVarInt(playerid,"PracticeCP",CpID + 1);
						return 1;
					}
				}
				case 48:
				{
					if(IsPlayerInRangeOfPoint(playerid, 5.0, BTest[CpID-1][0],BTest[CpID-1][1],BTest[CpID-1][2]))
					{
						if(VehInfo[PlayerInfo[playerid][pVehID]][vHealth] > 900)
						{
							SendClientMessage(playerid, 0x33CCFFFF, "* Ты успешно сдал(а) практику! Вот твоя лицензия на автомобиль.");
							LicInfo[playerid][AutoLic] = 1;
							SetVehicleToRespawn(PlayerInfo[playerid][pVehID]);
							DeletePVar(playerid,"TakingLesson");
							DeletePVar(playerid,"PracticeCP");
							FP_DisablePlayerRaceCheckpoint(playerid);
							format(string,sizeof(string),"UPDATE `samp_licenses` SET `AutoLic`='1' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
							mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, -1, "* Ты разбuл(а) школьный транспорт u не сдал(а) практику.");
							DeletePVar(playerid,"TakingLesson");
							DeletePVar(playerid,"PracticeCP");
							FP_DisablePlayerRaceCheckpoint(playerid);
							SetVehicleToRespawn(PlayerInfo[playerid][pVehID]);
							return 1;
						}
					}
				}
				default: {}
			}
		}
		else if(GetPVarInt(playerid,"TakingLesson") == 3)
		{
			switch(CpID)
			{
				case 1..20:
				{
					if(IsPlayerInRangeOfPoint(playerid, 25.0, BoatTest[CpID-1][0],BoatTest[CpID-1][1],BoatTest[CpID-1][2]) )
					{
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 0, BoatTest[CpID][0],BoatTest[CpID][1],BoatTest[CpID][2],BoatTest[CpID+1][0],BoatTest[CpID+1][1],BoatTest[CpID+1][2], 2.0);
						SetPVarInt(playerid,"PracticeCP",CpID + 1);
						return 1;
					}
				}
				case 21:
				{
					if(IsPlayerInRangeOfPoint(playerid, 25.0, BoatTest[CpID-1][0],BoatTest[CpID-1][1],BoatTest[CpID-1][2]) )
					{
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 1, BoatTest[CpID][0],BoatTest[CpID][1],BoatTest[CpID][2],0,0,0, 2.0);
						SetPVarInt(playerid,"PracticeCP",CpID + 1);
						return 1;
					}
				}
				case 22:
				{
					if(IsPlayerInRangeOfPoint(playerid, 25.0, BoatTest[CpID-1][0],BoatTest[CpID-1][1],BoatTest[CpID-1][2]) )
					{
						if(VehInfo[PlayerInfo[playerid][pVehID]][vHealth] > 750)
						{
							SendClientMessage(playerid, 0x33CCFFFF, "* Ты успешно сдал(а) практику! Вот твоя лицензия на водный транспорт.");
							LicInfo[playerid][BoatLic] = 1;
							SetVehicleToRespawn(PlayerInfo[playerid][pVehID]);
							DeletePVar(playerid,"TakingLesson");
							DeletePVar(playerid,"PracticeCP");
							FP_DisablePlayerRaceCheckpoint(playerid);
							format(string,sizeof(string),"UPDATE `samp_licenses` SET `BoatLic`='1' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
							mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, -1, "* Ты разбuл(а) школьный транспорт u не сдал(а) практику.");
							DeletePVar(playerid,"TakingLesson");
							DeletePVar(playerid,"PracticeCP");
							FP_DisablePlayerRaceCheckpoint(playerid);
							SetVehicleToRespawn(PlayerInfo[playerid][pVehID]);
							return 1;
						}
					}
				}
				default: {}
			}
		}
		else if(GetPVarInt(playerid,"TakingLesson") == 4)
		{
			switch(CpID)
			{
				case 1..9:
				{
					if(IsPlayerInRangeOfPoint(playerid, 25.0, FlyTest[CpID-1][0],FlyTest[CpID-1][1],FlyTest[CpID-1][2]) )
					{
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 3, FlyTest[CpID][0],FlyTest[CpID][1],FlyTest[CpID][2],FlyTest[CpID+1][0],FlyTest[CpID+1][1],FlyTest[CpID+1][2], 5.0);
						SetPVarInt(playerid,"PracticeCP",CpID + 1);
						return 1;
					}
				}
				case 10:
				{
					if(IsPlayerInRangeOfPoint(playerid, 25.0, FlyTest[CpID-1][0],FlyTest[CpID-1][1],FlyTest[CpID-1][2]) )
					{
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 0, FlyTest[CpID][0],FlyTest[CpID][1],FlyTest[CpID][2],FlyTest[CpID+1][0],FlyTest[CpID+1][1],FlyTest[CpID+1][2], 5.0);
						SetPVarInt(playerid,"PracticeCP",CpID + 1);
						return 1;
					}
				}
				case 11:
				{
					if(IsPlayerInRangeOfPoint(playerid, 25.0, FlyTest[CpID-1][0],FlyTest[CpID-1][1],FlyTest[CpID-1][2]) )
					{
						FP_DisablePlayerRaceCheckpoint(playerid);
						FP_SetPlayerRaceCheckpoint(playerid, 1, FlyTest[CpID][0],FlyTest[CpID][1],FlyTest[CpID][2],0,0,0, 5.0);
						SetPVarInt(playerid,"PracticeCP",CpID + 1);
						return 1;
					}
				}
				case 12:
				{
					if(IsPlayerInRangeOfPoint(playerid, 25.0, FlyTest[CpID-1][0],FlyTest[CpID-1][1],FlyTest[CpID-1][2]) )
					{
						if(VehInfo[PlayerInfo[playerid][pVehID]][vHealth] > 450)
						{
							SendClientMessage(playerid, 0x33CCFFFF, "* Ты успешно сдал(а) практику! Вот твоя лицензия на воздушный транспорт.");
							LicInfo[playerid][FlyLic] = 1;
							SetVehicleToRespawn(PlayerInfo[playerid][pVehID]);
							DeletePVar(playerid,"TakingLesson");
							DeletePVar(playerid,"PracticeCP");
							FP_DisablePlayerRaceCheckpoint(playerid);
							format(string,sizeof(string),"UPDATE `samp_licenses` SET `FlyLic`='1' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
							mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
							return 1;
						}
						else
						{
							SendClientMessage(playerid, -1, "* Ты разбuл(а) школьный транспорт u не сдал(а) практику.");
							DeletePVar(playerid,"TakingLesson");
							DeletePVar(playerid,"PracticeCP");
							FP_DisablePlayerRaceCheckpoint(playerid);
							SetVehicleToRespawn(PlayerInfo[playerid][pVehID]);
							return 1;
						}
					}
				}
				default: {}
			}
		}
	}	
	if(GetPVarInt(playerid,"StartJob") && IsPlayerInRangeOfPoint(playerid,10.0,GetPVarFloat(playerid,"JobX"),GetPVarFloat(playerid,"JobY"),GetPVarFloat(playerid,"JobZ")))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)return ErrorMes(playerid,"Ты должен быть в транспорте.");
		if(PlayerInfo[playerid][pJob] == JACK)
		{

			new Money = VIPMoney(PremiumInfo[playerid][Level], 5000);
			FP_GivePlayerMoney(playerid, Money); //Вип-Деньги
			PlayerInfo[playerid][pJobTime] = 900;
			format(string,sizeof(string),"Ты заработал(а) $%d, новый заказ через 15 минут.",Money);
			JobMes(playerid,string);

			SetVehicleToRespawn(PlayerInfo[playerid][pVehID]);
			DeletePVar(playerid,"JobX");
			DeletePVar(playerid,"JobY");
			DeletePVar(playerid,"JobZ");
			DeletePVar(playerid,"StartJob");
			FP_DisablePlayerRaceCheckpoint(playerid);
			return 1;
		}
		else if(PlayerInfo[playerid][pJob] == TRUCK)
		{
			if(VehInfo[PlayerInfo[playerid][pVehID]][vType] != VT_JOB || VehInfo[PlayerInfo[playerid][pVehID]][vValue] != TRUCK || GetPlayerState(playerid) != PLAYER_STATE_DRIVER || GetVehicleTrailer(PlayerInfo[playerid][pVehID]) != GetPVarInt(playerid,"Trailer"))
			{
				DeletePVar(playerid,"JobX");
				DeletePVar(playerid,"JobY");
				DeletePVar(playerid,"JobZ");
				DeletePVar(playerid,"StartJob");
				DeletePVar(playerid,"Trailer");
				SetVehicleToRespawn(GetVehicleTrailer(PlayerInfo[playerid][pVehID]));
				FP_DisablePlayerRaceCheckpoint(playerid);
				FP_GivePlayerMoney(playerid, -2500);
				return JobMes(playerid,"Ты не доставuл(а) груз, u заплатuл(а) издержку $2500");
			}
			
			new Money = VIPMoney(PremiumInfo[playerid][Level], 5000);
			FP_GivePlayerMoney(playerid, Money);
			PlayerInfo[playerid][pJobTime] = 600;
			JobMes(playerid, "Поздравляю, ты успешно доставuл(а) груз. Новый контракт через 10 минут.");

			DeletePVar(playerid,"JobX");
			DeletePVar(playerid,"JobY");
			DeletePVar(playerid,"JobZ");
			DeletePVar(playerid,"StartJob");
			DeletePVar(playerid,"Trailer");
			SetVehicleToRespawn(GetVehicleTrailer(PlayerInfo[playerid][pVehID]));
			FP_DisablePlayerRaceCheckpoint(playerid);
		}
	}
	if(GetPVarInt(playerid,"OnJob") == J_LOADER)
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
		if(!GetPVarInt(playerid,"AttachObject"))
		{
			FP_DisablePlayerRaceCheckpoint(playerid);
			ApplyAnimation(playerid,"CARRY","liftup",4.0,0,1,1,0,0,1);
			SetTimerEx("StopAnim",600,0,"d",playerid);
		}
		else if(GetPVarInt(playerid,"AttachObject")  && IsPlayerInRangeOfPoint(playerid,2.0, 2175.8721,-2248.8452,13.3043))
		{
			if(GetPVarInt(playerid,"CheckLoader") > GetTime) return FP_Kick(playerid,"Турбо грузчик");
			AddPVarInt(playerid,"JobAmmount",1);
			AddPVarInt(playerid,"JobPrice",VIPMoney(PremiumInfo[playerid][Level],20));
			//ServerInfo[Loader] += 25;
			//format(string, sizeof(string), "{FFD700}Продуктовый склад\n{00CC00}%d {FFFFFF}/ {00CC00}%d {FFFFFF}кг", ServerInfo[Loader],ServerInfo[LoaderMax]);
			//UpdateDynamic3DTextLabelText(ServerInfo[LoaderText],-1,string);
			format(string, sizeof(string), "~b~$%d", GetPVarInt(playerid,"JobPrice"));
			GameTextForPlayer(playerid, string, 2500, 1);
			ApplyAnimation(playerid,"ped","IDLE_tired",4.0,0,1,1,0,0,1);
			SetTimerEx("StopAnim",1000,0,"d",playerid);
			FP_DisablePlayerRaceCheckpoint(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
			switch(random(3))
			{
			    case 0:FP_SetPlayerRaceCheckpoint(playerid,1,2194.0007,-2284.9656,15.9408,0.0,0.0,0.0,1.5);
			    case 1:FP_SetPlayerRaceCheckpoint(playerid,1,2188.4128,-2297.6790,13.6695,0.0,0.0,0.0,1.5);
			    case 2:FP_SetPlayerRaceCheckpoint(playerid,1,2183.1956,-2301.5183,13.6695,0.0,0.0,0.0,1.5);
			}
			
		}
	}
	else if(GetPVarInt(playerid,"OnJob") == J_FOREST)
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
		if(!GetPVarInt(playerid,"AttachObject") )
		{
			FP_DisablePlayerRaceCheckpoint(playerid);
			TogglePlayerControllable(playerid,false);
			SetPlayerAttachedObject(playerid, 0, 341, 6, 0.000000,0.000000,0.000000, 0.000000,0.000000,0.000000, 1.000000,1.000000,1.000000 );  
			ApplyAnimation(playerid,"CHAINSAW","CSAW_1",4.0,1,1,1,0,0,1);
			SetPlayerFacingAngle(playerid, ForestPos[GetPVarInt(playerid,"ForestPlace")][3]);
			SetTimerEx("StopAnim",5000,0,"d",playerid);
		}
		else if(GetPVarInt(playerid,"AttachObject")  && IsPlayerInRangeOfPoint(playerid,2.0, -2000.9612,-2378.0244,30.6250))
		{
			if(GetPVarInt(playerid,"CheckLoader") > GetTime) return FP_Kick(playerid,"Турбо лесоруб");
			AddPVarInt(playerid,"JobAmmount",1);
			AddPVarInt(playerid,"JobPrice",VIPMoney(PremiumInfo[playerid][Level],25));
			//ServerInfo[Forest] += 25;
			//format(string, sizeof(string), "{FFD700}Cклад древесины\n{00CC00}%d {FFFFFF}/ {00CC00}%d {FFFFFF}кг", ServerInfo[Forest],ServerInfo[ForestMax]);
			//UpdateDynamic3DTextLabelText(ServerInfo[ForestText],-1,string);
			format(string, sizeof(string), "~b~$%d", GetPVarInt(playerid,"JobPrice"));
			GameTextForPlayer(playerid, string, 2500, 1);
			ApplyAnimation(playerid,"ped","IDLE_tired",4.0,0,1,1,0,0,1);
			SetTimerEx("StopAnim",1000,0,"d",playerid);
			FP_DisablePlayerRaceCheckpoint(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
			SetPVarInt(playerid,"ForestPlace",random(5));
			FP_SetPlayerRaceCheckpoint(playerid, 1, ForestPos[GetPVarInt(playerid,"ForestPlace")][0], ForestPos[GetPVarInt(playerid,"ForestPlace")][1], ForestPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
			
		}
	}
	else if(GetPVarInt(playerid,"OnJob") == J_STEEL)
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
		if(!GetPVarInt(playerid,"AttachObject") )
		{
			FP_DisablePlayerRaceCheckpoint(playerid);
			TogglePlayerControllable(playerid,false);
			SetPlayerAttachedObject( playerid, 0, 18634, 6, 0.078, 0.0, 0.111, 298.897, 264.126861, 193.350555, 1.0, 1.0, 1.0);
			ApplyAnimation(playerid,"BASEBALL","BAT_4",4.0,1,1,1,0,0,1);
			SetPlayerFacingAngle(playerid, SteelPos[GetPVarInt(playerid,"ForestPlace")][3]);
			SetTimerEx("StopAnim",5000,0,"d",playerid);
		}
		else if(GetPVarInt(playerid,"AttachObject")  && IsPlayerInRangeOfPoint(playerid,2.0, -1865.8008,-1618.8795,21.8601))
		{
			if(GetPVarInt(playerid,"CheckLoader") > GetTime) return FP_Kick(playerid,"Турбо шахтер");
			AddPVarInt(playerid,"JobAmmount",1);
			AddPVarInt(playerid,"JobPrice",VIPMoney(PremiumInfo[playerid][Level],25));
			//ServerInfo[Steel] += 25;
			//format(string, sizeof(string), "{FFD700}Cклад руды\n{00CC00}%d {FFFFFF}/ {00CC00}%d {FFFFFF}кг", ServerInfo[Steel],ServerInfo[SteelMax]);
			//UpdateDynamic3DTextLabelText(ServerInfo[SteelText],-1,string);
			format(string, sizeof(string), "~b~$%d", GetPVarInt(playerid,"JobPrice"));
			GameTextForPlayer(playerid, string, 2500, 1);
			ApplyAnimation(playerid,"ped","IDLE_tired",4.0,0,1,1,0,0,1);
			SetTimerEx("StopAnim",1000,0,"d",playerid);
			FP_DisablePlayerRaceCheckpoint(playerid);
			if(IsPlayerAttachedObjectSlotUsed(playerid,0)) RemovePlayerAttachedObject(playerid,0);
			SetPVarInt(playerid,"ForestPlace",random(5));
			FP_SetPlayerRaceCheckpoint(playerid, 1, SteelPos[GetPVarInt(playerid,"ForestPlace")][0], SteelPos[GetPVarInt(playerid,"ForestPlace")][1], SteelPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
			
		}
	}
	
	else if(GetPVarInt(playerid,"EventStart") > GetTime)
	{
		
		switch(EventType)
		{
			case 2:
			{
				new CpID = GetPVarInt(playerid,"EventCP");
				switch(CpID)
				{
					case 1..5:
					{
						if(IsPlayerInRangeOfPoint(playerid, 12.0, HotRingCP[CpID-1][0],HotRingCP[CpID-1][1],HotRingCP[CpID-1][2]) )
						{
							FP_DisablePlayerRaceCheckpoint(playerid);
							FP_SetPlayerRaceCheckpoint(playerid, 0, HotRingCP[CpID][0],HotRingCP[CpID][1],HotRingCP[CpID][2],HotRingCP[CpID+1][0],HotRingCP[CpID+1][1],HotRingCP[CpID+1][2], 7.0);
							SetPVarInt(playerid,"EventCP",CpID + 1);
							return 1;
						}
					}
					case 6:
					{
						if(IsPlayerInRangeOfPoint(playerid, 12.0, HotRingCP[CpID-1][0],HotRingCP[CpID-1][1],HotRingCP[CpID-1][2]) )
						{
							FP_DisablePlayerRaceCheckpoint(playerid);
							if(GetPVarInt(playerid,"EventLaps") < 4) FP_SetPlayerRaceCheckpoint(playerid, 0, HotRingCP[CpID][0],HotRingCP[CpID][1],HotRingCP[CpID][2],HotRingCP[0][0],HotRingCP[0][1],HotRingCP[0][2], 7.0);
							else FP_SetPlayerRaceCheckpoint(playerid, 1, HotRingCP[CpID][0],HotRingCP[CpID][1],HotRingCP[CpID][2],HotRingCP[0][0],HotRingCP[0][1],HotRingCP[0][2], 7.0);
							SetPVarInt(playerid,"EventCP",CpID + 1);
							return 1;
						}
					}
					case 7:
					{
						if(IsPlayerInRangeOfPoint(playerid, 12.0, HotRingCP[CpID-1][0],HotRingCP[CpID-1][1],HotRingCP[CpID-1][2]) )
						{
							AddPVarInt(playerid,"EventLaps",1);
							format(string,sizeof(string),FixText("Круг %d из 5 завершен"),GetPVarInt(playerid,"EventLaps"));
							GameTextForPlayer(playerid,string,5000,4);
							if(GetPVarInt(playerid,"EventLaps") < 5)
							{
								SetPVarInt(playerid,"EventCP",1);
								FP_DisablePlayerRaceCheckpoint(playerid);
								FP_SetPlayerRaceCheckpoint(playerid, 0, HotRingCP[0][0],HotRingCP[0][1],HotRingCP[0][2],HotRingCP[1][0],HotRingCP[1][1],HotRingCP[1][2], 7.0);
							}
							else 
							{
																
								EventFinish ++;
								
								format(string,sizeof(string),"{A020F0}%s занял(а) на \"8-Track Race\" %d место.",PlayerInfo[playerid][pName],EventFinish);
								SendClientMessageToAll(-1,string);
								
								if(EventFinish < 3 && EventPlayers > 1)
								{
									FP_GivePlayerMoney(playerid, VIPMoney(PremiumInfo[playerid][Level],floatround(7500/EventFinish))); //Вип-Деньги
									SetPlayerPos(playerid,PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2]);
									TextDrawHideForPlayer(playerid, DMText);
									cmd_kill(playerid,"");
								}
								else
								{
									FP_GivePlayerMoney(playerid, VIPMoney(PremiumInfo[playerid][Level],floatround(7500/EventFinish))); //Вип-Деньги
									ForEachEvent(i) 
									{
										SetPlayerPos(i,PlayerInfo[i][pPos][0],PlayerInfo[i][pPos][1],PlayerInfo[i][pPos][2]);
										FP_DisablePlayerRaceCheckpoint(i);
										DeletePVar(i,"EventCP");
										if(GetPVarInt(i,"EventCar")) 
										{
											DestroyVehicle(GetPVarInt(i,"EventCar"));
											DeletePVar(i,"EventCar");
										}
										SpawnPlayer(i);
									}	
									ForEachPlayer(i) DeletePVar(i,"EventStart");
									TextDrawDestroy(DMText);
									EventPlayers = 0;
									return 1;
								}
								UpdateDMText();
								DeletePVar(playerid,"EventCP");
								FP_DisablePlayerRaceCheckpoint(playerid);
								DestroyVehicle(PlayerInfo[playerid][pVehID]);
							}	
							return 1;
						}
					}
					default: {}
				}
			}
			case 3:
			{
				new CpID = GetPVarInt(playerid,"EventCP");
				switch(CpID)
				{
					case 1..5:
					{
						if(IsPlayerInRangeOfPoint(playerid, 12.0, DirtBikeCP[CpID-1][0],DirtBikeCP[CpID-1][1],DirtBikeCP[CpID-1][2]) )
						{
							FP_DisablePlayerRaceCheckpoint(playerid);
							FP_SetPlayerRaceCheckpoint(playerid, 0, DirtBikeCP[CpID][0],DirtBikeCP[CpID][1],DirtBikeCP[CpID][2],DirtBikeCP[CpID+1][0],DirtBikeCP[CpID+1][1],DirtBikeCP[CpID+1][2], 7.0);
							SetPVarInt(playerid,"EventCP",CpID + 1);
							return 1;
						}
					}
					case 6:
					{
						if(IsPlayerInRangeOfPoint(playerid, 12.0, DirtBikeCP[CpID-1][0],DirtBikeCP[CpID-1][1],DirtBikeCP[CpID-1][2]) )
						{
							FP_DisablePlayerRaceCheckpoint(playerid);
							if(GetPVarInt(playerid,"EventLaps") < 4) FP_SetPlayerRaceCheckpoint(playerid, 0, DirtBikeCP[CpID][0],DirtBikeCP[CpID][1],DirtBikeCP[CpID][2],DirtBikeCP[0][0],DirtBikeCP[0][1],DirtBikeCP[0][2], 7.0);
							else FP_SetPlayerRaceCheckpoint(playerid, 1, DirtBikeCP[CpID][0],DirtBikeCP[CpID][1],DirtBikeCP[CpID][2],DirtBikeCP[0][0],DirtBikeCP[0][1],DirtBikeCP[0][2], 7.0);
							SetPVarInt(playerid,"EventCP",CpID + 1);
							return 1;
						}
					}
					case 7:
					{
						if(IsPlayerInRangeOfPoint(playerid, 12.0, DirtBikeCP[CpID-1][0],DirtBikeCP[CpID-1][1],DirtBikeCP[CpID-1][2]) )
						{
							AddPVarInt(playerid,"EventLaps",1);
							format(string,sizeof(string),FixText("Круг %d из 5 завершен"),GetPVarInt(playerid,"EventLaps"));
							GameTextForPlayer(playerid,string,5000,4);
							if(GetPVarInt(playerid,"EventLaps") < 5)
							{
								SetPVarInt(playerid,"EventCP",1);
								FP_DisablePlayerRaceCheckpoint(playerid);
								FP_SetPlayerRaceCheckpoint(playerid, 0, DirtBikeCP[0][0],DirtBikeCP[0][1],DirtBikeCP[0][2],DirtBikeCP[1][0],DirtBikeCP[1][1],DirtBikeCP[1][2], 7.0);
							}
							else 
							{						
								EventFinish ++;
								
								format(string,sizeof(string),"{A020F0}%s занял(а) на \"DirtBike Race\" %d место.",PlayerInfo[playerid][pName],EventFinish);
								SendClientMessageToAll(-1,string);
								
								if(EventFinish < 3 && EventPlayers > 1)
								{
									FP_GivePlayerMoney(playerid, VIPMoney(PremiumInfo[playerid][Level],floatround(7500/EventFinish))); //Вип-Деньги
									SetPlayerPos(playerid,PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2]);
									TextDrawHideForPlayer(playerid, DMText);
									cmd_kill(playerid,"");
								}
								else
								{
									FP_GivePlayerMoney(playerid, VIPMoney(PremiumInfo[playerid][Level],floatround(7500/EventFinish))); //Вип-Деньги
									ForEachEvent(i) 
									{
										SetPlayerPos(i,PlayerInfo[i][pPos][0],PlayerInfo[i][pPos][1],PlayerInfo[i][pPos][2]);
										FP_DisablePlayerRaceCheckpoint(i);
										DeletePVar(i,"EventCP");
										if(GetPVarInt(i,"EventCar")) 
										{
											DestroyVehicle(GetPVarInt(i,"EventCar"));
											DeletePVar(i,"EventCar");
										}
										SpawnPlayer(i);
									}	
									ForEachPlayer(i) DeletePVar(i,"EventStart");
									TextDrawDestroy(DMText);
									EventPlayers = 0;
									return 1;
								}
								UpdateDMText();
								DeletePVar(playerid,"EventCP");
								FP_DisablePlayerRaceCheckpoint(playerid);
								DestroyVehicle(PlayerInfo[playerid][pVehID]);
							}	
							return 1;
						}
					}
					default: {}
				}
			}
			default:return 1;
		}
	}
	else if(GetPVarInt(playerid,"Mech") == 1) MechanicCallTime[playerid] = 0;
	else if(GetPVarInt(playerid,"medic") == 1) MedicCallTime[playerid] = 0;
	else if(TaxiCallTime[playerid] && TaxiAccepted[playerid] != -1)
	{
	    TaxiAccepted[playerid] = -1;
		TaxiCallTime[playerid] = 0;
		FP_DisablePlayerRaceCheckpoint(playerid);
	}
	else FP_DisablePlayerRaceCheckpoint(playerid);
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	#if defined LOGGING
		printf("OPUP: %d | %d", playerid, pickupid);
	#endif
	for(new i;i<sizeof(Mats);i++)
	{
	    if(pickupid == Mats[i])
	    {
			if(TeamInfo[playerid][tID] < LCN)return ErrorMes(playerid, "Воровать матерuалы могут только мафuu u банды.");

	        if(PlayerInfo[playerid][pMats] != -1 && iData[playerid][inValue][PlayerInfo[playerid][pMats]] >= 3000)
	        	return ErrorMes(playerid, "Ты не можешь взять больше.");

	        if(PlayerInfo[playerid][pMatsTime] > 0)return CheckMatsTime(playerid);

			AddItem(playerid, 21, 500);
			PlayerInfo[playerid][pMatsTime] = 3600;
			
			SendClientMessage(playerid,COLOR_WHITE,"Ты взял(а) матерuалы со склада армuu.");
			return 1;
	    }
	}

	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	#if defined LOGGING
		printf("OVM: %d | %d | %d", playerid, vehicleid, componentid);
	#endif
	if(!(IsPlayerInRangeOfPoint(playerid,15.0,616.7820,-74.8151,997.6350) || IsPlayerInRangeOfPoint(playerid,15.0,615.2851,-124.2390,997.6350) ||
	IsPlayerInRangeOfPoint(playerid,15.0,617.5380,-1.9900,1000.6829)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || !PlayerInfo[playerid][pInt])
	{
	    SetVehicleToRespawn(vehicleid);
		FP_Kick(playerid,"Тюнинг");
		return 0;
	}
    if(!strcmp(VehInfo[vehicleid][vOwner],PlayerInfo[playerid][pName],true))
	{
		new string[128];
		switch(componentid)
		{
			case 1000..1003,1014..1016,1023,1049,1050,1058,1060,1138,1139,1146,1147,1158,1162..1164:
			{
				VehInfo[vehicleid][vSpoiler] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Spoiler` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1004,1005,1011,1012:
			{
				VehInfo[vehicleid][vHood] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Hood` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1007,1017,1026,1027,1030,1031,1036,1039..1042,1047,1048,1051,1052,1056,1057,1062,1063,1069..1072,1090,1093..1095,
				 1099,1101,1102,1106..1108,1119..1122,1124,1133,1134,1137:
			{
				VehInfo[vehicleid][vSideskirt] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Sideskirt` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1008..1010:
			{
				VehInfo[vehicleid][vNitro] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Nitro` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1013,1024:
			{
				VehInfo[vehicleid][vLamps] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Lamps` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1018..1022,1028,1029,1034,1037,1043..1046,1059,1064..1066,1089,1092,1104,1105,1113,1114,1126,1127,1129,1132,1135,1136:
			{
				VehInfo[vehicleid][vExhaust] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Exhaust` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1025,1073..1085,1096..1098:
			{
				VehInfo[vehicleid][vWheels] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Wheels` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1006,1032,1033,1035,1038,1053..1055,1061,1067,1068,1088,1091,1103,1128,1130,1131:
			{
				VehInfo[vehicleid][vRoof] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Roof` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}	
			case 1086:
			{
				VehInfo[vehicleid][vStereo] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Stereo` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1087:
			{
				VehInfo[vehicleid][vHydraulics] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Hydraulics` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1100,1123,1125:
			{
				VehInfo[vehicleid][vBullbar] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Bullbar` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1109,1110:
			{
				VehInfo[vehicleid][vRearBullbars] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `RearBullbars` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1111,1112:
			{
				VehInfo[vehicleid][vFrontSign] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `FrontSign` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1115,1116:
			{
				VehInfo[vehicleid][vFrontBullbars] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `FrontBullbars` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1117,1152,1153,1155,1157,1160,1165,1166 ,1169..1174,1176,1179,1181,1182,1185,1188..1191:
			{
				VehInfo[vehicleid][vFrontBumper] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `FrontBumper` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1140,1141,1148..1151,1154,1156,1159,1161,1167,1168,1175,1177,1178,1180,1183,1184,1186,1187,1192,1193:
			{
				VehInfo[vehicleid][vRearBumper] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `RearBumper` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			case 1142..1145:
			{
				VehInfo[vehicleid][vVents] = componentid;
				format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Vents` = '%d' WHERE `ID` = '%d'",componentid,VehInfo[vehicleid][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}	
			default: return 0;
		}
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	#if defined LOGGING
		printf("OVPJ: %d | %d | %d", playerid, vehicleid, paintjobid);
	#endif
	FP_SetVehicleHealth(vehicleid,1000.0);
    if(!strcmp(VehInfo[vehicleid][vOwner],PlayerInfo[playerid][pName],true))
    {
		new string[128];
		VehInfo[vehicleid][vPaintJob] = paintjobid;
		format(string,sizeof(string),"UPDATE `samp_vehicles` SET `PaintJob` = '%d' WHERE `ID` = '%d'",paintjobid,VehInfo[vehicleid][vID]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	#if defined LOGGING
		printf("OVR: %d | %d | %d | %d", playerid, vehicleid, color1, color2);
	#endif
	FP_SetVehicleHealth(vehicleid,1000.0);
    if(!strcmp(VehInfo[vehicleid][vOwner],PlayerInfo[playerid][pName],true))
	{
		new string[128];
	    VehInfo[vehicleid][vColor1] = color1;
	    VehInfo[vehicleid][vColor2] = color2;
		format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Color1` = '%d',`Color2` = '%d' WHERE `ID` = '%d'",color1,color2,VehInfo[vehicleid][vID]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	}
	return 1;
}
public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	#if defined LOGGING
		printf("OPIC: %d | %d | %d", playerid, newinteriorid, oldinteriorid);
	#endif
	PlayerInfo[playerid][pInt] = newinteriorid;
    //SetSyncTime(playerid, SYNC_TYPE_POS);
    if(JailInfo[playerid][jTime]) Jail(playerid);
	if(GetPVarInt(playerid,"Snow"))
	{
	    if(newinteriorid) DeleteSnow(playerid);
		else CreateSnow(playerid);
	}
    ForEachPlayer(i) if(Spectate[i] == playerid)
    {
		FP_SetPlayerInterior(i,PlayerInfo[playerid][pInt]);
		FP_SetPlayerVirtualWorld(i,PlayerInfo[playerid][pWorld]);
	}
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	#if defined LOGGING
		//printf("OPKSC: %d | %d | %d", playerid, killerid, reason);
	#endif
    //new __string[48]; format(__string,sizeof(__string),"( NEW: %d | OLD: %d )",newkeys,oldkeys); SendClientMessage(playerid,-1,__string);
    if(GetPVarInt(playerid,"MaloHP") && newkeys != 2 && newkeys != 1024) return ApplyAnimation(playerid,"CRACK","crckdeth2",4.0,1,0,0,0,0,1);
	
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	{
		if(Spectate[playerid] != -1)
		{
			if(newkeys == 32) // Шифт
			{
				SetPVarInt(playerid, "TypeTextDraw", 3);
				SelectTextDraw(playerid, 0x008000FF);
				for(new i = 0; i < 8; i ++) TextDrawShowForPlayer(playerid,SpecTD[i]);
			}
			if(newkeys == 8) // Пробел
			{
				if(!PlayerInfo[Spectate[playerid]][pVehID]) PlayerSpectatePlayer(playerid,Spectate[playerid]);
				else PlayerSpectateVehicle(playerid,PlayerInfo[Spectate[playerid]][pVehID]);
				FP_SetPlayerInterior(playerid,PlayerInfo[Spectate[playerid]][pInt]);
				FP_SetPlayerVirtualWorld(playerid,PlayerInfo[Spectate[playerid]][pWorld]);
			}
		}	
	}
	else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(newkeys == KEY_CTRL_BACK)
		{
			if(GetVehicleModel(PlayerInfo[playerid][pVehID]) && VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType])
			{
				return ShowDialog(playerid,D_RADIO);
			}	
		}
		else if(newkeys & KEY_SUBMISSION)
		{
			switch(VehInfo[PlayerInfo[playerid][pVehID]][vType])
			{
				case VT_FRACTION:
				{
					switch(VehInfo[PlayerInfo[playerid][pVehID]][vValue])
					{
						case TAXI,MEDIC:return ShowControlAutoDialogJob(playerid,PlayerInfo[playerid][pVehID]);
						default:return ShowControlAutoDialog(playerid,PlayerInfo[playerid][pVehID]);
					}
				}
				case VT_JOB:
				{
					switch(VehInfo[PlayerInfo[playerid][pVehID]][vValue])
					{
						case MECH,TRUCK:return ShowControlAutoDialogJob(playerid,PlayerInfo[playerid][pVehID]);
						default:return ShowControlAutoDialog(playerid,PlayerInfo[playerid][pVehID]);
					}
				}
				case VT_OWNED,VT_RENT:
				{
					if(PlayerInfo[playerid][pJob] != JACK)return ShowControlAutoDialog(playerid,PlayerInfo[playerid][pVehID]);
					else return ShowControlAutoDialogJob(playerid,PlayerInfo[playerid][pVehID]);
				}
				default:return ShowControlAutoDialog(playerid,PlayerInfo[playerid][pVehID]);
			}
		}
		else if(newkeys & KEY_HANDBRAKE)
	    {
			if(!VehInfo[PlayerInfo[playerid][pVehID]][vEngine])
			{
				EngineOn(playerid,PlayerInfo[playerid][pVehID]);
				PlayerTextDrawHide(playerid, Helper[playerid]);
				return 1;
			}	
		}
		else if(newkeys & KEY_CROUCH)
		{
			PlayerTextDrawHide(playerid, Helper[playerid]);
			if(GetPVarInt(playerid,"GateCheck") == 1)
			{
				SetPVarInt(playerid,"GateCheck",2);
				OpenGate(playerid);
				return 1;
			}
			else if(GetPVarInt(playerid,"GasCheck") == 1)
			{
				//if(VehInfo[PlayerInfo[playerid][pVehID]][vEngine]) return ErrorMes(playerid,"Для заправки необходимо заглушить двигатель.");
				/*for(new i; i<GASSTATIONS; i++)
				{
					if(GasInfo[i][ID] != CheckpointInfo[GetPVarInt(playerid,"CheckpointID")][Value])continue;
					if(GasInfo[i][Status] == 0 || GasInfo[i][Status] == 2) return SendClientMessage(playerid,-1,"{FF0000}(X){FFFFFF} Данная заправочная странция закрыта в данный момент.");
					SetPVarInt(playerid,"GasStationID",i);
				}*/
				new vehicleid = PlayerInfo[playerid][pVehID], model = GetVehicleModel(vehicleid)-400;
				if(!vehicleid || model < 0 || !VehMInfo[model][mLicType] || VehMInfo[model][mLicType] > 2) return 1;

				SetPVarInt(playerid,"TypeTextDraw", 2);
				SetPVarInt(playerid,"GasType", VehMInfo[model][mGasType]);

				for(new i; i<10; i++) TextDrawShowForPlayer(playerid,GasBox[i]);
				EngineOff(-1,PlayerInfo[playerid][pVehID]);
				
				GasBoxEx[playerid][0] = CreatePlayerTextDraw(playerid, 271.000000, 341.000000, "_");
				PlayerTextDrawBackgroundColor(playerid, GasBoxEx[playerid][0], 255);
				PlayerTextDrawFont(playerid, GasBoxEx[playerid][0], 1);
				PlayerTextDrawLetterSize(playerid, GasBoxEx[playerid][0], 0.5, 0.699999);
				PlayerTextDrawColor(playerid, GasBoxEx[playerid][0], -1);
				PlayerTextDrawSetOutline(playerid, GasBoxEx[playerid][0], 0);
				PlayerTextDrawSetProportional(playerid, GasBoxEx[playerid][0], 1);
				PlayerTextDrawSetShadow(playerid, GasBoxEx[playerid][0], 1);
				PlayerTextDrawUseBox(playerid, GasBoxEx[playerid][0], 1);
				PlayerTextDrawBoxColor(playerid, GasBoxEx[playerid][0], 16714390);
				PlayerTextDrawTextSize(playerid, GasBoxEx[playerid][0], 271.0, -1.000000);
				PlayerTextDrawShow(playerid, GasBoxEx[playerid][0]);
				
				GasBoxEx[playerid][1] = CreatePlayerTextDraw(playerid, 320.000000, 339.000000, "_");
				PlayerTextDrawAlignment(playerid, GasBoxEx[playerid][1], 2);
				PlayerTextDrawBackgroundColor(playerid, GasBoxEx[playerid][1], 255);
				PlayerTextDrawFont(playerid, GasBoxEx[playerid][1], 2);
				PlayerTextDrawLetterSize(playerid, GasBoxEx[playerid][1], 0.360000, 0.899999);
				PlayerTextDrawColor(playerid, GasBoxEx[playerid][1], -1);
				PlayerTextDrawSetOutline(playerid, GasBoxEx[playerid][1], 0);
				PlayerTextDrawSetProportional(playerid, GasBoxEx[playerid][1], 1);
				PlayerTextDrawSetShadow(playerid, GasBoxEx[playerid][1], 1);
				PlayerTextDrawShow(playerid, GasBoxEx[playerid][1]);

				GasBoxEx[playerid][2] = CreatePlayerTextDraw(playerid, 320.000000, 315.000000, "_");
				PlayerTextDrawAlignment(playerid, GasBoxEx[playerid][2], 2);
				PlayerTextDrawBackgroundColor(playerid, GasBoxEx[playerid][2], 255);
				PlayerTextDrawFont(playerid, GasBoxEx[playerid][2], 2);
				PlayerTextDrawLetterSize(playerid, GasBoxEx[playerid][2], 0.449999, 1.000000);
				PlayerTextDrawColor(playerid, GasBoxEx[playerid][2], -1);
				PlayerTextDrawSetOutline(playerid, GasBoxEx[playerid][2], 1);
				PlayerTextDrawSetProportional(playerid, GasBoxEx[playerid][2], 1);
				PlayerTextDrawShow(playerid, GasBoxEx[playerid][2]);

				SelectTextDraw(playerid, 0x008000FF);

				GasTextDrawUpdate(playerid, vehicleid, model);
				return 1;
			}
			else if(GetPVarInt(playerid,"KfcCheck"))
			{
				SetPVarInt(playerid, "Menu_Other", 5);
				MenuShow(playerid, BT_OTHER, BT_HANDS);
				return 1;
			}
			else if(GetPVarInt(playerid,"ArrestCheck"))return cmd_arrest(playerid,"");
		}
	}
    else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{ 
		if(newkeys & KEY_WALK) //1024
		{
			PlayerTextDrawHide(playerid, Helper[playerid]);
			if(IsPlayerInRangeOfPoint(playerid,4,1964.0221,-350.0398,1093.2)) SetPos(playerid,-1989.7310,1117.9515,54.4688,-90.0,0,0);
			if(GetPVarInt(playerid,"GateCheck") == 1)
			{
				SetPVarInt(playerid,"GateCheck",2);
				OpenGate(playerid);
				return 1;
			}
			else if(GetPVarInt(playerid,"TeleportCheck")) Teleport(playerid);
			else if(GetPVarInt(playerid,"JobCheck"))
			{
				if(GetPVarInt(playerid,"JobCheck") != PlayerInfo[playerid][pJob]) JobOn(playerid,GetPVarInt(playerid,"JobCheck"));
				else if(GetPVarInt(playerid,"JobCheck") == PlayerInfo[playerid][pJob])JobOff(playerid);
				return 1;
			}
			else if(GetPVarInt(playerid,"SmenaCheck"))return SkinShopShow(playerid
				);
			else if(GetPVarInt(playerid,"KfcCheck") == 1)
			{
				SetPVarInt(playerid, "Menu_Other", 5);
				MenuShow(playerid, BT_OTHER, BT_HANDS);
				return 1;
			}
			else if(GetPVarInt(playerid,"CarShopCheck"))
			{
				FP_SetPlayerInterior(playerid,1);
				FP_SetPlayerVirtualWorld(playerid,playerid);
				SetPos(playerid,1384.82, -10.88, 1000.84,0.0,1,playerid);
				TogglePlayerControllable(playerid,false);
				SetPlayerCameraPos(playerid, 1384.82, -10.88, 1004.172);
				SetPlayerCameraLookAt(playerid, 1388.279, -18.88, 1000.84);
				SetPVarInt(playerid,"CarShop",GetPVarInt(playerid,"CarShopCheck"));
				SetPVarInt(playerid,"ChoseCar",0);

				if(CarShopTD[playerid] != PlayerText:INVALID_TEXT_DRAW)
					PlayerTextDrawDestroy(playerid, CarShopTD[playerid]); 

				CarShopTD[playerid] = CreatePlayerTextDraw(playerid, 20.000000, 250.000000, "_");
				PlayerTextDrawBackgroundColor(playerid, CarShopTD[playerid], 255);
				PlayerTextDrawFont(playerid, CarShopTD[playerid], 2);
				PlayerTextDrawLetterSize(playerid, CarShopTD[playerid], 0.270000, 1.500000);
				PlayerTextDrawColor(playerid, CarShopTD[playerid], -1);
				PlayerTextDrawSetOutline(playerid, CarShopTD[playerid], 0);
				PlayerTextDrawSetProportional(playerid, CarShopTD[playerid], 1);
				PlayerTextDrawSetShadow(playerid, CarShopTD[playerid], 1);
				PlayerTextDrawUseBox(playerid, CarShopTD[playerid], 1);
				PlayerTextDrawBoxColor(playerid, CarShopTD[playerid], 80);
				PlayerTextDrawTextSize(playerid, CarShopTD[playerid], 160.000000, 100.000000);
				PlayerTextDrawShow(playerid, CarShopTD[playerid]);
				
				for(new i; i<11; i++) TextDrawShowForPlayer(playerid,ShopTD[i]);
				SelectTextDraw(playerid, 0x008000FF);

				SetPVarInt(playerid, "TypeTextDraw", 1);

				CarShopTextDrawUpdate(playerid);
			}
			else if(GetPVarInt(playerid,"BankCheck"))
			{
				if(!PlayerInfo[playerid][pBankPass]) 
				{
					new string[128];
					PlayerInfo[playerid][pBankPass] = 1000 + random(8999);
					AddItem(playerid, 20, PlayerInfo[playerid][pBankPass]);
					format(string,sizeof(string),"{F5DEB3}Ты получuл(а) банковскую карту!\n\nПuн-код: %d",PlayerInfo[playerid][pBankPass]);
					return ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Банк",string,"OK","");
				}	
				return ShowPlayerDialog(playerid,D_BANKOMAT_PINCODE,DIALOG_STYLE_INPUT,""FPHEAD"Банкомат","Пожалуйста, введите пин-код:","Выбрать","Отмена");
			}
			else if(GetPVarInt(playerid,"BankRobCheck"))CheckRobBank(playerid);
			else if(GetPVarInt(playerid,"DutyCheck")) Duty(playerid);
			else if(GetPVarInt(playerid,"AmmoCheck") == 1)
			{
				if(!LicInfo[playerid][GunLic])return ErrorMes(playerid,"У тебя нет разрешенuе на ношение оружuя.");
				if(!BiznesInfo[PlayerInfo[playerid][pWorld]][bProdsCount]) return 1;
				
				SetPVarInt(playerid, "Menu_Other", 4);
				SetPVarInt(playerid, "Menu_OtherID", PlayerInfo[playerid][pWorld]);
				MenuShow(playerid, BT_OTHER, BT_HANDS);
				return 1;
			}
			else if(GetPVarInt(playerid,"AmmoCheck") == 2)
			{
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
				SetPlayerAttachedObject(playerid, 0 , 3052, 1,0.11,0.4,0.0,0.0,90.0);
				SetPVarInt(playerid,"ArmaMats",1);
				SendClientMessage(playerid,COLOR_YELLOW2,"Ты взял(а) ящик материлов, грузи его в грузовик.");
				SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/loadmats\" , чтобы положить ящик.");
				return 1;
			}
			else if(GetPVarInt(playerid,"AmmoCheck") == 3) ShowHitmanGun(playerid);
			else if(GetPVarInt(playerid,"SexCheck"))
			{
				SetPVarInt(playerid, "Menu_Other", 7);
				SetPVarInt(playerid, "Menu_OtherID", PlayerInfo[playerid][pWorld]);
				MenuShow(playerid, BT_OTHER, BT_HANDS);
				return 1;
			}
			else if(GetPVarInt(playerid,"TestCheck")) StartExam(playerid);
			else if(GetPVarInt(playerid,"FightCheck"))ShowPlayerDialog(playerid,D_FS_TRANING, DIALOG_STYLE_LIST, ""FPHEAD"Изучuть стuль боя (5.000$ за каждый стuль)","[1] Boxing\n[2] Kung-Fu\n[3] KneeHead\n[4] GrabKick", "Изучuть", "Выйти");
			else if(GetPVarInt(playerid,"ObshagaCheck"))
			{
				if(PlayerInfo[playerid][pOrigin] == PlayerInfo[playerid][pWorld])return ErrorMes(playerid,"Ты уже прописан(а) здесь.");
				PlayerInfo[playerid][pOrigin] = PlayerInfo[playerid][pWorld];
				SendClientMessage(playerid,COLOR_WHITE,"Поздравляю, теперь ты будешь появляться здесь.");
				
				new string[128];
				format(string,sizeof(string),"UPDATE `samp_users` SET `Origin`='%d' WHERE `Name`='%s'",
					PlayerInfo[playerid][pOrigin],PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			else if(GetPVarInt(playerid,"ShopCheck"))
			{
				if(!BiznesInfo[PlayerInfo[playerid][pWorld]][bProdsCount]) return 1;
				
				SetPVarInt(playerid, "Menu_Other", 3);
				SetPVarInt(playerid, "Menu_OtherID", PlayerInfo[playerid][pWorld]);
				MenuShow(playerid, BT_OTHER, BT_HANDS);
				return 1;
			}
			else if(GetPVarInt(playerid,"ObshakCheck"))ShowObshDialog(playerid);
			else if(GetPVarInt(playerid,"CasinoCheck"))
			{
				new string[128];
				if(GetPVarInt(playerid,"Mask"))format(string, sizeof(string),"* Неuзвестный получил(а) игральные кости.");
				else format(string, sizeof(string), "* %s получил(а) игральные кости.", PlayerInfo[playerid][pName]);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE);
				SetPVarInt(playerid,"Dice",1);
				DeletePVar(playerid,"CasinoCheck");
				return 1;
			}
		}
		else if(newkeys & KEY_JUMP) //32
		{
			if(GetPVarInt(playerid,"ArmaMats")) 
			{
				ErrorMes(playerid,"Ты уронuл(а) ящик.");
				FP_DisablePlayerRaceCheckpoint(playerid);
				ApplyAnimation(playerid,"ped","KO_shot_front",3.0,0,0,0,0,0,1);
				RemovePlayerAttachedObject(playerid,0);
				DeletePVar(playerid,"ArmaMats");
				return 1;
			}	
			else if(GetPVarInt(playerid,"AttachObject"))
			{
				if(GetPVarInt(playerid,"OnJob") == J_LOADER)
				{
					ErrorMes(playerid,"Ты уронuл(а) ящик.");
					FP_DisablePlayerRaceCheckpoint(playerid);
					RemovePlayerAttachedObject(playerid,0);
					switch(random(3))
					{
						case 0:FP_SetPlayerRaceCheckpoint(playerid,1,2194.0007,-2284.9656,15.9408,0.0,0.0,0.0,1.5);
						case 1:FP_SetPlayerRaceCheckpoint(playerid,1,2188.4128,-2297.6790,13.6695,0.0,0.0,0.0,1.5);
						case 2:FP_SetPlayerRaceCheckpoint(playerid,1,2183.1956,-2301.5183,13.6695,0.0,0.0,0.0,1.5);
					}
					DeletePVar(playerid,"AttachObject");
					return 1;
				}
				else if(GetPVarInt(playerid,"OnJob") == J_FOREST)
				{
					ErrorMes(playerid,"Ты уронuл(а) дрова.");
					FP_DisablePlayerRaceCheckpoint(playerid);
					RemovePlayerAttachedObject(playerid,0);
					SetPVarInt(playerid,"ForestPlace",random(5));
					FP_SetPlayerRaceCheckpoint(playerid, 1, ForestPos[GetPVarInt(playerid,"ForestPlace")][0], ForestPos[GetPVarInt(playerid,"ForestPlace")][1], ForestPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
					DeletePVar(playerid,"AttachObject");
					return 1;
				}
				else if(GetPVarInt(playerid,"OnJob") == J_STEEL)
				{
					ErrorMes(playerid,"Ты уронuл(а) руду.");
					FP_DisablePlayerRaceCheckpoint(playerid);
					RemovePlayerAttachedObject(playerid,0);
					SetPVarInt(playerid,"ForestPlace",random(5));
					FP_SetPlayerRaceCheckpoint(playerid, 1, SteelPos[GetPVarInt(playerid,"ForestPlace")][0], SteelPos[GetPVarInt(playerid,"ForestPlace")][1], SteelPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
					DeletePVar(playerid,"AttachObject");
					return 1;
				}
			}
		}
		else if(newkeys & KEY_SECONDARY_ATTACK) //16
		{
			if(GetPVarInt(playerid,"ArmaMats")) 
			{
				ErrorMes(playerid,"Ты уронuл(а) ящик.");
				FP_DisablePlayerRaceCheckpoint(playerid);
				ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				RemovePlayerAttachedObject(playerid,0);
				DeletePVar(playerid,"ArmaMats");
				return 1;
			}	
			else if(GetPVarInt(playerid,"AttachObject"))
			{
				if(GetPVarInt(playerid,"OnJob") == J_LOADER)
				{
					ErrorMes(playerid,"Ты уронuл(а) ящик.");
					FP_DisablePlayerRaceCheckpoint(playerid);
					RemovePlayerAttachedObject(playerid,0);
					switch(random(3))
					{
						case 0:FP_SetPlayerRaceCheckpoint(playerid,1,2194.0007,-2284.9656,15.9408,0.0,0.0,0.0,1.5);
						case 1:FP_SetPlayerRaceCheckpoint(playerid,1,2188.4128,-2297.6790,13.6695,0.0,0.0,0.0,1.5);
						case 2:FP_SetPlayerRaceCheckpoint(playerid,1,2183.1956,-2301.5183,13.6695,0.0,0.0,0.0,1.5);
					}
					DeletePVar(playerid,"AttachObject");
					return 1;
				}
				else if(GetPVarInt(playerid,"OnJob") == J_FOREST)
				{
					ErrorMes(playerid,"Ты уронuл(а) дрова.");
					FP_DisablePlayerRaceCheckpoint(playerid);
					RemovePlayerAttachedObject(playerid,0);
					SetPVarInt(playerid,"ForestPlace",random(5));
					FP_SetPlayerRaceCheckpoint(playerid, 1, ForestPos[GetPVarInt(playerid,"ForestPlace")][0], ForestPos[GetPVarInt(playerid,"ForestPlace")][1], ForestPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
					DeletePVar(playerid,"AttachObject");
					return 1;
				}
				else if(GetPVarInt(playerid,"OnJob") == J_STEEL)
				{
					ErrorMes(playerid,"Ты уронuл(а) руду.");
					FP_DisablePlayerRaceCheckpoint(playerid);
					RemovePlayerAttachedObject(playerid,0);
					SetPVarInt(playerid,"ForestPlace",random(5));
					FP_SetPlayerRaceCheckpoint(playerid, 1, SteelPos[GetPVarInt(playerid,"ForestPlace")][0], SteelPos[GetPVarInt(playerid,"ForestPlace")][1], SteelPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
					DeletePVar(playerid,"AttachObject");
					return 1;
				}
			}
		}
		else if(newkeys & KEY_SPRINT) //8
		{
			if(PlayerUsingLoopingAnim[playerid])
			{
				TextDrawHideForPlayer(playerid,txtAnimHelper);
				PlayerUsingLoopingAnim[playerid] = 0;
				ClearAnimations(playerid,true);
				return 1;
			}
		}
		else if(newkeys & KEY_FIRE) //4
		{
			if(GetPVarInt(playerid,"ArmaMats")) 
			{
				ErrorMes(playerid,"Ты уронuл(а) ящик.");
				FP_DisablePlayerRaceCheckpoint(playerid);
				ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				RemovePlayerAttachedObject(playerid,0);
				DeletePVar(playerid,"ArmaMats");
				return 1;
			}	
			else if(GetPVarInt(playerid,"AttachObject"))
			{
				if(GetPVarInt(playerid,"OnJob") == J_LOADER)
				{
					ErrorMes(playerid,"Ты уронuл(а) ящик.");
					FP_DisablePlayerRaceCheckpoint(playerid);
					RemovePlayerAttachedObject(playerid,0);
					switch(random(3))
					{
						case 0:FP_SetPlayerRaceCheckpoint(playerid,1,2194.0007,-2284.9656,15.9408,0.0,0.0,0.0,1.5);
						case 1:FP_SetPlayerRaceCheckpoint(playerid,1,2188.4128,-2297.6790,13.6695,0.0,0.0,0.0,1.5);
						case 2:FP_SetPlayerRaceCheckpoint(playerid,1,2183.1956,-2301.5183,13.6695,0.0,0.0,0.0,1.5);
					}
					DeletePVar(playerid,"AttachObject");
					return 1;
				}
				else if(GetPVarInt(playerid,"OnJob") == J_FOREST)
				{
					ErrorMes(playerid,"Ты уронuл(а) дрова.");
					FP_DisablePlayerRaceCheckpoint(playerid);
					RemovePlayerAttachedObject(playerid,0);
					SetPVarInt(playerid,"ForestPlace",random(5));
					FP_SetPlayerRaceCheckpoint(playerid, 1, ForestPos[GetPVarInt(playerid,"ForestPlace")][0], ForestPos[GetPVarInt(playerid,"ForestPlace")][1], ForestPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
					DeletePVar(playerid,"AttachObject");
					return 1;
				}
				else if(GetPVarInt(playerid,"OnJob") == J_STEEL)
				{
					ErrorMes(playerid,"Ты уронuл(а) руду.");
					FP_DisablePlayerRaceCheckpoint(playerid);
					RemovePlayerAttachedObject(playerid,0);
					SetPVarInt(playerid,"ForestPlace",random(5));
					FP_SetPlayerRaceCheckpoint(playerid, 1, SteelPos[GetPVarInt(playerid,"ForestPlace")][0], SteelPos[GetPVarInt(playerid,"ForestPlace")][1], SteelPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
					DeletePVar(playerid,"AttachObject");
					return 1;
				}
			}
			else if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_SMOKE_CIGGY && GetPVarInt(playerid,"SmokeTime") <= GetTime)
			{
				if(PlayerInfo[playerid][pHealth] < 100) FP_SetPlayerHealth(playerid,PlayerInfo[playerid][pHealth]+10);
				SetPVarInt(playerid,"SmokeTime",GetTime+3);
				return 1;
			}
		}
		
	    if((newkeys & KEY_FIRE) && (oldkeys & KEY_CROUCH) && !((oldkeys & KEY_FIRE) ||(newkeys & KEY_HANDBRAKE)) || (oldkeys & KEY_FIRE) && (newkeys & KEY_CROUCH) && !((newkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) )
		{
        	switch(GetPlayerWeapon(playerid))
			{
            	case 23..25, 27, 29..34, 41:
				{
                	OnPlayerCBug(playerid);
                    return 1;
                }
            }
        }
        if(CheckCrouch[playerid])
		{
			switch(WeaponID[playerid])
			{
            	case 23..25, 27, 29..34, 41:
				{
                	if((newkeys & KEY_CROUCH) && !((newkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) && GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK )
					{
                    	OnPlayerCBug(playerid);
                    }
                }
            }
        }
        else if(((newkeys & KEY_FIRE) && (newkeys & KEY_HANDBRAKE) && !((newkeys & KEY_SPRINT) || (newkeys & KEY_JUMP))) ||
        (newkeys & KEY_FIRE) && !((newkeys & KEY_SPRINT) || (newkeys & KEY_JUMP)) ||
        (Moving[playerid] == false && (newkeys & KEY_FIRE) && (newkeys & KEY_HANDBRAKE)) ||
        (Moving[playerid] == false && (newkeys & KEY_FIRE)) ||
        (newkeys & KEY_FIRE) && (oldkeys & KEY_CROUCH) && !((oldkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) ||
        (oldkeys & KEY_FIRE) && (newkeys & KEY_CROUCH) && !((newkeys & KEY_FIRE) || (newkeys & KEY_HANDBRAKE)) )
		{
            SetTimerEx("CrouchCheck", 3000, 0, "d", playerid);
            CheckCrouch[playerid] = 1;
            WeaponID[playerid] = GetPlayerWeapon(playerid);
            return 1;
        }
	}
	return 1;
}
public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid)
{
	#if defined LOGGING
		printf("OPTD: %d | %d | %f | %d", playerid, issuerid, amount, weaponid);
	#endif
    if(issuerid == INVALID_PLAYER_ID || !amount) return 1;
	
	if(GetPlayerState(issuerid) == PLAYER_STATE_ONFOOT && PlayerInfo[issuerid][pTazer] > 19 && !GetPlayerWeapon(issuerid))
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT || !DistPlayerToPlayer(1.5,issuerid,playerid) || GetPVarInt(playerid,"Tazerom"))return 1;
	 	TogglePlayerControllable(playerid,false);
	 	ApplyAnimation(playerid,"CRACK","crckdeth2",4.0,1,0,0,0,0,1);
		
		new string[80];
		if(GetPVarInt(issuerid,"Mask") && GetPVarInt(playerid,"Mask")) format(string, sizeof(string), "* Неивестный парализовал электрошокером Неuзвестного.");
		else if(GetPVarInt(issuerid,"Mask") && !GetPVarInt(playerid,"Mask")) format(string, sizeof(string), "* Неивестный парализовал электрошокером %s." ,PlayerInfo[playerid][pName]);
		else if(!GetPVarInt(issuerid,"Mask") && GetPVarInt(playerid,"Mask")) format(string, sizeof(string), "* %s парализовал(а) электрошокером Неuзвестного.",PlayerInfo[issuerid][pName]);
		else format(string, sizeof(string), "* %s парализовал(а) электрошокером %s.", PlayerInfo[issuerid][pName] ,PlayerInfo[playerid][pName]);
		ProxDetector(30.0, issuerid, string, COLOR_PURPLE);
		
		GameTextForPlayer(playerid, FixText("~r~парализован"), 2500, 3);
		SetPVarInt(playerid,"Tazerom",1);
		SetTimerEx("Unfreeze",8000,false,"i",playerid);
		return 1;
	}
	else if(IsPlayerInAnyDynamicArea(playerid) && GetPlayerState(issuerid) == PLAYER_STATE_ONFOOT)
	{
		if(!IsPlayerNPC(issuerid))
		{
			ShowPlayerDialog(issuerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Зеленая зона","{FFFFFF}Внимание, в данной зоне {FF0000}DM запрещен{FFFFFF}.\nПожалуйста, веди себя спокойно.","OK","");
			AddPVarInt(issuerid,"DMCount",1);
			if(GetPVarInt(issuerid,"DMCount") >= 3) FP_Kick(issuerid,"DM в зеленой зоне");
		}	
	}
    return 1;
}
stock OnPlayerCBug(playerid)
{
	DropItem(playerid, PlayerInfo[playerid][pGun][oData[GetPlayerWeapon(playerid)][imType]]); 
	ShowPlayerDialog(playerid, 555, DIALOG_STYLE_MSGBOX, ""FPHEAD"Антuчuт", "{F5DEB3}На нашем сервере запрещено использование \"+С\" бага.\nВ качестве наказания, вы лишились оружия, с которого стреляли.","OK","");
	CheckCrouch[playerid] = 0;
	return 1;
}
Public:CrouchCheck(playerid)
{
	CheckCrouch[playerid] = 0;
	return 1;
}
public OnRconLoginAttempt(ip[], password[], success)
{
	#if defined LOGGING

	#endif
	if(!success)
	{
	    new string[128];
	    format(string,sizeof(string),"banip %s",ip);
		SendRconCommand(string);
	}
	return 1;
}
public OnPlayerUpdate(playerid)
{
	#if defined LOGGING

	#endif
	PlayerInfo[playerid][AFK_Time] = 0;
	if(PlayerInfo[playerid][AFK_Stat])
	{
		PlayerInfo[playerid][AFK_Stat] = 0; 
		Delete3DTextLabel(PlayerInfo[playerid][AFK_Text]);
	}	
	PlayerInfo[playerid][LastUpdate] = GetTickCount();
	for (new i; i < SYNC_TYPES; i++)
	{
	    if (!PlayerInfo[playerid][SyncTime][i]) continue;
	    if (PlayerInfo[playerid][LastUpdate] - PlayerInfo[playerid][LastSyncUpdate][i] >= 1000)
	    {
	        PlayerInfo[playerid][SyncTime][i]--;
	        PlayerInfo[playerid][LastSyncUpdate][i] = PlayerInfo[playerid][LastUpdate];
	    }
	}
	return 1;
}
public OnPlayerStreamIn(playerid, forplayerid)
{
	#if defined LOGGING
		printf("OPSI: %d | %d | %d", playerid, forplayerid);
	#endif
    if(GetPVarInt(playerid,"Mask") && !PlayerInfo[forplayerid][pAdmin]) ShowPlayerNameTagForPlayer(forplayerid, playerid, false);
	else ShowPlayerNameTagForPlayer(forplayerid, playerid, true);
	return 1;
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
	#if defined LOGGING

	#endif
	if(VehInfo[vehicleid][vLock]) SetVehicleParamsForPlayer(vehicleid, forplayerid, 0 , 1);
	if(!VehMInfo[GetVehicleModel(vehicleid)-400][mLicType] || VehMInfo[GetVehicleModel(vehicleid)-400][mLicType] > 2)
	{
	    VehInfo[vehicleid][vEngine] = 1;
	    SetVehicleParamsEx(vehicleid, VehInfo[vehicleid][vEngine], VehInfo[vehicleid][vLights], VehInfo[vehicleid][vAlarm], VehInfo[vehicleid][vLock], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vBoot], 0);
	}
	return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	#if defined LOGGING

	#endif
	if(GetPVarInt(playerid,"DialogID") != dialogid) return 1;
	for(new i; i<strlen(inputtext); i++) if(inputtext[i] == '%') inputtext[i] = '#';
	
    switch(dialogid)
	{
		case D_RPNAME:
	    {
	        if(!response)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/q\" , если хочешь покинуть сервер.");
				return ShowDialog(playerid, D_RPNAME);
			}
	        if(strfind(inputtext, "[SS]", true) != -1 || strfind(inputtext, "[FP]", true) != -1 || strfind(inputtext, "[PC]", true) != -1) 
			{
				ErrorMes(playerid, "Префиксы [FP], [PC] и [SS] может установить только администрация.");
				return ShowDialog(playerid,D_RPNAME);
			}
	        if(!IsValidName(playerid, inputtext))
	        {
	            return ShowDialog(playerid,D_RPNAME);
	        }
	        new query[80];
    		format(query,sizeof(query), "SELECT `id` FROM `samp_users` WHERE `name` = '%s'", inputtext);
    		mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dds",playerid,DB_CHECK_RPNAME,inputtext);
	    }
	    case D_REGISTER:
		{
	        if(!response)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/q\" , если хочешь покинуть сервер.");
				return ShowDialog(playerid, D_REGISTER);
			}
			if(strlen(inputtext) < 6 || strlen(inputtext) > 32)
			{
				ErrorMes(playerid,"Длина пароля должна быть в пределах от 6 до 32 символов.");
				return ShowDialog(playerid, D_REGISTER);
			}
			for(new i;i<strlen(inputtext);i++)
			{
			    switch(inputtext[i])
				{
					case 'a'..'z','A'..'Z','0'..'9': continue;
					default:
					{
						ErrorMes(playerid,"Доступные для пароля символы: a-z,A-Z,0-9.");
						return ShowDialog(playerid, D_REGISTER);
					}	
				}
			}
			new string[128];
			format(string, sizeof(string), "(( %s[%d] начинает регистрацию | {FFFFFF}IP: %s ))",PlayerInfo[playerid][pName], playerid, PlayerInfo[playerid][pLastIP]);
			ABroadCast(0xBFC0C2FF,string, 1);

			SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 0);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 0);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 1);
			
			DeletePVar(playerid,"OChat");
			DeletePVar(playerid,"FamilyChat");
			DeletePVar(playerid,"JobChat");
			DeletePVar(playerid,"HidePM");
			DeletePVar(playerid,"NewsChat");

			for(new i; i<sizeof(GZInfo); i++) GangZoneShowForPlayer(playerid,GZInfo[i][gID],GetGangZoneColor(i));
			
			strmid(PlayerInfo[playerid][pKey],inputtext,0,32,32);
			
			return ShowDialog(playerid,D_EMAILREG);
			
	    }
		case D_REFER:
		{
			if(!response)
			{
				new string[80];
			    strmid(PlayerInfo[playerid][pRefer], "Нет", 0, strlen("Нет"),24);
				format(string,sizeof(string), "UPDATE `samp_users` SET `refer` = 'Нет' WHERE `name` = '%s'",PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				
				SetPVarInt(playerid,"Login",1); //Регистрация (Рефер = Нет)
				StopAudioStreamForPlayer(playerid);
				TextDrawHideForPlayer(playerid, LoadScreen);
				return SpawnPlayer(playerid);
			}
			if(strlen(inputtext) < 3 || strlen(inputtext) > 20) return ShowDialog(playerid, D_REFER);
			if(!strcmp(inputtext,PlayerInfo[playerid][pName],true))
   			{
				ErrorMes(playerid,"Ты не можешь указывать себя в качестве рефера.");
                return ShowDialog(playerid, D_REFER);
            }
			if(!IsValidName(playerid, inputtext))
			{
                return ShowDialog(playerid, D_REFER);
			}
			new query[80];
    		format(query,sizeof(query), "SELECT `id` FROM `samp_users` WHERE `name` = '%s'", inputtext);
    		mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dds",playerid,DB_CHECK_REFER,inputtext);
		}
		case D_EMAILREG:
		{
			if(!response)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/q\" , если хочешь покинуть сервер.");
				return ShowDialog(playerid, D_EMAILREG);
			}
			if(!strlen(inputtext))return ShowDialog(playerid, D_EMAILREG);
			if(!IsValidMail(inputtext))
			{
			    ErrorMes(playerid,"Некоректный Email адрес.");
				return ShowDialog(playerid,D_EMAILREG);
			}
			new query[128];
    		format(query,sizeof(query), "SELECT `id` FROM `samp_users` WHERE `email` = '%s'", inputtext);
    		mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dds",playerid,DB_CHECK_EMAIL,inputtext);
		}
		case D_EMAILCODE: return ShowDialog(playerid, D_REFER);
	    case D_LOGIN:
		{
	        if(!response)
			{
				SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/q\" , если хочешь покинуть сервер.");
				return ShowDialog(playerid, D_LOGIN);
			}
			if(!strlen(inputtext))return ShowDialog(playerid, D_LOGIN);
			
			for(new i;i<strlen(inputtext);i++)
			{
			    switch(inputtext[i])
				{
					case 'a'..'z','A'..'Z','0'..'9': continue;
					default:
					{
						ErrorMes(playerid,"Доступные для пароля символы: a-z,A-Z,0-9.");
						return ShowDialog(playerid, D_LOGIN);
					}	
				}
			}
			new query[200];
			format(query,sizeof(query), "SELECT * FROM `samp_users` WHERE `name` = '%s' AND `password` = MD5(MD5('%s'))", PlayerInfo[playerid][pName],inputtext);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dd",playerid,DB_CHECK_PASSWORD);
			strmid(PlayerInfo[playerid][pKey],inputtext,0,32,32);
			return 1;	
	    }
		case D_ADUTY:
		{
			if(!response) return 1;
			if(!strlen(inputtext))return ShowDialog(playerid,D_ADUTY);
			if(!strcmp(inputtext,AdminInfo[playerid][aPassword],false)) 
			{
				PlayerInfo[playerid][pAdmin] = AdminInfo[playerid][aLevel];
				
				AdminInfo[playerid][aLeader] = TeamInfo[playerid][tType];
				AdminInfo[playerid][aMember] = TeamInfo[playerid][tID];
				AdminInfo[playerid][aTRank] = TeamInfo[playerid][tRank];

				TeamInfo[playerid][tType] = 0;
				TeamInfo[playerid][tID] = 0;
				TeamInfo[playerid][tRank] = 0;
				SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
				
				new string[192];
				format(string,sizeof(string),"%s %s[%d] заступил(а) на дежурство.",AdminInfo[playerid][aRank],PlayerInfo[playerid][pName],playerid);
				ABroadCast(COLOR_YELLOW,string, 1);
				
				format(string,sizeof(string),"SELECT `Time` FROM `logs_admin_online` WHERE `Date`='%02d.%02d.%d' AND `Name`='%s'",Day,Month,Year,PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",playerid,DB_ADMIN_ONLINE);
				
				return 1;
				
			}
			AddPVarInt(playerid,"AdminPassword", 1);
			if(GetPVarInt(playerid, "AdminPassword") == 3) return FP_Kick(playerid,"Подбор админ пароля");
			
			new message[80];
			format(message,sizeof(message),"{FF0000}[ОШИБКА]{FFFFFF} Неверный пароль. Осталось {FF0000}%d{FFFFFF} попыток.",3 - GetPVarInt(playerid,"AdminPassword"));
			SendClientMessage(playerid,-1,message);
			return ShowDialog(playerid,D_ADUTY);
		}
		case D_ADUTY_PASS:
		{
			if(!response) return 1;
			if(strlen(inputtext) < 6 || strlen(inputtext) > 32)
			{
				ErrorMes(playerid,"Длина пароля должна быть в пределах от 6 до 32 символов.");
				return ShowDialog(playerid,D_ADUTY_PASS);
			}
			
			for(new i;i<strlen(inputtext);i++)
			{
			    switch(inputtext[i])
				{
					case 'a'..'z','A'..'Z','0'..'9': continue;
					default:
					{
						ErrorMes(playerid,"Доступные для пароля символы: a-z,A-Z,0-9.");
						return ShowDialog(playerid,D_ADUTY_PASS);
					}	
				}
			}
			
			new string[192];
			strmid(AdminInfo[playerid][aPassword],inputtext,0,32,32);
			format(string,sizeof(string),"Твой администраторский пароль: %s. Не забывай его, а лучше запиши.", AdminInfo[playerid][aPassword]);
			SendClientMessage(playerid,COLOR_GREEN,string);
    		format(string,sizeof(string), "UPDATE `samp_admins` SET `Password`='%s' WHERE `Name` = '%s'", AdminInfo[playerid][aPassword],PlayerInfo[playerid][pName]);
    		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			PlayerInfo[playerid][pAdmin] = AdminInfo[playerid][aLevel];
			
			AdminInfo[playerid][aLeader] = TeamInfo[playerid][tType];
			AdminInfo[playerid][aMember] = TeamInfo[playerid][tID];
			AdminInfo[playerid][aTRank] = TeamInfo[playerid][tRank];

			TeamInfo[playerid][tType] = 0;
			TeamInfo[playerid][tID] = 0;
			TeamInfo[playerid][tRank] = 0;
			SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);

			format(string,sizeof(string),"%s %s[%d] заступил(а) на дежурство.",AdminInfo[playerid][aRank],PlayerInfo[playerid][pName],playerid);
			ABroadCast(COLOR_YELLOW,string, 1);
			
			format(string,sizeof(string),"SELECT `Time` FROM `logs_admin_online` WHERE `Date`='%02d.%02d.%d' AND `Name`='%s'",Day,Month,Year,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",playerid,DB_ADMIN_ONLINE);
			
		}
	    case D_SEX:// Выбор пола
		{
			new string[80];
			PlayerInfo[playerid][pSex] = listitem + 1;
			format(string,sizeof(string), "UPDATE `samp_users` SET `sex` = '%d' WHERE `name` = '%s'", PlayerInfo[playerid][pSex],PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			ShowDialog(playerid, D_RACE);
		}
		case D_RACE:
		{
			switch(listitem)
	  		{
				case 0:
				{
					PlayerInfo[playerid][pOrigin] = 1;
					if(PlayerInfo[playerid][pSex] == 1) PlayerInfo[playerid][pSkin] = 240;
					else if(PlayerInfo[playerid][pSex] == 2) PlayerInfo[playerid][pSkin] = 93;
				}
		   		case 1:
				{
				    PlayerInfo[playerid][pOrigin] = 2;
				    if(PlayerInfo[playerid][pSex] == 1) PlayerInfo[playerid][pSkin] = 21;
					else if(PlayerInfo[playerid][pSex] == 2) PlayerInfo[playerid][pSkin] = 13;
				}
				default:
				{
			    	PlayerInfo[playerid][pOrigin] = 3;
				    if(PlayerInfo[playerid][pSex] == 1) PlayerInfo[playerid][pSkin] = 170;
					else if(PlayerInfo[playerid][pSex] == 2) PlayerInfo[playerid][pSkin] = 56;
				}
			}
			ShowRulesDialog(playerid);
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
			TogglePlayerControllable(playerid, true);
			SendClientMessage(playerid,COLOR_YELLOW2, "\n");
			SendClientMessage(playerid,COLOR_YELLOW2, "** Первым делом тебе нужно получить права на автомобиль. /kpk -> Основные локацuu -> Автошкола.");
			SendClientMessage(playerid,COLOR_YELLOW2, "** Добраться до неё можно пешком или на велосипедах, которые стоят на парковке слева.");
			SendClientMessage(playerid,COLOR_YELLOW2, "** После получения прав, можешь отправляться на работу. /kpk -> GPS навигатор -> Работы (0 лвл).");
			SendClientMessage(playerid,COLOR_YELLOW2, "\n");

			TextDrawShowForPlayer(playerid,DateDisp);
			TextDrawShowForPlayer(playerid,TimeDisp);
			
			new string[128];
			
			format(string,sizeof(string), "UPDATE `samp_users` SET Origin=%d,Skin=%d Where Name='%s'", 
				PlayerInfo[playerid][pOrigin], PlayerInfo[playerid][pSkin], PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
			format(string,sizeof(string), "SELECT * FROM `samp_premium` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",playerid,DB_LOAD_PREMIUM);

			format(string,sizeof(string), "SELECT * FROM `samp_licenses` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",playerid,DB_LOAD_LIC);
			
			PlayerInfo[playerid][pBankPass] = 1000 + random(8999);

			iData[playerid][inItems][0] = 20;
			iData[playerid][inValue][0] = PlayerInfo[playerid][pBankPass];
			iData[playerid][inState][0] = 100.0;
			ImageShow(playerid, 0, iData[playerid][inItems][0], false);

			format(string,sizeof(string), "INSERT INTO `samp_bag` (`name`,`0`) VALUES ('%s','20|%d|100.0')",
				PlayerInfo[playerid][pName], PlayerInfo[playerid][pBankPass]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

			for(new i = 1; i < 25; i ++)
			{
				iData[playerid][inItems][i] = 0;
				iData[playerid][inValue][i] = 0;
				iData[playerid][inState][i] = 0.0;
				
			}
			FP_GivePlayerMoney(playerid,5000);
			return 1;
	 	}
		case D_RULES:
		{
			
			return 1;
		}
	    case D_CONTROL_AUTO:
		{
		    if(!response) return 1;
		    new vid = PlayerInfo[playerid][pVehID], model = GetVehicleModel(vid)-400;
		    switch(listitem)
	  		{
	  		    case 0:
				{
				    if(!VehInfo[vid][vLock]) LockCar(playerid,vid);
	                else UnLockCar(playerid,vid);
	            }
				case 1:
				{
					if(!VehInfo[vid][vEngine]) EngineOn(playerid,vid);
				    else EngineOff(playerid,vid);
				}
				case 2:
				{
					if(!VehInfo[vid][vLights]) LightOn(playerid,vid);
				    else  LightOff(playerid,vid);
				}
				case 3:
				{
					if(!VehMInfo[model][mBoot]) return ErrorMes(playerid, "В данном транспортом средстве отсутствует багажник.");
					if(!VehInfo[vid][vBoot]) BootOn(playerid,vid);
				    else BootOff(playerid,vid);
				}
				case 4:
				{
					switch(VehInfo[PlayerInfo[playerid][pVehID]][vType])
					{
						case VT_FRACTION:
						{
							switch(VehInfo[PlayerInfo[playerid][pVehID]][vValue])
							{
								case TAXI: if(TeamInfo[playerid][tID] == TAXI) cmd_job(playerid,"taxi");
								case MEDIC: if(TeamInfo[playerid][tID] == MEDIC) cmd_job(playerid,"medic");
								default: {}
							}
						}
						case VT_JOB:
						{
							switch(VehInfo[PlayerInfo[playerid][pVehID]][vValue])
							{
								case MECH: if(PlayerInfo[playerid][pJob] == MECH) cmd_job(playerid,"mech");
								case TRUCK: if(PlayerInfo[playerid][pJob] == TRUCK) cmd_job(playerid,"trucker");
								default: {}
							}
						}
						case VT_OWNED,VT_RENT:
						{
							if(PlayerInfo[playerid][pJob] == JACK) cmd_job(playerid,"jack");
						}
						default: {}
					}
				}
			}
		}
		case D_NEON:
		{
		    if(!response)return 1;
			
			if(strcmp(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner],PlayerInfo[playerid][pName],true))
			return ErrorMes(playerid,"Ты не можешь управлять чужим транспортом.");
			
		    if(NoNeon(GetPVarInt(playerid,"SelectCarID")))return ErrorMes(playerid,"На данный транспорт не предусмотрена установка неона.");
			if(!VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon]) FP_GivePlayerMoney(playerid, -2500);
			else
			{
				DestroyObject(VehInfo[GetPVarInt(playerid,"SelectCarID")][vLeftNeon]);
				DestroyObject(VehInfo[GetPVarInt(playerid,"SelectCarID")][vRightNeon]);
			}
			switch(listitem)
	  		{
	  			case 0: VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon] = 18647;
				case 1: VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon] = 18648;
				case 2: VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon] = 18649;
				case 3: VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon] = 18650;
				case 4: VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon] = 18651;
				case 5: VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon] = 18652;
				case 6: return 1;
			}
			VehInfo[GetPVarInt(playerid,"SelectCarID")][vLeftNeon] = CreateObject(VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon],0,0,0,0,0,0);
			VehInfo[GetPVarInt(playerid,"SelectCarID")][vRightNeon] = CreateObject(VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon],0,0,0,0,0,0);
			AttachObjectToVehicle(VehInfo[GetPVarInt(playerid,"SelectCarID")][vLeftNeon], GetPVarInt(playerid,"SelectCarID"), -0.8, 0.0, -0.7, 0.0, 0.0, 0.0);
			AttachObjectToVehicle(VehInfo[GetPVarInt(playerid,"SelectCarID")][vRightNeon], GetPVarInt(playerid,"SelectCarID"), 0.8, 0.0, -0.7, 0.0, 0.0, 0.0);

			new string[128];
			format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Neon` = '%d' WHERE `ID` = '%d'",VehInfo[GetPVarInt(playerid,"SelectCarID")][vNeon],VehInfo[GetPVarInt(playerid,"SelectCarID")][vID]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			SendClientMessage(playerid,COLOR_WHITE,"Неон установлен.");
		}
		case D_AUTO_COLOR1:
		{
		    if(!response)return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid, D_AUTO_COLOR1 , DIALOG_STYLE_INPUT, ""FPHEAD"Перекраска", "Введите ID основного цвета", "Выбрать", "Отмена");
	        if(strval(inputtext) < 0 || strval(inputtext) > 255)
			{
				ErrorMes(playerid,"ID цвета должен быть в пределах от 0 до 255.");
				return ShowPlayerDialog(playerid, D_AUTO_COLOR1 , DIALOG_STYLE_INPUT, ""FPHEAD"Перекраска", "Введите ID основного цвета", "Выбрать", "Отмена");
			}
			if(strcmp(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner],PlayerInfo[playerid][pName],true))
			return ErrorMes(playerid,"Ты не можешь управлять чужим транспортом.");
			
			ShowPlayerDialog(playerid, D_AUTO_COLOR2 , DIALOG_STYLE_INPUT, ""FPHEAD"Перекраска", "Введите ID дополнительного цвета", "Выбрать", "Отмена");
			vehcolor1[playerid] = strval(inputtext);
	   		return 1;
		}
		case D_AUTO_COLOR2:
		{
			if(!response)return 1;
	  		if(!strlen(inputtext)) return ShowPlayerDialog(playerid, D_AUTO_COLOR2 , DIALOG_STYLE_INPUT, ""FPHEAD"Перекраска", "Введите ID дополнительного цвета", "Выбрать", "Отмена");
	  		if(strval(inputtext) < 0 || strval(inputtext) > 255)
			{
				ErrorMes(playerid,"ID цвета должен быть в пределах от 0 до 255.");
				return ShowPlayerDialog(playerid, D_AUTO_COLOR2 , DIALOG_STYLE_INPUT, ""FPHEAD"Перекраска", "Введите ID дополнительного цвета", "Выбрать", "Отмена");
			}
			if(strcmp(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner],PlayerInfo[playerid][pName],true))
			return ErrorMes(playerid,"Ты не можешь управлять чужим транспортом.");
			
			vehcolor2[playerid] = strval(inputtext);
			VehInfo[GetPVarInt(playerid,"SelectCarID")][vColor1] = vehcolor1[playerid];
			VehInfo[GetPVarInt(playerid,"SelectCarID")][vColor2] = vehcolor2[playerid];
	  		ChangeVehicleColor(GetPVarInt(playerid,"SelectCarID"),vehcolor1[playerid],vehcolor2[playerid]);
			
			
			new string[128];
			format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Color1` = '%d',`Color2` = '%d' WHERE `ID` = '%d'",vehcolor1[playerid],vehcolor2[playerid],VehInfo[GetPVarInt(playerid,"SelectCarID")][vID]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			FP_GivePlayerMoney(playerid,-2000);
			SendClientMessage(playerid,COLOR_WHITE,"Ты заплатuл(а) за перекраску $2000.");
			return 1;
		}
		case D_VLIST:
		{
			if(!response) return 1;
			SetPVarInt(playerid,"SelectCarID",PlayerInfo[playerid][pCarID][listitem]);
			if(VehInfo[PlayerInfo[playerid][pCarID][listitem]][vType] == VT_OWNED) 
			ShowPlayerDialog(playerid,D_VMENU,DIALOG_STYLE_LIST,""FPHEAD"Личный транспорт","[1] Покрасuть ($2000)\n\
																		[2] Установuть неон ($2500)\n\
																		[3] Припарковать транспорт\n\
																		[4] Отбуксировать на парковку($1500)\n\
																		[5] Определuть местоположение\n\
																		[6] Сменuть номер\n\
																		[7] Снять тюнинг\n\
																		[8] Продать транспорт","Выбрать","Отмена");
			else if(VehInfo[PlayerInfo[playerid][pCarID][listitem]][vType] == VT_RENT) 
			ShowPlayerDialog(playerid,D_VRMENU,DIALOG_STYLE_LIST,""FPHEAD"Арендованный транспорт","[1] Покрасuть ($2000)\n\
																		[2] Установuть неон ($2500)\n\
																		[3] Припарковать транспорт\n\
																		[4] Отбуксировать на парковку($1500)\n\
																		[5] Определuть местоположение\n\
																		[6] Сменuть номер\n\
																		[7] Снять тюнинг\n\
																		[8] Отказаться от аренды","Выбрать","Отмена");
		}
		case D_VMENU:
		{
		    if(!response)return 1;
			if(strcmp(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner],PlayerInfo[playerid][pName],true))
			return ErrorMes(playerid,"Ты не можешь управлять чужим транспортом.");
			
		    switch(listitem)
		    {
		    	case 0: ShowPlayerDialog(playerid, D_AUTO_COLOR1 , DIALOG_STYLE_INPUT, ""FPHEAD"Перекраска", "Введите id основного цвета", "Выбрать", "Отмена");
		    	case 1: ShowPlayerDialog(playerid,D_NEON,DIALOG_STYLE_LIST,""FPHEAD"Неон","[1] Красный\n[2] Синuй\n[3] Зеленый\n[4] Желтый\n[5] Розовый\n[6] Белый\n[7] Удалuть","Принять","Отмена");
				case 2: 
				{
					if(PlayerInfo[playerid][pVehID] != GetPVarInt(playerid,"SelectCarID")) return ErrorMes(playerid, "Ты должен находuться в личном транспорте.");
					GetVehiclePos(PlayerInfo[playerid][pVehID],VehInfo[PlayerInfo[playerid][pVehID]][vParkX], VehInfo[PlayerInfo[playerid][pVehID]][vParkY], VehInfo[PlayerInfo[playerid][pVehID]][vParkZ]);
					GetVehicleZAngle(PlayerInfo[playerid][pVehID], VehInfo[PlayerInfo[playerid][pVehID]][vParkA]);
					GameTextForPlayer(playerid, FixText("~w~Транспорт ~g~припаркован"), 5000, 3);

					new string[160];
					format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Park_x`='%f',`Park_y`='%f',`Park_z`='%f',`Park_a`='%f' WHERE `ID`='%d'",VehInfo[PlayerInfo[playerid][pVehID]][vParkX], VehInfo[PlayerInfo[playerid][pVehID]][vParkY], VehInfo[PlayerInfo[playerid][pVehID]][vParkZ],VehInfo[PlayerInfo[playerid][pVehID]][vParkA],VehInfo[PlayerInfo[playerid][pVehID]][vID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
				case 3:
				{
					if(PlayerInfo[playerid][pMoney] < 1500)return ErrorMes(playerid,"Тебе нужно $1500 для этого.");
					SetVehicleToRespawn(GetPVarInt(playerid,"SelectCarID"));
					FP_GivePlayerMoney(playerid,-1500);
					SendClientMessage(playerid,COLOR_WHITE,"Личный транспорт доставлен на место парковки.");
				}
				case 4:
				{
					new Float:Pos[3];
					GetVehiclePos(GetPVarInt(playerid,"SelectCarID"),Pos[0], Pos[1], Pos[2]);
					FP_SetPlayerRaceCheckpoint(playerid,1,Pos[0], Pos[1], Pos[2],0.0,0.0,0.0,2.5);
					SendClientMessage(playerid,COLOR_WHITE,"Местоположение транспорта указано на карте.");
				}
				case 5: ShowPlayerDialog(playerid, D_AUTO_NUMBER , DIALOG_STYLE_INPUT, ""FPHEAD"Смена номера", "Введите новый номер", "Выбрать", "Отмена");
				case 6: DeleteTune(GetPVarInt(playerid,"SelectCarID"));
				case 7: ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
			}
		}
		case D_VRMENU:
		{
		    if(!response)return 1;
			if(strcmp(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner],PlayerInfo[playerid][pName],true))
			return ErrorMes(playerid,"Ты не можешь управлять чужим транспортом.");
			
		    switch(listitem)
		    {
		    	case 0: ShowPlayerDialog(playerid, D_AUTO_COLOR1 , DIALOG_STYLE_INPUT, ""FPHEAD"Перекраска", "Введите id основного цвета", "Выбрать", "Отмена");
		    	case 1: ShowPlayerDialog(playerid,D_NEON,DIALOG_STYLE_LIST,""FPHEAD"Неон","[1] Красный\n[2] Синuй\n[3] Зеленый\n[4] Желтый\n[5] Розовый\n[6] Белый\n[7] Удалuть","Принять","Отмена");
				case 2: 
				{
					if(PlayerInfo[playerid][pVehID] != GetPVarInt(playerid,"SelectCarID")) return ErrorMes(playerid, "Ты должен находuться в арендованном транспорте.");
					GetVehiclePos(PlayerInfo[playerid][pVehID],VehInfo[PlayerInfo[playerid][pVehID]][vParkX], VehInfo[PlayerInfo[playerid][pVehID]][vParkY], VehInfo[PlayerInfo[playerid][pVehID]][vParkZ]);
					GetVehicleZAngle(PlayerInfo[playerid][pVehID], VehInfo[PlayerInfo[playerid][pVehID]][vParkA]);
					GameTextForPlayer(playerid, FixText("~w~Транспорт ~g~припаркован"), 5000, 3);

					new string[160];
					format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Park_x`='%f',`Park_y`='%f',`Park_z`='%f',`Park_a`='%f' WHERE `ID`='%d'",VehInfo[PlayerInfo[playerid][pVehID]][vParkX], VehInfo[PlayerInfo[playerid][pVehID]][vParkY], VehInfo[PlayerInfo[playerid][pVehID]][vParkZ],VehInfo[PlayerInfo[playerid][pVehID]][vParkA],VehInfo[PlayerInfo[playerid][pVehID]][vID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
				case 3:
				{
					if(PlayerInfo[playerid][pMoney] < 1500)return ErrorMes(playerid,"Тебе нужно $1500 для этого.");
					SetVehicleToRespawn(GetPVarInt(playerid,"SelectCarID"));
					FP_GivePlayerMoney(playerid,-1500);
					SendClientMessage(playerid,COLOR_WHITE,"Арендованный транспорт доставлен на место парковки.");
				}
				case 4:
				{
					new Float:Pos[3];
					GetVehiclePos(GetPVarInt(playerid,"SelectCarID"),Pos[0], Pos[1], Pos[2]);
					FP_SetPlayerRaceCheckpoint(playerid,1,Pos[0], Pos[1], Pos[2],0.0,0.0,0.0,2.5);
					SendClientMessage(playerid,COLOR_WHITE,"Местоположение транспорта указано на карте.");
				}
				case 5: ShowPlayerDialog(playerid, D_AUTO_NUMBER , DIALOG_STYLE_INPUT, ""FPHEAD"Смена номера", "Введите новый номер", "Выбрать", "Отмена");
				case 6: DeleteTune(GetPVarInt(playerid,"SelectCarID"));
				case 7:
				{
					strmid(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner], "The State", 0, strlen("The State"), 64);
					DeleteTune(GetPVarInt(playerid,"SelectCarID"));
					// Продажа тачки, удаление.
					new string[64];
					DestroyVehicle(GetPVarInt(playerid,"SelectCarID"));
					format(string,sizeof(string),"DELETE FROM `samp_vehicles` WHERE `ID`='%d'",VehInfo[GetPVarInt(playerid,"SelectCarID")][vID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					PlayerInfo[playerid][pCars] --;
					return 1;
				}
			}
		}
		case D_AUTO_NUMBER:
		{
			if(!response) return 1;
			
			if(strcmp(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner],PlayerInfo[playerid][pName],true))
			return ErrorMes(playerid,"Ты не можешь управлять чужим транспортом.");

	        if(!strlen(inputtext) || strlen(inputtext) > 24) return ShowPlayerDialog(playerid, D_AUTO_NUMBER , DIALOG_STYLE_INPUT, ""FPHEAD"Смена номера", "Введите новый номер", "Выбрать", "Отмена");
			
			new Float:Pos[4],Float:health, vehicleid = PlayerInfo[playerid][pVehID];
			GetVehicleHealth(GetPVarInt(playerid,"SelectCarID"), health);
		    GetVehiclePos(GetPVarInt(playerid,"SelectCarID"),Pos[0],Pos[1],Pos[2]);
		    GetVehicleZAngle(GetPVarInt(playerid,"SelectCarID"),Pos[3]);
		        
		    SetVehicleNumberPlate(GetPVarInt(playerid,"SelectCarID"), inputtext);
		    strmid(VehInfo[GetPVarInt(playerid,"SelectCarID")][vPlate], inputtext, 0, MAX_PLAYER_NAME, 24);
			SetVehicleToRespawn(GetPVarInt(playerid,"SelectCarID"));
		    
		    FP_SetVehicleHealth(GetPVarInt(playerid,"SelectCarID"), health);
		    FP_SetVehiclePos(GetPVarInt(playerid,"SelectCarID"),Pos[0],Pos[1],Pos[2]);
		    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && GetPVarInt(playerid,"SelectCarID") == vehicleid) 
		    	FP_PutPlayerInVehicle(playerid,GetPVarInt(playerid,"SelectCarID"),0);
		    SetTimerEx("OnVehicleSpawnAngle",500,false,"if",GetPVarInt(playerid,"SelectCarID"),Pos[3]);
		    VehInfo[GetPVarInt(playerid,"SelectCarID")][vEngine] = 1;
			VehInfo[GetPVarInt(playerid,"SelectCarID")][vLights] = 1;
			SetVehicleParamsEx(GetPVarInt(playerid,"SelectCarID"), 1, 1, 0, 0, 0, 0, 0);
			
			new string[128];
			format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Plate` = '%s' WHERE `ID` = '%d'",VehInfo[GetPVarInt(playerid,"SelectCarID")][vPlate],VehInfo[GetPVarInt(playerid,"SelectCarID")][vID]);
		    mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

	    }
		case D_AUTO_SELL_ID:
		{
			if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
			
			if(strcmp(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner],PlayerInfo[playerid][pName],true))
			return ErrorMes(playerid,"Ты не можешь управлять чужим транспортом.");
			
			if(!strcmp(inputtext,"Нет",true))
			{
				strmid(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner], "The State", 0, strlen("The State"), 64);
				DeleteTune(GetPVarInt(playerid,"SelectCarID"));		
				FP_GivePlayerMoney(playerid,VIPMoney(PremiumInfo[playerid][Level],floatround(VehMInfo[GetVehicleModel(GetPVarInt(playerid,"SelectCarID"))-400][mPrice]/2))); //Вип-Деньги
				// Продажа тачки, удаление.
				new string[64];
				DestroyVehicle(GetPVarInt(playerid,"SelectCarID"));
				format(string,sizeof(string),"DELETE FROM `samp_vehicles` WHERE `ID`='%d'",VehInfo[GetPVarInt(playerid,"SelectCarID")][vID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				PlayerInfo[playerid][pCars] --;
				return 1;
			}
			new id;
			if(sscanf(inputtext,"u",id) || !GetPVarInt(id,"Login"))
			{
			    ErrorMes(playerid,"Этот игрок не в сети.");
			    return ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
			}
			if(id == playerid)
			{
			    ErrorMes(playerid,"Ты не можешь продать транспорт себе.");
			    return ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
			}
			if(PlayerInfo[id][pLevel] < 3)
			{
			    ErrorMes(playerid,"У этого игрока недостаточный уровень.");
			    return ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
			}
			if(!DistPlayerToPlayer(5.0, playerid, id))
			{
			    ErrorMes(playerid,"Игрок не возле тебя.");
			    return ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
			}
			if(PremiumInfo[id][Level])
			{
				if(PlayerInfo[id][pCars] >= 3)
				{
					ErrorMes(playerid,"У этого игрока есть 3 личных/арендованных транспортных средства.");
					return ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
				}
			}
			else if(PlayerInfo[id][pLevel] >= 20)
			{
				if(PlayerInfo[id][pCars] >= 2)
				{
					ErrorMes(playerid,"У этого игрока есть 2 личных/арендованных транспортных средства.");
					return ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
				}
			}	
			else if(PlayerInfo[id][pCars])
			{
				ErrorMes(playerid,"У этого игрока есть личное/арендованное транспортное средство.");
				return ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
			}
			
			new string[128];
			SetPVarInt(playerid,"CarOffer",id);
			format(string,sizeof(string),"Покупатель: %s\nВведи цену, за которую хочешь продать транспорт.",PlayerInfo[id][pName]);
			return ShowPlayerDialog(playerid,D_AUTO_SELL_COST,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта",string,"Продать","Назад");
		}
		case D_AUTO_SELL_COST:
		{
			if(!response)return ShowPlayerDialog(playerid,D_AUTO_SELL_ID,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта","{F5DEB3}Кому ты хочешь продать транспорт?\nВведи {00CC00}\"Нет\"{F5DEB3}, чтобы продать транспорт государству.","Выбрать","Выйти");
			if(!strlen(inputtext) || !ValidDialogValue(strval(inputtext)) )
			{
				new string[128];
				format(string,sizeof(string),"Покупатель: %s\nВведи цену, за которую хочешь продать транспорт.",PlayerInfo[GetPVarInt(playerid,"CarOffer")][pName]);
				return ShowPlayerDialog(playerid,D_AUTO_SELL_COST,DIALOG_STYLE_INPUT,""FPHEAD"Продажа транспорта",string,"Продать","Назад");
			}
			if(strcmp(VehInfo[GetPVarInt(playerid,"SelectCarID")][vOwner],PlayerInfo[playerid][pName],true))
			return ErrorMes(playerid,"Ты не можешь управлять чужим транспортом.");

			new Float:Pos[3], price = strval(inputtext);
			GetVehiclePos(GetPVarInt(playerid,"SelectCarID"),Pos[0],Pos[1],Pos[2]);
			if(!IsPlayerInRangeOfPoint(playerid,10,Pos[0],Pos[1],Pos[2]) || !IsPlayerInRangeOfPoint(GetPVarInt(playerid,"CarOffer"),10,Pos[0],Pos[1],Pos[2]))
			return ErrorMes(playerid,"Вы должны находuться около автомобuля.");

			MyCarOffer[GetPVarInt(playerid,"CarOffer")] = playerid;
			MyCarMoney[GetPVarInt(playerid,"CarOffer")] = price;
			MyCarID[GetPVarInt(playerid,"CarOffer")] = GetPVarInt(playerid,"SelectCarID");
			new string[128];
			format(string,sizeof(string),"* Ты предлагаешь %s купuть у тебя %s за $%d.",PlayerInfo[GetPVarInt(playerid,"CarOffer")][pName],VehMInfo[GetVehicleModel(MyCarID[GetPVarInt(playerid,"CarOffer")])-400][mName],price);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
			format(string,sizeof(string),"* %s предлагает тебе купuть у него %s за $%d.",PlayerInfo[playerid][pName],VehMInfo[GetVehicleModel(MyCarID[GetPVarInt(playerid,"CarOffer")])-400][mName],price);
			SendClientMessage(GetPVarInt(playerid,"CarOffer"),COLOR_LIGHTBLUE,string);
			SendClientMessage(GetPVarInt(playerid,"CarOffer"),COLOR_LIGHTBLUE,"* Используй \"/accept buycar\" , чтобы согласuться.");
		}
		case D_DONATE:
		{
		    if(!response) return 1;
			switch(listitem)
			{
			   case 0: 
				{
					if(PremiumInfo[playerid][Level])
					{
						ErrorMes(playerid,"У тебя уже есть VIP аккаунт.");
						return ShowDonateDialog(playerid);	
					}
					return ShowDialog(playerid,D_PREMIUM_BUY);
				}	
			    case 1: 
				{
					ShowBonusExpDialog(playerid);
				}	
			    case 2:
			    {
			        if(!WarnInfo[playerid][wWarns])
		            {
		                ShowDonateDialog(playerid);
		                return ErrorMes(playerid,"У тебя нет предупреждений.");
		            }
					
					new string[256];
					
					format(string,sizeof(string),"[%s] Выдал: %s. Причина: %s\n",WarnInfo[playerid][wDate1],WarnInfo[playerid][wAdmin1],WarnInfo[playerid][wReason1]);
					if(WarnInfo[playerid][wWarns] == 2) format(string,sizeof(string),"%s[%s] Выдал: %s. Причина: %s",string,WarnInfo[playerid][wDate2],WarnInfo[playerid][wAdmin2],WarnInfo[playerid][wReason2]);
					
					new _str[64];
					format(_str,sizeof(_str),""FPHEAD"Предупреждения %s",PlayerInfo[playerid][pName]);
					ShowPlayerDialog(playerid,D_DONATE_WARN,DIALOG_STYLE_LIST,_str,string,"Снять","Выйти");
			    }
			    case 3:
			    {
			    	return ShowPlayerDialog(playerid,D_DONATE_NAME,DIALOG_STYLE_INPUT,""FPHEAD"Смена ника",""FPHEAD"Введите новый ник и нажмите \"Сменить\"","Сменить","Назад");
			    }
			}
		}
		case D_DONATE_NAME:
		{
			if(!response) return ShowDonateDialog(playerid);

			if(PlayerInfo[playerid][pSSM] < 50)
			{
			    ShowDonateDialog(playerid);
			    return ErrorMes(playerid,"У тебя недостаточно SSM.");
			}
		    if(!IsValidName(playerid, inputtext)) 
		    {
		    	ShowPlayerDialog(playerid,D_DONATE_NAME,DIALOG_STYLE_INPUT,""FPHEAD"Смена ника",""FPHEAD"Введите новый ник и нажмите \"Сменить\"","Сменить","Назад");
		    	return 1;
		    }	
		    if(strfind(inputtext, "[SS]", true) != -1 || strfind(inputtext, "[FP]", true) != -1 || strfind(inputtext, "[PC]", true) != -1) 
			{
				ErrorMes(playerid, "Префиксы [FP], [PC] и [SS] может установить только администрация.");
				return ShowDialog(playerid,D_RPNAME);
			}

		    new string[128];
			format(string,sizeof(string), "SELECT `level` FROM `samp_users` WHERE `name` = '%s'",inputtext);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dds",playerid,DB_DONATE_NAME,inputtext);
		}
		case D_DONATE_WARN:
	    {
			if(!response) return ShowDonateDialog(playerid);
			
			if(PlayerInfo[playerid][pSSM] < 50)
			{
			    ShowDonateDialog(playerid);
			    return ErrorMes(playerid,"У тебя недостаточно SSM.");
			}
			WarnInfo[playerid][wWarns] --;
			PlayerInfo[playerid][pSSM] -= 50;
						
			new string[128];

			format(string, sizeof string, "%d SSM", PlayerInfo[playerid][pSSM]);
			PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], string);

			format(string,sizeof(string),"UPDATE `samp_users` SET `SSM`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pSSM],PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
						
			format(string,sizeof(string),"DELETE FROM `samp_warns` WHERE `ID` = '%d'",WarnInfo[playerid][wWarn][listitem]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			if(listitem < WarnInfo[playerid][wWarns]) 
			{
				WarnInfo[playerid][wWarn][listitem] = WarnInfo[playerid][wWarn][WarnInfo[playerid][wWarns]];
				strmid(WarnInfo[playerid][wDate1],WarnInfo[playerid][wDate2],0,20,20);
				strmid(WarnInfo[playerid][wAdmin1],WarnInfo[playerid][wAdmin2],0,24,24);
				strmid(WarnInfo[playerid][wReason1],WarnInfo[playerid][wReason2],0,64,64);
				
			}
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ты снял(а) одно предупреждение за 50 SSM.");
			ShowDonateDialog(playerid);
		}

		case D_ADMIN_WARN:
	    {
			if(!response) return 1;
			new string[128];		
			format(string,sizeof(string),"DELETE FROM `samp_warns` WHERE `ID` = '%d'",WarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarn][listitem]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			WarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarns] --;
			if(listitem < WarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarns]) 
			{
				format(string, sizeof(string), "Администратор %s снял(а) предупреждение %s. Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[GetPVarInt(playerid,"WarnRemove")][pName],WarnInfo[GetPVarInt(playerid,"WarnRemove")][wReason1]);
				WarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarn][listitem] = WarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarn][WarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarns]];
				strmid(WarnInfo[GetPVarInt(playerid,"WarnRemove")][wDate1],WarnInfo[GetPVarInt(playerid,"WarnRemove")][wDate2],0,20,20);
				strmid(WarnInfo[GetPVarInt(playerid,"WarnRemove")][wAdmin1],WarnInfo[GetPVarInt(playerid,"WarnRemove")][wAdmin2],0,24,24);
				strmid(WarnInfo[GetPVarInt(playerid,"WarnRemove")][wReason1],WarnInfo[GetPVarInt(playerid,"WarnRemove")][wReason2],0,64,64);
			}
			else format(string, sizeof(string), "Администратор %s снял(а) предупреждение %s. Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[GetPVarInt(playerid,"WarnRemove")][pName],WarnInfo[GetPVarInt(playerid,"WarnRemove")][wReason2]);
			SendClientMessageToAll(COLOR_LIGHTRED, string);
			DeletePVar(playerid,"WarnRemove");
		}
		case D_ADMIN_TWARN:
	    {
			if(!response) return 1;
			new string[128];		
			format(string,sizeof(string),"DELETE FROM `samp_twarns` WHERE `ID` = '%d'",TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarn][listitem]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarns] --;
			if(listitem < TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarns]) 
			{
				format(string, sizeof(string), "%s снял(а) выговор %s , Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[GetPVarInt(playerid,"WarnRemove")][pName],TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wReason1]);
				TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarn][listitem] = TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarn][TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wWarns]];
				strmid(TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wDate1],TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wDate2],0,20,20);
				strmid(TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wAdmin1],TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wAdmin2],0,24,24);
				strmid(TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wReason1],TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wReason2],0,64,64);
			}
			else format(string, sizeof(string), "%s снял(а) выговор %s , Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[GetPVarInt(playerid,"WarnRemove")][pName],TWarnInfo[GetPVarInt(playerid,"WarnRemove")][wReason2]);
			SendRadioMessage(TeamInfo[playerid][tID],COLOR_LIGHTRED, string);
			DeletePVar(playerid,"WarnRemove");
		}
		case D_PREMIUM_BUY:
	    {
	        if(!response)return ShowDonateDialog(playerid);
	        if(!ValidDialogValue(strval(inputtext)) ) return ShowDialog(playerid,D_PREMIUM_BUY);
			if(!PlayerInfo[playerid][pAdmin])
			{
				if(PlayerInfo[playerid][pSSM] < 150)
				{
					ShowDialog(playerid,D_PREMIUM_BUY);
					return ErrorMes(playerid,"У тебя недостаточно SSM.");
				}
			}	
			if(!strlen(inputtext))
			{
				new string[128];
				strmid(PremiumInfo[playerid][Refer], "Нет", 0, MAX_PLAYER_NAME, 24);
				PremiumInfo[playerid][Level] = 1;
				PremiumInfo[playerid][Date] = GetTime + 2592000;
				format(string,sizeof(string),"UPDATE `samp_premium` SET `Level`='1',`Refer`='Нет',`Date`='%d' WHERE `Name`='%s'",PremiumInfo[playerid][Date],PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				
				if(!PlayerInfo[playerid][pAdmin])
				{
					PlayerInfo[playerid][pSSM] -= 150;

					format(string, sizeof string, "%d SSM", PlayerInfo[playerid][pSSM]);
					PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], string);

					format(string,sizeof(string),"UPDATE `samp_users` SET `SSM`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pSSM],PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
				SendClientMessage(playerid,COLOR_GREEN,"Поздравляю, ты приобрел(а) VIP аккаунт 1 уровня.");
				return ShowDonateDialog(playerid);
			}
			if(strlen(inputtext) < 5 || strlen(inputtext) > 20) return ShowDialog(playerid, D_PREMIUM_BUY);
			
			if(!strcmp(inputtext,PlayerInfo[playerid][pName],true))
   			{
				ErrorMes(playerid,"Ты не можешь указывать себя в качестве рефера.");
                return ShowDialog(playerid,D_PREMIUM_BUY);
            }
			if(!IsValidName(playerid, inputtext))
	        {
	            return ShowDialog(playerid,D_PREMIUM_BUY);
	        }
			ForEachPlayer(i)
			{
				if(strcmp(inputtext,PlayerInfo[i][pName],true)) continue;

				new string[160];
				if(!PremiumInfo[i][Level]) strmid(PremiumInfo[playerid][Refer], "Нет", 0, MAX_PLAYER_NAME, 24);
				else strmid(PremiumInfo[playerid][Refer],PlayerInfo[i][pName],0,24,24);
				PremiumInfo[playerid][Level] = 1;
				PremiumInfo[playerid][Date] = GetTime + 2592000;
				format(string,sizeof(string),"UPDATE `samp_premium` SET `Level`='1',`Refer`='%s',`Date`='%d' WHERE `Name`='%s'",PremiumInfo[playerid][Refer],PremiumInfo[playerid][Date],PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				
				if(!PlayerInfo[playerid][pAdmin])
				{
					PlayerInfo[playerid][pSSM] -= 150;

					format(string, sizeof string, "%d SSM", PlayerInfo[playerid][pSSM]);
					PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], string);

					format(string,sizeof(string),"UPDATE `samp_users` SET `SSM`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pSSM],PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
				SendClientMessage(playerid,COLOR_GREEN,"Поздравляю, ты приобрел(а) VIP аккаунт 1 уровня.");
				if(PremiumInfo[i][Level])
				{
					format(string,sizeof(string),"%s указал(а) твой ник при покупке VIP аккаунта. Ты получаешь 50 рублей на счёт.",PlayerInfo[playerid][pName]);
					SendClientMessage(i,COLOR_GREEN,string);
					PremiumInfo[i][Rub] += 50;
					PremiumInfo[i][Players] ++;
					if(PremiumInfo[i][Players] == 5)
					{
						PremiumInfo[i][Players] = 0;
						if(PremiumInfo[i][Level] < 5)
						{
							PremiumInfo[i][Level]++;
							format(string,sizeof(string),"Поздравляю, тебя указали 5 человек при покупке VIP аккаунта и ты получил(а) %d уровень VIP.",PremiumInfo[i][Level]);
							SendClientMessage(i,COLOR_GREEN,string);
						}	
					}
					PremiumInfo[i][Date] = GetTime + 2592000;
					format(string,sizeof(string),"UPDATE `samp_premium` SET `Rub`='%d',`Players`='%d',`Level`='%d',`Date`='%d' WHERE `Name`='%s'",PremiumInfo[i][Rub],PremiumInfo[i][Players],PremiumInfo[i][Level],PremiumInfo[i][Date],PlayerInfo[i][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
				else 
				{
					format(string,sizeof(string),"%s указал(а) твой ник при покупке VIP аккаунта.",PlayerInfo[playerid][pName]);
					SendClientMessage(i,COLOR_GREEN,string);
					SendClientMessage(i,COLOR_YELLOW,"При наличии VIP аккаунта ты получил(а) бы 50 рублей на счет.");
				}
				return ShowDonateDialog(playerid);
			}
			new query[80];
			format(query,sizeof(query), "SELECT `Level` FROM `samp_premium` WHERE `Name` = '%s'", inputtext);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dds",playerid,DB_CHECK_PREMIUM,inputtext);
		}
		case D_DONATE_LVL:
	    {
	        if(!response)return ShowDonateDialog(playerid);
	        if(!ValidDialogValue(strval(inputtext)) ) return ShowBonusExpDialog(playerid);
	        if(PlayerInfo[playerid][pSSM] < strval(inputtext))
	        {
	            ShowBonusExpDialog(playerid);
	            return ErrorMes(playerid,"У тебя недостаточно SSM.");
	        }
	        new moneys = strval(inputtext), exp = PlayerInfo[playerid][pLevel]*5, string[128];
	        while(moneys)
	        {
				moneys --;
	            PlayerInfo[playerid][pSSM] --;
	            PlayerInfo[playerid][pExp] ++ ;
				if(PlayerInfo[playerid][pExp] >= exp)
				{
					PlayerInfo[playerid][pLevel]++;
					PlayerInfo[playerid][pExp] -= exp;
					format(string, sizeof(string), "Поздравляю! Ты получuл(а) %d уровень.", PlayerInfo[playerid][pLevel]);
					SendClientMessage(playerid, COLOR_GREEN, string);
					exp = PlayerInfo[playerid][pLevel]*5;
				}
	        }
			UpdateLevelText(playerid);

			format(string, sizeof string, "%d SSM", PlayerInfo[playerid][pSSM]);
			PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], string);

			format(string,sizeof(string),"UPDATE `samp_users` SET `SSM`='%d',`level`='%d',`exp`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pSSM],PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pExp],PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
	        ShowDonateDialog(playerid);
		}
		case D_KPK:
	    {
	        if(!response)return 1;
			switch (listitem)
			{
			    case 0:return ShowDialog(playerid,D_KPK_ACC);
	            case 1:return ShowDialog(playerid,D_GPS);
	            case 2:return ShowDialog(playerid,D_KPK_ONLINE); 
				case 3:return ShowDialog(playerid,D_HELP);
	            case 4:return ShowDialog(playerid,D_SERVICE);
				case 5:return ShowDialog(playerid,D_SOBSTV);
			}
		}
		case D_KPK_ACC:
	    {
	        if(!response)return ShowDialog(playerid,D_KPK);
			switch (listitem)
			{
	            case 0: MenuShow(playerid, GetPVarInt(playerid, "LMenu_Type"), GetPVarInt(playerid, "RMenu_Type"));
				case 1: return ShowDialog(playerid, D_TEXTDRAWS);
				case 2: return ShowDialog(playerid, D_CHAT);
			}
		}
		case D_TEXTDRAWS:
		{
			if(!response)return ShowDialog(playerid,D_KPK_ACC);
			switch(listitem)
			{
				case 0:
				{
					if(!TextDrawInfo[playerid][DateTD]) 
					{
						TextDrawInfo[playerid][DateTD] = 1;
						TextDrawShowForPlayer(playerid,DateDisp);
					}
					else
					{
						TextDrawInfo[playerid][DateTD] = 0;
						TextDrawHideForPlayer(playerid,DateDisp);
					}
				}
				case 1:
				{
					if(!TextDrawInfo[playerid][TimeTD]) 
					{
						TextDrawInfo[playerid][TimeTD] = 1;
						TextDrawShowForPlayer(playerid,TimeDisp);
					}
					else
					{
						TextDrawInfo[playerid][TimeTD] = 0;
						TextDrawHideForPlayer(playerid,TimeDisp);
					}
				}
				
				case 2:
				{
					if(!TextDrawInfo[playerid][SpeedTD])
					{

						TextDrawInfo[playerid][SpeedTD] = 1;
						if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
							SpeedometerShow(playerid);
						
					}
					else
					{
						
						TextDrawInfo[playerid][SpeedTD] = 0;
						SpeedometerHide(playerid);
						
					}
				}
				case 3:
				{
					if(!TextDrawInfo[playerid][LevelTD])
					{

						TextDrawInfo[playerid][LevelTD] = 1;
						PlayerTextDrawShow(playerid, LvL[playerid]);
						
					}
					else
					{
						
						TextDrawInfo[playerid][LevelTD] = 0;
						PlayerTextDrawHide(playerid, LvL[playerid]);
						
					}
				}
				default: return 1;
			}

			new string[84];
			format(string,sizeof(string),"UPDATE `samp_users` SET `textdraws`='%d|%d|%d|%d' WHERE `name`='%s'", 
				TextDrawInfo[playerid][DateTD],
				TextDrawInfo[playerid][TimeTD],
				TextDrawInfo[playerid][SpeedTD],
				TextDrawInfo[playerid][LevelTD],
				PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string); 

			return ShowDialog(playerid, D_TEXTDRAWS);
		}
		case D_CHAT:
		{
		    if(!response)return ShowDialog(playerid,D_KPK_ACC);
		    if(listitem == 0)cmd_togpm(playerid,"");
			else if(listitem == 1)cmd_togooc(playerid,"");
			else if(listitem == 2)cmd_tognews(playerid,"");
			else if(listitem == 3)cmd_toglogin(playerid,"");
		}
		case D_GPS:
	    {
	        if(!response)return ShowDialog(playerid,D_KPK);
			switch (listitem)
			{
			
			    case 0: 
				{
					new string[256];
					for(new i; i<sizeof(GPS_Job); i++) 
					{
						strcat(string,GPS_Job[i][Locate]);
						strcat(string,"\n");
					}	
					ShowPlayerDialog(playerid,D_GPS_JOB,DIALOG_STYLE_LIST,""FPHEAD"КПК -> GPS -> Работы",string,"Выбрать","Назад");
				}	
	            case 1:
				{
					new string[256];
					for(new i; i<sizeof(GPS_Loc); i++) 
					{
						strcat(string,GPS_Loc[i][Locate]);
						strcat(string,"\n");
					}	
					ShowPlayerDialog(playerid,D_GPS_LOC,DIALOG_STYLE_LIST,""FPHEAD"КПК -> GPS -> Основные локацuu",string,"Выбрать","Назад");
				}	
				case 2: ShowPlayerDialog(playerid,D_GPS_BLIZH,DIALOG_STYLE_LIST,""FPHEAD"КПК -> GPS -> Блuжайшие услуги","[1] Мастерская\n[2] Закусочная\n[3] Магазин\n[4] Оружейный магазин\n[5] Магазин одежды\n[6] Заправка","Выбрать","Назад");
				case 3:
				{
                    if(GetPVarInt(playerid,"StartJob"))return ErrorMes(playerid,"Ты не можешь удалить рабочую метку.");
					FP_DisablePlayerRaceCheckpoint(playerid);
				}
			}
		}
		case D_GPS_JOB:
	    {
	        if(!response)return ShowDialog(playerid,D_GPS);
			FP_SetPlayerRaceCheckpoint(playerid,1,GPS_Job[listitem][LocateX],GPS_Job[listitem][LocateY],GPS_Job[listitem][LocateZ],0.0,0.0,0.0,2.0);
		}
		case D_GPS_LOC:
	    {
	        if(!response)return ShowDialog(playerid,D_GPS);
			FP_SetPlayerRaceCheckpoint(playerid,1,GPS_Loc[listitem][LocateX],GPS_Loc[listitem][LocateY],GPS_Loc[listitem][LocateZ],0.0,0.0,0.0,2.0);
		}
		case D_GPS_BLIZH:
		{
		    if(!response)return ShowDialog(playerid,D_GPS);
			switch(listitem)
			{
				case 0:
				{
					new BizID,Float:BizDistance = 10000.0;
					for(new i; i<sizeof(PayPos); i++)
					{
						if(GetPlayerDistanceFromPoint(playerid, PayPos[i][0], PayPos[i][1], PayPos[i][2]) < BizDistance)
						{
							BizDistance = GetPlayerDistanceFromPoint(playerid, PayPos[i][0], PayPos[i][1], PayPos[i][2]);
							BizID = i;
						}
					}
					if(!BizID) return ErrorMes(playerid,"GPS навигатор не смог определить ближайшую мастерскую.");
					FP_SetPlayerRaceCheckpoint(playerid,1,PayPos[BizID][0],PayPos[BizID][1],PayPos[BizID][2],0.0,0.0,0.0,3.0);
					
					return 1;
				}
				case 1://Закусочные
				{
					new BizID,Float:BizDistance = 10000.0;
					for(new i=1; i<=BIZNES; i++)
					{
						if(BiznesInfo[i][bType] >= 16 && BiznesInfo[i][bType] <= 20)
						{
							if(GetPlayerDistanceFromPoint(playerid, BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY], BiznesInfo[i][bEnterZ]) < BizDistance)
							{
								BizDistance = GetPlayerDistanceFromPoint(playerid, BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY], BiznesInfo[i][bEnterZ]);
								BizID = i;
							}
						}
					}
					if(!BizID) return ErrorMes(playerid,"GPS навигатор не смог определить ближайшую закусочную.");
					FP_SetPlayerRaceCheckpoint(playerid,1,BiznesInfo[BizID][bEnterX],BiznesInfo[BizID][bEnterY],BiznesInfo[BizID][bEnterZ],0.0,0.0,0.0,3.0);
					return 1;
				}
				case 2://Магазин
				{
					new BizID,Float:BizDistance = 10000.0;
					for(new i=1; i<=BIZNES; i++)
					{
						if(BiznesInfo[i][bType] == 11 || BiznesInfo[i][bType] == 12)
						{
							if(GetPlayerDistanceFromPoint(playerid, BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY], BiznesInfo[i][bEnterZ]) < BizDistance)
							{
								BizDistance = GetPlayerDistanceFromPoint(playerid, BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY], BiznesInfo[i][bEnterZ]);
								BizID = i;
							}
						}
					}
					if(!BizID) return ErrorMes(playerid,"GPS навигатор не смог определить ближайший магазин.");
					FP_SetPlayerRaceCheckpoint(playerid,1,BiznesInfo[BizID][bEnterX],BiznesInfo[BizID][bEnterY],BiznesInfo[BizID][bEnterZ],0.0,0.0,0.0,3.0);
					return 1;
				}
				case 3://Оружейки
				{
					new BizID,Float:BizDistance = 10000.0;
					for(new i=1; i<=BIZNES; i++)
					{
						if(BiznesInfo[i][bType] >= 13 && BiznesInfo[i][bType] <= 15)
						{
							if(GetPlayerDistanceFromPoint(playerid, BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY], BiznesInfo[i][bEnterZ]) < BizDistance)
							{
								BizDistance = GetPlayerDistanceFromPoint(playerid, BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY], BiznesInfo[i][bEnterZ]);
								BizID = i;
							}
						}
					}
					if(!BizID) return ErrorMes(playerid,"GPS навигатор не смог определить ближайший оружейный магазин.");
					FP_SetPlayerRaceCheckpoint(playerid,1,BiznesInfo[BizID][bEnterX],BiznesInfo[BizID][bEnterY],BiznesInfo[BizID][bEnterZ],0.0,0.0,0.0,3.0);
					return 1;
				}
				case 4://Магазин Одежды
				{
					new BizID,Float:BizDistance = 10000.0;
					for(new i=1; i<=BIZNES; i++)
					{
						if(BiznesInfo[i][bType] >= 25 && BiznesInfo[i][bType] <= 30)
						{
							if(GetPlayerDistanceFromPoint(playerid, BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY], BiznesInfo[i][bEnterZ]) < BizDistance)
							{
								BizDistance = GetPlayerDistanceFromPoint(playerid, BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY], BiznesInfo[i][bEnterZ]);
								BizID = i;
							}
						}
					}
					if(!BizID) return ErrorMes(playerid,"GPS навигатор не смог определить ближайший магазин одежды.");
					FP_SetPlayerRaceCheckpoint(playerid,1,BiznesInfo[BizID][bEnterX],BiznesInfo[BizID][bEnterY],BiznesInfo[BizID][bEnterZ],0.0,0.0,0.0,3.0);
					return 1;
				}
				case 5://Тюнинг
				{
					new BizID,Float:BizDistance = 10000.0;
					for(new i; i<sizeof(GasStations); i++)
					{
						if(GetPlayerDistanceFromPoint(playerid, GasStations[i][0], GasStations[i][1], GasStations[i][2]) < BizDistance)
						{
							BizDistance = GetPlayerDistanceFromPoint(playerid, GasStations[i][0], GasStations[i][1], GasStations[i][2]);
							BizID = i;
						}
					}
					if(!BizID) return ErrorMes(playerid,"GPS навигатор не смог определить ближайшую заправочную станцию.");
					FP_SetPlayerRaceCheckpoint(playerid,1,GasStations[BizID][0],GasStations[BizID][1],GasStations[BizID][2],0.0,0.0,0.0,3.0);
					
					return 1;
				}
	 	    }
		}
		case D_KPK_ONLINE:
	    {
	        if(!response)return ShowDialog(playerid,D_KPK);
			switch (listitem)
			{
			    case 0:ShowLeadersOnline(playerid);
	            case 1:ShowMembersOnline(playerid);
	            case 2:cmd_admins(playerid, "");
			}
		}
		
		case D_HELP:
	    {
	        if(!response)return ShowDialog(playerid,D_KPK);
			switch (listitem)
			{
			    case 0:cmd_animlist(playerid,"");
	            case 1:ShowPlayerDialog(playerid,D_HELP2,DIALOG_STYLE_LIST,""FPHEAD"Основные команды","Команды SA-MP\nОбщие команды\nКоманды Чата","Выбрать","Назад");
	            case 2:ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Лидерские команды","{F5DEB3}/invite - Принять игрока\n/uninvite - Выгнать игрока\n/giverank - Выдать ранг\n/twarn - Выговор\n/makezam - Назначить заместителя","OK","");
	            case 3:cmd_ah(playerid,"");
			}
		}
		case D_HELP2:
	    {
	        if(!response)return ShowDialog(playerid,D_KPK);
			switch (listitem)
			{
			    case 0:cmd_sa_cmd(playerid,"");
	            case 1:cmd_main_cmd(playerid,"");
	            case 2:cmd_chat_cmd(playerid,"");
			}
		}
		case D_SOBSTV:
	    {
	        if(!response)return ShowDialog(playerid,D_KPK);
			switch (listitem)
			{
			    case 0:cmd_vehicle(playerid,"");
	            case 1:cmd_house(playerid,"");
	            case 2:cmd_biznes(playerid,"");
			}
		}
	    case D_HMENU:
	    {
	        if(!response)return 1;
	        if(!PlayerInfo[playerid][pHouseKey]) return ErrorMes(playerid,"У тебя нет дома.");
	        switch (listitem)
			{
			    case 0:
			    {
					FP_SetPlayerRaceCheckpoint(playerid,1,HouseInfo[PlayerInfo[playerid][pHouseKey]][hEnterX], HouseInfo[PlayerInfo[playerid][pHouseKey]][hEnterY], HouseInfo[PlayerInfo[playerid][pHouseKey]][hEnterZ],0.0,0.0,0.0,1.0);
					GameTextForPlayer(playerid, FixText("~r~метка установлена"), 5000, 1);
					return 1;
			    }
	            case 1:
	            {
	            	if(PlayerInfo[playerid][pHouseKey] != PlayerInfo[playerid][pWorld]) return ErrorMes(playerid,"Ты находишься не в своем доме.");
					return ShowPlayerDialog(playerid,D_HMENU_UP,DIALOG_STYLE_LIST,""FPHEAD"Дом u аренда -> Улучшения","[1] Аптечка $50000\n[2] Бронежuлет $50000\n[3] Тайник $100000","Выбрать","Назад");
	            }
	            case 2:
	            {
	            	if(!PlayerInfo[playerid][pHouseKey])return ErrorMes(playerid, "У тебя нет дома.");
					if(HouseInfo[PlayerInfo[playerid][pHouseKey]][hLock])
					{
						HouseInfo[PlayerInfo[playerid][pHouseKey]][hLock] = 0;
						GameTextForPlayer(playerid, FixText("~w~Дверь ~g~открыта"), 5000, 4);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					}
					else

					{
						HouseInfo[PlayerInfo[playerid][pHouseKey]][hLock] = 1;
						GameTextForPlayer(playerid, FixText("~w~Дверь ~r~закрыта"), 5000, 4);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					}
					return 1;
	            }
	            case 3:
	            {
					if(PlayerInfo[playerid][pHouseKey] != PlayerInfo[playerid][pWorld]) return ErrorMes(playerid,"Ты находишься не в своем доме.");
					if(!HouseInfo[PlayerInfo[playerid][pHouseKey]][hSafe]) return ErrorMes(playerid, "В этом доме нет тайника.");
					SetPVarInt(playerid, "Menu_Other", 2);
					SetPVarInt(playerid,"Menu_OtherID", PlayerInfo[playerid][pHouseKey]);

					MenuShow(playerid, BT_OTHER, BT_HANDS);
					return 1;
	            }
	            case 4:ClothesShow(playerid);
	            case 5:cmd_house(playerid,"sell");
			}
		}
		case D_HMENU_UP:
	 	{
		    if(!response)return ShowHouseDialog(playerid);
			switch (listitem)
			{
			    case 0:
				{

					if(PlayerInfo[playerid][pLevel] < 5)return ErrorMes(playerid, "Доступно только с 3 уровня.");
					if(PlayerInfo[playerid][pMoney] < 50000)return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
					if(HouseInfo[PlayerInfo[playerid][pHouseKey]][hHel])return ErrorMes(playerid, "У тебя уже есть аптечка.");
					HouseInfo[PlayerInfo[playerid][pHouseKey]][hHel] = 1;
					FP_GivePlayerMoney(playerid,-50000);
					SendClientMessage(playerid, COLOR_WHITE, "Поздравляю, ты купuл(а) домашнюю аптечку.");
					
					new string[80];
					format(string,sizeof(string),"UPDATE `samp_houses` SET `Hel` = '1' WHERE `ID` = '%d'", HouseInfo[PlayerInfo[playerid][pHouseKey]][hID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
				case 1:
				{
					if (PlayerInfo[playerid][pLevel] < 7)return ErrorMes(playerid, "Доступно только с 5 уровня.");
					if(PlayerInfo[playerid][pMoney] < 50000)return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
					if(HouseInfo[PlayerInfo[playerid][pHouseKey]][hHel])return ErrorMes(playerid, "У тебя уже есть бронежилет.");
					HouseInfo[PlayerInfo[playerid][pHouseKey]][hArm] = 1;
					FP_GivePlayerMoney(playerid,-50000);
					SendClientMessage(playerid, COLOR_WHITE, "Поздравляю, ты купuл(а) бронежuлет.");
					
					new string[80];
					format(string,sizeof(string),"UPDATE `samp_houses` SET `Arm` = '1' WHERE `ID` = '%d'", HouseInfo[PlayerInfo[playerid][pHouseKey]][hID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
				case 2:
				{
					if (PlayerInfo[playerid][pLevel] < 7)return ErrorMes(playerid, "Доступно только с 7 уровня.");
					if(PlayerInfo[playerid][pMoney] < 100000)return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
					if(HouseInfo[PlayerInfo[playerid][pHouseKey]][hSafe])return ErrorMes(playerid, "У тебя уже есть тайник.");
					HouseInfo[PlayerInfo[playerid][pHouseKey]][hSafe] = 1;
					FP_GivePlayerMoney(playerid,-100000);
					SendClientMessage(playerid, COLOR_WHITE, "Поздравляю, ты купuл(а) тайник.");
					
					new string[80];
					format(string,sizeof(string),"UPDATE `samp_houses` SET `Safe` = '1' WHERE `ID` = '%d'", HouseInfo[PlayerInfo[playerid][pHouseKey]][hID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
			}
		}
		

		case D_BMENU:
	    {
	        if(!response)return 1;
			switch (listitem)
			{
			    case 0:
				{
					if(!PlayerInfo[playerid][pBizKey])return ErrorMes(playerid, "У тебя нет бизнеса.");
					
					new coordsstring[128],targetid = PlayerInfo[playerid][pBizKey];
					SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
					format(coordsstring, sizeof(coordsstring),"*** %s ***",BiznesInfo[targetid][bMessage]);
					SendClientMessage(playerid, COLOR_WHITE,coordsstring);
					format(coordsstring, sizeof(coordsstring), "Корзина: $%d", BiznesInfo[targetid][bMoney]);
					SendClientMessage(playerid, COLOR_WHITE,coordsstring);
					format(coordsstring, sizeof(coordsstring), "Продукты: %d/%d", BiznesInfo[targetid][bProds],BiznesInfo[targetid][bMaxProds]);
					SendClientMessage(playerid, COLOR_WHITE,coordsstring);
					return SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
				}
	            case 1:
				{
					if(!PlayerInfo[playerid][pBizKey])return ErrorMes(playerid,  "У тебя нет бизнеса.");
					if(!BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCount])
					{
						ErrorMes(playerid,"Изменение цен недоступно для этого бизнеса.");
						return ShowBiznesDialog(playerid);
					}
					/*switch(BiznesInfo[PlayerInfo[playerid][pBizKey]][bType])
					{
						case 1:
						{
							new string[256];
							for(new i,_str[64]; i<BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCount]; i++)
							{
								format(_str,sizeof(_str),"[%d] %s {00CC00}$%d\n",i+1,FuelType[i],BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCost][i]);
								strcat(string,_str);
							}
							ShowPlayerDialog(playerid,D_CHANGE_PRICE,DIALOG_STYLE_LIST,""FPHEAD"Изменение цен",string,"Изменить","Отмена");
						}
						case 11,12:
						{
							new string[384];
							for(new i,_str[64]; i<BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCount]; i++)
							{
								format(_str,sizeof(_str),"[%d] %s {00CC00}$%d\n",i+1,ShopType[i],BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCost][i]);
								strcat(string,_str);
							}
							ShowPlayerDialog(playerid,D_CHANGE_PRICE,DIALOG_STYLE_LIST,""FPHEAD"Изменение цен",string,"Изменить","Отмена");
						}
						case 13..15:
						{
							new string[640];
							for(new i,_str[64]; i<BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCount]; i++)
							{
								format(_str,sizeof(_str),"[%d] %s {00CC00}$%d\n",i+1,GunShopType[i],BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCost][i]);
								strcat(string,_str);
							}
							ShowPlayerDialog(playerid,D_CHANGE_PRICE,DIALOG_STYLE_LIST,""FPHEAD"Изменение цен",string,"Изменить","Отмена");
						}
						default:
						{
							ErrorMes(playerid,"Изменение цен недоступно для этого бизнеса.");
							return ShowBiznesDialog(playerid);
						}
					}*/
					return 1;
				}
				case 2:
				{
					if(!PlayerInfo[playerid][pBizKey])return ErrorMes(playerid,  "У тебя нет бизнеса.");
					return ShowPlayerDialog(playerid, D_BMENU_DR, DIALOG_STYLE_INPUT, ""FPHEAD"Бизнес -> Корзина","Сколько ты хочешь забрать из корзины?","Выбрать","Отмена");
				}
	            case 3:
				{
					if(!PlayerInfo[playerid][pBizKey])return ErrorMes(playerid,  "У тебя нет бизнеса.");
					return ShowPlayerDialog(playerid, D_BMENU_BANK, DIALOG_STYLE_INPUT, ""FPHEAD"Бизнес -> Корзина","Сколько ты хочешь положuть в корзину?","Выбрать","Отмена");
				}
	            case 4:cmd_biznes(playerid,"sell");
			}
		}
		case D_CHANGE_PRICE:
		{
			if(!response) return ShowBiznesDialog(playerid);
			SetPVarInt(playerid,"ChangePrice",listitem);
			
			new string[160];
			/*switch(BiznesInfo[PlayerInfo[playerid][pBizKey]][bType])
			{
				case 1:
				{
					format(string,sizeof(string),"{F5DEB3}Наименование товара: {FFD700}%s\n{F5DEB3}Стандартная цена: {00CC00}$%d\n{F5DEB3}Текущая цена: {00CC00}$%d",
					FuelType[GetPVarInt(playerid,"ChangePrice")],FuelCost[GetPVarInt(playerid,"ChangePrice")],BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCost][GetPVarInt(playerid,"ChangePrice")]);
				}
				case 11,12:
				{
					format(string,sizeof(string),"{F5DEB3}Наименование товара: {FFD700}%s\n{F5DEB3}Стандартная цена: {00CC00}$%d\n{F5DEB3}Текущая цена: {00CC00}$%d",
					ShopType[GetPVarInt(playerid,"ChangePrice")],ShopType[1][GetPVarInt(playerid,"ChangePrice")],BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCost][GetPVarInt(playerid,"ChangePrice")]);
				}
				case 13..15:
				{
					format(string,sizeof(string),"{F5DEB3}Наименование товара: {FFD700}%s\n{F5DEB3}Стандартная цена: {00CC00}$%d\n{F5DEB3}Текущая цена: {00CC00}$%d",
					GunShopType[GetPVarInt(playerid,"ChangePrice")],GunType[1][GetPVarInt(playerid,"ChangePrice")],BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCost][GetPVarInt(playerid,"ChangePrice")]);
				}
				default: return 1;
			}*/
			return ShowPlayerDialog(playerid, D_CHANGE_PRICE_VALUE, DIALOG_STYLE_INPUT, ""FPHEAD"Бизнес -> Изменение цен",string,"Выбрать","Отмена");
		}
		case D_CHANGE_PRICE_VALUE:
		{
			if(!response) return ShowBiznesDialog(playerid);
			if(strval(inputtext) > BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCost][GetPVarInt(playerid,"ChangePrice")]*5 || strval(inputtext) < floatround(BiznesInfo[PlayerInfo[playerid][pBizKey]][bProdsCost][GetPVarInt(playerid,"ChangePrice")]/5))
			{
				ErrorMes(playerid, "Цена не должна отличаться от стандартной более чем в 5 раз.");
				return ShowBiznesDialog(playerid);
			}
			return ErrorMes(playerid,"Временно недоступно.");
		}
		case D_BMENU_DR:
		{
	        if(!response)return ShowBiznesDialog(playerid);
	        new bouse = PlayerInfo[playerid][pBizKey],string[128];
	        if(!IsPlayerInRangeOfPoint(playerid,50,BiznesInfo[bouse][bExitX], BiznesInfo[bouse][bExitY],BiznesInfo[bouse][bExitZ]))
	        {
				if(!IsPlayerInRangeOfPoint(playerid,5,BiznesInfo[bouse][bEnterX], BiznesInfo[bouse][bEnterY],BiznesInfo[bouse][bEnterZ]))
				{
					ShowBiznesDialog(playerid);
					return ErrorMes(playerid, "Ты далеко от своего бизнеса.");
				}	
	        }
	        if (strval(inputtext) > BiznesInfo[bouse][bMoney]|| !strlen(inputtext) || !ValidDialogValue(strval(inputtext)))
			{
			    ShowPlayerDialog(playerid, D_BMENU_DR, DIALOG_STYLE_INPUT, ""FPHEAD"Бизнес -> Корзина","Сколько ты хочешь забрать из корзины?","Выбрать","Отмена");
				return ErrorMes(playerid, "В корзине нет такой суммы.");
			}
			FP_GivePlayerMoney(playerid,strval(inputtext));
			BiznesInfo[bouse][bMoney] -= strval(inputtext);
			format(string, sizeof(string), "Ты взял из корзины $%d. Остаток: $%d ", strval(inputtext),BiznesInfo[bouse][bMoney]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			
			format(string,sizeof(string),"UPDATE `samp_biznes` SET `Money` = '%d' WHERE `ID` = '%d'",BiznesInfo[bouse][bMoney],bouse);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		}
		case D_BMENU_BANK:
		{
	        if(!response)return ShowBiznesDialog(playerid);
	        new bouse = PlayerInfo[playerid][pBizKey],string[128];
	        if(!IsPlayerInRangeOfPoint(playerid,50,BiznesInfo[bouse][bExitX], BiznesInfo[bouse][bExitY],BiznesInfo[bouse][bExitZ]))
	        {
				if(!IsPlayerInRangeOfPoint(playerid,5,BiznesInfo[bouse][bEnterX], BiznesInfo[bouse][bEnterY],BiznesInfo[bouse][bEnterZ]))
				{
					ShowBiznesDialog(playerid);
					return ErrorMes(playerid, "Ты далеко от своего бизнеса.");
				}	
	        }
	        if (strval(inputtext) > PlayerInfo[playerid][pMoney]  || !ValidDialogValue(strval(inputtext)))
			{
			    ShowPlayerDialog(playerid, D_BMENU_BANK, DIALOG_STYLE_INPUT, ""FPHEAD"Бизнес -> Корзина","Сколько ты хочешь положuть в корзину?","Выбрать","Отмена");
				return ErrorMes(playerid, "У тебя нет такой суммы.");
			}
			FP_GivePlayerMoney(playerid,-strval(inputtext));
			BiznesInfo[bouse][bMoney] += strval(inputtext);
			format(string, sizeof(string), "Ты положuл(а) в корзину $%d. Всего: $%d ", strval(inputtext),BiznesInfo[bouse][bMoney]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			
			format(string,sizeof(string),"UPDATE `samp_biznes` SET `Money` = '%d' WHERE `ID` = '%d'",BiznesInfo[bouse][bMoney],bouse);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

		}
		case D_JOB:
	    {
	        if(!response)return 1;
			PlayerInfo[playerid][pJob] = GetPVarInt(playerid,"GettingJob");
			
			new string[128];
			format(string,sizeof(string),"UPDATE `samp_users` SET `Job`='%d' WHERE `Name`='%s'", 
				PlayerInfo[playerid][pJob], PlayerInfo[playerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			DeletePVar(playerid,"GettingJob");
			SendClientMessage(playerid,COLOR_WHITE,"Поздравляю, ты успешно устроuлся на работу.");
		}
		case D_JOBOFF:
	    {
	        if(!response)return 1;
			PlayerInfo[playerid][pJob] = 0;
			
			new string[128];
			format(string,sizeof(string),"UPDATE `samp_users` SET `Job`='0' WHERE `Name`='%s'", 
				PlayerInfo[playerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			SendClientMessage(playerid,COLOR_WHITE,"Ты уволился с работы.");
		}
		case D_PM:
		{
		    new string[128];
			if(!response)return 1;
			format(string,sizeof(string),"%d %s",Click[playerid],inputtext);
			cmd_pm(playerid,string);
			return 1;
		}
		case D_HIT_MAIN:
	    {
	        if(!response)return SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ты выключuл(а) свой КПК u отключuлся от сервера агенства.");
	        if(listitem == 0)return ShowHitDialog(playerid);
	        if(listitem == 1)
		   	{
			    if(TeamInfo[playerid][tRank] < 4)
				{
				    ShowHitDialog(playerid);
					return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
				}
				SearchingHit(playerid);
			}
			else if(listitem == 2) ShowMembersOnline(playerid);
			return 1;
		}
		case D_HIT_GUN:
	    {
	        if(!response)return 1;
	        if(listitem == 0)
		   	{
		   		if(PlayerInfo[playerid][pMoney] < 500)
		   		{
		   			ErrorMes(playerid, "Недостаточно средств на банковской карте.");
		   			return ShowHitmanGun(playerid);
		   		}
				if(!AddItem(playerid, 24, 49)) return ShowHitmanGun(playerid);
				FP_GivePlayerMoney(playerid, -500);
				return ShowHitmanGun(playerid);
			}
			else if(listitem == 1)
		   	{
		   		if(PlayerInfo[playerid][pMoney] < 1500)
		   		{
		   			ErrorMes(playerid, "Недостаточно средств на банковской карте.");
		   			return ShowHitmanGun(playerid);
		   		}
				if(!AddItem(playerid, 29, 120)) return ShowHitmanGun(playerid);
				FP_GivePlayerMoney(playerid, -1500);
				return ShowHitmanGun(playerid);
			}
			else if(listitem == 2)
		   	{
		   		if(PlayerInfo[playerid][pMoney] < 1000)
		   		{
		   			ErrorMes(playerid, "Недостаточно средств на банковской карте.");
		   			return ShowHitmanGun(playerid);
		   		}
				if(!AddItem(playerid, 25, 50)) return ShowHitmanGun(playerid);
				FP_GivePlayerMoney(playerid, -1000);
				return ShowHitmanGun(playerid);
			}
			else if(listitem == 3)
		   	{
		   		if(PlayerInfo[playerid][pMoney] < 2000)
		   		{
		   			ErrorMes(playerid, "Недостаточно средств на банковской карте.");
		   			return ShowHitmanGun(playerid);
		   		}
				if(!AddItem(playerid, 31, 100)) return ShowHitmanGun(playerid);
				FP_GivePlayerMoney(playerid, - 2000);
				return ShowHitmanGun(playerid);
			}
			else if(listitem == 4)
		   	{
		   		if(PlayerInfo[playerid][pMoney] < 2000)
		   		{
		   			ErrorMes(playerid, "Недостаточно средств на банковской карте.");
		   			return ShowHitmanGun(playerid);
		   		}
				if(!AddItem(playerid, 30, 120)) return ShowHitmanGun(playerid);
				FP_GivePlayerMoney(playerid, - 2000);
				return ShowHitmanGun(playerid);
			}
			else if(listitem == 5)
		   	{
		   		if(PlayerInfo[playerid][pMoney] < 2500)
		   		{
		   			ErrorMes(playerid, "Недостаточно средств на банковской карте.");
		   			return ShowHitmanGun(playerid);
		   		}
				if(!AddItem(playerid, 34, 50)) return ShowHitmanGun(playerid);
				FP_GivePlayerMoney(playerid, - 2500);
				return ShowHitmanGun(playerid);
			}
		}
		case D_HIT_CONTRACT:
	    {
	        if(!response)
	        {
	            Contract[playerid] = -1;
				return ShowHitDialog(playerid);
			}
	        Contract[playerid] = HitList[listitem];
			ShowPlayerDialog(playerid,D_HIT_CONTRACT_TO,DIALOG_STYLE_INPUT,""FPHEAD"Выдать контракт","{F5DEB3}Кому вы хотите выдать контракт? (id хитмана)","Выдать","Назад");
			return 1;
		}
		case D_MEDIC_CALL:
	    {
	        if(!response) return 1;
	        new string[128];
	        if(!GetPVarInt(MedicList[listitem],"MedicCall"))return ErrorMes(playerid,"Кто-то уже принял вызов этого игрока.");
			
			format(string,sizeof(string),"* Ты принял(а) вызов от %s, у тебя есть 5 минут, чтобы добраться до пострадавшего.",PlayerInfo[MedicList[listitem]][pName]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			format(string,sizeof(string),"* %s принял(а) твой вызов. Потерпите еще немного...",PlayerInfo[playerid][pName]);
	        SendClientMessage(MedicList[listitem], COLOR_LIGHTBLUE,string);
			format(string, sizeof(string), "* %s принял(а) вызов %s.",PlayerInfo[playerid][pName],PlayerInfo[MedicList[listitem]][pName]);
			SendRadioMessage(MEDIC, COLOR_YELLOW, string);
			
			SetPlayerSpecialAction(MedicList[listitem], SPECIAL_ACTION_STOPUSECELLPHONE);
			MedicCallTime[playerid] = 300;
			MedicAccepted[playerid] = MedicList[listitem];
			DeletePVar(MedicList[listitem],"MedicCall");
			return 1;
		}
		case D_TAXI_CALL:
	    {
	        if(!response) return 1;
            new string[128];
            if(!GetPVarInt(TaxiList[listitem],"TaxiCall"))return ErrorMes(playerid,"Кто-то уже принял вызов этого игрока.");
			
			format(string,sizeof(string),"* Ты принял вызов от %s, у тебя есть 5 минут, чтобы добраться до клиента.", PlayerInfo[TaxiList[listitem]][pName]);
	       	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
            format(string,sizeof(string),"* %s принял(а) твой вызов. Не уходи далеко, такси скоро приедет.", PlayerInfo[playerid][pName]);
			SendClientMessage(TaxiList[listitem],COLOR_LIGHTBLUE,string);
			format(string, sizeof(string), "* %s принял(а) вызов %s.",PlayerInfo[playerid][pName],PlayerInfo[TaxiList[listitem]][pName]);
			SendJobMessage(TAXI, COLOR_YELLOW, string);
			SetPlayerSpecialAction(TaxiList[listitem], SPECIAL_ACTION_STOPUSECELLPHONE);
			TaxiCallTime[playerid] = 300;
			TaxiAccepted[playerid] = TaxiList[listitem];
			DeletePVar(TaxiList[listitem],"TaxiCall");
			return 1;
		}
		case D_MECH_CALL:
	    {
	        if(!response) return 1;
            new string[128];
            if(!GetPVarInt(MechList[listitem],"MechCall"))return ErrorMes(playerid,"Кто-то уже принял вызов этого игрока.");
			
			format(string, sizeof(string),"* Ты принял(а) вызов от %s, у тебя есть 5 минут, чтобы добраться до клиента.",PlayerInfo[MechList[listitem]][pName]);
	    	SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			format(string, sizeof(string),"* %s принял(а) твой вызов. Не уходите далеко от места вызова.",PlayerInfo[playerid][pName]);
			SendClientMessage(MechList[listitem], COLOR_LIGHTBLUE,string);
			format(string, sizeof(string), "* %s принял(а) вызов %s.",PlayerInfo[playerid][pName],PlayerInfo[MechList[listitem]][pName]);
			SendRadioMessage(MECH, COLOR_YELLOW, string);
			SetPlayerSpecialAction(MechList[listitem], SPECIAL_ACTION_STOPUSECELLPHONE);
			MechanicCallTime[playerid] = 300;
			MechanicAccepted[playerid] = MechList[listitem];
			DeletePVar(MechList[listitem],"MechCall");
			return 1;
		}
		case D_HIT_CONTRACT_TO:
	    {
	        if(!response)return SearchingHit(playerid);
	        new string[128],giveplayerid = strval(inputtext);
			if(!IsPlayerConnected(giveplayerid))
			{
			    ShowPlayerDialog(playerid,D_HIT_CONTRACT_TO,DIALOG_STYLE_INPUT,""FPHEAD"Выдать контракт","{F5DEB3}Кому вы хотите выдать контракт? (id хитмана)","Выдать","Назад");
				return ErrorMes(playerid, "Этот игрок не в сети.");
			}
			if(Aim[giveplayerid] != -1)
			{
			    ShowPlayerDialog(playerid,D_HIT_CONTRACT_TO,DIALOG_STYLE_INPUT,""FPHEAD"Выдать контракт","{F5DEB3}Кому вы хотите выдать контракт? (id хитмана)","Выдать","Назад");
				return ErrorMes(playerid,"У этого хитмана уже есть контракт.");
			}
			if(TeamInfo[giveplayerid][tID] != HA)
			{
			    ShowPlayerDialog(playerid,D_HIT_CONTRACT_TO,DIALOG_STYLE_INPUT,""FPHEAD"Выдать контракт","{F5DEB3}Кому вы хотите выдать контракт? (id хитмана)","Выдать","Назад");
				return ErrorMes(playerid,"Этот игрок не хитман.");
			}
			Aim[giveplayerid] = Contract[playerid];
			Contract[playerid] = -1;
			Killer[Aim[giveplayerid]] = giveplayerid;
			format(string, sizeof(string), "* Хитман %s выдал контакт убuйце %s на игрока %s[%d], Вознаграждение: $%d.", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], PlayerInfo[Aim[giveplayerid]][pName],Aim[giveplayerid], PlayerInfo[Aim[giveplayerid]][pHeadValue]);
			SendRadioMessage(HA, COLOR_YELLOW, string);
		}
		case D_DRUGS_BUY:
		{
		    if(!response)return 1;
		    new string[128];
		    if(!strlen(inputtext) || !ValidDialogValue(strval(inputtext)))return ShowDrugsGetDialog(playerid);
		    format(string,sizeof(string),"%d",strval(inputtext));
			cmd_gevDrugs(playerid,string);
			return 1;
		}
		case D_MATS_BUY:
		{
		    if(!response)return 1;
		    new string[128];
		    if(!strlen(inputtext) || !ValidDialogValue(strval(inputtext)))return ShowMatsGetDialog(playerid);
	        format(string,sizeof(string),"get %d",strval(inputtext));
			cmd_materials(playerid,string);
			return 1;
		}
		
		case D_MASK:
		{
			new string[64];
		    if(!response)return 1; 
		    if(listitem == 0)
			{
				if(!GetPVarInt(playerid,"Mask"))
				{
					SetPVarInt(playerid,"OldSkin",GetPlayerSkin(playerid));
					format(string,sizeof(string),"* %s одевает маскировку.",PlayerInfo[playerid][pName]);
					ProxDetector(20,playerid,string,COLOR_PURPLE);
				}
				SetPlayerSkin(playerid,29);
				SetPVarInt(playerid,"Mask",1);
				SetPVarInt(playerid,"MaskSkin",29);
				SetPlayerColor(playerid,0xFFFFFF00);
				ForEachPlayer(i) if(!PlayerInfo[i][pAdmin]) ShowPlayerNameTagForPlayer(i,playerid, false);
			}
		    else if(listitem == 1)
			{
			    if(!GetPVarInt(playerid,"Mask"))
				{
					SetPVarInt(playerid,"OldSkin",GetPlayerSkin(playerid));
					format(string,sizeof(string),"* %s одевает маскировку.",PlayerInfo[playerid][pName]);
					ProxDetector(20,playerid,string,COLOR_PURPLE);
				}
				SetPlayerSkin(playerid,33);
				SetPVarInt(playerid,"Mask",1);
				SetPVarInt(playerid,"MaskSkin",33);
				SetPlayerColor(playerid,0xFFFFFF00);
				ForEachPlayer(i) if(!PlayerInfo[i][pAdmin]) ShowPlayerNameTagForPlayer(i,playerid, false);
			}
		    else if(listitem == 2)
			{
			    if(!GetPVarInt(playerid,"Mask"))
				{
					SetPVarInt(playerid,"OldSkin",GetPlayerSkin(playerid));
					format(string,sizeof(string),"* %s одевает маскировку.",PlayerInfo[playerid][pName]);
					ProxDetector(20,playerid,string,COLOR_PURPLE);
				}
				SetPlayerSkin(playerid,101);
				SetPVarInt(playerid,"Mask",1);
				SetPVarInt(playerid,"MaskSkin",101);
				SetPlayerColor(playerid,0xFFFFFF00);
				ForEachPlayer(i) if(!PlayerInfo[i][pAdmin]) ShowPlayerNameTagForPlayer(i,playerid, false);
			}
		    else if(listitem == 3)
		    {
		        if(!GetPVarInt(playerid,"Mask"))
				{
					SetPVarInt(playerid,"OldSkin",GetPlayerSkin(playerid));
					format(string,sizeof(string),"* %s одевает маскировку.",PlayerInfo[playerid][pName]);
					ProxDetector(20,playerid,string,COLOR_PURPLE);
				}
				SetPlayerSkin(playerid,230);
				SetPVarInt(playerid,"Mask",1);
				SetPVarInt(playerid,"MaskSkin",230);
				SetPlayerColor(playerid,0xFFFFFF00);
				ForEachPlayer(i) if(!PlayerInfo[i][pAdmin]) ShowPlayerNameTagForPlayer(i,playerid, false);
			}
			else if(listitem == 4)
		    {
		        if(!GetPVarInt(playerid,"Mask"))
				{
					SetPVarInt(playerid,"OldSkin",GetPlayerSkin(playerid));
					format(string,sizeof(string),"* %s одевает маскировку.",PlayerInfo[playerid][pName]);
					ProxDetector(20,playerid,string,COLOR_PURPLE);
				}
				SetPlayerSkin(playerid,93);
				SetPVarInt(playerid,"Mask",1);
				SetPVarInt(playerid,"MaskSkin",93);
				SetPlayerColor(playerid,0xFFFFFF00);
				ForEachPlayer(i) if(!PlayerInfo[i][pAdmin]) ShowPlayerNameTagForPlayer(i,playerid, false);
			}
		    else if(listitem == 5)
		    {
				if(GetPVarInt(playerid,"Mask"))
				{
					SetPlayerSkin(playerid,GetPVarInt(playerid,"OldSkin"));
					format(string,sizeof(string),"* %s снимает маскировку.",PlayerInfo[playerid][pName]);
					ProxDetector(20,playerid,string,COLOR_PURPLE);
				}
				DeletePVar(playerid,"Mask");
				DeletePVar(playerid,"MaskSkin");
				SetPlayerColor(playerid,0xFFFFFF30);
				ForEachPlayer(i) if(!PlayerInfo[i][pAdmin]) ShowPlayerNameTagForPlayer(i,playerid, true);
			}
		    return 1;
		}
		case D_BANKOMAT_PINCODE:
		{
		    //DeletePVar(playerid,"BankCheck");
			if(!response)return 1;
			if(!strlen(inputtext))return ShowPlayerDialog(playerid,D_BANKOMAT_PINCODE,DIALOG_STYLE_INPUT,""FPHEAD"Банкомат","Пожалуйста, введите пин-код:","Выбрать","Выйти");
			if(PlayerInfo[playerid][pBankPass] == strval(inputtext)) ShowBankDialog(playerid);
			else ShowPlayerDialog(playerid,D_BANKOMAT_PINCODE,DIALOG_STYLE_INPUT,"Неверный пин-код","Пожалуйста, введите пин-код:","Выбрать","Выйти");
		}
	//------------------------------------------------------------------------------
		case D_BANKOMAT:
		{
			if(!response)return 1;
			if(listitem == 0) ShowBankDialog(playerid);
			else if(listitem == 1) ShowPlayerDialog(playerid,D_BANKOMAT_PEREVOD_ID,DIALOG_STYLE_INPUT,""FPHEAD"Перевод денег","{F5DEB3}Кому ты хочешь перевести деньги?","Выбрать","Назад");
		}
		case D_BANKOMAT_PEREVOD_ID: //Банкомат
		{
		    if(!response) return ShowBankDialog(playerid);
			new id;
			if(sscanf(inputtext,"u",id) || !GetPVarInt(id,"Login"))
			{
			    ErrorMes(playerid,"Этот игрок не в сети.");
			    return ShowPlayerDialog(playerid,D_BANKOMAT_PEREVOD_ID,DIALOG_STYLE_INPUT,""FPHEAD"Перевод денег","{F5DEB3}Кому ты хочешь перевести деньги?","Выбрать","Назад");
			}
			SetPVarInt(playerid,"Transfer",id);
			ShowTransferDialog(playerid);
			
			
		}
		case D_BANKOMAT_PEREVOD_SUMMA: //Банкомат
		{
		    new string[160];
		    if(!response) return ShowBankDialog(playerid);
			new summa = strval(inputtext);
			if(!IsPlayerConnected(GetPVarInt(playerid,"Transfer")))
			{
			    ErrorMes(playerid,"Этот игрок не в сети.");
			    return ShowPlayerDialog(playerid,D_BANKOMAT_PEREVOD_ID,DIALOG_STYLE_INPUT,""FPHEAD"Перевод денег","{F5DEB3}Кому ты хочешь перевести деньги?","Выбрать","Назад");
			}
			if(!strlen(inputtext)|| summa > PlayerInfo[playerid][pMoney] || !ValidDialogValue(strval(inputtext)))
			{
	      		ErrorMes(playerid,"У тебя на счету нет такой суммы.");
			    return ShowTransferDialog(playerid);
			}

			FP_GivePlayerMoney(GetPVarInt(playerid,"Transfer"), summa);
			FP_GivePlayerMoney(playerid, -summa);
	
			format(string,sizeof(string),"Ты перевел $%d на банковский счет %s.",summa,PlayerInfo[GetPVarInt(playerid,"Transfer")][pName]);
			SendClientMessage(playerid,COLOR_YELLOW2,string);
			format(string,sizeof(string),"%s перевел на твой банковский счет $%d.",PlayerInfo[playerid][pName],summa);
			SendClientMessage(GetPVarInt(playerid,"Transfer"),COLOR_YELLOW2,string);
			
			format(string, sizeof(string),"%s перевел $%d на банковский счет %s.",PlayerInfo[playerid][pName],summa,PlayerInfo[GetPVarInt(playerid,"Transfer")][pName]);
			ABroadCast(COLOR_YELLOW,string,1);

			format(string,sizeof(string),"INSERT INTO `logs_transfer` (date,fromid,toid,value) VALUES ('%02d.%02d.%d %02d:%02d:%02d','%s','%s',%d)",
				Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],PlayerInfo[GetPVarInt(playerid,"Transfer")][pName],summa);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			DeletePVar(playerid,"Transfer");
		}
		
		case D_FS_TRANING:
		{
		    if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
				    if(PlayerInfo[playerid][pBoxing]) return ErrorMes(playerid, "Ты уже владеешь этим стuлем борьбы.");
	       			if(PlayerInfo[playerid][pMoney] < 5000) return ErrorMes(playerid,  "Недостаточно средств на банковской карте.");
	    			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы провели тренировку с тренером, теперь Вы знаете Boxing.");
	       			PlayerInfo[playerid][pBoxing] = 1;
	       			FP_GivePlayerMoney(playerid, -5000);
				}
		   		case 1:
				{
	    			if(PlayerInfo[playerid][pKunfu]) return ErrorMes(playerid, "Ты уже владеешь этим стuлем борьбы.");
	    			if(PlayerInfo[playerid][pMoney] < 5000) return ErrorMes(playerid,  "Недостаточно средств на банковской карте.");
	    			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы провели тренировку с тренером, теперь Вы знаете Kung-Fu.");
	       			PlayerInfo[playerid][pKunfu] = 1;
	       			FP_GivePlayerMoney(playerid, -5000);
				}
		   		case 2:
				{
					if(PlayerInfo[playerid][pKneehead]) return ErrorMes(playerid, "Ты уже владеешь этим стuлем борьбы.");
				    if(PlayerInfo[playerid][pMoney] < 5000) return ErrorMes(playerid,  "Недостаточно средств на банковской карте.");
	    			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы провели тренировку с тренером, теперь Вы знаете KneeHead.");
	       			PlayerInfo[playerid][pKneehead] = 1;
	       			FP_GivePlayerMoney(playerid, -5000);
				}
		   		case 3:
				{
	   				if(PlayerInfo[playerid][pGrabkick]) return ErrorMes(playerid, "Ты уже владеешь этим стuлем борьбы.");
				    if(PlayerInfo[playerid][pMoney] < 5000) return ErrorMes(playerid,  "Недостаточно средств на банковской карте.");
	    			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы провели тренировку с тренером, теперь Вы знаете GrabKick.");
	       			PlayerInfo[playerid][pGrabkick] = 1;
	       			FP_GivePlayerMoney(playerid, -5000);
				}
			}
			SaveFight(playerid);
		}
		case D_FS:  //Смена стuля боя
		{
		    if(!response) return 1;
			switch(listitem)
			{
				case 0:
				{
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
					PlayerInfo[playerid][pFStyle] = 0;
					SendClientMessage(playerid, COLOR_WHITE, "Ты сменuл(а) стuль боя на Обычный");
				}
				case 1:
				{
					if(!PlayerInfo[playerid][pBoxing]) return ErrorMes(playerid,  "Ты не изучал(а) данный стuль");
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
					PlayerInfo[playerid][pFStyle] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "Ты сменuл(а) стuль боя на Boxing");
				}
				case 2:
				{
					if(!PlayerInfo[playerid][pKunfu]) return ErrorMes(playerid,  "Ты не изучал(а) данный стuль");
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
					PlayerInfo[playerid][pFStyle] = 2;
					SendClientMessage(playerid, COLOR_WHITE, "Ты сменuл(а) стuль боя на Kung-Fu");
				}
		 		case 3:
				{
					if(!PlayerInfo[playerid][pKneehead]) return ErrorMes(playerid,  "Ты не изучал(а) данный стuль");
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
					PlayerInfo[playerid][pFStyle] = 3;
					SendClientMessage(playerid, COLOR_WHITE, "Ты сменuл(а) стuль боя на KneeHead");
				}
		   		case 4:
				{
					if(!PlayerInfo[playerid][pGrabkick]) return ErrorMes(playerid,  "Ты не изучал(а) данный стuль");
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
					PlayerInfo[playerid][pFStyle] = 4;
					SendClientMessage(playerid, COLOR_WHITE, "Ты сменuл(а) стuль боя на GrabKick");
				}
				default: return 1;
			}
			SaveFight(playerid);
	 	}
	 	
		case D_SERVICE:
	  	{
	  	    if(!response)return ShowDialog(playerid,D_KPK);
			new string[128];
			if(PlayerInfo[playerid][pInt])return ErrorMes(playerid,"Ты не можешь вызывать службы в помещении.");
			if(GetPVarInt(playerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный набuрает номер.");
			else format(string, sizeof(string), "* %s набuрает номер.", PlayerInfo[playerid][pName]);
			ProxDetector(20.0, playerid, string, COLOR_PURPLE);
			SetPlayerSpecialAction(playerid , SPECIAL_ACTION_USECELLPHONE );
			if(listitem == 0)
			{
				ForEachPlayer(i) if(TaxiAccepted[i] == playerid) return ErrorMes(playerid,"Твой заказ уже принят.");
			    if(TaxiDrivers < 1)
		        {
		            ErrorMes(playerid, "В данный момент нет свободных таксистов.");
		            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		            return 1;
		        }
			    format(string, sizeof(string), "* %s вызывeт тakcu (/accept taxi).", PlayerInfo[playerid][pName]);
			    SendRadioMessage(TAXI , 0x01FCFFC8, string);
			    for(new z=0; z < sizeof(ZoneInfo);z++)
		   		{
				    if(IsPlayerInCubeArea(playerid,ZoneInfo[z][zone_minx],ZoneInfo[z][zone_maxx],ZoneInfo[z][zone_miny],ZoneInfo[z][zone_maxy],ZoneInfo[z][zone_minz],ZoneInfo[z][zone_maxz]))
					{
						for (new z1=0; z1 < sizeof(ZoneInfoM);z1++)
		 				{
							if(IsPlayerInCubeArea(playerid,ZoneInfoM[z1][zone_minx],ZoneInfoM[z1][zone_maxx],ZoneInfoM[z1][zone_miny],ZoneInfoM[z1][zone_maxy],ZoneInfoM[z1][zone_minz],ZoneInfoM[z1][zone_maxz]))
		  					{
		 						format(string, sizeof(string), "* Район: %s, Область: %s", ZoneInfo[z][zone_name], ZoneInfoM[z1][zone_name]);
								SendRadioMessage(TAXI , COLOR_YELLOW2, string);
							}
						}
					}
	   			}
		    	format(string, sizeof(string), "* Всего таксистов на дежурстве: %d чел.", TaxiDrivers);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы вызвали такси. Дождитесь ответа...");
		    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		    	SetPVarInt(playerid,"TaxiCall",1);
		    	return 1;
			}
			else if(listitem == 1)
			{
			    ForEachPlayer(i) if(MechanicAccepted[i] == playerid) return ErrorMes(playerid,"Твой заказ уже принят.");
			    if(Mechanics < 1)
		        {
		            ErrorMes(playerid, "В данный момент нет свободных механников.");
		            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		            return 1;
		        }
			    format(string, sizeof(string), "** %s вызывeт мexaнuka. (/accept mechanic)", PlayerInfo[playerid][pName]);
		    	SendJobMessage(MECH, 0x01FCFFC8, string);
		    	for(new z=0; z < sizeof(ZoneInfo);z++)
		   		{
				    if(IsPlayerInCubeArea(playerid,ZoneInfo[z][zone_minx],ZoneInfo[z][zone_maxx],ZoneInfo[z][zone_miny],ZoneInfo[z][zone_maxy],ZoneInfo[z][zone_minz],ZoneInfo[z][zone_maxz]))
					{
						for (new z1=0; z1 < sizeof(ZoneInfoM);z1++)
	  					{
	 						if(IsPlayerInCubeArea(playerid,ZoneInfoM[z1][zone_minx],ZoneInfoM[z1][zone_maxx],ZoneInfoM[z1][zone_miny],ZoneInfoM[z1][zone_maxy],ZoneInfoM[z1][zone_minz],ZoneInfoM[z1][zone_maxz]))
	   						{
	  							format(string, sizeof(string), "* Район: %s, Область: %s", ZoneInfo[z][zone_name], ZoneInfoM[z1][zone_name]);
								SendJobMessage(MECH , COLOR_YELLOW2, string);
							}
						}
					}
	  			}
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы вызвали механика. Ждите ответа...");
		    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		    	SetPVarInt(playerid,"MechCall",1);
		    	return 1;
			}
			else if(listitem == 2)
			{
			    ForEachPlayer(i) if(MedicAccepted[i] == playerid) return ErrorMes(playerid,"Твой заказ уже принят.");
			    if(Medics < 1)
		        {
		            ErrorMes(playerid, "В данный момент нет свободных медиков.");
		            SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		            return 1;
		        }
			    format(string, sizeof(string), "** %s вызывeт медика. (/accept medic)", PlayerInfo[playerid][pName]);
		    	SendRadioMessage(MEDIC, 0x01FCFFC8, string);
		    	for(new z=0; z < sizeof(ZoneInfo);z++)
		   		{
				    if(IsPlayerInCubeArea(playerid,ZoneInfo[z][zone_minx],ZoneInfo[z][zone_maxx],ZoneInfo[z][zone_miny],ZoneInfo[z][zone_maxy],ZoneInfo[z][zone_minz],ZoneInfo[z][zone_maxz]))
					{
						for (new z1=0; z1 < sizeof(ZoneInfoM);z1++)
	  					{
	 						if(IsPlayerInCubeArea(playerid,ZoneInfoM[z1][zone_minx],ZoneInfoM[z1][zone_maxx],ZoneInfoM[z1][zone_miny],ZoneInfoM[z1][zone_maxy],ZoneInfoM[z1][zone_minz],ZoneInfoM[z1][zone_maxz]))
	   						{
	  							format(string, sizeof(string), "* Район: %s, Область: %s", ZoneInfo[z][zone_name], ZoneInfoM[z1][zone_name]);
								SendRadioMessage(MEDIC, COLOR_YELLOW2, string);
							}
						}
					}
	  			}
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы вызвали медика. Ждите ответа...");
		    	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		    	SetPVarInt(playerid,"MedicCall",1);
		    	return 1;
			}
		}
		case D_TAXI:
	  	{
	  	    if(!response)return 1;
	  	    new string[128];
			if(strval(inputtext) < 1 || strval(inputtext) > 100)
			{
			    ShowPlayerDialog(playerid,D_TAXI,DIALOG_STYLE_INPUT,""FPHEAD"Цена за проезд","Введите тариф на дежурство:","Выбрать","Отмена");
				return ErrorMes(playerid, "Цена за проезд не менее $1 и не более $100.");
			}
			TaxiDrivers += 1;
			SetPVarInt(playerid,"taxi",1);
			TransportValue[playerid] = strval(inputtext);
		    format(string, sizeof(string), "* Водитель такси %s заступает на дежурство. Проезд: $%d. (/call 444)", PlayerInfo[playerid][pName], TransportValue[playerid]);
		    SendClientMessageToAll(0x00D900FF,string);
			format(string, sizeof(string), "<< Тариф: $%d >>\n<< Новичкам бесплатно >>",TransportValue[playerid]);
			duty3dtext[playerid] = Create3DTextLabel(string, COLOR_YELLOW ,0, 0, 2.5,15.0, 0, 1 );
			Attach3DTextLabelToVehicle(duty3dtext[playerid], PlayerInfo[playerid][pVehID], 0.0, 0.0, 1.6 );
		}
		case D_CHANGE_CHECK:
		{
		    if(response) SetPlayerRaceCheckpoint(playerid,GetPVarInt(playerid,"RChecType"),GetPVarFloat(playerid,"RChecX"),GetPVarFloat(playerid,"RChecY"),GetPVarFloat(playerid,"RChecZ"),GetPVarFloat(playerid,"RChecNX"),GetPVarFloat(playerid,"RChecNY"),GetPVarFloat(playerid,"RChecNZ"),GetPVarFloat(playerid,"RChecA"));
		    DeletePVar(playerid,"RChecType");
		    DeletePVar(playerid,"RChecX");
		    DeletePVar(playerid,"RChecY");
		    DeletePVar(playerid,"RChecZ");
		    DeletePVar(playerid,"RChecNX");
		    DeletePVar(playerid,"RChecNY");
		    DeletePVar(playerid,"RChecNZ");
		    DeletePVar(playerid,"RChecA");
		}
		case D_OBSHAK:
		{
			if(!response)return 1;
	  		if(listitem == 0) ShowPlayerDialog(playerid,D_OBSHAK_SELECT,DIALOG_STYLE_LIST,""FPHEAD"Деньги","Взять\nПоложить","Выбрать","Назад");
	       	else if(listitem == 1) ShowPlayerDialog(playerid,D_OBSHAK_SELECT,DIALOG_STYLE_LIST,""FPHEAD"Наркотики","Взять\nПоложить","Выбрать","Назад");
	       	else if(listitem == 2) ShowPlayerDialog(playerid,D_OBSHAK_SELECT,DIALOG_STYLE_LIST,""FPHEAD"Материалы","Взять\nПоложить","Выбрать","Назад");
	       	SetPVarInt(playerid,"Inventory",listitem+1);
		}
		case D_OBSHAK_SELECT:
		{
			if(!response)return ShowObshDialog(playerid);
	  		if(!listitem)
	        {
	       	    if(!TeamInfo[playerid][tType]) return ErrorMes(playerid,"Доступно только лидерам.");
	       	    ShowPlayerDialog(playerid,D_OBSHAK_TAKE,DIALOG_STYLE_INPUT,""FPHEAD"Взять","Сколько выхотите взять?","Выбрать","Назад");
	        }
	        else ShowPlayerDialog(playerid,D_OBSHAK_PUT,DIALOG_STYLE_INPUT,""FPHEAD"Положить","Сколько выхотите положить?","Выбрать","Назад");
		}
		case D_OBSHAK_TAKE:
		{
			if(!response)return ShowPlayerDialog(playerid,D_OBSHAK_SELECT,DIALOG_STYLE_LIST,""FPHEAD"Общак","Взять\nПоложить","Выбрать","Назад");
			if(!strlen(inputtext) || !ValidDialogValue(strval(inputtext)))return ShowPlayerDialog(playerid,D_OBSHAK_TAKE,DIALOG_STYLE_INPUT,""FPHEAD"Взять","Сколько выхотите взять?","Выбрать","Назад");
	  		new fam = TeamInfo[playerid][tID],string[128];
			switch(GetPVarInt(playerid,"Inventory"))
			{
				case 1:
				{
					if(FractionInfo[fam][oMoney] < strval(inputtext)) return ErrorMes(playerid, "В общаке нет столько денег.");
					FractionInfo[fam][oMoney] -= strval(inputtext);
					
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Money`='%d' WHERE `ID`='%d'", FractionInfo[fam][oMoney],fam);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
					FP_GivePlayerMoney(playerid,strval(inputtext));
					format(string,sizeof(string),"Лидер %s[%d] взял(a) из общака %d$.В общаке: $%d.",PlayerInfo[playerid][pName],playerid,strval(inputtext),FractionInfo[fam][oMoney]);
					SendRadioMessage(fam, 0x01FCFFFF, string);	
				}
				case 2:
				{
					if(FractionInfo[fam][oDrugs] < strval(inputtext)) return ErrorMes(playerid, "В общаке нет столько наркотиков.");
					if(!AddItem(playerid, 47, strval(inputtext))) return 1;

					FractionInfo[fam][oDrugs] -= strval(inputtext);
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Drugs`='%d' WHERE `ID`='%d'", FractionInfo[fam][oDrugs],fam);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
					format(string,sizeof(string),"Лидер %s[%d] взял(a) из общака %d наркотиков.В общаке: %d нарко.",PlayerInfo[playerid][pName],playerid,strval(inputtext),FractionInfo[fam][oDrugs]);
					SendRadioMessage(fam, 0x01FCFFFF, string);	
				}
				case 3:
				{
					if(FractionInfo[fam][oMats] < strval(inputtext)) return ErrorMes(playerid, "В общаке нет столько материалов.");
					if(!AddItem(playerid, 21, strval(inputtext))) return 1;

					FractionInfo[fam][oMats] -= strval(inputtext);
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Mats`='%d' WHERE `ID`='%d'", FractionInfo[fam][oMats],fam);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				
					format(string,sizeof(string),"Лидер %s[%d] взял(a) из общака %d материалов.В общаке: %d матов.",PlayerInfo[playerid][pName],playerid,strval(inputtext),FractionInfo[fam][oMats]);
					SendRadioMessage(fam, 0x01FCFFFF, string);	
				}
				default: return ShowObshDialog(playerid);
			}	
		}
		case D_OBSHAK_PUT:
		{
			if(!response)return ShowPlayerDialog(playerid,D_OBSHAK_SELECT,DIALOG_STYLE_LIST,""FPHEAD"Общак","Взять\nПоложить","Выбрать","Назад");
			if(!strlen(inputtext) || !ValidDialogValue(strval(inputtext)))return ShowPlayerDialog(playerid,D_OBSHAK_PUT,DIALOG_STYLE_INPUT,""FPHEAD"Положить","Сколько выхотите положить?","Выбрать","Назад");
			new fam = TeamInfo[playerid][tID],string[128];
			switch(GetPVarInt(playerid,"Inventory"))
			{
				case 1:
				{
					if(PlayerInfo[playerid][pMoney] < strval(inputtext)) return ErrorMes(playerid, "Недостаточно средств на банковской карте.");

					if(strval(inputtext) + FractionInfo[TeamInfo[playerid][tID]][oMoney] > (FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel]+1)*1000000)
					{
						format(string,sizeof(string),"Ты не можешь положить столько в общак. Лимит: $%d.",(FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel]+1)*1000000);
						return ErrorMes(playerid, string);
					}
					FractionInfo[fam][oMoney] += strval(inputtext);
					
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Money`='%d' WHERE `ID`='%d'", FractionInfo[fam][oMoney],fam);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
					FP_GivePlayerMoney(playerid,-strval(inputtext));
					format(string,sizeof(string),"%s[%d] положил(a) в общак %d$.В общаке: $%d.",PlayerInfo[playerid][pName],playerid,strval(inputtext),FractionInfo[fam][oMoney]);
					SendRadioMessage(fam, 0x01FCFFFF, string);
				}
				case 2:
				{
					if(PlayerInfo[playerid][pDrugs] == -1 || iData[playerid][inValue][PlayerInfo[playerid][pDrugs]] < strval(inputtext)) 
						return ErrorMes(playerid, "У тебя нет такого количества наркотиков.");

					if(strval(inputtext) + FractionInfo[TeamInfo[playerid][tID]][oDrugs] > (FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel]+1)*1500)
					{
						format(string,sizeof(string),"Ты не можешь положить столько в общак. Лимит: %d наркотиков.",(FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel]+1)*1500);
						return ErrorMes(playerid, string);
					}
					FractionInfo[fam][oDrugs] += strval(inputtext);

					iData[playerid][inValue][PlayerInfo[playerid][pDrugs]] -= strval(inputtext);

					if(!iData[playerid][inValue][PlayerInfo[playerid][pDrugs]]) DropItem(playerid, PlayerInfo[playerid][pDrugs]);
					
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Drugs`='%d' WHERE `ID`='%d'", FractionInfo[fam][oDrugs],fam);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
					format(string,sizeof(string),"%s[%d] положил(a) в общак %d наркотиков.В общаке: %d нарко.",PlayerInfo[playerid][pName],playerid,strval(inputtext),FractionInfo[fam][oDrugs]);
					SendRadioMessage(fam, 0x01FCFFFF, string);
				}
				case 3:
				{
					if(PlayerInfo[playerid][pMats] == -1 || iData[playerid][inValue][PlayerInfo[playerid][pMats]] < strval(inputtext)) 
						return ErrorMes(playerid, "У тебя нет такого количества материалов.");

					if(strval(inputtext) + FractionInfo[TeamInfo[playerid][tID]][oMats] > (FractionInfo[TeamInfo[playerid][tID]][oMatsLevel]+1)*20000)
					{
						format(string,sizeof(string),"Ты не можешь положить столько в общак. Лимит: %d материалов.",(FractionInfo[TeamInfo[playerid][tID]][oMatsLevel]+1)*20000);
						return ErrorMes(playerid, string);
					}
					FractionInfo[fam][oMats] += strval(inputtext);

					iData[playerid][inValue][PlayerInfo[playerid][pMats]] -= strval(inputtext);

					if(!iData[playerid][inValue][PlayerInfo[playerid][pMats]]) DropItem(playerid, PlayerInfo[playerid][pMats]);
					
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Mats`='%d' WHERE `ID`='%d'", FractionInfo[fam][oMats],fam);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
					format(string,sizeof(string),"%s[%d] положил(a) в общак %d материалов.В общаке: %d матов.",PlayerInfo[playerid][pName],playerid,strval(inputtext),FractionInfo[fam][oMats]);
					SendRadioMessage(fam, 0x01FCFFFF, string);
				}
				default: return ShowObshDialog(playerid);
			}	
		}
		
		case D_GUNLIC_BUY:
		{
			if(!response) return 1;
			switch(GetPVarInt(playerid,"TestCheck"))
			{
				case 1:
				{
					if(PlayerInfo[playerid][pMoney] < 5000)return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
					SendClientMessage(playerid, COLOR_GREEN,"Выходи на улицу и садись в учебный транспорт, чтобы получить дальнейшие инструкции.");
					SetPVarInt(playerid,"TakingLesson",GetPVarInt(playerid,"TestCheck"));
					FP_GivePlayerMoney(playerid, -5000);
				}
				case 2:
				{
					
					SendClientMessage(playerid, COLOR_GREEN,"Выходи на улицу и садись в учебный транспорт, чтобы получить дальнейшие инструкции.");
					SetPVarInt(playerid,"TakingLesson",GetPVarInt(playerid,"TestCheck"));
					
				}
				case 3:
				{
					if(PlayerInfo[playerid][pMoney] < 25000)return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
					SendClientMessage(playerid, COLOR_GREEN,"Выходи на улицу и садись в учебный транспорт, чтобы получить дальнейшие инструкции.");
					SetPVarInt(playerid,"TakingLesson",GetPVarInt(playerid,"TestCheck"));
					FP_GivePlayerMoney(playerid, -25000);
				}
				case 4:
				{
					if(PlayerInfo[playerid][pMoney] < 50000)return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
					SendClientMessage(playerid, COLOR_GREEN,"Выходи на улицу и садись в учебный транспорт, чтобы получить дальнейшие инструкции.");
					SetPVarInt(playerid,"TakingLesson",GetPVarInt(playerid,"TestCheck"));
					FP_GivePlayerMoney(playerid, -50000);
				}
				case 5:
				{
					if(PlayerInfo[playerid][pMoney] < 150000)return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
					FP_GivePlayerMoney(playerid, -150000);
					LicInfo[playerid][GunLic] = 1;
					new string[128];
					format(string,sizeof(string),"UPDATE `samp_licenses` SET `GunLic`='1' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					SendClientMessage(playerid, 0x33CCFFFF, "* Поздравляю, ты купил(а) разрешение на ношение оружия.");
				}
			}
		}
		case D_CRASHPOS:
		{
			if(response) SetPos(playerid,GetPVarFloat(playerid,"CrashPosX"),GetPVarFloat(playerid,"CrashPosY"),GetPVarFloat(playerid,"CrashPosZ"),0.0,GetPVarInt(playerid,"CrashInt"),GetPVarInt(playerid,"CrashWorld"));
		}
		case D_MAKEGUN:
		{
		    if(!response)return 1;
		    if(oData[iData[playerid][inItems][GetPVarInt(playerid, "MakeGunSlot")]][imType] != 14) 
		    {
		    	ShowDialog(playerid, D_MAKEGUN);
		    	return ErrorMes(playerid, "Необходимо выбрать материалы в инвентаре.");
		    }	
		    if(iData[playerid][inValue][GetPVarInt(playerid, "MakeGunSlot")] < MakeGun[1][listitem])
		    {
		    	ShowDialog(playerid, D_MAKEGUN);
		    	return ErrorMes(playerid, "У тебя недостаточно материалов.");
		    }	
		    if(!AddItem(playerid, MakeGun[0][listitem], 50)) return ShowDialog(playerid, D_MAKEGUN);

		    iData[playerid][inValue][GetPVarInt(playerid, "MakeGunSlot")] -= MakeGun[1][listitem];
		    if(!iData[playerid][inValue][GetPVarInt(playerid, "MakeGunSlot")]) DropItem(playerid, GetPVarInt(playerid, "MakeGunSlot"));
			else 
			{
				if(GetPVarInt(playerid, "TypeTextDraw") == 4 && GetPVarInt(playerid, "InfoShowSlot") == GetPVarInt(playerid, "MakeGunSlot")) 
					InfoShow(playerid, 0, GetPVarInt(playerid, "MakeGunSlot"));

				new string[128];
				format(string, sizeof string, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
					GetPVarInt(playerid, "MakeGunSlot"),
					iData[playerid][inItems][GetPVarInt(playerid, "MakeGunSlot")],
					iData[playerid][inValue][GetPVarInt(playerid, "MakeGunSlot")],
					iData[playerid][inState][GetPVarInt(playerid, "MakeGunSlot")], 
					PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			}
			DeletePVar(playerid, "MakeGunSlot");
			return 1;
		}
		
   		case D_SPAWN_TOWN:
   		{
   		    if(!response)return 1;
   		    if(listitem == 0)
			{
				PlayerInfo[playerid][pOrigin] = 1;
				SendClientMessage(playerid,COLOR_YELLOW2,"Основной город теперь Лос Сантос.");
			}
   		    if(listitem == 1)
	   		{
	   			PlayerInfo[playerid][pOrigin] = 2;
	   			SendClientMessage(playerid,COLOR_YELLOW2,"Основной город теперь Сан Фиерро.");
	   		}
   		    if(listitem == 2)
			{
				PlayerInfo[playerid][pOrigin] = 3;
				SendClientMessage(playerid,COLOR_YELLOW2,"Основной город теперь Лас Вентурас.");
			}
		}
		case D_FUPD:
   		{
   		    new string[128];
   		    if(!response)return 1;
   		    if(listitem == 0)return ShowFractionDialog(playerid);
   		    else if(listitem == 1)
   		    {
				new gun[64];
				if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] == 0) format(gun,sizeof(gun),"Pistol (80 материалов)");
				else if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] == 1) format(gun,sizeof(gun),"Desert Eagle (120 материалов)");
				else if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] == 2) format(gun,sizeof(gun),"MP5 (150 материалов)");
				else if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] == 3) format(gun,sizeof(gun),"Shotgun (150 материалов)");
				else if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] == 4) format(gun,sizeof(gun),"AK47 (200 материалов)");
			   	SetPVarInt(playerid,"FracUpdate",1);
			   	format(string,sizeof(string),"{F5DEB3}Категория: Оружие\nУлучшение: %s\nСтоимость: %d очков",gun,(FractionInfo[TeamInfo[playerid][tID]][oGunLevel]+1)*5);
			   	ShowPlayerDialog(playerid,D_FUPD2,DIALOG_STYLE_MSGBOX,""FPHEAD"Улучшения",string,"Купить","Назад");
			}
			else if(listitem == 2)
   		    {
			   	SetPVarInt(playerid,"FracUpdate",2);
			   	format(string,sizeof(string),"{F5DEB3}Категория: Деньги\nМаксимум: $%d\nСтоимость: %d очков",(FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel]+2)*1000000,(FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel]+1)*5);
			   	ShowPlayerDialog(playerid,D_FUPD2,DIALOG_STYLE_MSGBOX,""FPHEAD"Улучшения",string,"Купить","Назад");
			}
			else if(listitem == 3)
   		    {
			   	SetPVarInt(playerid,"FracUpdate",3);
			   	format(string,sizeof(string),"{F5DEB3}Категория: Материалы\nМаксимум: %d\nСтоимость: %d очков",(FractionInfo[TeamInfo[playerid][tID]][oMatsLevel]+2)*20000,(FractionInfo[TeamInfo[playerid][tID]][oMatsLevel]+1)*5);
			   	ShowPlayerDialog(playerid,D_FUPD2,DIALOG_STYLE_MSGBOX,""FPHEAD"Улучшения",string,"Купить","Назад");
			}
			else if(listitem == 4)
   		    {
			   	SetPVarInt(playerid,"FracUpdate",4);
			   	format(string,sizeof(string),"{F5DEB3}Категория: Наркотики\nМаксимум: %d\nСтоимость: %d очков",(FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel]+2)*1500,(FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel]+1)*5);
			   	ShowPlayerDialog(playerid,D_FUPD2,DIALOG_STYLE_MSGBOX,""FPHEAD"Улучшения",string,"Купить","Назад");
			}
   		}
   		case D_FUPD2:
   		{
   		    if(!response)return ShowFractionDialog(playerid);
   		    else if(GetPVarInt(playerid,"FracUpdate") == 1)
   		    {
				if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] == 5) return ErrorMes(playerid,"Уровень оружия максимален.");
				if(FractionInfo[TeamInfo[playerid][tID]][oPoints] < (FractionInfo[TeamInfo[playerid][tID]][oGunLevel]+1)*5) ErrorMes(playerid,"Недостаточно очков.");
				else
				{
				    FractionInfo[TeamInfo[playerid][tID]][oLevel]++;
					FractionInfo[TeamInfo[playerid][tID]][oGunLevel]++;
					FractionInfo[TeamInfo[playerid][tID]][oPoints] -= FractionInfo[TeamInfo[playerid][tID]][oGunLevel]*5;
					
					new string[128];
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Level`='%d',`GunLevel`='%d',`Points`='%d' WHERE `ID`='%d'",FractionInfo[TeamInfo[playerid][tID]][oLevel],FractionInfo[TeamInfo[playerid][tID]][oGunLevel],FractionInfo[TeamInfo[playerid][tID]][oPoints],TeamInfo[playerid][tID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
				}
			}
			else if(GetPVarInt(playerid,"FracUpdate") == 2)
			{
				if(FractionInfo[TeamInfo[playerid][tID]][oPoints] < (FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel]+1)*5) ErrorMes(playerid,"Недостаточно очков.");
				else
				{
				    FractionInfo[TeamInfo[playerid][tID]][oLevel]++;
					FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel]++;
					FractionInfo[TeamInfo[playerid][tID]][oPoints] -= FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel]*5;
					
					new string[128];
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Level`='%d',`MoneyLevel`='%d',`Points`='%d' WHERE `ID`='%d'",FractionInfo[TeamInfo[playerid][tID]][oLevel],FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel],FractionInfo[TeamInfo[playerid][tID]][oPoints],TeamInfo[playerid][tID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
			}
			else if(GetPVarInt(playerid,"FracUpdate") == 3)
			{
				if(FractionInfo[TeamInfo[playerid][tID]][oPoints] < (FractionInfo[TeamInfo[playerid][tID]][oMatsLevel]+1)*5) ErrorMes(playerid,"Недостаточно очков.");
				else
				{
				    FractionInfo[TeamInfo[playerid][tID]][oLevel]++;
				 	FractionInfo[TeamInfo[playerid][tID]][oMatsLevel]++;
				 	FractionInfo[TeamInfo[playerid][tID]][oPoints] -= FractionInfo[TeamInfo[playerid][tID]][oMatsLevel]*5;
					
					new string[128];
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Level`='%d',`MatsLevel`='%d',`Points`='%d' WHERE `ID`='%d'",FractionInfo[TeamInfo[playerid][tID]][oLevel],FractionInfo[TeamInfo[playerid][tID]][oMatsLevel],FractionInfo[TeamInfo[playerid][tID]][oPoints],TeamInfo[playerid][tID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
			}
			else if(GetPVarInt(playerid,"FracUpdate") == 4)
			{
				if(FractionInfo[TeamInfo[playerid][tID]][oPoints] < (FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel]+1)*5) ErrorMes(playerid,"Недостаточно очков.");
				else
				{
				    FractionInfo[TeamInfo[playerid][tID]][oLevel]++;
				 	FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel]++;
					FractionInfo[TeamInfo[playerid][tID]][oPoints] -= FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel]*5;
					
					new string[128];
					format(string,sizeof(string),"UPDATE `samp_fracs` SET `Level`='%d',`DrugsLevel`='%d',`Points`='%d' WHERE `ID`='%d'",FractionInfo[TeamInfo[playerid][tID]][oLevel],FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel],FractionInfo[TeamInfo[playerid][tID]][oPoints],TeamInfo[playerid][tID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
			}
			ShowFractionDialog(playerid);
			DeletePVar(playerid,"FracUpdate");
   		}
		case D_VIP: 
		{
			if(!response) return 1;
			switch(listitem)
			{
				case 0:return ShowDialog(playerid,D_VIP_INFO);
				case 1:
				{
					if(PremiumInfo[playerid][Rub] < 100) 
					{
						ShowDialog(playerid,D_VIP);
						return ErrorMes(playerid,"Для продления VIP необходимо 100р.");
					}
					PremiumInfo[playerid][Date] += 2592000;
					PremiumInfo[playerid][Rub] -= 100;
					new sYear, sMonth, sDay, string[128];
					timestamp_to_date(PremiumInfo[playerid][Date], sYear, sMonth, sDay);
					format(string,sizeof(string),"Время действия VIP аккаунта продлено до %02d.%02d.%d", sDay,sMonth,sYear);
					SendClientMessage(playerid,COLOR_YELLOW,string);
					format(string,sizeof(string),"UPDATE `samp_premium` SET `Rub`='%d',`Date`='%d' WHERE `Name`='%s'",PremiumInfo[playerid][Rub],PremiumInfo[playerid][Date],PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					return ShowDialog(playerid,D_VIP);
					
				}
				case 2:
				{
					if(PremiumInfo[playerid][Rub] < 100) 
					{
						ShowDialog(playerid,D_VIP);
						return ErrorMes(playerid,"Для вывода денег на счету должно быть не менее 100р.");
					}
					//DeletePVar(playerid,"VIPMoney");
					//ShowDialog(playerid,D_VIP_SUMMA);
					ShowDialog(playerid,D_VIP);
					return ErrorMes(playerid,"Временно недоступно.");
				}
				case 3:
				{
					if(PremiumInfo[playerid][Rub] < 100) 
					{
						ShowDialog(playerid,D_VIP);
						return ErrorMes(playerid,"Для покупки SSM на счету должно быть не менее 100р.");
					}
					//DeletePVar(playerid,"VIPMoney");
					ShowDialog(playerid,D_VIP);
					return ErrorMes(playerid,"Временно недоступно.");
				}
				case 4:
				{
					new string[128];
					format(string,sizeof(string),"SELECT `Name`,`Level` FROM `samp_premium` WHERE `Level` > 0 AND `Refer` = '%s' LIMIT 30",PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",playerid,DB_LOAD_REFERS);
				}
			}
			
		
		}
		case D_VIP_SUMMA:
		{
			if(!response) return ShowDialog(playerid, D_VIP);
			if(strval(inputtext) <= 0)
			{
				ErrorMes(playerid, "Сумма должна быть больше 0 рублей.");
				return ShowDialog(playerid, D_VIP_SUMMA);
			}
			if(strval(inputtext) > PremiumInfo[playerid][Rub])
			{
				ErrorMes(playerid,"У тебя на счету нет такой суммы.");
				return ShowDialog(playerid, D_VIP_SUMMA);
			}
			SetPVarInt(playerid,"VIPMoney",strval(inputtext));
			DeletePVar(playerid,"VIPKoshel");
			return ShowDialog(playerid, D_VIP_KOSHEL);
		}
		case D_VIP_KOSHEL:
		{
			if(!response)  return ShowDialog(playerid, D_VIP_SUMMA);
			if(strlen(inputtext) != 13)
			{
				ErrorMes(playerid,"Неверный формат счета. Пример: R123456789012");
				return ShowDialog(playerid, D_VIP_KOSHEL);
			}
			if(inputtext[0] != 'R')
			{
				ErrorMes(playerid,"Номер счета  должен начинаться с R.");
				return ShowDialog(playerid, D_VIP_KOSHEL);
			}
			for(new i=1; i<13; i++)
			{
				if(inputtext[i] < '0' || inputtext[i] > '9')
				{
					ErrorMes(playerid,"Неверный формат счета. Пример: R123456789012");
					return ShowDialog(playerid, D_VIP_KOSHEL);
				}
			}
			SetPVarInt(playerid,"VIPKoshel",strval(inputtext));
			return ShowDialog(playerid, D_VIP_OK);
			
		}
		case D_VIP_OK:
		{
			
			if(!response) 
			{
				DeletePVar(playerid,"VIPMoney");
				DeletePVar(playerid,"VIPKoshel");
				return ShowDialog(playerid, D_VIP);
			}
			
			if(GetPVarInt(playerid,"VIPMoney") <= 0)
			{
				ErrorMes(playerid, "Сумма должна быть больше 0 рублей.");
				return ShowDialog(playerid, D_VIP_SUMMA);
			}
			if(GetPVarInt(playerid,"VIPMoney")  > PremiumInfo[playerid][Rub])
			{
				ErrorMes(playerid,"У тебя на счету нет такой суммы.");
				return ShowDialog(playerid, D_VIP_SUMMA);
			}
			
			new string[128];
			PremiumInfo[playerid][Rub] -= GetPVarInt(playerid,"VIPMoney");
			
			format(string,sizeof(string),"UPDATE `samp_premium` SET `Rub`='%d' WHERE `Name`='%s'",PremiumInfo[playerid][Rub],PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			format(string,sizeof(string),"INSERT INTO `samp_pay` (`name`,`type`,`purse`,`cost`) VALUES ('%s','WebMoney','%d','R%d')",PlayerInfo[playerid][pName],GetPVarInt(playerid,"VIPMoney"),GetPVarInt(playerid,"VIPKoshel"));
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			DeletePVar(playerid,"VIPMoney");
			DeletePVar(playerid,"VIPKoshel");
			return ShowDialog(playerid, D_VIP);
		}
		case D_VIP_INFO: if(!response) return ShowDialog(playerid,D_VIP);
		case D_VIP_REFERS: if(!response) return ShowDialog(playerid,D_VIP);
		
		case D_RADIO:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0..RADIO: 
				{
					if(PlayerInfo[playerid][pVehID] && VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType]) strmid(VehInfo[PlayerInfo[playerid][pVehID]][Url], RadioInfo[listitem][URL], 0, strlen(RadioInfo[listitem][URL]),128);
					else 
					{
						strmid(PlayerInfo[playerid][pUrl], RadioInfo[listitem][URL], 0, strlen(RadioInfo[listitem][URL]),128);
						PlayAudioStreamForPlayer(playerid, PlayerInfo[playerid][pUrl]);
						return 1;
					}	
				}	
                case RADIO+1: return ShowDialog(playerid,D_RADIO_INPUT);
				case RADIO+2:
				{
					if(PlayerInfo[playerid][pVehID] && VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType]) strmid(VehInfo[PlayerInfo[playerid][pVehID]][Url], "None", 0, strlen("None"),128);
					else strmid(PlayerInfo[playerid][pUrl], "None", 0, strlen("None"),128);
					
				    GameTextForPlayer(playerid,"~w~Paѓ…O ~r~B‘K‡”ЌEмO",3000,4);
					return StopAudioStreamForPlayer(playerid);
				}
		    }
			if(PlayerInfo[playerid][pVehID])
			{
				ForEachPlayer(i)
				{
					if(PlayerInfo[i][pVehID] != PlayerInfo[playerid][pVehID]) continue;
					PlayAudioStreamForPlayer(i, VehInfo[PlayerInfo[playerid][pVehID]][Url]);
				}
			}	
		    return 1;
		}
		case D_RADIO_INPUT:
		{
		    if(!response) return ShowDialog(playerid,D_RADIO);
		    if(strfind("Повтор", inputtext, true) != -1)
            {
				if(PlayerInfo[playerid][pVehID] && VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType])
				{
					if(strlen(VehInfo[PlayerInfo[playerid][pVehID]][Url]) > 4)
					{
						ForEachPlayer(i)
						{
							if(PlayerInfo[i][pVehID] != PlayerInfo[playerid][pVehID]) continue;
							PlayAudioStreamForPlayer(i, VehInfo[PlayerInfo[playerid][pVehID]][Url]);
						}
					}
					else ErrorMes(playerid,"Невозможно запустить последнюю композицию.");
					return 1;
				}	
				else if(strlen(PlayerInfo[playerid][pUrl]) > 4)
				{
					PlayAudioStreamForPlayer(playerid, PlayerInfo[playerid][pUrl]);
					return 1;
				}
				else return ErrorMes(playerid,"Невозможно запустить последнюю композицию.");
			}
		    if(strlen(inputtext) < 10 || strlen(inputtext) > 128) return ShowDialog(playerid,D_RADIO_INPUT);
            if(inputtext[0] == 'h' && inputtext[1] == 't' && inputtext[2] == 't') 
			{
				if(PlayerInfo[playerid][pVehID] && VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType]) strmid(VehInfo[PlayerInfo[playerid][pVehID]][Url], inputtext, 0, strlen(inputtext),128);
				else
				{
					strmid(PlayerInfo[playerid][pUrl], inputtext, 0, strlen(inputtext),128);
					PlayAudioStreamForPlayer(playerid, PlayerInfo[playerid][pUrl]);
					return 1;
				}
			}	
            else 
			{
				if(PlayerInfo[playerid][pVehID] && VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType]) format(VehInfo[PlayerInfo[playerid][pVehID]][Url],128,"http://%s",inputtext);
				else
				{
					format(PlayerInfo[playerid][pUrl],128,"http://%s",inputtext);
					PlayAudioStreamForPlayer(playerid, PlayerInfo[playerid][pUrl]);
					return 1;
				}
			}
			if(PlayerInfo[playerid][pVehID])
			{
				ForEachPlayer(i)
				{
					if(PlayerInfo[i][pVehID] != PlayerInfo[playerid][pVehID]) continue;
					PlayAudioStreamForPlayer(i, VehInfo[PlayerInfo[playerid][pVehID]][Url]);
				}
			}	
		    return 1;
		}
		case D_VOTE_MAIN:
		{
			if(!response) return 1;
			if(VoteInfo[listitem][voStatus] == 0)
			{
				
				if(TeamInfo[playerid][tID] != MER || TeamInfo[playerid][tType] != 2) 
				{
					ErrorMes(playerid, "Открытие голосования доступно только мэру.");
					return ShowDialog(playerid, D_VOTE_MAIN);
				}	
				SetPVarInt(playerid, "VoteRank", listitem);
				VoteInfo[GetPVarInt(playerid, "VoteRank")][voCandidates] = 0;
				return ShowDialog(playerid, D_VOTE_NEW);
			}
			else if(VoteInfo[listitem][voStatus] == 1)
			{
				SetPVarInt(playerid, "VoteRank", listitem);
				if(TeamInfo[playerid][tID] == MER && TeamInfo[playerid][tType] == 2) 
					return ShowDialog(playerid, D_VOTE_END);
				else return ShowDialog(playerid, D_VOTE);
			}
			else
			{
				SetPVarInt(playerid, "VoteRank", listitem);
				if(TeamInfo[playerid][tID] == MER && TeamInfo[playerid][tType] == 2) 
					return ShowDialog(playerid, D_VOTE_DEL);
				else return ShowDialog(playerid, D_VOTE_RESULT);
			}

		}
		case D_VOTE_NEW:
		{
			if(!response)
			{
				if(!VoteInfo[GetPVarInt(playerid, "VoteRank")][voCandidates]) return 1;
				VoteInfo[GetPVarInt(playerid, "VoteRank")][voStatus] = 1;
				VoteInfo[GetPVarInt(playerid, "VoteRank")][voTime] = GetTime;
				new string[460], index = GetPVarInt(playerid, "VoteRank")*10;
				format(string, sizeof string, "INSERT INTO `samp_votes` (time,status,rank,members,candidates,votes) VALUES (%d,%d,%d,%d,'%s|%s|%s|%s|%s|%s|%s|%s|%s|%s','0|0|0|0|0|0|0|0|0|0')",
						GetTime, 1, GetPVarInt(playerid, "VoteRank"),VoteInfo[GetPVarInt(playerid, "VoteRank")][voCandidates],
						VName[index],VName[index+1],VName[index+2],VName[index+3],VName[index+4],VName[index+5],VName[index+6],VName[index+7],VName[index+8],VName[index+9]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",GetPVarInt(playerid, "VoteRank"), DB_ADD_VOTE);

				return ShowDialog(playerid, D_VOTE_MAIN);
			}
			if(!IsValidName(playerid, inputtext))
			{
				return ShowDialog(playerid, D_VOTE_NEW);
			}	
			
			new string[80];
			format(string,sizeof(string), "SELECT `level` FROM `samp_users` WHERE `name` = '%s'", inputtext);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "db_VoteAdd","ds",playerid,inputtext);
		}
		case D_VOTE:
		{
			if(!response) return ShowDialog(playerid, D_VOTE_MAIN);

			new string[12];
			format(string, sizeof string, "Vote_%d", GetPVarInt(playerid,"VoteRank"));
			if(GetPVarInt(playerid, string) == VoteInfo[GetPVarInt(playerid,"VoteRank")][voID])
				return ErrorMes(playerid, "Вы уже принимали участие в этих выборах.");

			if(listitem)
			{
				SetPVarInt(playerid,"VoteRankID", listitem - 1);
				return ShowDialog(playerid, D_VOTE_OK);
			}
			return ShowDialog(playerid, D_VOTE_NULL);

		}
		case D_VOTE_OK:
		{
			if(!response) return ShowDialog(playerid, D_VOTE);

			new str[12], string[112];
			format(str, sizeof str, "Vote_%d", GetPVarInt(playerid,"VoteRank"));
			SetPVarInt(playerid, str, VoteInfo[GetPVarInt(playerid,"VoteRank")][voID]);

			VVotes[GetPVarInt(playerid,"VoteRank")*10 + GetPVarInt(playerid,"VoteRankID")] ++;

			format(string, sizeof string, "INSERT INTO `samp_voters` (name,vote_id,vote_type) VALUES ('%s',%d,%d)", 
				PlayerInfo[playerid][pName], VoteInfo[GetPVarInt(playerid,"VoteRank")][voID],GetPVarInt(playerid,"VoteRank"));
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

			return ShowDialog(playerid, D_VOTE_MAIN);
			
		}
		case D_VOTE_NULL:
		{
			if(!response) return ShowDialog(playerid, D_VOTE);

			new str[12], string[112];
			format(str, sizeof str, "Vote_%d", GetPVarInt(playerid,"VoteRank"));
			SetPVarInt(playerid, str, VoteInfo[GetPVarInt(playerid,"VoteRank")][voID]);

			format(string, sizeof string, "INSERT INTO `samp_voters` (name,vote_id,vote_type) VALUES ('%s',%d,%d)", 
				PlayerInfo[playerid][pName], VoteInfo[GetPVarInt(playerid,"VoteRank")][voID],GetPVarInt(playerid,"VoteRank"));
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

			return ShowDialog(playerid, D_VOTE_MAIN);
		}
		case D_VOTE_END:
		{
			if(!response) return ShowDialog(playerid, D_VOTE_END_OK);
			return ShowDialog(playerid, D_VOTE_MAIN);
		}
		case D_VOTE_END_OK:
		{
			if(!response) return ShowDialog(playerid, D_VOTE_END);
			VoteInfo[GetPVarInt(playerid, "VoteRank")][voStatus] = 2;

			new string[220], index = GetPVarInt(playerid, "VoteRank")*10;
			format(string, sizeof string, "UPDATE `samp_votes` SET `status` = 2, `votes` = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `id` = %d", 
				VVotes[index],VVotes[index+1],VVotes[index+2],VVotes[index+3],VVotes[index+4],VVotes[index+5],VVotes[index+6],VVotes[index+7],VVotes[index+8],VVotes[index+9],
				VoteInfo[GetPVarInt(playerid, "VoteRank")][voID]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

			return ShowDialog(playerid, D_VOTE_MAIN);
		}
		case D_VOTE_DEL:
		{
			if(!response) return ShowDialog(playerid, D_VOTE_DEL_OK);
			return ShowDialog(playerid, D_VOTE_MAIN);
		}
		case D_VOTE_DEL_OK:
		{
			if(!response) return ShowDialog(playerid, D_VOTE_DEL);
			VoteInfo[GetPVarInt(playerid, "VoteRank")][voStatus] = 0;

			new string[64];
			format(string, sizeof string, "UPDATE `samp_votes` SET `status` = 0 WHERE `id` = %d", VoteInfo[GetPVarInt(playerid, "VoteRank")][voID]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

			return ShowDialog(playerid, D_VOTE_MAIN);
		}
		case D_VOTE_RESULT:
			return ShowDialog(playerid, D_VOTE_MAIN);
		case D_DROP:
		{
			if(!response) return 1;

			if(GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
				DropItem(playerid, GetPVarInt(playerid, "InfoShowSlot"), 2);
			else if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY || GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
				DropItem(playerid, GetPVarInt(playerid, "InfoShowSlot"));
			return 1;
		}

		case D_LIC_SHOW:
		{
			if(!response) return 1;

			new id;
			if(sscanf(inputtext,"u",id)) return ShowDialog(playerid, D_LIC_SHOW);

			if(!IsPlayerConnected(id))
			{
				ErrorMes(playerid, "Этот игрок не в сети.");
				return ShowDialog(playerid, D_LIC_SHOW);
			}	
			if(!DistPlayerToPlayer(8.0, playerid, id))
			{
				ErrorMes(playerid,"Игрок не возле тебя.");
				return ShowDialog(playerid, D_LIC_SHOW);
			}
			ShowLicenses(id, playerid);
			return 1;
		}

		case D_SELL_ID:
		{
			if(!response) 
			{
				DeleteSell(GetPVarInt(playerid, "SellTo"), GetPVarInt(playerid, "Accept"), 0);
				DeletePVar(playerid, "SellTo");
				return 1;
			}	

			new id;
			if(sscanf(inputtext,"u",id)) return ShowDialog(playerid, D_SELL_ID);

			if(playerid == id)
			{
				ErrorMes(playerid, "Ты не можешь продавать вещи сам себе.");
				return ShowDialog(playerid, D_SELL_ID);
			}
			if(!IsPlayerConnected(id))
			{
				ErrorMes(playerid, "Этот игрок не в сети.");
				return ShowDialog(playerid, D_SELL_ID);
			}	
			if(!DistPlayerToPlayer(5.0, playerid, id))
			{
				ErrorMes(playerid,"Игрок не возле тебя.");
				return ShowDialog(playerid, D_SELL_ID);
			}

			new string[18];
			AddPVarInt(playerid, "Accept", 1);
			SetPVarInt(playerid, "SellTo", id);

			format(string, sizeof(string), "Accept_ID_%d", GetPVarInt(playerid, "Accept"));
			SetPVarInt(id, string, playerid);

			format(string, sizeof(string), "Accept_Type_%d", GetPVarInt(playerid, "Accept"));

			if(!GetPVarInt(playerid, "InfoShow"))
			{
				SetPVarInt(id, string, iData[playerid][inItems][GetPVarInt(playerid, "InfoShowSlot")]);
				switch(oData[iData[playerid][inItems][GetPVarInt(playerid, "InfoShowSlot")]][imType])
				{
					case 0,1,10..12: 
					{
						format(string, sizeof(string), "Accept_Value_%d", GetPVarInt(playerid, "Accept"));
						SetPVarInt(id, string, 1);
						return ShowDialog(playerid, D_SELL_PRICE);
					}
					case 13, 27:
					{
						DeleteSell(id, GetPVarInt(playerid, "Accept"), 0);
						DeletePVar(playerid, "SellTo");
						return 1;
					}
					case 24: 
					{
						format(string, sizeof(string), "Accept_Value_%d", GetPVarInt(playerid, "Accept"));
						SetPVarInt(id, string, iData[playerid][inValue][GetPVarInt(playerid, "InfoShowSlot")]);
						return ShowDialog(playerid, D_SELL_PRICE);
					}

					default: return ShowDialog(playerid, D_SELL_VALUE);
				}
			}
			else if(GetPVarInt(playerid, "InfoShow") == 2)
			{
				SetPVarInt(id, string, atData[playerid][atModel][GetPVarInt(playerid, "InfoShowSlot")]);
				format(string, sizeof(string), "Accept_Value_%d", GetPVarInt(playerid, "Accept"));
				SetPVarFloat(id, string, atData[playerid][atState][GetPVarInt(playerid, "InfoShowSlot")]);
				return ShowDialog(playerid, D_SELL_PRICE);
			}	
			return 1;
			
		}

		case D_SELL_VALUE:
		{
			if(!response) return ShowDialog(playerid, D_SELL_ID);

			new value;
			if(sscanf(inputtext,"i",value)) return ShowDialog(playerid, D_SELL_VALUE);
			if(value < 1 || value > 100000)
			{
				ErrorMes(playerid, "Количество должно быть в пределах от 1 до 100.000.");
				return ShowDialog(playerid, D_SELL_VALUE);	
			}
			if(value > iData[playerid][inValue][GetPVarInt(playerid, "InfoShowSlot")])
			{
				ErrorMes(playerid, "У тебя нет такого количества.");
				return ShowDialog(playerid, D_SELL_VALUE);	
			}

			new string[18];
			new id = GetPVarInt(playerid, "SellTo");

			format(string, sizeof(string), "Accept_Value_%d", GetPVarInt(playerid, "Accept"));
			SetPVarInt(id, string, value);

			return ShowDialog(playerid, D_SELL_PRICE);
		}

		case D_SELL_PRICE:
		{
			if(!response) return ShowDialog(playerid, D_SELL_VALUE);

			new price;
			if(sscanf(inputtext,"i",price)) return ShowDialog(playerid, D_SELL_PRICE);

			if(price < 0 || price > 1000000000)
			{
				ErrorMes(playerid, "Цена должна быть в пределах от $0 до $1.000.000.000.");
				return ShowDialog(playerid, D_SELL_PRICE);	
			}

			new string[128], type;

			new id = GetPVarInt(playerid, "SellTo");

			format(string, sizeof(string), "Accept_Type_%d", GetPVarInt(playerid, "Accept"));
			type = GetPVarInt(id, string);

			format(string, sizeof(string), "Accept_Price_%d", GetPVarInt(playerid, "Accept"));
			SetPVarInt(id, string, price);

			if(oData[type][imType] < 100)
			{
				format(string, sizeof(string), "Accept_Value_%d", GetPVarInt(playerid, "Accept"));
				new value = GetPVarInt(id, string);

				switch(oData[type][imType])
				{
					case 0,1,10..12: 
					{
						format(string, sizeof(string), "* %s предложил(а) тебе купить %s за $%d.", 
							PlayerInfo[playerid][pName], oData[type][imName], price);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);

						format(string, sizeof(string), "* Ты предложил(а) %s купить %s за $%d.", 
							PlayerInfo[id][pName], oData[type][imName], price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 24: 
					{
						format(string, sizeof(string), "* %s предложил(а) тебе купить %s (Номер: %d) за $%d.", 
							PlayerInfo[playerid][pName], oData[type][imName], value, price);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);

						format(string, sizeof(string), "* Ты предложил(а) %s купить %s (Номер: %d) за $%d.", 
							PlayerInfo[id][pName], oData[type][imName], value, price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}

					default:
					{
						format(string, sizeof(string), "* %s предложил(а) тебе купить %s (%d) за $%d.", 
							PlayerInfo[playerid][pName], oData[type][imName], value, price);
						SendClientMessage(id, COLOR_LIGHTBLUE, string);

						format(string, sizeof(string), "* Ты предложил(а) %s купить %s (%d) за $%d.", 
							PlayerInfo[id][pName], oData[type][imName], value, price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				format(string, sizeof(string), "Accept_Value_%d", GetPVarInt(playerid, "Accept"));
				new Float:value = GetPVarFloat(id, string);

				format(string, sizeof(string), "* %s предложил(а) тебе купить %s (Состояние: %.0f) за $%d.", 
					PlayerInfo[playerid][pName], oData[type][imName], value, price);
				SendClientMessage(id, COLOR_LIGHTBLUE, string);

				format(string, sizeof(string), "* Ты предложил(а) %s купить %s (Состояние: %.0f) за $%d.", 
					PlayerInfo[id][pName], oData[type][imName], value, price);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

			}

			format(string, sizeof(string), "* Используй \"/buy %d\", чтобы принять предложение.", 
				GetPVarInt(playerid, "Accept"));
			SendClientMessage(id, COLOR_LIGHTBLUE, string);

			SetTimerEx("DeleteSell", 60000, false, "iii", id, GetPVarInt(playerid, "Accept"), type);

			DeletePVar(playerid, "SellTo");
		}
		case D_HANDS_TO_BAG, D_BAG_TO_HANDS:
		{
			if(!response)
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!oData[iData[playerid][inItems][GetPVarInt(playerid, "Menu_From")]][imCount])
			{
				ObjectToObject(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"));
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!iData[playerid][inValue][GetPVarInt(playerid, "Menu_From")])
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, из которого ты хочешь взять пуст.");
			}
			new value;
			if(sscanf(inputtext, "d", value)) return ShowDialog(playerid, dialogid);
			if(value < 1 || value > 100000)
			{
				ErrorMes(playerid, "Количество может быть в пределах от 1 до 100.000.");
				return ShowDialog(playerid, dialogid);
			}
			if(iData[playerid][inValue][GetPVarInt(playerid, "Menu_From")] < value)
			{
				ErrorMes(playerid, "У тебя нет такого количества.");
				return ShowDialog(playerid, dialogid);
			}
			if(iData[playerid][inValue][GetPVarInt(playerid, "Menu_To")])
			{
				if(iData[playerid][inItems][GetPVarInt(playerid, "Menu_To")] != iData[playerid][inItems][GetPVarInt(playerid, "Menu_From")])
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, в который ты хочешь положить занят другим предметом.");
			}
			ObjectToObject(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"), value);
			DeletePVar(playerid, "Menu_To");
			DeletePVar(playerid, "Menu_From");
			return 1;
		}
		case D_TRUNK_TO_BAG:
		{
			if(!response)
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][GetPVarInt(playerid, "Menu_From")]][imCount])
			{
				TrunkToObject(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"));
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][GetPVarInt(playerid, "Menu_From")])
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, из которого ты хочешь взять пуст.");
			}
			new value;
			if(sscanf(inputtext, "d", value)) return ShowDialog(playerid, dialogid);
			if(value < 1 || value > 100000)
			{
				ErrorMes(playerid, "Количество может быть в пределах от 1 до 100.000.");
				return ShowDialog(playerid, dialogid);
			}
			if(VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][GetPVarInt(playerid, "Menu_From")] < value)
			{
				ErrorMes(playerid, "В багажнике нет такого количества.");
				return ShowDialog(playerid, dialogid);
			}
			if(iData[playerid][inValue][GetPVarInt(playerid, "Menu_To")])
			{
				if(iData[playerid][inItems][GetPVarInt(playerid, "Menu_To")] != VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][GetPVarInt(playerid, "Menu_From")])
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, в который ты хочешь положить занят другим предметом.");
			}
			TrunkToObject(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"), value);
			DeletePVar(playerid, "Menu_To");
			DeletePVar(playerid, "Menu_From");
			return 1;
		}
		case D_HOUSE_TO_BAG:
		{
			if(!response)
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][GetPVarInt(playerid, "Menu_From")]][imCount])
			{
				HouseToObject(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"));
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][GetPVarInt(playerid, "Menu_From")])
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, из которого ты хочешь взять пуст.");
			}
			new value;
			if(sscanf(inputtext, "d", value)) return ShowDialog(playerid, dialogid);
			if(value < 1 || value > 100000)
			{
				ErrorMes(playerid, "Количество может быть в пределах от 1 до 100.000.");
				return ShowDialog(playerid, dialogid);
			}
			if(HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][GetPVarInt(playerid, "Menu_From")] < value)
			{
				ErrorMes(playerid, "В багажнике нет такого количества.");
				return ShowDialog(playerid, dialogid);
			}
			if(iData[playerid][inValue][GetPVarInt(playerid, "Menu_To")])
			{
				if(iData[playerid][inItems][GetPVarInt(playerid, "Menu_To")] != HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][GetPVarInt(playerid, "Menu_From")])
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, в который ты хочешь положить занят другим предметом.");
			}
			HouseToObject(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"), value);
			DeletePVar(playerid, "Menu_To");
			DeletePVar(playerid, "Menu_From");
			return 1;
		}
		case D_BAG_TO_TRUNK:
		{
			if(!response)
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!oData[iData[playerid][inItems][GetPVarInt(playerid, "Menu_From")]][imCount])
			{
				ObjectToTrunk(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"));
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!iData[playerid][inValue][GetPVarInt(playerid, "Menu_From")])
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, из которого ты хочешь взять пуст.");
			}
			new value;
			if(sscanf(inputtext, "d", value)) return ShowDialog(playerid, dialogid);
			if(value < 1 || value > 100000)
			{
				ErrorMes(playerid, "Количество может быть в пределах от 1 до 100.000.");
				return ShowDialog(playerid, dialogid);
			}
			if(iData[playerid][inValue][GetPVarInt(playerid, "Menu_From")] < value)
			{
				ErrorMes(playerid, "У тебя нет такого количества.");
				return ShowDialog(playerid, dialogid);
			}
			if(VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][GetPVarInt(playerid, "Menu_To")])
			{
				if(VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][GetPVarInt(playerid, "Menu_To")] != iData[playerid][inItems][GetPVarInt(playerid, "Menu_From")])
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, в который ты хочешь положить занят другим предметом.");
			}
			ObjectToTrunk(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"), value);
			DeletePVar(playerid, "Menu_To");
			DeletePVar(playerid, "Menu_From");
			return 1;
		}
		case D_BAG_TO_HOUSE:
		{
			if(!response)
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!oData[iData[playerid][inItems][GetPVarInt(playerid, "Menu_From")]][imCount])
			{
				ObjectToHouse(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"));
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return 1;
			}
			if(!iData[playerid][inValue][GetPVarInt(playerid, "Menu_From")])
			{
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, из которого ты хочешь взять пуст.");
			}
			new value;
			if(sscanf(inputtext, "d", value)) return ShowDialog(playerid, dialogid);
			if(value < 1 || value > 100000)
			{
				ErrorMes(playerid, "Количество может быть в пределах от 1 до 100.000.");
				return ShowDialog(playerid, dialogid);
			}
			if(iData[playerid][inValue][GetPVarInt(playerid, "Menu_From")] < value)
			{
				ErrorMes(playerid, "У тебя нет такого количества.");
				return ShowDialog(playerid, dialogid);
			}
			if(HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][GetPVarInt(playerid, "Menu_To")])
			{
				if(HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][GetPVarInt(playerid, "Menu_To")] != iData[playerid][inItems][GetPVarInt(playerid, "Menu_From")])
				DeletePVar(playerid, "Menu_To");
				DeletePVar(playerid, "Menu_From");
				return ErrorMes(playerid, "Слот, в который ты хочешь положить занят другим предметом.");
			}
			ObjectToHouse(playerid, GetPVarInt(playerid, "Menu_To"), GetPVarInt(playerid, "Menu_From"), value);
			DeletePVar(playerid, "Menu_To");
			DeletePVar(playerid, "Menu_From");
			return 1;
		}
		case D_SKIN_BUY:
		{
			if(!response) return 1;
			if(PlayerInfo[playerid][pMoney] < GetPVarInt(playerid, "SkinShop_Cost"))
				return ShowDialog(playerid, D_SKIN_MONEY);
			new oldskin = PlayerInfo[playerid][pSkin];

			FP_GivePlayerMoney(playerid, -GetPVarInt(playerid, "SkinShop_Cost"));
			MoneyToBiznes(playerid, GetPVarInt(playerid, "SkinShop_Cost"));


			SetPlayerSkin(playerid, GetPVarInt(playerid, "SkinShop_ID"));
			PlayerInfo[playerid][pSkin] = GetPVarInt(playerid, "SkinShop_ID");
			
			new string[128];
			format(string,sizeof(string),"UPDATE `samp_users` SET `Skin` = %d, `Skins` = '%d|%d|%d|%d|%d' WHERE `Name` = '%s'", 
				PlayerInfo[playerid][pSkin], 
				PlayerInfo[playerid][pSkins][0], 
				PlayerInfo[playerid][pSkins][1], 
				PlayerInfo[playerid][pSkins][2], 
				PlayerInfo[playerid][pSkins][3], 
				PlayerInfo[playerid][pSkins][4],
				PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

			SetPVarInt(playerid, "SkinShop_ID", oldskin);

			if(oldskin == SKIN_NULL || oldskin == 0) SkinShopHide(playerid);
			else
			{
				SkinShopHide(playerid, false);
				ClothesShow(playerid);
				ShowDialog(playerid, D_CLOTHES_PUT);
			}
				

		}
		case D_CLOTHES_GET:
		{
			if(!response) return 1;

			PlayerInfo[playerid][pSkins][GetPVarInt(playerid, "Skin_Slot")] = PlayerInfo[playerid][pSkin];

			SetPlayerSkin(playerid, GetPVarInt(playerid, "Skin_ID"));
			PlayerInfo[playerid][pSkin] = GetPVarInt(playerid, "Skin_ID");

			new string[128];
			format(string,sizeof(string),"UPDATE `samp_users` SET `Skin` = %d, `Skins` = '%d|%d|%d|%d|%d' WHERE `Name` = '%s'", 
				PlayerInfo[playerid][pSkin],
				PlayerInfo[playerid][pSkins][0], 
				PlayerInfo[playerid][pSkins][1], 
				PlayerInfo[playerid][pSkins][2], 
				PlayerInfo[playerid][pSkins][3], 
				PlayerInfo[playerid][pSkins][4], 
				PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

			ClothesHide(playerid);
		}
		case D_CLOTHES_REPLACE:
		{
			if(!response) return 1;
			PlayerInfo[playerid][pSkins][GetPVarInt(playerid, "Skin_Slot")] = GetPVarInt(playerid, "SkinShop_ID");
			ClothesHide(playerid);
		}
		default: return 1;
    }
	return 1;
}

forward DeleteSell(playerid, accept_id, accept_type);
public DeleteSell(playerid, accept_id, accept_type)
{
	new string[18];
	if(accept_type)
	{
		format(string, sizeof(string), "Accept_Type_%d", accept_id);
		if(GetPVarInt(playerid, string) != accept_type) return 1;
	}
	format(string, sizeof(string), "Accept_ID_%d", accept_id);
	DeletePVar(playerid, string);
	format(string, sizeof(string), "Accept_Type_%d", accept_id);
	DeletePVar(playerid, string);
	format(string, sizeof(string), "Accept_Value_%d", accept_id);
	DeletePVar(playerid, string);
	format(string, sizeof(string), "Accept_Price_%d", accept_id);
	DeletePVar(playerid, string);
	return 1;
}

forward db_VoteAdd(playerid, candidate[]);
public db_VoteAdd(playerid, candidate[])
{
	if(!cache_num_rows()) 
	{
		ErrorMes(playerid, "Игрок с таким ником не найден.");
		return ShowDialog(playerid, D_VOTE_NEW);
	}	
	new index = GetPVarInt(playerid, "VoteRank")*10+VoteInfo[GetPVarInt(playerid, "VoteRank")][voCandidates];
	strmid(VName[index], candidate, 0, 20, 20);
	VVotes[index] = 0;
	VoteInfo[GetPVarInt(playerid, "VoteRank")][voCandidates] ++;

	if(VoteInfo[GetPVarInt(playerid, "VoteRank")][voCandidates] == 10) 
	{
		VoteInfo[GetPVarInt(playerid, "VoteRank")][voStatus] = 1;
		VoteInfo[GetPVarInt(playerid, "VoteRank")][voTime] = GetTime;
		new string[460];
		index = GetPVarInt(playerid, "VoteRank")*10;
		format(string, sizeof string, "INSERT INTO `samp_votes` (time,status,rank,members,candidates,votes) VALUES (%d,%d,%d,%d,'%s|%s|%s|%s|%s|%s|%s|%s|%s|%s','0|0|0|0|0|0|0|0|0|0')",
				GetTime, 1, GetPVarInt(playerid, "VoteRank"),VoteInfo[GetPVarInt(playerid, "VoteRank")][voCandidates],
				VName[index],VName[index+1],VName[index+2],VName[index+3],VName[index+4],VName[index+5],VName[index+6],VName[index+7],VName[index+8],VName[index+9]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",GetPVarInt(playerid, "VoteRank"), DB_ADD_VOTE);

		return ShowDialog(playerid, D_VOTE_MAIN);
	}
	return ShowDialog(playerid, D_VOTE_NEW);
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	#if defined LOGGING

	#endif
   	if(!GetPVarInt(playerid,"Login") )return ErrorMes(playerid, "Для отправки сообщений необходимо авторизоваться.");
    new string[128];
	Click[playerid] = clickedplayerid;
	format(string,sizeof(string),""FPHEAD"%s:",PlayerInfo[clickedplayerid][pName]);
    ShowPlayerDialog(playerid,D_PM,DIALOG_STYLE_INPUT,string,"{F5DEB3}Введите текст сообщения","Отправuть","Отмена");
	return 1;
}

//******************************************************************************
//===================================[Персональные паблики]=====================
//******************************************************************************


stock AddItem(playerid, item, value = 1, Float:istate = 100.0)
{
	if(!item) return 1;

	if(oData[item][imType] > 100) // Аттачи
	{
		if(!istate) return 1;

		for(new i = 0; i < 20; i++)
		{
			if(!iData[playerid][inItems][i])
			{
				iData[playerid][inItems][i] = item;
				iData[playerid][inValue][i] = value;
				iData[playerid][inState][i] = istate;

				ImageHide(playerid, i);
				if(GetPVarInt(playerid, "LMenu_Type") == BT_INVENTORY)
					ImageShow(playerid, i, iData[playerid][inItems][i]);
				else ImageShow(playerid, i, iData[playerid][inItems][i], false);

				new fetch[100];
				format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
					i,iData[playerid][inItems][i],iData[playerid][inValue][i],iData[playerid][inState][i], PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
				return 1;
			}
		}
		ErrorMes(playerid, "В инвентаре нет свободного места.");
		return 0;
	}
	else if(oData[item][imType] == 100) // Аттачи
	{
		if(!istate) return 1;

		if(PlayerInfo[playerid][pArmour] != -1)
		{
			atData[playerid][atState][PlayerInfo[playerid][pArmour]] = istate;
			FP_SetPlayerArmour(playerid, istate, PlayerInfo[playerid][pArmour]);

			if(GetPVarInt(playerid, "InfoShow") == 2 && GetPVarInt(playerid, "InfoShowSlot") == PlayerInfo[playerid][pArmour])
				InfoShow(playerid, 2, PlayerInfo[playerid][pArmour]);

			return 1;
		}

		for(new i = 0; i < 5; i++)
		{
			if(!atData[playerid][atModel][i])
			{
				atData[playerid][atModel][i] = item;
				atData[playerid][atState][i] = istate;
				FP_SetPlayerArmour(playerid, istate, i);

				AttachObject(playerid, i, oData[atData[playerid][atModel][i]][imType]);

				ImageHide(playerid, i+30);
				if(GetPVarInt(playerid, "RMenu_Type") == BT_OBJECTS)
					AttachShow(playerid, i+30, atData[playerid][atModel][i]);
				else AttachShow(playerid, i+30, atData[playerid][atModel][i], false);
				return 1;
			}
		}

		for(new i = 0; i < 20; i++)
		{
			if(!iData[playerid][inItems][i])
			{
				iData[playerid][inItems][i] = item;
				iData[playerid][inValue][i] = value;
				iData[playerid][inState][i] = istate;

				ImageHide(playerid, i);
				if(GetPVarInt(playerid, "LMenu_Type") == BT_INVENTORY)
					ImageShow(playerid, i, iData[playerid][inItems][i]);
				else ImageShow(playerid, i, iData[playerid][inItems][i], false);

				new fetch[100];
				format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
					i,iData[playerid][inItems][i],iData[playerid][inValue][i],iData[playerid][inState][i], PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
				return 1;
			}
		}
		ErrorMes(playerid, "В инвентаре нет свободного места.");
		return 0;
	}
	else
	{
		if(!value) return 0;

		if(istate == -1 && oData[item][imType] <= 12)
		{
			if(PlayerInfo[playerid][pGun][oData[item][imType]] != -1) return 1;
			for(new i = 20; i < 25; i++)
			{
				if(iData[playerid][inItems][i]) continue;
			
				SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
				if(iData[playerid][inValue][i] + value > 1000)
					value = 1000 - iData[playerid][inValue][i];

				iData[playerid][inItems][i] = item;
				iData[playerid][inValue][i] = value;
				iData[playerid][inState][i] = istate;

				FP_GivePlayerWeapon(playerid, item, value, i);
				return 1;
			}
			return 1;
		}

		new FreeSlot = -1;

		for(new i = 20; i < 25; i++)
		{
			if(!iData[playerid][inItems][i] && FreeSlot == -1) FreeSlot = i;
			if(oData[item][imType] != oData[iData[playerid][inItems][i]][imType]) continue; // Объекты одинакового типа
			
			switch(oData[item][imType])
			{
				case 0,1,10..12,24:
				{
					FreeSlot = -1;
					break;
				}
				default: {}
			}
				
			if(iData[playerid][inItems][i] == item && iData[playerid][inState][i] == istate) // Совершенно одинаковые
			{
				switch(oData[item][imType])
				{
					case 2..9:
					{
						SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
						if(iData[playerid][inValue][i] + value > 1000)
							value = 1000 - iData[playerid][inValue][i];

						iData[playerid][inValue][i] += value;
						iData[playerid][inState][i] = istate;

						FP_GivePlayerWeapon(playerid, item, value, i);

						if(!GetPVarInt(playerid, "InfoShow") && GetPVarInt(playerid, "InfoShowSlot") == i)
							InfoShow(playerid, 0, i);

						new fetch[100];
						format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
							i,iData[playerid][inItems][i],iData[playerid][inValue][i],iData[playerid][inState][i], PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
						return 1;
					}	
					case 13: 
					{
						ErrorMes(playerid, "У тебя уже есть банковская карта.");
						return 0;
					}
					case 14,15..20,21..23,25,26: 
					{
						//if(iData[playerid][inValue][i] + value > 100000)
						//	value = 100000 - iData[playerid][inValue][i];

						iData[playerid][inValue][i] += value;
						iData[playerid][inState][i] = istate;
						if(!GetPVarInt(playerid, "InfoShow") && GetPVarInt(playerid, "InfoShowSlot") == i)
							InfoShow(playerid, 0, i);

						new fetch[100];
						format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
							i,iData[playerid][inItems][i],iData[playerid][inValue][i],iData[playerid][inState][i], PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
						return 1;
					}
					case 24: 
					{
						ErrorMes(playerid, "У тебя уже есть мобильный телефон.");
						return 0;
					}
					case 27:  return 0;

					default: 
					{
						iData[playerid][inValue][i] = value;
						iData[playerid][inState][i] = istate;
						if(!GetPVarInt(playerid, "InfoShow") && GetPVarInt(playerid, "InfoShowSlot") == i)
							InfoShow(playerid, 0, i);

						new fetch[100];
						format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
							i,iData[playerid][inItems][i],iData[playerid][inValue][i],iData[playerid][inState][i], PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
						return 1;
					}

				}
				return 1;
			}
			FreeSlot = -1;
			break;
		}	
	
		for(new i = 0; i < 20; i++)
		{
			if(!iData[playerid][inItems][i] && FreeSlot == -1) FreeSlot = i;
			if(oData[item][imType] != oData[iData[playerid][inItems][i]][imType]) continue; // Объекты одинакового типа
			
			switch(oData[item][imType])
			{
				case 0,1,10..12,24:
				{
					if(FreeSlot != -1) break;
					else continue;
				}
				default: {}
			}
				
			if(iData[playerid][inItems][i] == item && iData[playerid][inState][i] == istate)
			{
				switch(oData[item][imType])
				{
					case 2..9: 
					{
						if(iData[playerid][inValue][i] + value > 1000)
							value = 1000 - iData[playerid][inValue][i];

						iData[playerid][inValue][i] += value;
						iData[playerid][inState][i] = istate;

						if(!GetPVarInt(playerid, "InfoShow") && GetPVarInt(playerid, "InfoShowSlot") == i)
							InfoShow(playerid, 0, i);

						new fetch[100];
						format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
							i,iData[playerid][inItems][i],iData[playerid][inValue][i],iData[playerid][inState][i], PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
						return 1;
					}
					case 13: 
					{
						ErrorMes(playerid, "У тебя уже есть банковская карта.");
						return 0;
					}
					case 14,15..20,21..23,25,26: 
					{
						//if(iData[playerid][inValue][i] + value > 100000)
						//	value = 100000 - iData[playerid][inValue][i];

						iData[playerid][inValue][i] += value;
						iData[playerid][inState][i] = istate;
						if(!GetPVarInt(playerid, "InfoShow") && GetPVarInt(playerid, "InfoShowSlot") == i)
							InfoShow(playerid, 0, i);

						new fetch[100];
						format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
							i,iData[playerid][inItems][i],iData[playerid][inValue][i],iData[playerid][inState][i], PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
						return 1;
					}
					case 27: return 0;

					default: 
					{
						iData[playerid][inValue][i] = value;
						iData[playerid][inState][i] = istate;
						if(!GetPVarInt(playerid, "InfoShow") && GetPVarInt(playerid, "InfoShowSlot") == i)
							InfoShow(playerid, 0, i);

						new fetch[100];
						format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
							i,iData[playerid][inItems][i],iData[playerid][inValue][i],iData[playerid][inState][i], PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
						return 1;
					}

				}
				return 1;
			}
		}

		if(FreeSlot == -1 || item < 0) 
		{
			ErrorMes(playerid, "В инвентаре нет свободного места.");
			return 0;
		}

		if(oData[item][imType] != 24)
		{
			//if(iData[playerid][inValue][FreeSlot] + value > 100000)
			//	value = 100000 - iData[playerid][inValue][FreeSlot];
		}
		iData[playerid][inItems][FreeSlot] = item;
		iData[playerid][inValue][FreeSlot] = value;
		iData[playerid][inState][FreeSlot] = istate;

		ImageHide(playerid, FreeSlot);
		if(GetPVarInt(playerid, "LMenu_Type") == BT_INVENTORY && FreeSlot < 20 ||
			GetPVarInt(playerid, "RMenu_Type") == BT_HANDS && FreeSlot > 19)
			ImageShow(playerid, FreeSlot, iData[playerid][inItems][FreeSlot]);
		else ImageShow(playerid, FreeSlot, iData[playerid][inItems][FreeSlot], false);

		new fetch[100];
		format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
			FreeSlot,iData[playerid][inItems][FreeSlot],iData[playerid][inValue][FreeSlot],iData[playerid][inState][FreeSlot], PlayerInfo[playerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

		switch(oData[item][imType])
		{
			case 0..12:
			{
				SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
				if(iData[playerid][inValue][FreeSlot] + value > 1000)
					value = 1000 - iData[playerid][inValue][FreeSlot];

				if(FreeSlot < 20) return 1;
				FP_GivePlayerWeapon(playerid, item, value, FreeSlot);
			}
			case 13: PlayerInfo[playerid][pBankPass] = value; // w odata
			case 14: 
			{
				if(FreeSlot > 19) PlayerInfo[playerid][pMats] = FreeSlot;
			}	
			case 15..20: 
			{
				if(FreeSlot > 19) PlayerInfo[playerid][pDrugs] = FreeSlot;
			}	
			case 21: 
			{
				if(FreeSlot > 19) PlayerInfo[playerid][pPivo] = FreeSlot;
			}
			case 22: 
			{
				if(FreeSlot > 19) PlayerInfo[playerid][pSigs] = FreeSlot;
			}
			case 23: 
			{
				if(FreeSlot > 19) PlayerInfo[playerid][pCP] = FreeSlot;
			}
			case 24: 
			{
				if(FreeSlot > 19) PlayerInfo[playerid][pMobile] = value;
			}
			case 25: 
			{
				if(FreeSlot > 19) PlayerInfo[playerid][pRope] = FreeSlot;
			}	
			case 26: 
			{
				if(FreeSlot > 19) PlayerInfo[playerid][pSD] = FreeSlot;
			}
			case 27: PlayerInfo[playerid][pTazer] = FreeSlot;

			default: return 1;
		}
		return 1;
	}
}

DropItem(playerid, slotid, type = 0, bool:save = true)
{
	if(slotid == -1) return 1;

	switch(type)
	{
		case 0:
		{
			switch(oData[iData[playerid][inItems][slotid]][imType])
			{
				case 0..12:
				{
					if(slotid > 19)
					{
						SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
						RemovePlayerWeapon(playerid, iData[playerid][inItems][slotid]);
					}	
				}
				case 13: PlayerInfo[playerid][pBankPass] = 0; // w odata
				case 14: 
				{
					if(slotid > 19) PlayerInfo[playerid][pMats] = -1;
				}
				case 15..20: 
				{
					if(slotid > 19) PlayerInfo[playerid][pDrugs] = -1;
				}
				case 21: 
				{
					if(slotid > 19) PlayerInfo[playerid][pPivo] = -1;
				}
				case 22: 
				{
					if(slotid > 19) PlayerInfo[playerid][pSigs] = -1;
				}
				case 23: 
				{
					if(slotid > 19) PlayerInfo[playerid][pCP] = -1;
				}
				case 24: 
				{
					if(slotid > 19) PlayerInfo[playerid][pMobile] = 0;
				}	
				case 25: 
				{
					if(slotid > 19) PlayerInfo[playerid][pRope] = -1;
				}
				case 26: 
				{
					if(slotid > 19) PlayerInfo[playerid][pSD] = -1;
				}
				case 27: PlayerInfo[playerid][pTazer] = -1;

				default: {}
			}
			iData[playerid][inItems][slotid] = 0;
			iData[playerid][inValue][slotid] = 0;
			iData[playerid][inState][slotid] = 0.0;

			if(save == true)
			{
				new fetch[100];
				format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '0|0|0.0' WHERE `name` = '%s'",slotid,PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
			}

			ImageHide(playerid, slotid);
			if(GetPVarInt(playerid, "LMenu_Type") == BT_INVENTORY && slotid < 20 ||
				GetPVarInt(playerid, "RMenu_Type") == BT_HANDS && slotid > 19)
				ImageShow(playerid, slotid, iData[playerid][inItems][slotid]);
			else ImageShow(playerid, slotid, iData[playerid][inItems][slotid], false);

			if(!GetPVarInt(playerid, "InfoShow") && GetPVarInt(playerid, "InfoShowSlot") == slotid)
				InfoHide(playerid);
			return 1;
		}
		case 2:
		{
			if(oData[atData[playerid][atModel][slotid]][imType] == 100)
			{
				SetSyncTime(playerid,SYNC_TYPE_ARMOUR);
				atData[playerid][atModel][PlayerInfo[playerid][pArmour]] = 0;
				atData[playerid][atState][PlayerInfo[playerid][pArmour]] = 0.0;

				RemovePlayerAttachedObject(playerid, 5); //PlayerInfo[playerid][pArmour]);

				PlayerInfo[playerid][pArmour] = -1;
				SetPlayerArmour(playerid, 0);
			}

			ImageHide(playerid, slotid+30);
			if(GetPVarInt(playerid, "RMenu_Type") == BT_OBJECTS)
				AttachShow(playerid, slotid+30, atData[playerid][atModel][slotid]);
			else AttachShow(playerid, slotid+30, atData[playerid][atModel][slotid], false);

			if(GetPVarInt(playerid, "InfoShow") == 2 && GetPVarInt(playerid, "InfoShowSlot") == slotid)
				InfoHide(playerid);	
			return 1;
		}
		
		default: return 1;
	}

	return 1;		
}

UseItem(playerid, slotid)
{
	if(slotid == -1) return 1;

	new string[128];
	switch(oData[iData[playerid][inItems][slotid]][imType])
	{
		case 14:
		{
			if(PlayerInfo[playerid][pJob] != GUNNER) return ErrorMes(playerid, "Сборка оружия доступна только оружейнику.");
			if(GetPVarInt(playerid,"EventStart") > GetTime) return ErrorMes(playerid,"Нельзя использовать материалы на ивенте.");
			SetPVarInt(playerid, "MakeGunSlot", slotid);
			return ShowDialog(playerid, D_MAKEGUN);
		}
		case 15..20: 
		{    
			if(GetPVarInt(playerid,"EventStart") > GetTime) return ErrorMes(playerid,"Нельзя использовать наркотики на ивенте.");
		    if(GetPVarInt(playerid,"UseDrugs"))return ErrorMes(playerid, "Ты не можешь использовать больше наркотиков.");
			GameTextForPlayer(playerid, "~w~ЏEЂ•~n~~p~ЊOмEC‡O", 4000, 1);
			SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid)+30000);
			SetPVarInt(playerid,"UseDrugs",1);
			SetTimerEx("UnDrink",30000,false,"i",playerid);

			FP_SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth] + 30.0);

			if(!GetPVarInt(playerid,"Mask"))format(string,sizeof(string),"* %s скрутил косячок с травой и начал курить.",PlayerInfo[playerid][pName]);
			else format(string,sizeof(string),"* Неизвестный скрутил косячок с травой и начал курить.");
			ProxDetector(35,playerid,string,COLOR_PURPLE);
		}
		case 21:
		{
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);

			if(GetPVarInt(playerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный открывает бутылку пива u начинает пuть.");
			else format(string, sizeof(string), "* %s открывает бутылку пива u начинает пuть. ", PlayerInfo[playerid][pName]);
			ProxDetector(20.0, playerid, string,COLOR_PURPLE);
		}
		case 22:
		{
			if(GetPVarInt(playerid,"EventStart") > GetTime) return ErrorMes(playerid,"Нельзя курить на ивенте.");

			SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);

			if(GetPVarInt(playerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный зажигает сигарету u начинает курuть.");
			else format(string, sizeof(string), "* %s зажигает сигарету u начинает курuть.", PlayerInfo[playerid][pName]);
			ProxDetector(20.0, playerid, string,COLOR_PURPLE);
		}
		default: return 1;
	}

	iData[playerid][inValue][slotid] --;
	if(iData[playerid][inValue][slotid] <= 0) DropItem(playerid, slotid);
	else 
	{
		if(GetPVarInt(playerid, "TypeTextDraw") == 4) InfoShow(playerid, 0, slotid);

		format(string, sizeof string, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
			slotid,iData[playerid][inItems][slotid],iData[playerid][inValue][slotid],iData[playerid][inState][slotid], PlayerInfo[playerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	}

	return 1;
}


ObjectToObject(playerid, slotid, oldslot, value = 0)
{
	if(slotid > 19)
	{
		switch(oData[iData[playerid][inItems][oldslot]][imType])
		{
			case 0..12:
			{
				if(oldslot > 19)
				{
					if(PlayerInfo[playerid][pGun][oData[iData[playerid][inItems][oldslot]][imType]] == oldslot)
						PlayerInfo[playerid][pGun][oData[iData[playerid][inItems][oldslot]][imType]] = slotid;
				}
				else
				{
					if(PlayerInfo[playerid][pGun][oData[iData[playerid][inItems][oldslot]][imType]] != -1)
					{
						if(iData[playerid][inItems][slotid] != iData[playerid][inItems][oldslot]
							|| iData[playerid][inState][slotid] != iData[playerid][inState][oldslot])
						{
							return ErrorMes(playerid, "Оружие данного типа уже есть у вас в руках.");
						}	
					}
					if(value) FP_GivePlayerWeapon(playerid, iData[playerid][inItems][oldslot], value, slotid);
					else FP_GivePlayerWeapon(playerid, iData[playerid][inItems][oldslot], iData[playerid][inValue][oldslot], slotid);
				}	
			}
			case 14: 
			{
				if(PlayerInfo[playerid][pMats] != -1 && oldslot < 20)
				{
					return ErrorMes(playerid, "У тебя уже есть материалы в руках.");
				}
				PlayerInfo[playerid][pMats] = slotid;
			}	
			case 15..20: 
			{
				if(PlayerInfo[playerid][pDrugs] != -1 && oldslot < 20)
				{
					return ErrorMes(playerid, "У тебя уже есть наркотики в руках.");
				}
				PlayerInfo[playerid][pDrugs] = slotid;
			}
			case 21: 
			{
				if(PlayerInfo[playerid][pPivo] != -1 && oldslot < 20)
				{
					return ErrorMes(playerid, "У тебя уже есть пиво в руках.");
				}
				PlayerInfo[playerid][pPivo] = slotid;
			}
			case 22: 
			{
				if(PlayerInfo[playerid][pSigs] != -1 && oldslot < 20)
				{
					return ErrorMes(playerid, "У тебя уже есть сигареты в руках.");
				}
				PlayerInfo[playerid][pSigs] = slotid;
			}
			case 23: 
			{
				if(PlayerInfo[playerid][pCP] != -1  && oldslot < 20)
				{
					return ErrorMes(playerid, "У тебя уже есть взломщик паролей в руках.");
				}
				PlayerInfo[playerid][pCP] = slotid;
			}
			case 24: 
			{
				if(PlayerInfo[playerid][pMobile] && oldslot < 20)
				{
					return ErrorMes(playerid, "У тебя уже есть мобильный телефон в руках.");
				}
				PlayerInfo[playerid][pMobile] = iData[playerid][inValue][oldslot];
			}	
			case 25: 
			{
				if(PlayerInfo[playerid][pRope] != -1 && oldslot < 20)
				{
					return ErrorMes(playerid, "У тебя уже есть веревка в руках.");
				}
				PlayerInfo[playerid][pRope] = slotid;
			}
			case 26: 
			{
				if(PlayerInfo[playerid][pSD] != -1 && oldslot < 20)
				{
					return ErrorMes(playerid, "У тебя уже есть отмычки в руках.");
				}
				PlayerInfo[playerid][pSD] = slotid;
			}
			default: {}
		}
	}

	if(!value)
	{
		iData[playerid][inItems][slotid] = iData[playerid][inItems][oldslot];
		iData[playerid][inValue][slotid] += iData[playerid][inValue][oldslot];
		iData[playerid][inState][slotid] = iData[playerid][inState][oldslot];

		iData[playerid][inItems][oldslot] = 0;
		iData[playerid][inValue][oldslot] = 0;
		iData[playerid][inState][oldslot] = 0.0;	

		if(slotid < 20)
		{
			switch(oData[iData[playerid][inItems][slotid]][imType])
			{
				case 0..12: 
				{
					if(oldslot > 19)
						RemovePlayerWeapon(playerid, iData[playerid][inItems][slotid]);
				}
				case 14: PlayerInfo[playerid][pMats] = -1;	
				case 15..20: PlayerInfo[playerid][pDrugs] = -1;
				case 21: PlayerInfo[playerid][pPivo] = -1;
				case 22: PlayerInfo[playerid][pSigs] = -1;
				case 23: PlayerInfo[playerid][pCP] = -1;
				case 24: PlayerInfo[playerid][pMobile] = 0;
				case 25: PlayerInfo[playerid][pRope] = -1;
				case 26: PlayerInfo[playerid][pSD] = -1;
				default: {}
			}
		}
	}
	else
	{
		iData[playerid][inItems][slotid] = iData[playerid][inItems][oldslot];
		iData[playerid][inValue][slotid] += value;
		iData[playerid][inState][slotid] = iData[playerid][inState][oldslot];

		iData[playerid][inValue][oldslot] -= value;

		if(iData[playerid][inValue][oldslot] <= 0)
		{
			iData[playerid][inItems][oldslot] = 0;
			iData[playerid][inValue][oldslot] = 0;
			iData[playerid][inState][oldslot] = 0.0;

			if(slotid < 20)
			{
				switch(oData[iData[playerid][inItems][slotid]][imType])
				{
					case 0..12: 
					{
						if(oldslot > 19)
							RemovePlayerWeapon(playerid, iData[playerid][inItems][slotid]);
					}
					case 14: PlayerInfo[playerid][pMats] = -1;	
					case 15..20: PlayerInfo[playerid][pDrugs] = -1;
					case 21: PlayerInfo[playerid][pPivo] = -1;
					case 22: PlayerInfo[playerid][pSigs] = -1;
					case 23: PlayerInfo[playerid][pCP] = -1;
					case 24: PlayerInfo[playerid][pMobile] = 0;
					case 25: PlayerInfo[playerid][pRope] = -1;
					case 26: PlayerInfo[playerid][pSD] = -1;
					default: {}
				}
			}
		}
		else if(slotid < 20 && oldslot > 19 && oData[iData[playerid][inItems][oldslot]][imType] <= 12)
		{
			SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
			ResetPlayerWeapons(playerid);
			for(new i = 0; i < 13; i ++)
			{
				if(PlayerInfo[playerid][pGun][i] == -1) continue;
				GivePlayerWeapon(playerid, iData[playerid][inItems][PlayerInfo[playerid][pGun][i]], iData[playerid][inValue][PlayerInfo[playerid][pGun][i]]);
			}
		}	
	}
	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%1.f', `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
		
		oldslot,
		iData[playerid][inItems][oldslot],
		iData[playerid][inValue][oldslot],
		iData[playerid][inState][oldslot],
		slotid,
		iData[playerid][inItems][slotid],
		iData[playerid][inValue][slotid],
		iData[playerid][inState][slotid], 
		PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	ImageHide(playerid, slotid);
	ImageHide(playerid, oldslot);

	ImageShow(playerid, slotid, iData[playerid][inItems][slotid]);
	ImageShow(playerid, oldslot, iData[playerid][inItems][oldslot]);

	InfoHide(playerid);
	return 1;
}

AttachToObject(playerid, slotid, oldslot)
{
	iData[playerid][inItems][slotid] = atData[playerid][atModel][oldslot];
	iData[playerid][inState][slotid] = atData[playerid][atState][oldslot];
	iData[playerid][inValue][slotid] = 1;

	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
		slotid,iData[playerid][inItems][slotid],iData[playerid][inValue][slotid],iData[playerid][inState][slotid], PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	if(oData[iData[playerid][inItems][slotid]][imType] == 100)
		DropItem(playerid, PlayerInfo[playerid][pArmour], 2);

	atData[playerid][atModel][oldslot] = 0;
	atData[playerid][atState][oldslot] = 0.0;	

	oldslot += 30;

	ImageHide(playerid, slotid);
	ImageHide(playerid, oldslot);

	ImageShow(playerid, slotid, iData[playerid][inItems][slotid]);
	AttachShow(playerid, oldslot, atData[playerid][atModel][oldslot-30]);

	InfoHide(playerid);
}

AttachToTrunk(playerid, slotid, oldslot)
{
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid] = atData[playerid][atModel][oldslot];
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][slotid] = atData[playerid][atState][oldslot];
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid] = 1;

	if(oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid]][imType] == 100)
		DropItem(playerid, PlayerInfo[playerid][pArmour], 2);

	atData[playerid][atModel][oldslot] = 0;
	atData[playerid][atState][oldslot] = 0.0;	

	oldslot += 30;

	ImageHide(playerid, slotid+47);
	ImageHide(playerid, oldslot);

	OtherShow(playerid, slotid+47, VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid]);
	AttachShow(playerid, oldslot, atData[playerid][atModel][oldslot-30]);

	InfoHide(playerid);
}

AttachToHouse(playerid, slotid, oldslot)
{
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid] = atData[playerid][atModel][oldslot];
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid] = atData[playerid][atState][oldslot];
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid] = 1;

	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_houses` SET `%d` = '%d|%d|%.1f' WHERE `ID` = %d",
		slotid,
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid], 
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hID]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	if(oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid]][imType] == 100)
		DropItem(playerid, PlayerInfo[playerid][pArmour], 2);

	atData[playerid][atModel][oldslot] = 0;
	atData[playerid][atState][oldslot] = 0.0;	

	oldslot += 30;

	ImageHide(playerid, slotid+47);
	ImageHide(playerid, oldslot);

	OtherShow(playerid, slotid+47, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid]);
	AttachShow(playerid, oldslot, atData[playerid][atModel][oldslot-30]);

	InfoHide(playerid);
}

ObjectToAttach(playerid, slotid, oldslot)
{
	atData[playerid][atModel][slotid] = iData[playerid][inItems][oldslot];
	atData[playerid][atState][slotid] = iData[playerid][inState][oldslot];

	iData[playerid][inItems][oldslot] = 0;
	iData[playerid][inValue][oldslot] = 0;
	iData[playerid][inState][oldslot] = 0.0;
	

	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '0|0|0.0' WHERE `name` = '%s'",
		oldslot, PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	AttachObject(playerid, slotid, oData[atData[playerid][atModel][slotid]][imType]);
	if(oData[atData[playerid][atModel][slotid]][imType] == 100)
		FP_SetPlayerArmour(playerid, atData[playerid][atState][slotid], slotid);
	else EditAttachedObject(playerid, atData[playerid][at_index][slotid]);

	slotid += 30;

	ImageHide(playerid, slotid);
	ImageHide(playerid, oldslot);

	AttachShow(playerid, slotid, atData[playerid][atModel][slotid-30]);
	ImageShow(playerid, oldslot, iData[playerid][inItems][oldslot]);

	InfoHide(playerid);
}

TrunkToAttach(playerid, slotid, oldslot)
{
	atData[playerid][atModel][slotid] = VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot];
	atData[playerid][atState][slotid] = VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot];

	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot] = 0;
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot] = 0;
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot] = 0.0;

	/*new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '0|0|0.0' WHERE `name` = '%s'",
		oldslot, PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);*/

	AttachObject(playerid, slotid, oData[atData[playerid][atModel][slotid]][imType]);
	if(oData[atData[playerid][atModel][slotid]][imType] == 100)
		FP_SetPlayerArmour(playerid, atData[playerid][atState][slotid], slotid);
	else EditAttachedObject(playerid, atData[playerid][at_index][slotid]);

	slotid += 30;

	ImageHide(playerid, slotid);
	ImageHide(playerid, oldslot+47);

	AttachShow(playerid, slotid, atData[playerid][atModel][slotid-30]);
	OtherShow(playerid, oldslot+47, VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]);

	InfoHide(playerid);
}

HouseToAttach(playerid, slotid, oldslot)
{
	atData[playerid][atModel][slotid] = HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot];
	atData[playerid][atState][slotid] = HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot];

	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot] = 0;
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot] = 0;
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot] = 0.0;

	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_houses` SET `%d` = '0|0|0.0' WHERE `ID` = %d",
		oldslot, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hID]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	AttachObject(playerid, slotid, oData[atData[playerid][atModel][slotid]][imType]);
	if(oData[atData[playerid][atModel][slotid]][imType] == 100)
		FP_SetPlayerArmour(playerid, atData[playerid][atState][slotid], slotid);
	else EditAttachedObject(playerid, atData[playerid][at_index][slotid]);

	slotid += 30;

	ImageHide(playerid, slotid);
	ImageHide(playerid, oldslot+47);

	AttachShow(playerid, slotid, atData[playerid][atModel][slotid-30]);
	OtherShow(playerid, oldslot+47, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]);

	InfoHide(playerid);
}

AttachToAttach(playerid, slotid, oldslot)
{
	atData[playerid][atModel][slotid] = atData[playerid][atModel][oldslot];
	atData[playerid][atState][slotid] = atData[playerid][atState][oldslot];

	if(PlayerInfo[playerid][pArmour] == oldslot)
	{
		SetSyncTime(playerid, SYNC_TYPE_ARMOUR);
		PlayerInfo[playerid][pArmour] = slotid;
	}

	atData[playerid][atModel][oldslot] = 0;
	atData[playerid][atState][oldslot] = 0.0;

	slotid += 30;
	oldslot += 30;

	ImageHide(playerid, slotid);
	ImageHide(playerid, oldslot);

	AttachShow(playerid, slotid, atData[playerid][atModel][slotid-30]);
	AttachShow(playerid, oldslot, atData[playerid][atModel][oldslot-30]);

	InfoHide(playerid);
}

TrunkToObject(playerid, slotid, oldslot, value = 0)
{
	if(slotid > 19)
	{
		switch(oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]][imType])
		{
			case 0..12:
			{
				if(PlayerInfo[playerid][pGun][oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]][imType]] != -1)
				{
					if(iData[playerid][inItems][slotid] != VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]
						|| iData[playerid][inState][slotid] != VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot])
					{
						return ErrorMes(playerid, "Оружие данного типа уже есть у вас в руках.");
					}
				}
				if(value) FP_GivePlayerWeapon(playerid, VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot], value,slotid);
				else FP_GivePlayerWeapon(playerid, 
					VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot], 
					VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot],
					slotid);
			}
			case 14: 
			{
				if(PlayerInfo[playerid][pMats] != -1)
				{
					return ErrorMes(playerid, "У тебя уже есть материалы в руках.");
				}
				PlayerInfo[playerid][pMats] = slotid;
			}	
			case 15..20: 
			{
				if(PlayerInfo[playerid][pDrugs] != -1)
				{
					return ErrorMes(playerid, "У тебя уже есть наркотики в руках.");
				}
				PlayerInfo[playerid][pDrugs] = slotid;
			}
			case 21: 
			{
				if(PlayerInfo[playerid][pPivo] != -1)
				{
					return ErrorMes(playerid, "У тебя уже есть пиво в руках.");
				}
				PlayerInfo[playerid][pPivo] = slotid;
			}
			case 22: 
			{
				if(PlayerInfo[playerid][pSigs] != -1)
				{
					return ErrorMes(playerid, "У тебя уже есть сигареты в руках.");
				}
				PlayerInfo[playerid][pSigs] = slotid;
			}
			case 23: 
			{
				if(PlayerInfo[playerid][pCP])
				{
					return ErrorMes(playerid, "У тебя уже есть взломщик паролей в руках.");
				}
				PlayerInfo[playerid][pCP] = slotid;
			}
			case 24: 
			{
				if(PlayerInfo[playerid][pMobile])
				{
					return ErrorMes(playerid, "У тебя уже есть мобильный телефон в руках.");
				}
				PlayerInfo[playerid][pMobile] = VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot];
			}	
			case 25: 
			{
				if(PlayerInfo[playerid][pRope])
				{
					return ErrorMes(playerid, "У тебя уже есть веревка в руках.");
				}
				PlayerInfo[playerid][pRope] = slotid;
			}
			case 26: 
			{
				if(PlayerInfo[playerid][pSD])
				{
					return ErrorMes(playerid, "У тебя уже есть отмычки в руках.");
				}
				PlayerInfo[playerid][pSD] = slotid;
			}
			default: {}
		}
	}

	if(!value)
	{
		iData[playerid][inItems][slotid] = VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot];
		iData[playerid][inValue][slotid] += VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot];
		iData[playerid][inState][slotid] = VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot];

		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot] = 0;
		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot] = 0;
		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot] = 0.0;
	}
	else
	{
		iData[playerid][inItems][slotid] = VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot];
		iData[playerid][inValue][slotid] += value;
		iData[playerid][inState][slotid] = VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot];

		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot] -= value;
		if(VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot] <= 0)
		{
			VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot] = 0;
			VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot] = 0;
			VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot] = 0.0;
		}
	}	
	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
		slotid,iData[playerid][inItems][slotid],iData[playerid][inValue][slotid],iData[playerid][inState][slotid], PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	ImageHide(playerid, slotid);
	ImageHide(playerid, oldslot+47);

	ImageShow(playerid, slotid, iData[playerid][inItems][slotid]);
	if(slotid > 19) OtherShow(playerid, oldslot+47, VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]);
	OtherShow(playerid, oldslot+47, VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot], false);

	InfoHide(playerid);
	return 1;
}

HouseToObject(playerid, slotid, oldslot, value = 0)
{
	if(slotid > 19)
	{
		switch(oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]][imType])
		{
			case 0..12:
			{
				if(PlayerInfo[playerid][pGun][oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]][imType]] != -1)
				{
					if(iData[playerid][inItems][slotid] != HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]
						|| iData[playerid][inState][slotid] != HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot])
					{
						return ErrorMes(playerid, "Оружие данного типа уже есть у вас в руках.");
					}	
				}
				if(value) FP_GivePlayerWeapon(playerid, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot], value, slotid);
				else FP_GivePlayerWeapon(playerid, 
					HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot], 
					HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot], 
					slotid);
			}
			case 14: 
			{
				if(PlayerInfo[playerid][pMats] != -1)
				{
					return ErrorMes(playerid, "У тебя уже есть материалы в руках.");
				}
				PlayerInfo[playerid][pMats] = slotid;
			}	
			case 15..20: 
			{
				if(PlayerInfo[playerid][pDrugs] != -1)
				{
					return ErrorMes(playerid, "У тебя уже есть наркотики в руках.");
				}
				PlayerInfo[playerid][pDrugs] = slotid;
			}
			case 21: 
			{
				if(PlayerInfo[playerid][pPivo] != -1)
				{
					return ErrorMes(playerid, "У тебя уже есть пиво в руках.");
				}
				PlayerInfo[playerid][pPivo] = slotid;
			}
			case 22: 
			{
				if(PlayerInfo[playerid][pSigs] != -1)
				{
					return ErrorMes(playerid, "У тебя уже есть сигареты в руках.");
				}
				PlayerInfo[playerid][pSigs] = slotid;
			}
			case 23: 
			{
				if(PlayerInfo[playerid][pCP])
				{
					return ErrorMes(playerid, "У тебя уже есть взломщик паролей в руках.");
				}
				PlayerInfo[playerid][pCP] = slotid;
			}
			case 24: 
			{
				if(PlayerInfo[playerid][pMobile])
				{
					return ErrorMes(playerid, "У тебя уже есть мобильный телефон в руках.");
				}
				PlayerInfo[playerid][pMobile] = HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot];
			}	
			case 25: 
			{
				if(PlayerInfo[playerid][pRope])
				{
					return ErrorMes(playerid, "У тебя уже есть веревка в руках.");
				}
				PlayerInfo[playerid][pRope] = slotid;
			}
			case 26: 
			{
				if(PlayerInfo[playerid][pSD])
				{
					return ErrorMes(playerid, "У тебя уже есть отмычки в руках.");
				}
				PlayerInfo[playerid][pSD] = slotid;
			}
			default: {}
		}
	}

	if(!value)
	{
		iData[playerid][inItems][slotid] = HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot];
		iData[playerid][inValue][slotid] += HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot];
		iData[playerid][inState][slotid] = HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot];

		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot] = 0;
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot] = 0;
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot] = 0.0;
	}
	else
	{
		iData[playerid][inItems][slotid] = HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot];
		iData[playerid][inValue][slotid] += value;
		iData[playerid][inState][slotid] = HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot];

		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot] -= value;
		if(HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot] <= 0)
		{
			HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot] = 0;
			HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot] = 0;
			HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot] = 0.0;
		}
	}
	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
		slotid,iData[playerid][inItems][slotid],iData[playerid][inValue][slotid],iData[playerid][inState][slotid], PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	format(fetch, sizeof fetch, "UPDATE `samp_houses` SET `%d` = '%d|%d|%.1f' WHERE `ID` = %d",
		
		oldslot, 
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hID]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	ImageHide(playerid, slotid);
	ImageHide(playerid, oldslot+47);

	ImageShow(playerid, slotid, iData[playerid][inItems][slotid]);
	if(slotid > 19) OtherShow(playerid, oldslot+47, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]);
	else OtherShow(playerid, oldslot+47, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot], false);


	InfoHide(playerid);
	return 1;
}

ObjectToHouse(playerid, slotid, oldslot, value = 0)
{
	if(oldslot > 19)
	{
		switch(oData[iData[playerid][inItems][oldslot]][imType])
		{
			case 0..12: 
			{
				if(!value) RemovePlayerWeapon(playerid, iData[playerid][inItems][oldslot]);
			}	
			case 13: return ErrorMes(playerid, "Ты не можешь положить банковскую карту в тайник.");
			case 14: PlayerInfo[playerid][pMats] = -1;	
			case 15..20: PlayerInfo[playerid][pDrugs] = -1;
			case 21: PlayerInfo[playerid][pPivo] = -1;
			case 22: PlayerInfo[playerid][pSigs] = -1;
			case 23: PlayerInfo[playerid][pCP] = -1;
			case 24: PlayerInfo[playerid][pMobile] = 0;
			case 25: PlayerInfo[playerid][pRope] = -1;
			case 26: PlayerInfo[playerid][pSD] = -1;
			case 27: return ErrorMes(playerid, "Ты не можешь положить шокер в тайник.");
			default: {}
		}
	}

	if(!value)
	{
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid] = iData[playerid][inItems][oldslot];
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid] += iData[playerid][inValue][oldslot];
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid] = iData[playerid][inState][oldslot];

		iData[playerid][inItems][oldslot] = 0;
		iData[playerid][inValue][oldslot] = 0;
		iData[playerid][inState][oldslot] = 0.0;
	}
	else
	{
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid] = iData[playerid][inItems][oldslot];
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid] += value;
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid] = iData[playerid][inState][oldslot];

		iData[playerid][inValue][oldslot] -= value;
		if(iData[playerid][inValue][oldslot] <= 0)
		{
			iData[playerid][inItems][oldslot] = 0;
			iData[playerid][inValue][oldslot] = 0;
			iData[playerid][inState][oldslot] = 0.0;

			if(oldslot > 19 && oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid]][imType] <= 12)
				RemovePlayerWeapon(playerid, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid]);
		}	
	}

	if(iData[playerid][inItems][oldslot])
	{
		SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
	    ResetPlayerWeapons(playerid);
	   	for(new i = 0; i < 13; i++)
	   	{
	   		if(PlayerInfo[playerid][pGun][i] == -1) continue;
	   		GivePlayerWeapon(playerid, 
	   			iData[playerid][inItems][PlayerInfo[playerid][pGun][i]], 
	   			iData[playerid][inValue][PlayerInfo[playerid][pGun][i]]);
	   	}
	}

	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
		
		oldslot, 
		iData[playerid][inItems][oldslot],
		iData[playerid][inValue][oldslot],
		iData[playerid][inState][oldslot],
		PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	format(fetch, sizeof fetch, "UPDATE `samp_houses` SET `%d` = '%d|%d|%.1f' WHERE `ID` = %d",
		slotid, 
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hID]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	ImageHide(playerid, slotid+47);
	ImageHide(playerid, oldslot);

	OtherShow(playerid, slotid+47, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid]);
	if(oldslot > 19) ImageShow(playerid, oldslot, iData[playerid][inItems][oldslot]);
	else ImageShow(playerid, oldslot, iData[playerid][inItems][oldslot], false);

	InfoHide(playerid);
	return 1;
}

ObjectToTrunk(playerid, slotid, oldslot, value = 0)
{
	if(oldslot > 19)
	{
		switch(oData[iData[playerid][inItems][oldslot]][imType])
		{
			case 0..12: 
			{
				if(!value) RemovePlayerWeapon(playerid, iData[playerid][inItems][oldslot]);
			}	
			case 13: return ErrorMes(playerid, "Ты не можешь положить банковскую карту в багажник.");
			case 14: PlayerInfo[playerid][pMats] = -1;	
			case 15..20: PlayerInfo[playerid][pDrugs] = -1;
			case 21: PlayerInfo[playerid][pPivo] = -1;
			case 22: PlayerInfo[playerid][pSigs] = -1;
			case 23: PlayerInfo[playerid][pCP] = -1;
			case 24: PlayerInfo[playerid][pMobile] = 0;
			case 25: PlayerInfo[playerid][pRope] = -1;
			case 26: PlayerInfo[playerid][pSD] = -1;
			case 27: return ErrorMes(playerid, "Ты не можешь положить шокер в багажник.");
			default: {}
		}
	}

	if(!value)
	{
		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid] = iData[playerid][inItems][oldslot];
		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid] += iData[playerid][inValue][oldslot];
		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][slotid] = iData[playerid][inState][oldslot];

		iData[playerid][inItems][oldslot] = 0;
		iData[playerid][inValue][oldslot] = 0;
		iData[playerid][inState][oldslot] = 0.0;
	}
	else
	{
		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid] = iData[playerid][inItems][oldslot];
		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid] += value;
		VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][slotid] = iData[playerid][inState][oldslot];

		iData[playerid][inValue][oldslot] -= value;
		if(iData[playerid][inValue][oldslot] <= 0)
		{
			iData[playerid][inItems][oldslot] = 0;
			iData[playerid][inValue][oldslot] = 0;
			iData[playerid][inState][oldslot] = 0.0;

			if(oldslot > 19 && oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid]][imType] <= 12)
				RemovePlayerWeapon(playerid, VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid]);
		}
	}

	if(iData[playerid][inItems][oldslot])
	{
		SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
	    ResetPlayerWeapons(playerid);
	   	for(new i = 0; i < 13; i++)
	   	{
	   		if(PlayerInfo[playerid][pGun][i] == -1) continue;
	   		GivePlayerWeapon(playerid, 
	   			iData[playerid][inItems][PlayerInfo[playerid][pGun][i]], 
	   			iData[playerid][inValue][PlayerInfo[playerid][pGun][i]]);
	   	}
	}

	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
		
		oldslot, 
		iData[playerid][inItems][oldslot],
		iData[playerid][inValue][oldslot],
		iData[playerid][inState][oldslot],
		PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	ImageHide(playerid, slotid+47);
	ImageHide(playerid, oldslot);

	OtherShow(playerid, slotid+47, VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid]);
	if(oldslot > 19) ImageShow(playerid, oldslot, iData[playerid][inItems][oldslot]);
	else ImageShow(playerid, oldslot, iData[playerid][inItems][oldslot], false);

	InfoHide(playerid);
	return 1;

}

TrunkToTrunk(playerid, slotid, oldslot)
{
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid] = VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot];
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid] += VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot];
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][slotid] = VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot];

	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot] = 0;
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][oldslot] = 0;
	VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot] = 0.0;

	ImageHide(playerid, slotid+47);
	ImageHide(playerid, oldslot+47);

	OtherShow(playerid, slotid+47, VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid]);
	OtherShow(playerid, oldslot+47, 0);

	InfoHide(playerid);
}

HouseToHouse(playerid, slotid, oldslot)
{
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid] = HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot];
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid] += HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot];
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid] = HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot];

	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot] = 0;
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][oldslot] = 0;
	HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot] = 0.0;

	new fetch[128];
	format(fetch, sizeof fetch, "UPDATE `samp_houses` SET `%d` = '0|0|0.0', `%d` = '%d|%d|%.1f' WHERE `ID` = %d",
		oldslot, slotid,
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid],
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid], 
		HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hID]);

	mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

	ImageHide(playerid, slotid+47);
	ImageHide(playerid, oldslot+47);

	OtherShow(playerid, slotid+47, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid]);
	OtherShow(playerid, oldslot+47, 0);

	InfoHide(playerid);
}

forward KickTimer(playerid);
public KickTimer(playerid)
{
	return Kick(playerid);
}
forward StopAnim(playerid);
public StopAnim(playerid)
{
	switch(GetPVarInt(playerid,"OnJob"))
	{
		case J_LOADER:
		{
			if(!GetPVarInt(playerid,"AttachObject"))
			{
				SetPVarInt(playerid,"CheckLoader", GetTime + 5);
				FP_SetPlayerRaceCheckpoint(playerid,1,2175.8721,-2248.8452,13.3043,0.0,0.0,0.0,1.5);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
				SetPlayerAttachedObject(playerid, 0 , 2912, 1, 0.02,0.4,0.0, 0.0,90.0,0.0,0.7,0.7,0.5);
				SetPVarInt(playerid,"AttachObject", 1);
			}	
			else
			{
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,1,1,0,0,1);
				DeletePVar(playerid,"AttachObject");
			}
		}
		case J_FOREST:
		{
			if(!GetPVarInt(playerid,"AttachObject"))
			{
				SetPVarInt(playerid,"CheckLoader", GetTime + 5);
				TogglePlayerControllable(playerid,true);
				FP_SetPlayerRaceCheckpoint(playerid,1,-2000.9612,-2378.0244,30.6250,0.0,0.0,0.0,1.5);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
				SetPlayerAttachedObject(playerid, 0, 1463, 1, 0.15,0.4,0.0, 0.0,90.0,0.0, 0.3,0.3,0.4); //kgV1gNYry9PKsvBR6jAz4Wzxk
				SetPVarInt(playerid,"AttachObject", 1);
			}	
			else
			{
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,1,1,0,0,1);
				DeletePVar(playerid,"AttachObject");
			}
		}
		case J_STEEL:
		{
			if(!GetPVarInt(playerid,"AttachObject"))
			{
				SetPVarInt(playerid,"CheckLoader", GetTime + 5);
				TogglePlayerControllable(playerid,true);
				FP_SetPlayerRaceCheckpoint(playerid,1,-1865.8008,-1618.8795,21.8601,0.0,0.0,0.0,1.5);
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,1,0,0,1,1,1);
				SetPlayerAttachedObject(playerid, 0, 2936, 1, 0.1,0.47,-0.03, -4.6,95.0,156.0, 0.38, 0.37, 0.37);
				SetPVarInt(playerid,"AttachObject", 1);
			}	
			else
			{
				ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,1,1,0,0,1);
				DeletePVar(playerid,"AttachObject");
			}
		}
	}
	return 1;
}

Public:GiveTuneMoney(playerid)
{
	if(PremiumInfo[playerid][Level] >= 4) return SendClientMessage(playerid,COLOR_YELLOW,"Для VIP с 4 уровня тюнинг бесплатный.");
	new message[40];
	format(message,sizeof(message), "Ты заплатил $%d за улучшение машины.",GetPVarInt(playerid,"TuneMoney"));
    SendClientMessage(playerid, COLOR_YELLOW, message);
    FP_GivePlayerMoney(playerid, -GetPVarInt(playerid,"TuneMoney"));
    MoneyToBiznes(playerid,GetPVarInt(playerid,"TuneMoney"));
    DeletePVar(playerid,"TuneMoney");
	return 1;
}

Public:ClosePostS0(playerid) MoveDynamicObject(PostS[0],1760.20, 532.65, 26.6000-0.001,0.001,0,270,340);
Public:ClosePostS1(playerid) MoveDynamicObject(PostS[1],1751.22, 535.72, 26.6000-0.001,0.001,0,270,340);
Public:ClosePostS2(playerid) MoveDynamicObject(PostS[2],1736.67, 520.61, 27.5300-0.001,0.001,0,270,340);
Public:ClosePostS3(playerid) MoveDynamicObject(PostS[3],1727.87, 523.76, 27.5300-0.001,0.001,0,270,340);
Public:ClosePostS4(playerid) MoveDynamicObject(PostS[4],52.3515625,-1534.7744140625,4.7959-0.001,0.001,0,270,82.75);
Public:ClosePostS5(playerid) MoveDynamicObject(PostS[5],53.375,-1528.6474609375,4.7856-0.001,0.001,0,270,261.75);
Public:ClosePostS6(playerid) MoveDynamicObject(PostS[6],614.07104492188,-1199.6805419922,17.7843-0.001,0.001,0,270,19);
Public:ClosePostS7(playerid) MoveDynamicObject(PostS[7],628.03521728516,-1194.0726318359,17.8919-0.001,0.001,0,270,204);
Public:CloseSchoolS(playerid) MoveDynamicObject(SchoolS,-2043.7904052734,-80.300003051758,34.921-0.001,0.001,0,270,0);
Public:CloseLSPDS(playerid) MoveDynamicObject(PoliceS[0],1544.6999511719,-1630.6999511719,13.179-0.001,0.001,0,90,90);
Public:CloseLSPDS2(playerid) MoveDynamicObject(PoliceS[1],1580,-1606.8298339844,13.1328-0.001,0.001,0,90,270);
Public:CloseLSPDG(playerid)  MoveDynamicObject(PoliceG[0],1592.6000976563,-1638.0947265625,14.929574966431,2);
Public:CloseLSPDD(playerid) MoveDynamicObject(PoliceD[0],1584.0598144531,-1637.9163818359,13.888319015503,2);
Public:CloseLSPDd(playerid)
{
    MoveDynamicObject(PoliceD[1],246.13708496094,72.5,1003.9000244141,2);
	MoveDynamicObject(PoliceD[2],246.64151000977,72.5,1003.9000244141,2);
}
Public:CloseSFPDS(playerid) 	MoveDynamicObject(PoliceS[2],-1701.431640625,687.61090087891,24.6828-0.001,0.001,0,90,270);
Public:CloseSFPDS2(playerid) 	MoveDynamicObject(PoliceS[3],-1572.1981201172,658.86138916016,6.9031-0.001,0.001,0,90,90);
Public:CloseSFPDG(playerid)  	MoveDynamicObject(PoliceG[1],-1631.7344970703,688.26672363281,8.7092628479004,2);
Public:CloseSFPDD(playerid) 	MoveDynamicObject(PoliceD[3],-1620.4948730469,688.12200927734,8.5112857818604,2);
Public:CloseLVPDS(playerid) 	MoveDynamicObject(PoliceS[4],2238.1779785156,2450.4128417969,10.6381-0.001,0.001,0,90,90);
Public:CloseLVPDG(playerid) 	MoveDynamicObject(PoliceG[2],2334.8742675781,2443.0551757813,7.1970891952515,2);
Public:CloseLVPDG2(playerid)  	MoveDynamicObject(PoliceG[3],2293.9038085938,2498.8479003906,4.4465570449829,2);
Public:CloseLVPDD(playerid) 	MoveDynamicObject(PoliceD[4],2293.8784179688,2494.3864746094,3.7715213298798,2);
Public:CloseStreetG(playerid) 	MoveDynamicObject(StreetG,-2126.3918457031,-80.953262329102,37.093704223633,2);
Public:CloseSAMDS0(playerid) 	MoveDynamicObject(MedicS[0],1637.5649414063,1836.6199951172,10.5203-0.001,0.001,0,270,90);
Public:CloseSAMDS1(playerid) 	MoveDynamicObject(MedicS[1],1577.2600097656,1836.9532470703,10.5050-0.001,0.001,0,270,90);
Public:CloseSAMDS2(playerid) 	MoveDynamicObject(MedicS[2],-2612,628,14.2045-0.001,0.001,0,270,90);
Public:CloseSAMDS3(playerid) 	MoveDynamicObject(MedicS[3],-2663.5,578.09997558594,14.2334-0.001,0.001,0,270,0);
Public:CloseSAMDS4(playerid) 	MoveDynamicObject(MedicS[4],1144.6500244141,-1291.5,13.3999-0.001,0.001,0,270,0);
Public:CloseTAXIS0(playerid) 	MoveDynamicObject(TAXIS[0],2430.6103515625,1623.0999755859,10.4285-0.001,0.001,0,270,0);
Public:CloseTAXIS1(playerid) 	MoveDynamicObject(TAXIS[1],2490.7287597656,1623.0999755859,10.4203-0.001,0.001,0,270,0);
Public:CloseTAXIS2(playerid) 	MoveDynamicObject(TAXIS[2],2430.9084472656,1703.4080810547,10.4560-0.001,0.001,0,270,0);
Public:CloseEBS(playerid) 		MoveDynamicObject(ArmaS,-1547.9007568359,518.48699951172,6.9368-0.001,0.001,0,270,85);
Public:CloseSFNS(playerid) 		MoveDynamicObject(NewsS,-2016.5184326172,471.12432861328,34.9968-0.001,0.001,0,90,270);
Public:CloseCOPSFG2(playerid) 	MoveDynamicObject(PoliceG[4],-2198.5,310.173828125,38.116401672363,2);
Public:CloseArma0(playerid) 	MoveDynamicObject(ArmaG[0],2719.9228515625,-2508.17578125,12.64688873291,2);
Public:CloseArma1(playerid) 	MoveDynamicObject(ArmaG[1],2719.9111328125,-2409.51171875,12.610935211182,2);
Public:CloseArma2(playerid) 	MoveDynamicObject(ArmaG[2],2774.2646484375,-2417.7998046875,14.817487716675,2);
Public:CloseArma3(playerid) 	MoveDynamicObject(ArmaG[3],2774.3486328125,-2455.802734375,14.835450172424,2);
Public:CloseArma4(playerid) 	MoveDynamicObject(ArmaG[4],2774.244140625,-2493.9267578125,14.865319252014,2);
Public:CloseFbiS(playerid) 		MoveDynamicObject(FbiS,-1991.6520996094,545.98077392578,34.7656-0.001,0.001,0,270,90);

Public:ClearGateCheck(playerid) DeletePVar(playerid,"GateCheck");

Public:MainTimer()
{
	//TIME_START_POINT();
	ForEachPlayer(i)
	{
		if(!GetPVarInt(i,"Login")) continue;

		//new Float:ZPos = PlayerInfo[i][pPos][2] - zmap_GetZCoord(PlayerInfo[i][pPos][0],PlayerInfo[i][pPos][1]);
		
		if(!PlayerInfo[i][SyncTime][SYNC_TYPE_POS] && PlayerInfo[i][pAdmin] < 3)
		{
			new surfing = (GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID || GetPlayerSurfingObjectID(i) != INVALID_OBJECT_ID);
			if((GetPlayerState(i) == PLAYER_STATE_ONFOOT && !surfing) || GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				if(!IsPlayerInRangeOfPoint(i,25.0,PlayerInfo[i][pPos][0],PlayerInfo[i][pPos][1],PlayerInfo[i][pPos][2]) && PlayerInfo[i][pSpeed] < 40)
				{
					if(!IsPlayerInRangeOfPoint(i,5.0,PlayerInfo[i][pSetPos][0],PlayerInfo[i][pSetPos][1],PlayerInfo[i][pSetPos][2]))
					{
						if(!Warnings[i][TELEPORT_HACK]) Report(i,"подозрение на Телепорт (Айр-Брик).");
						Warnings[i][TELEPORT_HACK]++;
						if(Warnings[i][TELEPORT_HACK] >= MAX_CHECKS)
						{
							FP_Kick(i,"Телепорт (Айр-Брик)");
							continue;
						}
					}
				}
				
				/*if(ZPos > 10.0 && !PlayerInfo[i][pInt] && !IsPlayerInCubeArea(i, -875.0, -157.5, -1405.5, -1105.0, 2.0, 100.0))
				{
					if(PlayerInfo[i][pSpeedZ] >= 0.01 && !PlayerInfo[i][AFK_Stat] && GetVehicleModel(PlayerInfo[i][pVehID]))
					{
						if(!PlayerInfo[i][pVehID] || VehMInfo[GetVehicleModel(PlayerInfo[i][pVehID])-400][mLicType] != 4)
						{
							Warnings[i][MAX_ZPOS]++;
							if(Warnings[i][MAX_ZPOS] == 15)
							{
								new string[64];
								format(string,sizeof(string),"подозрение на полеты (Высота над землей: %0.2f).",ZPos);
								Report(i,string);
							}
							if(Warnings[i][MAX_ZPOS] >= 35)
							{
								FP_Kick(i,"Полет");
								continue;
							}
						}	
					}
				}
				else if(Warnings[i][MAX_ZPOS]) Warnings[i][MAX_ZPOS]--;*/
			}
		}
		
		GetPlayerPos(i,PlayerInfo[i][pPos][0],PlayerInfo[i][pPos][1],PlayerInfo[i][pPos][2]);
		
		if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			new Float:Speed[3],vehicleid = GetPlayerVehicleID(i);
			GetVehiclePos(vehicleid,VehInfo[vehicleid][vPos][0],VehInfo[vehicleid][vPos][1],VehInfo[vehicleid][vPos][2]);
			
			if(EventType == 4 && PlayerInfo[i][pPos][2] < 1037.5 && GetPVarInt(i,"EventStart") > GetTime)
			{
				SetPlayerPos(i,PlayerInfo[i][pPos][0],PlayerInfo[i][pPos][1],PlayerInfo[i][pPos][2]);
				ForEachEvent(u)
				{
					new message[128];
					format(message,sizeof(message),"{A020F0}%s[%d] покинул(а) ивент | Выбит(а) с платформы.",PlayerInfo[i][pName],i);
					SendClientMessage(u,-1, message);
				}
				TextDrawHideForPlayer(i,DMText);
				if(GetPVarInt(i,"EventCar")) 
				{
					DestroyVehicle(GetPVarInt(i,"EventCar"));
					DeletePVar(i,"EventCar");
				}
				cmd_kill(i,"");
				UpdateDMText();
				continue;
			}	
			
			if(GetPVarInt(i,"LastCarForCheck") != vehicleid)
			{
				if(GetPVarInt(i,"LastCarForCheck") != PlayerInfo[i][pVehID])
				{
					SetVehicleToRespawn(GetPVarInt(i,"LastCarForCheck"));
					if((GetTickCount()-GetPVarInt(i,"LastCarTimeSpam")) < 110) FP_Kick(i,"CarSpam");
					else FP_Kick(i,"CarJack");
					SetVehicleToRespawn(vehicleid);
					continue;
				}
				SetPVarInt(i,"LastCarForCheck",vehicleid);
				SetPVarInt(i,"LastCarTimeSpam",GetTickCount());
				continue;
			}
			if(vehicleid != PlayerInfo[i][pVehID])
			{
				if(!Warnings[i][REMOTE_CONTROL]) Report(i,"подозрение на Remote Control(Смена транспорта).");
				Warnings[i][REMOTE_CONTROL]++;
				SetVehicleToRespawn(vehicleid);
				SetVehicleToRespawn(PlayerInfo[i][pVehID]);
				if(Warnings[i][REMOTE_CONTROL] >= MAX_CHECKS) Warnings[i][REMOTE_CONTROL] = 0;
				continue;
			}
			
			GetVehicleVelocity(PlayerInfo[i][pVehID],Speed[0],Speed[1],Speed[2]);
			PlayerInfo[i][pSpeed] = floatround(floatsqroot(Speed[0]*Speed[0]+Speed[1]*Speed[1])*160);
			PlayerInfo[i][pSpeedZ] = Speed[2];
			
			if(PlayerInfo[i][pAdmin] < 3 && !PlayerInfo[i][AFK_Stat] && GetVehicleModel(PlayerInfo[i][pVehID]) )
			{
				if(PlayerInfo[i][pSpeed] > VehMInfo[GetVehicleModel(PlayerInfo[i][pVehID])-400][mMaxSpeed] + 30 && VehMInfo[GetVehicleModel(PlayerInfo[i][pVehID])-400][mLicType] != 4)
				{
					if(!Warnings[i][MAX_SPEED])
					{
						new string[128];
						format(string,sizeof(string),"подозрение на Спид-Хак (Транспорт: %s , Скорость: %d).",VehMInfo[GetVehicleModel(PlayerInfo[i][pVehID])-400][mName],PlayerInfo[i][pSpeed]);
						Report(i,string);
					}
					Warnings[i][MAX_SPEED]++;
					if(Warnings[i][MAX_SPEED] >= MAX_CHECKS)
					{
						FP_Kick(i,"Спид-Хак");
						continue;
					}
				}
			}	
			//PlayerInfo[i][pSpeed] = floatround(floatsqroot(Speed[0]*Speed[0]+Speed[1]*Speed[1]+Speed[2]*Speed[2])*160);

			if(TextDrawInfo[i][SpeedTD])
			{
				if(GetVehicleModel(PlayerInfo[i][pVehID]))
				{
					new string[4];
					format(string, sizeof string, "%d", PlayerInfo[i][pSpeed]);
					PlayerTextDrawSetString(i, pSpeedTXD[i][0], string);
				}
			}
			
			if(!PlayerInfo[i][SyncTime][SYNC_TYPE_VEHICLE])
			{
				new Float:health;
				GetVehicleHealth(PlayerInfo[i][pVehID],health);
				
				if(health < 300)
				{
					FP_SetVehicleHealth(PlayerInfo[i][pVehID],300);
					health = 300.0;
				}	
				if(VehInfo[PlayerInfo[i][pVehID]][vEngine] && health <= 350 && GetVehicleModel(PlayerInfo[i][pVehID]))
				{
					if(GetPVarInt(i,"EventStart") > GetTime) 
					{
						SetPlayerPos(i,PlayerInfo[i][pPos][0],PlayerInfo[i][pPos][1],PlayerInfo[i][pPos][2]);
						ForEachEvent(u)
						{
							new message[128];
							format(message,sizeof(message),"{A020F0}%s[%d] покинул(а) ивент | Транспорт разбит.",PlayerInfo[i][pName],i);
							SendClientMessage(u,-1, message);
						}
						TextDrawHideForPlayer(i,DMText);
						if(GetPVarInt(i,"EventCar")) 
						{
							DestroyVehicle(GetPVarInt(i,"EventCar"));
							DeletePVar(i,"EventCar");
						}
						cmd_kill(i,"");
						UpdateDMText();
						continue;
					}
					if(VehMInfo[GetVehicleModel(PlayerInfo[i][pVehID])-400][mGasType])
					{
						EngineOff(-1,PlayerInfo[i][pVehID]);
						GameTextForPlayer(i,FixText("~r~перегрев двигателя"),5000,4);
						SendClientMessage(i, COLOR_YELLOW2, "Используй \"/call 555\" , чтобы вызвать механика.");
						SendClientMessage(i, COLOR_YELLOW2, "Используй \"/fixcar\" , чтобы самостоятельно починить двигатель.");
					}
				}
				if(health - VehInfo[PlayerInfo[i][pVehID]][vHealth] > 10)
				{
					if(health > 1000.0)
					{
						Report(i,"подозрение на TankMode.");
						SetVehicleToRespawn(PlayerInfo[i][pVehID]);
					}
					if(PlayerInfo[i][pInt]) VehInfo[PlayerInfo[i][pVehID]][vHealth] = health;
					SetVehicleHealth(PlayerInfo[i][pVehID],VehInfo[PlayerInfo[i][pVehID]][vHealth]);
					Warnings[i][CAR_HEALTH]++;
					if(Warnings[i][CAR_HEALTH] < MAX_CHECKS) Report(i,"подозрение на использование \"Car HP\".");
					else
					{
						SetVehicleToRespawn(PlayerInfo[i][pVehID]);
						FP_Kick(i,"Car HP");
						continue;
					}
				}	
				else VehInfo[PlayerInfo[i][pVehID]][vHealth] = health;

				if(TextDrawInfo[i][SpeedTD]) 
				{
					new vHealth_Proc = floatround((health - 300) / 7);
					if(vHealth_Proc < 0) vHealth_Proc = 0;

					new string[5];
					format(string, sizeof string, "%d%", vHealth_Proc);
					PlayerTextDrawSetString(i, pSpeedTXD[i][1], string);
				}
			}	
		}
		else if(GetPlayerState(i) == PLAYER_STATE_ONFOOT)
		{
			new Float:Speed[3];
			GetPlayerVelocity(i,Speed[0],Speed[1],Speed[2]);
			PlayerInfo[i][pSpeed] = floatround(floatsqroot(Speed[0]*Speed[0]+Speed[1]*Speed[1]+Speed[2]*Speed[2])*160);
			PlayerInfo[i][pSpeedZ] = Speed[2];
			
			if(PlayerInfo[i][pTazer] < 20 || GetPlayerWeapon(i)) RemovePlayerAttachedObject(i, 4);
			else SetPlayerAttachedObject(i, 4 ,18642, 6, 0.05, 0.03, 0.07, 180.0, 0.0, 0.0, 1.0, 1.0, 1.0);
			
			new Keys[3];
			GetPlayerKeys(i, Keys[0], Keys[1], Keys[2]);
			if(!Keys[1] && !Keys[2]) Moving[i] = false;
			else Moving[i] = true;
			
			switch(GetPlayerAnimationIndex(i))
			{
				/*case 958,959,961,962,1134:
				{
					if(PlayerInfo[i][pAdmin] < 3 && GetPlayerWeapon(i) != 46 && PlayerInfo[i][pSpeedZ] > 0.025 && ZPos > 2.5)
					{
						if(!Warnings[i][HANCOCK_HACK])
						{
							Report(i,"подозрение на использование скрипта \"Хэнкок\".");
						}
						Warnings[i][HANCOCK_HACK]++;
						if(Warnings[i][HANCOCK_HACK] >= MAX_CHECKS)
						{
							FP_Kick(i,"Хенкок");
							continue;
						}
					}
				}
				case 1538,1539,1543:
				{
					if(PlayerInfo[i][pAdmin] < 3 && PlayerInfo[i][pSpeedZ] > 0.025 && ZPos > 2.5)
					{
						if(!Warnings[i][HANCOCK_HACK])
						{
							Report(i,"подозрение на использование собейта \"Летун\".");
						}
						Warnings[i][HANCOCK_HACK]++;
						if(Warnings[i][HANCOCK_HACK] >= MAX_CHECKS)
						{
							FP_Kick(i,"Летун");
							continue;
						}
					}
				}*/
				case 1196,1224,1247,1257:
				{
					new surfing = (GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID || GetPlayerSurfingObjectID(i) != INVALID_OBJECT_ID);
					if(PlayerInfo[i][pAdmin] < 3 && PlayerInfo[i][pSpeed] > 50 && PlayerInfo[i][pSpeedZ] >= 0.0 && !surfing)
					{
						if(!Warnings[i][MAX_SPEED])
						{
							new string[32];
							format(string,sizeof(string),"шустро бегает (Скорость: %d).",PlayerInfo[i][pSpeed]);
							Report(i,string);
						}
						Warnings[i][MAX_SPEED]++;
						if(Warnings[i][MAX_SPEED] >= MAX_CHECKS)
						{
							FP_Kick(i,"Бегун");
							continue;
						}
					}
				}
				case 1129,1132,1133:
				{
					if(GetPVarInt(i,"AttachObject"))
					{
						if(GetPVarInt(i,"OnJob") == J_LOADER)
						{
							ErrorMes(i,"Ты уронuл(а) ящик.");
							FP_DisablePlayerRaceCheckpoint(i);
							RemovePlayerAttachedObject(i,0);
							switch(random(3))
							{
								case 0:FP_SetPlayerRaceCheckpoint(i,1,2194.0007,-2284.9656,15.9408,0.0,0.0,0.0,1.5);
								case 1:FP_SetPlayerRaceCheckpoint(i,1,2188.4128,-2297.6790,13.6695,0.0,0.0,0.0,1.5);
								case 2:FP_SetPlayerRaceCheckpoint(i,1,2183.1956,-2301.5183,13.6695,0.0,0.0,0.0,1.5);
							}
							DeletePVar(i,"AttachObject");
						}
						else if(GetPVarInt(i,"OnJob") == J_FOREST)
						{
							ErrorMes(i,"Ты уронuл(а) дрова.");
							FP_DisablePlayerRaceCheckpoint(i);
							RemovePlayerAttachedObject(i,0);
							SetPVarInt(i,"ForestPlace",random(5));
							FP_SetPlayerRaceCheckpoint(i, 1, ForestPos[GetPVarInt(i,"ForestPlace")][0], ForestPos[GetPVarInt(i,"ForestPlace")][1], ForestPos[GetPVarInt(i,"ForestPlace")][2],0.0,0.0,0.0,1.5);
							DeletePVar(i,"AttachObject");
						}
						else if(GetPVarInt(i,"OnJob") == J_STEEL)
						{
							ErrorMes(i,"Ты уронuл(а) руду.");
							FP_DisablePlayerRaceCheckpoint(i);
							RemovePlayerAttachedObject(i,0);
							SetPVarInt(i,"ForestPlace",random(5));
							FP_SetPlayerRaceCheckpoint(i, 1, SteelPos[GetPVarInt(i,"ForestPlace")][0], SteelPos[GetPVarInt(i,"ForestPlace")][1], SteelPos[GetPVarInt(i,"ForestPlace")][2],0.0,0.0,0.0,1.5);
							DeletePVar(i,"AttachObject");
						}
					}	
					else if(GetPVarInt(i,"ArmaMats"))
					{
						if(!IsPlayerInRangeOfPoint(i,2.0,311.7144,-166.0032,999.6010))
						{
							ErrorMes(i,"Ты уронuл(а) ящик.");
							ApplyAnimation(i,"ped","KO_shot_front",3.0,0,0,0,0,0,1);
							RemovePlayerAttachedObject(i,0);
							DeletePVar(i,"ArmaMats");
						}
					}
				}
				default:continue;
			}
		}

	}
	//TIME_END_POINT("ForEach200ms: ");
	if(GetTime <= gettime()) // Секундный таймер
	{
		GetTime = gettime() + 1;
		if(AddLimit) AddLimit --;
		if(RobTimer[0]) RobTimer[0] --;
		if(RobTimer[1]) RobTimer[1] --;
		if(noooc) 
		{
			noooc --;
			if(!noooc) SendClientMessageToAll(COLOR_WHITE, "Общuй чат автоматически включен.");
		}

		new stats[400], value[20], start, MiSB, AS;
		for(new i = GetMaxPlayers()-1; i != -1; i--)
		{
			if(!IsPlayerConnected(i)) continue;
			
			GetPlayerNetworkStats(i, stats, sizeof(stats));

			start = strfind(stats, "Messages in Send buffer: ", false, 30);
			strmid(value, stats, start + 25, strfind(stats, "Messages sent", false, start) - 1);
			MiSB = strval(value);

			if(MiSB > 10000)
			{
				printf("%s (ID:%d) banned for MiSB flood", PlayerInfo[i][pName], i);
				BanEx(i, "MiSB");
				continue;
			}

			start = strfind(stats, "Acks sent: ", false, 90);
			strmid(value, stats, start + 11, strfind(stats, "Acks in send buffer", false, start) - 1);

			AS = strval(value);

			if(AS - PlayerInfo[i][pMiSB] > 3000)
			{
				printf("%s (ID:%d) banned for AS Flood", PlayerInfo[i][pName], i);
				BanEx(i, "AS flood");
				continue;
			}
			PlayerInfo[i][pMiSB] = AS;

			//if(GetPVarInt(i, "Login")) ShowPlayerDialog(i, 555, DIALOG_STYLE_MSGBOX, "Инфо", stats, "OK", "");

			//format(stats, sizeof stats, "MiSB: %d | AS: %d", MiSB, AS);
			//SendClientMessage(i, -1, stats);
		}


		ForEachPlayer(i)
		{
			if(GetPVarInt(i,"Snow"))
			{
				for(new j; j < 5; j++) SetDynamicObjectPos(SnowObject[i][j], PlayerInfo[i][pPos][0] + random(15), PlayerInfo[i][pPos][1] + random(15), PlayerInfo[i][pPos][2] - 5);
			}

			if(GetPVarInt(i, "TypeTextDraw") == 4)
			{
				StatusUpdate(i);
			}

			if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
			{
				if(VehInfo[PlayerInfo[i][pVehID]][vEngine] && GetVehicleModel(PlayerInfo[i][pVehID]))
				{
					if(VehMInfo[GetVehicleModel(PlayerInfo[i][pVehID])-400][mGasType])
					{
						new Float:Distance;
						if(PlayerInfo[i][pSpeed])
						{
							new Float:SpeedEx = float(PlayerInfo[i][pSpeed]) / 3600;
							VehInfo[PlayerInfo[i][pVehID]][vDrived] += SpeedEx;
							Distance = VehMInfo[GetVehicleModel(PlayerInfo[i][pVehID])-400][mFuelSpent]*SpeedEx/100;
						}
						else Distance = VehMInfo[GetVehicleModel(PlayerInfo[i][pVehID])-400][mFuelSpent]*0.00005;
						
						if(VehInfo[PlayerInfo[i][pVehID]][vGas] > Distance)
						{
							VehInfo[PlayerInfo[i][pVehID]][vGas] -= Distance;
							if(TextDrawInfo[i][SpeedTD])
							{
								new FuelText[8];
								format(FuelText,sizeof(FuelText),"%.2f",VehInfo[PlayerInfo[i][pVehID]][vGas]);
								PlayerTextDrawSetString(i, pSpeedTXD[i][2], FuelText);
							}
						}
						else
						{
							if(VehInfo[PlayerInfo[i][pVehID]][vGas] < 0.0) VehInfo[PlayerInfo[i][pVehID]][vGas] = 0.0;
							if(TextDrawInfo[i][SpeedTD])
							{
								new FuelText[8];
								format(FuelText,sizeof(FuelText),"%.2f",VehInfo[PlayerInfo[i][pVehID]][vGas]);
								PlayerTextDrawSetString(i, pSpeedTXD[i][2], FuelText);
							}
							GameTextForPlayer(i,FixText("~r~закончилось топливо"),5000,4);
							EngineOff(-1,PlayerInfo[i][pVehID]);
						}
					}
				}
			}
		}
		gettime(Hour, Minute, Second);
		new TimeString[32];
		format(TimeString,sizeof(TimeString), "~w~%02d~y~:~w~%02d~y~:~w~%02d",Hour,Minute,Second);
		TextDrawSetString(TimeDisp,TimeString);
		if(EventOpen >= GetTime)
		{
			switch(EventType)
			{
				case 0:
				{
					new string[64];
					if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
					else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
					TextDrawSetString(DMText, string);
				}
				case 1:
				{
					new Cop,Ter,string[64];
					ForEachEvent(i)
					{
						if(!GetPVarInt(i,"CSTeam")) Cop ++;
						else Ter ++;
					}
					if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Полиция: %d~n~~r~Террористы: %d"),EventOpen - GetTime,Cop,Ter);
					else format(string, sizeof(string), FixText("~g~Полиция: %d~n~~r~Террористы: %d"),Cop,Ter);
					TextDrawSetString(DMText, string);
				}
				case 2:
				{
					new string[64];
					if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
					else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
					TextDrawSetString(DMText, string);
				}
				case 3:
				{
					new string[64];
					if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
					else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
					TextDrawSetString(DMText, string);
				}
				case 4:
				{
					new string[64];
					if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
					else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
					TextDrawSetString(DMText, string);
				}
				default:
				{
					new string[64];
					if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
					else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
					TextDrawSetString(DMText, string);
				}
			}
			if(EventOpen == GetTime)
			{
				
				EventOpen = GetTime;
				ForEachEvent(i) TogglePlayerControllable(i,true);
				SendClientMessageToAll(-1, "{A020F0}Регистрация на ивент закончена | Время подключения вышло.");
				if(EventPlayers == 1) 
				{
					EventPlayers = 0;
					SetPlayerPos(EventPlayerList[0],PlayerInfo[EventPlayerList[0]][pPos][0],PlayerInfo[EventPlayerList[0]][pPos][1],PlayerInfo[EventPlayerList[0]][pPos][2]);
					cmd_kill(EventPlayerList[0],"");
					TextDrawDestroy(DMText);
					DeletePVar(EventPlayerList[0],"EventStart");
					SendClientMessage(EventPlayerList[0],-1,"{A020F0}Ивент не состоялся, потому что ты был(а) единственным участником.");
				}
			}	
		}
		if(!Second) // Минутный таймер
		{
			new LoaderText[18];
			ScreenNumber ++;
			if(ScreenNumber > 14) ScreenNumber = 1;
			format(LoaderText,sizeof(LoaderText),"loadsc%d:loadsc%d",ScreenNumber,ScreenNumber);
			TextDrawSetString(LoadScreen, LoaderText);
			if(Minute == 10 || Minute == 30 || Minute == 50)
			{
				SendClientMessageToAll(COLOR_WHITE," ");
				SendClientMessageToAll(COLOR_WHITE,"Спасибо, что играете с нами на серверах проекта {F5DEB3}SAMP Stories{FFFFFF}.");
				SendClientMessageToAll(COLOR_WHITE,"Финансово помочь проекту Вы можете на {F5DEB3}samp-stories.ru/donate{FFFFFF}.");
				SendClientMessageToAll(COLOR_WHITE,"Помощь по серверу можно получuть на {F5DEB3}board.samp-stories.ru {FFFFFF}в разделе {F5DEB3}F.A.Q.");
				SendClientMessageToAll(COLOR_WHITE," ");
			}
			else if(Minute == 5 || Minute == 25 || Minute == 45)
			{
				SendClientMessageToAll(COLOR_WHITE," ");
				SendClientMessageToAll(COLOR_WHITE,"Основное меню: {F5DEB3}/kpk{FFFFFF}. Список администраторов онлайн: {F5DEB3}/admins{FFFFFF}.");
				SendClientMessageToAll(COLOR_WHITE,"Есть вопросы? Задай их нашим помощникам: {F5DEB3}/вопрос [ID администратора] [Ваш вопрос]{FFFFFF}.");
				SendClientMessageToAll(COLOR_WHITE,"Заметил нарушителя? Сообщи о нём администрации: {F5DEB3}/жалоба [ID нарушителя] [Ваша жалоба]{FFFFFF}.");
				SendClientMessageToAll(COLOR_WHITE," ");
			}
			if(EventOpen <= GetTime)
			{
				if(Minute == 5 || Minute == 20 || Minute == 35 || Minute == 50)
				{
					ForEachPlayer(i) DeletePVar(i,"EventStart");
					EventType ++;
					if(EventType > 5) EventType = 0;
					
					EventFinish = 0;
					EventPlayers = 0;
					EventOpen = GetTime+30;
					switch(EventType)
					{
						case 0:
						{
							SendClientMessageToAll(-1,"{A020F0}Открыта регистрация на DeathMatch | Карта: BattleField | Макс.Участников: 20 | Присоединиться: \"/join\".");
							MaxEventPlayers = 20;
						}
						case 1:
						{
							SendClientMessageToAll(-1,"{A020F0}Открыта регистрация на Counter Strike | Карта: Atrium | Макс.Участников: 20 | Присоединиться: \"/join\".");
							MaxEventPlayers = 20;
						}
						case 2:
						{
							SendClientMessageToAll(-1,"{A020F0}Открыта регистрация на 8-Track Race | Карта: 8-Track Stadium | Макс.Участников: 12 | Присоединиться: \"/join\".");
							MaxEventPlayers = 12;
						}
						case 3:
						{
							SendClientMessageToAll(-1,"{A020F0}Открыта регистрация на DirtBike Race | Карта: DirtBike Stadium | Макс.Участников: 15 | Присоединиться: \"/join\".");
							MaxEventPlayers = 15;
						}
						case 4:
						{
							SendClientMessageToAll(-1,"{A020F0}Открыта регистрация на Monster Derby | Карта: Vice Stadium | Макс.Участников: 16 | Присоединиться: \"/join\".");
							MaxEventPlayers = 16;
						}
						default:
						{
							SendClientMessageToAll(-1,"{A020F0}Открыта регистрация на Bloods Derby | Карта: Blood Stadium | Макс.Участников: 20 | Присоединиться: \"/join\".");
							MaxEventPlayers = 20;
						}
					}
					
					DMText = TextDrawCreate(300.0, 390.0, FixText("~g~Участники :~r~ 0"));
					TextDrawAlignment(DMText, 2);
					TextDrawBackgroundColor(DMText, 255);
					TextDrawFont(DMText, 1);
					TextDrawLetterSize(DMText, 0.500000, 2.000000);
					TextDrawColor(DMText, -1);
					TextDrawSetOutline(DMText, 0);
					TextDrawSetProportional(DMText, 1);
					TextDrawSetShadow(DMText, 1);
					
					SetTimer("CloseZone",30000,false);
				}
			}
			
			ForEachPlayer(i)
			{
				if(!GetPVarInt(i,"Login")) continue;
				
				if(Minute == 0 || Minute == 20 || Minute == 40)
				{
					if(!PlayerInfo[i][pWanted])continue;
					PlayerInfo[i][pWanted] --;
					UpdateWanted(i,PlayerInfo[i][pWanted]);
					
					new string[128];
					format(string,sizeof(string),"Уровень розыска понижен. Текущий уровень: %d",PlayerInfo[i][pWanted]);
					SendClientMessage(i,COLOR_YELLOW,string);
					
					format(string,sizeof(string),"UPDATE `samp_users` SET `Wanted`='%d' WHERE `Name`='%s'",
						PlayerInfo[i][pWanted],PlayerInfo[i][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
				}
				
				if(PlayerInfo[i][pHealth]) FP_SetPlayerHealth(i,PlayerInfo[i][pHealth] - 2);
				if(GetPVarInt(i,"MaloHP")) SendClientMessage(i,COLOR_WHITE,"Ты сильно пострадал. Используй \"/kpk -> Службы\" , чтобы вызвать скорую помощь.");
			}
			if(!Minute) // Часовой таймер
			{
				SetWorldTime(Hour);

				for(new t; t < 5; t++)
				{
					new tstring[200], index = t*10;
					format(tstring, sizeof tstring, "UPDATE `samp_votes` SET `votes` = '%d|%d|%d|%d|%d|%d|%d|%d|%d|%d' WHERE `id` = %d", 
						VVotes[index],VVotes[index+1],VVotes[index+2],VVotes[index+3],VVotes[index+4],VVotes[index+5],VVotes[index+6],VVotes[index+7],VVotes[index+8],VVotes[index+9],
						VoteInfo[t][voID]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, tstring);
				}

				if(!Hour)
				{
					getdate(Year, Month, Day);
					format(TimeString,sizeof(TimeString),"~w~%02d~y~.~w~%02d~y~.~w~%d",Day,Month,Year);
					TextDrawSetString(DateDisp,TimeString);
		
					new query[128];
					ForEachPlayer(i) if(PlayerInfo[i][pAdmin])
					{
						format(query,sizeof(query),"INSERT INTO `logs_admin_online` (`Name`,`Date`,`Online`) VALUES ('%s','%02d.%02d.%d','1')",PlayerInfo[i][pName],Day,Month,Year);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
					}
				}
				else if(Hour == 4)
				{
					GameTextForAll(FixText("~w~SERVER~n~~b~IS~n~~r~RESTARTING~n~"),10000,6);
					ForEachPlayer(i) OnPlayerSave(i);
					//zmap_Exit();
					new string[128];
					format(string, sizeof(string), "TRUNCATE TABLE `samp_online`");
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					SendRconCommand("exit");
					return 1;
				}
			}	
		}
		for(new i;i<sizeof(GZInfo);i++)
		{
			if(!ZoneOnBattle[i])continue;
			if(ZoneTimer[i])
			{
				ZoneTimer[i] --;
				UpdateWarnText(i);
				continue;
			}
			new string[256];
			if(!GZInfo[i][gFrakVladKills] && !GZInfo[i][gNapadKills])
			{
				ForEachPlayer(p)
				{
					if(!PlayerToKvadrat(p,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))continue;
					if(TeamInfo[p][tID] == GZInfo[i][gNapad]) GZInfo[i][gNapadKills]++;
					if(TeamInfo[p][tID] == GZInfo[i][gFrakVlad]) GZInfo[i][gFrakVladKills]++;
				}
			}
			if(GZInfo[i][gNapad] >= GROOVE && GZInfo[i][gNapad] <= RIFA)
			{
				if(GZInfo[i][gFrakVladKills] >= GZInfo[i][gNapadKills]) format(string,sizeof(string),"[Война]{FFFFFF}%s выигрывает в войне и сохраняет свою территорию.",GetTeamName(GZInfo[i][gFrakVlad]));
				else if(GZInfo[i][gNapadKills] > GZInfo[i][gFrakVladKills])
				{
					GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
					format(string,sizeof(string),"[Война]{FFFFFF}%s выйгрывает в войне и завоёвывает новую территорию.",GetTeamName(GZInfo[i][gFrakVlad]));
				}
				FractionInfo[GZInfo[i][gFrakVlad]][oPoints]++;
				
				for(new t = GROOVE; t<= RIFA; t++) SendRadioMessage(t,COLOR_YELLOW,string);
				
				format(string,sizeof(string),"UPDATE `samp_fracs` SET `Points`='%d' WHERE `ID`='%d'",FractionInfo[GZInfo[i][gFrakVlad]][oPoints],GZInfo[i][gFrakVlad]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				
				GangZoneStopFlashForAll(GZInfo[i][gID]);
				GangZoneHideForAll(GZInfo[i][gID]);
				GangZoneShowForAll(GZInfo[i][gID],GetGangZoneColor(i));
			}
			else if(GZInfo[i][gNapad] >= LCN && GZInfo[i][gNapad] <= TRIADA)
			{
				if(GZInfo[i][gFrakVladKills] >= GZInfo[i][gNapadKills]) format(string,sizeof(string),"[Война]{FFFFFF}%s выигрывает в войне и сохраняет свой бизнес.",GetTeamName(GZInfo[i][gFrakVlad]));
				else if(GZInfo[i][gNapadKills] > GZInfo[i][gFrakVladKills])
				{
					GZInfo[i][gFrakVlad] = GZInfo[i][gNapad];
					format(string,sizeof(string),"[Война]{FFFFFF}%s выйгрывает в войне и захватывает новый бизнес.",GetTeamName(GZInfo[i][gFrakVlad]));
				}
				FractionInfo[GZInfo[i][gFrakVlad]][oPoints]++;
				
				for(new t = LCN; t<= TRIADA; t++) SendRadioMessage(t,COLOR_YELLOW,string);
				
				format(string,sizeof(string),"UPDATE `samp_fracs` SET `Points`='%d' WHERE `ID`='%d'",FractionInfo[GZInfo[i][gFrakVlad]][oPoints],GZInfo[i][gFrakVlad]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				
				for(new b=1; b<=BIZNES; b++)
				{
					if(BizOnBattle[b] == GZInfo[i][gNapad] && GZInfo[i][gNapad] != 0)
					{
						BiznesInfo[b][bMafia] = GZInfo[i][gFrakVlad];
						GZInfo[i][gFrakVlad] = 0;
						BizOnBattle[b] = 0;
						
						format(string,sizeof(string),"UPDATE `samp_biznes` SET `Mafia` = '%d' WHERE `ID` = '%d'",BiznesInfo[b][bMafia],b);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
						
						format(string, sizeof(string), "{00CC00}%s{33CCFF}\nВладелец: {00CC00}%s{33CCFF}\n{33CCFF}Крыша: {FFD700}%s", BiznesInfo[b][bMessage],BiznesInfo[b][bOwner],GetTeamName(BiznesInfo[b][bMafia]));
						Update3DTextLabelText(BiznesInfo[b][bText], 0xFFFFFFFF, string);
						
						break;
					}
				}
			}
			GZInfo[i][gNapad] = 0;
			GZInfo[i][gNapadKills] = 0;
			GZInfo[i][gFrakVladKills] = 0;
			ZoneOnBattle[i] =0;
			TextDrawDestroy(WarnText[i]);
			
			new query[64];
			format(query,sizeof(query),"UPDATE `samp_zones` SET `Gang`=%d WHERE `ID`='%d'",GZInfo[i][gFrakVlad],GZInfo[i][gID]+1);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
		}
		for(new i=LCN;i<=RIFA;i++)
		{
			if(WarTime[i]) 
			{
				WarTime[i] --;
				if(WarTime[i] <= 0) 
				{
					SendRadioMessage(i,-1,"Ваша фракция снова может учавствовать в войне.");
					WarTime[i] = 0;
				}	
			}	
		}
		
		ForEachPlayer(i)
		{
			if(!GetPVarInt(i,"Login"))
			{
				if(GetPlayerAnimationIndex(i) == 1231) FP_Kick(i,"Игра без авторизации");
				continue;
			}
			
			if(PlayerInfo[i][pPos][0] == PlayerInfo[i][AFK_Pos])
			{
				PlayerInfo[i][AFK_Time]++;
				if(PlayerInfo[i][AFK_Stat])
				{
					new string[24];
					if(PlayerInfo[i][AFK_Time] < 3600) format(string,sizeof(string),"[AFK]\n%02d:%02d",floatround(PlayerInfo[i][AFK_Time]/60),PlayerInfo[i][AFK_Time]%60);
					else format(string,sizeof(string),"[AFK]\n%d:%02d:%02d",floatround(PlayerInfo[i][AFK_Time]/3600),floatround(PlayerInfo[i][AFK_Time]/60)%60,PlayerInfo[i][AFK_Time]%3600%60);
					Update3DTextLabelText(PlayerInfo[i][AFK_Text], COLOR_WHITE, string);
				}
			}	
			else
			{
				PlayerInfo[i][AFK_Time] = 0;
				if(PlayerInfo[i][AFK_Stat]) 
				{ 
					Delete3DTextLabel(PlayerInfo[i][AFK_Text]); 
					PlayerInfo[i][AFK_Stat] = 0; 
				}
			}
			PlayerInfo[i][AFK_Pos] = PlayerInfo[i][pPos][0];
			if(PlayerInfo[i][AFK_Time] == 5 && !PlayerInfo[i][AFK_Stat])
			{
				PlayerInfo[i][AFK_Text] = Create3DTextLabel("[AFK]\n00:05", COLOR_WHITE, 0.00, 0.00, 10000.0, 20.0, 0);
				Attach3DTextLabelToPlayer(PlayerInfo[i][AFK_Text], i, 0.0, 0.0, 0.5);
				PlayerInfo[i][AFK_Stat] = 1;
			}

			if(PlayerInfo[i][AFK_Time] < 300)
			{
				PlayerInfo[i][pPayDay] --;
				if(GetPVarInt(i, "TypeTextDraw") == 4)
				{
					new timetext[10];
					format(timetext, sizeof timetext, "%02d:%02d", floatround(PlayerInfo[i][pPayDay]/60),PlayerInfo[i][pPayDay]%60);
					PlayerTextDrawSetString(i, pMenuTXD[i][TD_TIME], timetext); // До за
				}	
				if(PlayerInfo[i][pPayDay] <= 0)
				{
					new workpay, interes = floatround(PlayerInfo[i][pMoney]/1000), VehTax, HouseTax, RentTax, Exp = 3;
					if(interes < 0) interes = 0;
					
					switch(TeamInfo[i][tID])
					{
						case LSPD..LVPD: workpay = 1000 * TeamInfo[i][tRank];
						case FBI: workpay = 1500 * TeamInfo[i][tRank];
						case MEDIC: workpay = 1800 * TeamInfo[i][tRank];
						case DOKI..ZONE51: workpay = 950 * TeamInfo[i][tRank];
						case NEWS: workpay = 750 * TeamInfo[i][tRank];
						case TAXI: workpay = 750 * TeamInfo[i][tRank];
						case MER:
						{
							if(TeamInfo[i][tRank] == 7) workpay = 15000;
							else if(TeamInfo[i][tRank] > 1) workpay = 10000;
							else workpay = 5000;
						}
						default: {}
					}
					for(new v = 1; v <= MAX_VEHICLES; v++)
					{
						if(IsValidVehicle(v) && strlen(VehInfo[v][vOwner]) && !strcmp(VehInfo[v][vOwner],PlayerInfo[i][pName],true))
						{
							if(VehInfo[v][vType] == VT_OWNED) 
							{
								if(PlayerInfo[i][pMoney] < -10000)
								{ //Продажа,уд
								
									new string[128];
									format(string,sizeof(string),"* Банк забрал твой личный %s за неуплату налогов.",VehMInfo[GetVehicleModel(v)-400][mName]);
									SendClientMessage(i,COLOR_LIGHTBLUE,string);
									
									PlayerInfo[i][pMoney] += VIPMoney(PremiumInfo[i][Level],floatround(VehMInfo[GetVehicleModel(v)-400][mPrice]/2));

									strmid(VehInfo[v][vOwner], "The State", 0, strlen("The State"), 64);
									DeleteTune(v);
									DestroyVehicle(v);
									format(string,sizeof(string),"DELETE FROM `samp_vehicles` WHERE `ID`='%d'",VehInfo[v][vID]);
									mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
									PlayerInfo[i][pCars] --;
								}
								else VehTax += floatround(VehMInfo[GetVehicleModel(v)-400][mPrice]/1000);
							}	
							else if(VehInfo[v][vType] == VT_RENT) 
							{
								if(PlayerInfo[i][pMoney] < -10000)
								{
									new string[64];
									format(string,sizeof(string),"* Автосалон отозвал арендуемый тобой %s за неуплату.",VehMInfo[GetVehicleModel(v)-400][mName]);
									SendClientMessage(i,COLOR_LIGHTBLUE,string);
									
									strmid(VehInfo[v][vOwner], "The State", 0, strlen("The State"), 64);
									DeleteTune(v);
									DestroyVehicle(v);
									format(string,sizeof(string),"DELETE FROM `samp_vehicles` WHERE `ID`='%d'",VehInfo[v][vID]);
									mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
									PlayerInfo[i][pCars] --;
								}
								else RentTax += floatround(VehMInfo[GetVehicleModel(v)-400][mPrice]/800);
							}	
						}
					}
					if(PlayerInfo[i][pHouseKey]) 
					{
						if(PlayerInfo[i][pMoney] < -10000)
						{
							new string[256], house = PlayerInfo[i][pHouseKey];
							HouseInfo[house][hHel] = 0;
							HouseInfo[house][hArm] = 0;
							HouseInfo[house][hSafe] = 0;
							HouseInfo[house][hLock] = 0;
							HouseInfo[house][hMoney] = 0;
							HouseInfo[house][hMats] = 0;
							HouseInfo[house][hDrugs] = 0;

							for(new h = 0; h < 20; h ++)
							{
								HouseInfo[house][hItems][h] = 0;
								HouseInfo[house][hValue][h] = 0;
								HouseInfo[house][hState][h] = 0.0;
							}
							
							PlayerInfo[i][pHouseKey] = 0;
							strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 64);
							
							PlayerInfo[i][pMoney] += VIPMoney(PremiumInfo[i][Level],floatround(HouseInfo[house][hPrice]/3)); //Вип-Деньги

							if(PlayerInfo[i][pWorld] == HouseInfo[house][hID] && PlayerInfo[i][pInt] == HouseInfo[house][hInt]) SetPos(i,HouseInfo[house][hEnterX],HouseInfo[house][hEnterY],HouseInfo[house][hEnterZ],0.0,0,0);
							
							PlayerInfo[i][pSpawn] = 0;
							format(string,sizeof(string),"UPDATE `samp_users` SET `Spawn` = '0' WHERE `Name` = '%s'",
								PlayerInfo[i][pName]);
							mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
							
							DestroyDynamicMapIcon(HouseInfo[house][hMapIcon]);
							DestroyDynamicPickup(HousePickUps[house]);
							
							HousePickUps[house] = CreateDynamicPickup(1273, 23, HouseInfo[house][hEnterX], HouseInfo[house][hEnterY], HouseInfo[house][hEnterZ],0,0,-1,100.0);
							HouseInfo[house][hMapIcon] = CreateDynamicMapIcon(HouseInfo[house][hEnterX],HouseInfo[house][hEnterY],HouseInfo[house][hEnterZ],31,COLOR_LIGHTRED,0,0,-1,150.0);
							format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Уровень: {FFD700}%d\n{33CCFF}Цена: {FFD700}$%d", HouseInfo[house][hID],HIInfo[HouseInfo[house][hType]][HouseName],HouseInfo[house][hLevel],HouseInfo[house][hPrice]);
							Update3DTextLabelText(HouseInfo[house][hText],0xFFFFFFFF, string);
							
							format(string,sizeof(string),"UPDATE `samp_houses` SET `Owner` = 'The State',`Lock` = '0',`Money` = '0',`Safe` = '0',`Hel` = '0',`Arm` = '0' WHERE `ID` = '%d'",HouseInfo[house][hID]);
							mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
							
							SendClientMessage(i,COLOR_LIGHTBLUE,"* Твой дом выставлен на продажу за неуплату налогов.");
						}
						else HouseTax += floatround(HouseInfo[PlayerInfo[i][pHouseKey]][hPrice]/1000);
					}
					new string[128];
					SendClientMessage(i, -1, "\n");
					format(string,sizeof(string),"*** Официальная зарплата: {00CC00}$%d", workpay);
					SendClientMessage(i, -1, string);
					format(string,sizeof(string),"*** Проценты с депозита: {00CC00}$%d", interes);
					SendClientMessage(i, -1, string);
					format(string,sizeof(string),"*** Налог на недвижимость: {FF0000}$%d", HouseTax);
					SendClientMessage(i, -1, string);
					format(string,sizeof(string),"*** Налог на личный транспорт: {FF0000}$%d", VehTax);
					SendClientMessage(i, -1, string);
					format(string,sizeof(string),"*** Взнос за аренду транспорта: {FF0000}$%d", RentTax);
					SendClientMessage(i, -1, string);
					
					new AllMoney = interes + workpay - VehTax - HouseTax - RentTax;
					FP_GivePlayerMoney(i, AllMoney);

					KAZNA += VehTax;
					KAZNA += HouseTax;
					KAZNA += RentTax;
					
					format(string,sizeof(string),"UPDATE `samp_settings` SET `kazna`= %d",KAZNA);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
					format(string,sizeof(string),"*** Итоговый счёт в банке: {FFD700}$%d", PlayerInfo[i][pMoney]);
					SendClientMessage(i, -1, string);
					SendClientMessage(i, -1, "\n");

					format(string,sizeof(string),"UPDATE `samp_users` SET `Money`='%d',`PayDay`=3600 WHERE `Name`='%s'",
						PlayerInfo[i][pMoney],PlayerInfo[i][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

					if(PlayerInfo[i][pLevel]) Exp = PlayerInfo[i][pLevel]*5;
					PlayerInfo[i][pExp] ++;
					if(PlayerInfo[i][pExp] >= Exp)
					{
							
						PlayerInfo[i][pLevel]++;
						PlayerInfo[i][pExp] -= Exp;
							
						format(string,sizeof(string), "Поздравляю! Твой уровень повысился до %d.", PlayerInfo[i][pLevel]);
						SendClientMessage(i, COLOR_GREEN, string);

						if(PlayerInfo[i][pLevel] == 5 && strcmp(PlayerInfo[i][pRefer],"Нет",true))
						{
							new bool:IsOnline = false;
							ForEachPlayer(j) if(!strcmp(PlayerInfo[i][pRefer],PlayerInfo[j][pName],true))
							{
								PlayerInfo[j][pSSM] += 30;
							
								format(string, sizeof string, "%d SSM", PlayerInfo[j][pSSM]);
								PlayerTextDrawSetString(j, pMenuTXD[j][TD_SSM], string);

								format(string,sizeof(string),"UPDATE `samp_users` SET `SSM`='%d' WHERE `name`='%s'",PlayerInfo[j][pSSM],PlayerInfo[i][pRefer]);
								mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
								
								format(string,sizeof(string),"Поздравляю, ты получил(а) 30 SSM на приглашение %s.", PlayerInfo[i][pName]);
								SendClientMessage(j, COLOR_GREEN, string);
								IsOnline = true;
								break;
							}
							if(IsOnline == false)
							{
								format(string,sizeof(string),"UPDATE `samp_users` SET `SSM`=`SSM`+20 WHERE `name`='%s'",PlayerInfo[i][pRefer]);
								mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
							}
						}
					}
					format(string,sizeof(string),"UPDATE `samp_users` SET `level`='%d',`exp`='%d' WHERE `name`='%s'",PlayerInfo[i][pLevel],PlayerInfo[i][pExp],PlayerInfo[i][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
					PlayerInfo[i][pPayDay] = 3600;

					UpdateLevelText(i);
					OnPlayerSave(i);
				}
				if(PlayerInfo[i][pAdmin]) AdminInfo[i][aTime] ++;
				if(JailInfo[i][jTime])
				{
					new string[48];
					format(string,sizeof(string),"~b~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~%02d : %02d",floatround(JailInfo[i][jTime]/60),JailInfo[i][jTime]%60);
					GameTextForPlayer(i, string, 1000, 3);

					JailInfo[i][jTime] --;
					if(JailInfo[i][jTime] <= 0) 
					{
						UnJail(i);
						JailInfo[i][jTime] = 0;
					}	
				}
			}
			if(GetPlayerState(i) == PLAYER_STATE_ONFOOT)
			{
				if(IsAtCandySprunk(i))
				{
					GetPlayerHealth(i,PlayerInfo[i][pHealth]);
					SetSyncTime(i, SYNC_TYPE_HEALTH);
				}
			}
			else if(IsPlayerInAnyVehicle(i))
			{
				if(PlayerInfo[i][pGun][4] == -1) SetPlayerArmedWeapon(i, 0);
        		else SetPlayerArmedWeapon(i, iData[i][inItems][PlayerInfo[i][pGun][4]]);
				
				if(TransportTime[i])
				{
					if(TransportTime[i] >= 20)
					{
						TransportTime[i] = 1;
						if(TransportDriver[i] != 1 && IsPlayerConnected(TransportDriver[i]))
						{
							if(PlayerInfo[i][pMoney] >= TransportValue[TransportDriver[i]])
								TransportCost[i] += TransportValue[TransportDriver[i]];
							TransportCost[TransportDriver[i]] = TransportCost[i];
				
						}
					}
					new string[32];
					TransportTime[i] ++;
					format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
					GameTextForPlayer(i, string, 15000, 6);
				}
			}
			
			if(MuteInfo[i][mTime])
			{
				MuteInfo[i][mTime] --;
				if(MuteInfo[i][mTime] <= 0)
				{
					new string[64];
					MuteInfo[i][mTime] = 0;
					SendClientMessage(i,-1,"Поздравляю! Время мута вышло, ты снова можешь говорить.");
					format(string,sizeof(string),"DELETE FROM `samp_mute` WHERE `Name`='%s'", PlayerInfo[i][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				}
			}	
			if(PlayerInfo[i][pMySelfTime])PlayerInfo[i][pMySelfTime] --;
			if(PlayerInfo[i][pJobTime])PlayerInfo[i][pJobTime] --;
			if(PlayerInfo[i][pMatsTime])PlayerInfo[i][pMatsTime] --;
			if(PlayerInfo[i][pRobTime])PlayerInfo[i][pRobTime] --;
			
			if(TaxiCallTime[i] && TaxiAccepted[i] != -1)
			{
				new string[48];
				format(string,sizeof(string),"~b~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~%02d : %02d",floatround(TaxiCallTime[i]/60),TaxiCallTime[i]%60);
				GameTextForPlayer(i, string, 1000, 3);
				TaxiCallTime[i]--;
				FP_DisablePlayerRaceCheckpoint(i);
				FP_SetPlayerRaceCheckpoint(i,1,PlayerInfo[TaxiAccepted[i]][pPos][0], PlayerInfo[TaxiAccepted[i]][pPos][1], PlayerInfo[TaxiAccepted[i]][pPos][2],0.0,0.0,0.0,5);
				if(IsPlayerInRangeOfPoint(i,25,PlayerInfo[TaxiAccepted[i]][pPos][0], PlayerInfo[TaxiAccepted[i]][pPos][1], PlayerInfo[TaxiAccepted[i]][pPos][2])) TaxiCallTime[i] = 0;
			}
			if(MedicCallTime[i] && MedicAccepted[i] != -1)
			{
				new string[48];
				format(string,sizeof(string),"~b~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~%02d : %02d",floatround(MedicCallTime[i]/60),MedicCallTime[i]%60);
				GameTextForPlayer(i, string, 1000, 3);
				MedicCallTime[i]--;
				FP_DisablePlayerRaceCheckpoint(i);
				FP_SetPlayerRaceCheckpoint(i,1,PlayerInfo[MedicAccepted[i]][pPos][0], PlayerInfo[MedicAccepted[i]][pPos][1], PlayerInfo[MedicAccepted[i]][pPos][2],0.0,0.0,0.0,5);
				if(IsPlayerInRangeOfPoint(i,25,PlayerInfo[MedicAccepted[i]][pPos][0], PlayerInfo[MedicAccepted[i]][pPos][1], PlayerInfo[MedicAccepted[i]][pPos][2])) MedicCallTime[i] = 0;
			}
			if(MechanicCallTime[i] && MechanicAccepted[i] != -1)
			{
				new string[48];
				format(string,sizeof(string),"~b~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~%02d : %02d",floatround(MechanicCallTime[i]/60),MechanicCallTime[i]%60);
				GameTextForPlayer(i, string, 1000, 3);
				MechanicCallTime[i]--;
				FP_DisablePlayerRaceCheckpoint(i);
				FP_SetPlayerRaceCheckpoint(i,1,PlayerInfo[MechanicAccepted[i]][pPos][0], PlayerInfo[MechanicAccepted[i]][pPos][1], PlayerInfo[MechanicAccepted[i]][pPos][2],0.0,0.0,0.0,5);
				if(IsPlayerInRangeOfPoint(i,25,PlayerInfo[MechanicAccepted[i]][pPos][0], PlayerInfo[MechanicAccepted[i]][pPos][1], PlayerInfo[MechanicAccepted[i]][pPos][2])) MechanicCallTime[i] = 0;
			}
			if(IsPlayerInRangeOfPoint(i, 100, 1412.7,-1012.9,2001.3) || IsPlayerInRangeOfPoint(i, 100, 1412.7,-1012.9,3001.3))
			{
				if(PlayerInfo[i][pWorld] == 1 || PlayerInfo[i][pWorld] == 2)
				{
					if(RobTimer[PlayerInfo[i][pWorld]-1])
					{
						new string[32];
						format(string,sizeof(string),"~r~~n~~n~~n~~n~~n~~n~%02d",RobTimer[PlayerInfo[i][pWorld]-1]);
						GameTextForPlayer(i, string, 1500, 3);
					}
				}	
			}
			if(Spectate[i] != -1) 
			{
				//SpectateTextDrawUpdate(i);
				continue;
			}
						
			if(!IsPlayerInValidState(i))continue;
			
			if(!PlayerInfo[i][SyncTime][SYNC_TYPE_MONEY])
			{
				if(PlayerInfo[i][pMoney] > GetPlayerMoney(i) && IsAtTuning(i)) 
					AddPVarInt(i,"TuneMoney",PlayerInfo[i][pMoney] - GetPlayerMoney(i));

				if(PlayerInfo[i][pMoney] != GetPlayerMoney(i))
					GivePlayerMoney(i, PlayerInfo[i][pMoney] - GetPlayerMoney(i));
			}
			if(!PlayerInfo[i][SyncTime][SYNC_TYPE_HEALTH])
			{
				new Float:health;
				GetPlayerHealth(i,health);
				if(health < PlayerInfo[i][pHealth]) PlayerInfo[i][pHealth] = health;
				else if(health > PlayerInfo[i][pHealth])
				{
					SetPlayerHealth(i,PlayerInfo[i][pHealth]);
					/*Warnings[i][SS_HEALTH]++;
					if(Warnings[i][SS_HEALTH] >= MAX_CHECKS)
					{
						new string[64];
						format(string,sizeof(string),"Читы на здоровье ( %f | %f )", health, PlayerInfo[i][pHealth]);
						FP_Kick(i,string);
						continue;
					}*/
				}
			}
			if(!PlayerInfo[i][SyncTime][SYNC_TYPE_ARMOUR])
			{
				new Float:health;
				GetPlayerArmour(i,health);
				
				if(PlayerInfo[i][pArmour] == -1)
				{
					if(health) SetPlayerArmour(i, 0);
				}
				else
				{
					if(health <= 0) DropItem(i, PlayerInfo[i][pArmour], 2);

					else if(health < atData[i][atState][PlayerInfo[i][pArmour]]) 
						atData[i][atState][PlayerInfo[i][pArmour]] = health;

					else if(health > atData[i][atState][PlayerInfo[i][pArmour]])
					{
						SetPlayerArmour(i,atData[i][atState][PlayerInfo[i][pArmour]]);
					}
				}	
			}

			if(PlayerInfo[i][pHealth] > 0 && PlayerInfo[i][pHealth] < 15 && !GetPVarInt(i,"GMCheckBot"))
			{
				if(!GetPVarInt(i,"MaloHP")) SetPVarInt(i,"MaloHP",1);
				if(IsPlayerInAnyVehicle(i)) FP_RemovePlayerFromVehicle(i);
				ApplyAnimation(i,"CRACK","crckdeth2",4.0,1,0,0,0,0,1);
			}
			else if(GetPVarInt(i,"MaloHP"))
			{
				DeletePVar(i,"MaloHP");
				ClearAnimations(i,true);
			}

			if(!PlayerInfo[i][SyncTime][SYNC_TYPE_WEAPONS])
			{
				switch(GetPlayerWeapon(i))
				{

					case 17,19..21,26,35..40,44,45:
					{
						FP_Kick(i,"Запрещенное оружие");
						continue;
					}
					default: {}
				}

				for(new s = 0; s < 12; s ++)
				{
					new weapons[2], slotid = PlayerInfo[i][pGun][s];
					GetPlayerWeaponData(i, s, weapons[0], weapons[1]);

					if(slotid == -1) // Если оружие есть, а в инвентаре нет.
					{
						if(!weapons[1]) continue;
						if(weapons[0] && weapons[0] != 46)
						{
							new string[64];
							if(weapons[0] >= 0 && weapons[0] <= 46)
								format(string,sizeof(string),"Читы на оружие (NEW) | %s (%d)", WeaponName[weapons[0]],weapons[1]);
							else format(string,sizeof(string),"Читы на оружие (NEW) | %d (%d)", weapons[0],weapons[1]);
							FP_Kick(i,string);
							break;
						}
						continue;
					}

					if(iData[i][inValue][slotid] > weapons[1]) 
					{
						iData[i][inValue][slotid] = weapons[1];
						if(!iData[i][inValue][slotid]) 
						{
							DropItem(i, PlayerInfo[i][pGun][s]);
							continue;
						}	
					}	
					if(!weapons[1]) continue;

					if(iData[i][inItems][slotid] != weapons[0]) // Оружие не соответствует тому, что в инвентаре.
					{
						new string[64];
						if(weapons[0] >= 0 && weapons[0] <= 46)
								format(string,sizeof(string),"Читы на оружие | %s (%d)", WeaponName[weapons[0]],weapons[1]);
							else format(string,sizeof(string),"Читы на оружие | %d (%d)", weapons[0],weapons[1]);
						FP_Kick(i,string);
						break;
					}

					if(s >= 2 && s <= 9 && iData[i][inValue][slotid] < weapons[1])
					{

						new string[64];
						if(weapons[0] >= 0 && weapons[0] <= 46)
							format(string,sizeof(string),"Читы на патроны | %s (%d) %d", WeaponName[weapons[0]],weapons[1],iData[i][inValue][slotid]);
						else format(string,sizeof(string),"Читы на патроны | %d (%d) %d", weapons[0],weapons[1],iData[i][inValue][slotid]);
						FP_Kick(i,string);
						break;
					}
				}

			}
		}
	}
	SetTimer("MainTimer",200,false);
	return 1;
}

Public:OnVehicleSpawnAngle(vehicleid)
{
	if(!IsValidVehicle(vehicleid)) return 1;
    SetVehicleZAngle(vehicleid, VehInfo[vehicleid][vParkA]);
 	return 1;
}

Public:VzlomTimer(playerid)
{
	new string[128];
	SendClientMessage(playerid,COLOR_GREEN,"Пароль успешно подобран.");
	if(IsPlayerInRangeOfPoint(playerid,2.0,1435.5389,-1007.4714,2009.0600))
	{
	    if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный успешно подобрал пароль u открыл дверь.");
		else format(string, sizeof(string), "* %s успешно подобрал(а) пароль u открыл(а) дверь.",PlayerInfo[playerid][pName]);
		ProxDetector(20.0, playerid, string,COLOR_PURPLE);
		MoveObject(redver[0],1435.1789550781,-1009.7760009766,2010.696892738342,8.0);//10.696892738342
		SetTimerEx("rehclose",30000,false,"i",PlayerInfo[playerid][pWorld]);
		TogglePlayerControllable(playerid,true);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,1413.3344,-1013.9662,2000.7805))
	{
	    if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный успешно подобрал пароль u открыл деверь.");
	    else format(string, sizeof(string), "* %s успешно подобрал(а) пароль u открыл(а) хранuлuще.",PlayerInfo[playerid][pName]);
		ProxDetector(20.0, playerid, string,COLOR_PURPLE);
		MoveObject(hrandver[0],1412.7796630859,-1014.91796875,2001.3489612340927,0.2);//1.3489612340927
		TogglePlayerControllable(playerid,true);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,1435.5389,-1007.4714,3009.0600))
	{
	    if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный успешно подобрал пароль u открыл дверь.");
		else format(string, sizeof(string), "* %s успешно подобрал(а) пароль u открыл(а) дверь.",PlayerInfo[playerid][pName]);
		ProxDetector(20.0, playerid, string,COLOR_PURPLE);
		MoveObject(redver[1],1435.1789550781,-1009.7760009766,3010.696892738342,8.0);//10.696892738342
		SetTimerEx("rehclose",30000,false,"i",PlayerInfo[playerid][pWorld]);
		TogglePlayerControllable(playerid,true);
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid,2.0,1413.3344,-1013.9662,3000.7805))
	{
	    if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный успешно подобрал пароль u открыл деверь.");
	    else format(string, sizeof(string), "* %s успешно подобрал(а) пароль u открыл(а) хранuлuще.",PlayerInfo[playerid][pName]);
		ProxDetector(20.0, playerid, string,COLOR_PURPLE);
		MoveObject(hrandver[1],1412.7796630859,-1014.91796875,3001.3489612340927,0.2);//1.3489612340927
		TogglePlayerControllable(playerid,true);
		return 1;
	}
	return 1;
}
Public:Pronik()
{
	if(!Proniknovenie)return 1;
    ForEachPlayer(i)
	{
	    if(IsACop(i))continue;
	    if(IsPlayerInRangeOfPoint(i, 100, 1412.7796630859,-1012.91796875,2001.3489612340927) && PlayerInfo[i][pWorld] == 1)SetPlayerCriminal(i,-1,"Проникновение в банк LS",2);
	    if(IsPlayerInRangeOfPoint(i, 100, 1412.7796630859,-1012.91796875,3001.3489612340927) && PlayerInfo[i][pWorld] == 2)SetPlayerCriminal(i,-1,"Проникновение в банк SF",2);
	}
	return 1;
}
Public:rehclose(bank)
{
	if(bank == 1)MoveObject(redver[0],1435.1789550781,-1007.7760009766,2010.696892738342,8.0);
	else if(bank == 2)MoveObject(redver[1],1435.1789550781,-1007.7760009766,3010.696892738342,8.0);
	return 1;
}
Public:elektrosig(bank)
{
	if(bank == 1)
	{
		MoveObject(hrandver[0],1412.7796630859,-1012.91796875,2001.3489612340927,0.2);
		MoveObject(redver[0],1435.1789550781,-1007.7760009766,2010.696892738342,2.0);
		banksistem[0] = 2;
		SetTimer("ResetRobBank1",180000,false);
	}
	else if(bank == 2)
	{
		MoveObject(hrandver[1],1412.7796630859,-1012.91796875,3001.3489612340927,0.2);
		MoveObject(redver[1],1435.1789550781,-1007.7760009766,3010.696892738342,2.0);
		banksistem[1] = 2;
		SetTimer("ResetRobBank2",180000,false);
	}
	ForEachPlayer(i)
	{
	    if(IsPlayerInRangeOfPoint(i, 100, 1412.7796630859,-1012.91796875,2001.3489612340927) || IsPlayerInRangeOfPoint(i, 100, 1412.7796630859,-1012.91796875,3001.3489612340927))
	    SendClientMessage(i,COLOR_WHITE,"Система безопасности возобновuла работу. Хранuлuще закрывается.");
	}
	return 1;
}
Public:ResetRobBank1()
{
    banksistem[0] = 0;
	return 1;
}
Public:ResetRobBank2()
{
    banksistem[1] = 0;
	return 1;
}
Public:StopGrab(playerid)
{
    new string[128];
 	TogglePlayerControllable(playerid,true);
 	SetPlayerCriminal(playerid,-1,"Ограбление банка",4);
 	switch(PlayerInfo[playerid][pLevel])
 	{
 	    case 1..5: SetPVarInt(playerid,"RobMoney", 500+random(1500));
 	    case 6..10: SetPVarInt(playerid,"RobMoney", 500+random(3500));
 	    case 11..15: SetPVarInt(playerid,"RobMoney", 500+random(5500));
 	    case 16..20: SetPVarInt(playerid,"RobMoney", 500+random(7500));
 	    case 21..25: SetPVarInt(playerid,"RobMoney", 500+random(9500));
 	    default: SetPVarInt(playerid,"RobMoney", 500+random(14500));
	}
	format(string, sizeof(string), "Ты обнаружuл в ячейке $%d",GetPVarInt(playerid,"RobMoney"));
	SendClientMessage(playerid, COLOR_GREEN, string);
	if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный взломал ячейку u обыскал содержимое.");
	else format(string, sizeof(string), "* %s взломал(а) ячейку u обыскал(а) содержимое.", PlayerInfo[playerid][pName]);
	ProxDetector(20.0, playerid,string,COLOR_PURPLE);
	PlayerInfo[playerid][pRobTime] = 3600;
    return 1;
}
Public:Unfreeze(playerid)
{
	if(!GetPVarInt(playerid,"Cuffed"))
	{
		TogglePlayerControllable(playerid,true);
		ClearAnimations(playerid,true);
	}
	DeletePVar(playerid,"Tazerom");
	return 1;
}

Public:UnDrink(playerid)
{
    SetPlayerDrunkLevel(playerid,0);
    DeletePVar(playerid,"UseDrugs");
	return 1;
}

//******************************************************************************
//===================================[Стоки]====================================
//******************************************************************************
SpeedometerShow(playerid)
{
	for(new i = 0; i < 3; i++) TextDrawShowForPlayer(playerid, SpeedTXD[i]);
	for(new i = 0; i < 5; i++) PlayerTextDrawShow(playerid, pSpeedTXD[playerid][i]);

	new string[8], Float:vhHealth;

	GetVehicleHealth(PlayerInfo[playerid][pVehID], vhHealth);
	new vHealth_Proc = floatround((vhHealth - 300) / 7);
	if(vHealth_Proc < 0) vHealth_Proc = 0;

	format(string, sizeof string, "%d%", vHealth_Proc);
	PlayerTextDrawSetString(playerid, pSpeedTXD[playerid][1], string);

	if(VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mGasType])
		format(string, sizeof string, "%.02f", VehInfo[PlayerInfo[playerid][pVehID]][vGas]);
	else format(string, sizeof string, "-----");
	PlayerTextDrawSetString(playerid, pSpeedTXD[playerid][2], string);

	if(VehInfo[PlayerInfo[playerid][pVehID]][vLock])	
		PlayerTextDrawSetString(playerid, pSpeedTXD[playerid][4], "~r~€AKP‘Џ");
	else PlayerTextDrawSetString(playerid, pSpeedTXD[playerid][4], "~g~OЏKP‘Џ");

	MarksUpdate(playerid);
}
SpeedometerHide(playerid)
{
	for(new i = 0; i < 3; i++) TextDrawHideForPlayer(playerid, SpeedTXD[i]);
	for(new i = 0; i < 5; i++) PlayerTextDrawHide(playerid, pSpeedTXD[playerid][i]);
}

stock MarksUpdate(playerid) // k FixText
{
	new string[32], marks[3], vehicleid = PlayerInfo[playerid][pVehID];

	marks[0] = (VehInfo[vehicleid][vEngine]) ? 'g':'w';
	marks[1] = (VehInfo[vehicleid][vLights]) ? 'y':'w';
	marks[2] = (VehInfo[vehicleid][vBoot]) ? 'r':'w';

	format(string, sizeof string, "~%c~ѓ  ~%c~Ѓ  ~%c~Ђ", marks[0],marks[1],marks[2]);
	PlayerTextDrawSetString(playerid, pSpeedTXD[playerid][3], string);
}

SaveFight(playerid)
{
	new string[128];
	format(string,sizeof(string),"UPDATE `samp_users` SET `fight`='%d|%d|%d|%d|%d' WHERE `Name`='%s'",
		PlayerInfo[playerid][pFStyle],PlayerInfo[playerid][pBoxing],PlayerInfo[playerid][pKunfu],
		PlayerInfo[playerid][pKneehead], PlayerInfo[playerid][pGrabkick], PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
}

UpdateWanted(playerid, wanted)
{
	switch(wanted)
	{
		case 0: PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_WANTED], "_");
		case 1: PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_WANTED], "~y~]");
		case 2: PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_WANTED], "~y~]]");
		case 3: PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_WANTED], "~y~]]]");
		case 4: PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_WANTED], "~y~]]]]");
		default: PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_WANTED], "~y~]]]]]");
	}
	if(GetPVarInt(playerid, "TypeTextDraw") == 4)
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BT_WANTED]);
}

stock IsValidName(playerid, name[]) 
{
	if(strlen(name) < 3 || strlen(name) > 20) 
	{
		ErrorMes(playerid, "Длина ника должна быть в пределах от 3 до 20 символов.");
		return false;
	}
	for(new i; i < strlen(name); i++)
	{
	    switch(name[i])
	    {
			case 'a'..'z','A'..'Z','0'..'9','_','=','[',']','@','.','(',')','$': continue;
			default: 
			{
				ErrorMes(playerid, "В нике разрешены буквы, цифры и символы \"_ = [ ] @ . ( ) $\".");
				return false;
			}
	    }
	}
	return true;
}

stock VIPMoney(level, money)
{
	switch(level)
	{
		case 1: money = floatround(money * 1.2);
		case 2: money = floatround(money * 1.3);
		case 3: money = floatround(money * 1.4);
		case 4: money = floatround(money * 1.5);
		case 5: money = floatround(money * 1.8);
		default: return money;
	}
	return money;
}
stock Report(playerid, string[])
{
    new query[256];
	format(query,sizeof(query),"INSERT INTO `logs_anticheat` (`Name`,`Reason`,`Date`,`Time`) VALUES ('%s','%s','%02d.%02d.%d','%02d:%02d:%02d')",
		PlayerInfo[playerid][pName], string, Day,Month,Year,Hour,Minute,Second);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
	
	format(query,sizeof(query),"Античит: %s[%d] %s",PlayerInfo[playerid][pName],playerid,string);
    ForEachPlayer(i) if(PlayerInfo[i][pAdmin]) SendClientMessage(i, COLOR_YELLOW, query);
}
stock SetSyncTime(playerid, synctype, base = 3)
{
    PlayerInfo[playerid][SyncTime][synctype] = base;
	PlayerInfo[playerid][LastSyncUpdate][synctype] = GetTickCount();
	return 1;
}
stock timestamp_to_date(unix_timestamp = 0, & year = 1970, & month = 1, & day = 1, & hour = 0, & minute = 0, & second = 0)
{
	unix_timestamp -= 7200;
	year = unix_timestamp / 31557600;
	unix_timestamp -= year * 31557600;
	year += 1970;

	if ( year % 4 == 0 ) unix_timestamp -= 21600;

	day = unix_timestamp / 86400;

	switch ( day )
	{
		case    0..30 : { second = day;       month =  1; }
		case   31..58 : { second = day -  31; month =  2; }
		case   59..89 : { second = day -  59; month =  3; }
		case  90..119 : { second = day -  90; month =  4; }
		case 120..150 : { second = day - 120; month =  5; }
		case 151..180 : { second = day - 151; month =  6; }
		case 181..211 : { second = day - 181; month =  7; }
		case 212..242 : { second = day - 212; month =  8; }
		case 243..272 : { second = day - 243; month =  9; }
		case 273..303 : { second = day - 273; month = 10; }
		case 304..333 : { second = day - 304; month = 11; }
		case 334..366 : { second = day - 334; month = 12; }
	}

	unix_timestamp -= day * 86400;
	hour = unix_timestamp / 3600;
	
	unix_timestamp -= hour * 3600;
	minute = unix_timestamp / 60;

	unix_timestamp -= minute * 60;
	day = second + 1;
	second = unix_timestamp;
	
}
stock ShowDonateDialog(playerid)
{
    new str[64];
	format(str,sizeof(str),""FPHEAD"Баланс: %d SSM", PlayerInfo[playerid][pSSM]);
 	ShowPlayerDialog(playerid, D_DONATE, DIALOG_STYLE_LIST, str, "Купить VIP аккаунт (150 SSM/мес.)\n\
																   Повысить уровень (1 Exp = 1 SSM)\n\
																   Снять предупреждение (50 SSM)\n\
																   Сменить игровой ник (50 SSM)", "Выбрать", "Назад");
 	return 1;
}

stock ShowBonusExpDialog(playerid)
{
	new str[64];
	format(str,sizeof(str),""FPHEAD"Баланс: %d SSM", PlayerInfo[playerid][pSSM]);
	ShowPlayerDialog(playerid,D_DONATE_LVL,DIALOG_STYLE_INPUT,str,"Сколько SSM вы хотите обменять на Exp?","Выбрать","Назад");
	return 1;
}
stock NoNeon(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 592,577,511,512,568,593,520,553,476,519,460,513,548,425,417,487,488,497,563,447,
		469,509,481,510,462,448,581,522,461,521,523,463,586,468,471,472,473,493,595,484,
		430,453,452,446,454,435,450,591,606,607,610,569,590,584,570,608,611,485,538,457,
		532,486,406,530,537,588,571,572,574,449,525,583,539,441,464,465,501,564,594,531,444,556,557,432: return true;
		default: return false;
	}
	return false;
}

GetXYInFrontOfVehicle(vehicle, &Float:x, &Float:y, Float:distance)
{
	new Float:a;
	GetVehiclePos(vehicle, x, y, a);
	GetVehicleZAngle(vehicle, a);
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
	return 1;
}
stock SaveStats(playerid)
{
	if(GetPVarInt(playerid,"Recon")) return 1;
	SetPVarInt(playerid, "Recon", 1);
	SetPVarFloat(playerid,"ReconX",PlayerInfo[playerid][pPos][0]);
	SetPVarFloat(playerid,"ReconY",PlayerInfo[playerid][pPos][1]);
	SetPVarFloat(playerid,"ReconZ",PlayerInfo[playerid][pPos][2]);
	SetPVarFloat(playerid,"ReconHealth",PlayerInfo[playerid][pHealth]);
	if(PlayerInfo[playerid][pArmour] == -1) SetPVarFloat(playerid,"ReconArmour", 0.0);
	else SetPVarFloat(playerid,"ReconArmour",atData[playerid][atState][PlayerInfo[playerid][pArmour]]);
	SetPVarInt(playerid,"ReconInt",PlayerInfo[playerid][pInt]);
	SetPVarInt(playerid,"ReconWorld",PlayerInfo[playerid][pWorld]);
	
	for(new i = 20,count[16]; i < 25 ; i++)
	{
		format(count,sizeof(count),"ReconItem%d",i);
		SetPVarInt(playerid,count,iData[playerid][inItems][i]);
		format(count,sizeof(count),"ReconValue%d",i);
   		SetPVarInt(playerid,count,iData[playerid][inValue][i]);
   		format(count,sizeof(count),"ReconState%d",i);
   		SetPVarFloat(playerid,count,iData[playerid][inState][i]);

   		DropItem(playerid, i, 0, false);
	}
	
	return 1;
}

stock LoadStats(playerid)
{
	if(!GetPVarInt(playerid,"Recon")) return 1;
	SetPos(playerid,GetPVarFloat(playerid,"ReconX"),GetPVarFloat(playerid,"ReconY"),GetPVarFloat(playerid,"ReconZ"),0.0,GetPVarInt(playerid,"ReconInt"),GetPVarInt(playerid,"ReconWorld"));
	FP_SetPlayerHealth(playerid,GetPVarFloat(playerid,"ReconHealth"));

	if(GetPVarInt(playerid,"ReconSkin"))
	{
		SetPlayerSkin(playerid,GetPVarInt(playerid,"ReconSkin"));
		DeletePVar(playerid,"ReconSkin");
	}
	for(new i = 20,rItem[16],rValue[16],rState[16]; i < 25 ; i++)
	{
		format(rItem,sizeof(rItem),"ReconItem%d",i);
		format(rValue,sizeof(rValue),"ReconValue%d",i);
   		format(rState,sizeof(rState),"ReconState%d",i);

   		AddItem(playerid,GetPVarInt(playerid,rItem),GetPVarInt(playerid,rValue), GetPVarFloat(playerid,rState));

   		DeletePVar(playerid,rItem);
		DeletePVar(playerid,rValue);
		DeletePVar(playerid,rState);
	}

	AddItem(playerid, 19, 1, GetPVarFloat(playerid,"ReconArmour"));
	
	DeletePVar(playerid,"Recon");
	DeletePVar(playerid,"ReconX");
	DeletePVar(playerid,"ReconY");
	DeletePVar(playerid,"ReconZ");
	DeletePVar(playerid,"ReconInt");
	DeletePVar(playerid,"ReconWorld");
	DeletePVar(playerid,"ReconHealth");
	DeletePVar(playerid,"ReconArmour");
	return 1;
}

stock ShowControlAutoDialog(playerid,vehicle)
{
	if(!GetVehicleModel(vehicle)) return 1;
	if(!VehMInfo[GetVehicleModel(vehicle)-400][mLicType] || VehMInfo[GetVehicleModel(vehicle)-400][mLicType] > 2) return 1;
	new string[256],dialogstring[512];
	if(!VehInfo[vehicle][vLock]) format(string,sizeof(string),"Двери			{FFD700}| {FF0000}Закрыть\n");
	else format(string,sizeof(string),"Двери			{FFD700}| {00FF00}Открыть\n");
	strcat(dialogstring,string);
	if(!VehInfo[vehicle][vEngine]) format(string,sizeof(string),"Двигатель		{FFD700}| {00FF00}Завести\n");
	else format(string,sizeof(string),"Двигатель		{FFD700}| {FF0000}Заглушить\n");
	strcat(dialogstring,string);
	if(!VehInfo[vehicle][vLights]) format(string,sizeof(string),"Фары			{FFD700}| {00FF00}Включить\n");
	else format(string,sizeof(string),"Фары			{FFD700}| {FF0000}Выключить\n");
	strcat(dialogstring,string);
	if(!VehInfo[vehicle][vBoot]) format(string,sizeof(string),"Багажник		{FFD700}| {00FF00}Открыть\n");
	else format(string,sizeof(string),"Багажник		{FFD700}| {FF0000}Закрыть\n");
	strcat(dialogstring,string);
    return ShowPlayerDialog(playerid,D_CONTROL_AUTO,DIALOG_STYLE_LIST,""FPHEAD"Контроль транспорта",dialogstring,"Выбрать","Выход");
}
stock ShowControlAutoDialogJob(playerid,vehicle)
{
	if(!GetVehicleModel(vehicle)) return 1;
	if(!VehMInfo[GetVehicleModel(vehicle)-400][mLicType] || VehMInfo[GetVehicleModel(vehicle)-400][mLicType] > 2) return 1;
	new string[256],dialogstring[512];
	if(!VehInfo[vehicle][vLock]) format(string,sizeof(string),"Двери			{FFD700}| {FF0000}Закрыть\n");
	else format(string,sizeof(string),"Двери			{FFD700}| {00FF00}Открыть\n");
	strcat(dialogstring,string);
	if(!VehInfo[vehicle][vEngine]) format(string,sizeof(string),"Двигатель		{FFD700}| {00FF00}Завести\n");
	else format(string,sizeof(string),"Двигатель		{FFD700}| {FF0000}Заглушить\n");
	strcat(dialogstring,string);
	if(!VehInfo[vehicle][vLights]) format(string,sizeof(string),"Фары			{FFD700}| {00FF00}Включить\n");
	else format(string,sizeof(string),"Фары			{FFD700}| {FF0000}Выключить\n");
	strcat(dialogstring,string);
	if(!VehInfo[vehicle][vBoot]) format(string,sizeof(string),"Багажник		{FFD700}| {00FF00}Открыть\n");
	else format(string,sizeof(string),"Багажник		{FFD700}| {FF0000}Закрыть\n");
	strcat(dialogstring,string);
	format(string,sizeof(string),"Особое		{FFD700}| {FF0000}Работа\n");
	strcat(dialogstring,string);
    return ShowPlayerDialog(playerid,D_CONTROL_AUTO,DIALOG_STYLE_LIST,""FPHEAD"Контроль транспорта",dialogstring,"Выбрать","Выход");
}
stock MoneyToBiznes(playerid,money)
{
	if(PlayerInfo[playerid][pInt])
	{
	    BiznesInfo[PlayerInfo[playerid][pWorld]][bMoney] += floatround(money*0.75);
	    if(BiznesInfo[PlayerInfo[playerid][pWorld]][bMafia]) FractionInfo[BiznesInfo[PlayerInfo[playerid][pWorld]][bMafia]][oMoney] += floatround(money*0.25);
	    KAZNA += floatround(money*0.25);
		new string[128];	
		format(string,sizeof(string),"UPDATE `samp_biznes` SET `Money` = '%d' WHERE `ID` = '%d'",BiznesInfo[PlayerInfo[playerid][pWorld]][bMoney],PlayerInfo[playerid][pWorld]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
	    return 1;
	}
	for(new i = 1; i <= BIZNES; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid,25,BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY],BiznesInfo[i][bEnterZ]))
	    {
	        BiznesInfo[i][bMoney] += floatround(money*0.75);
	        if(BiznesInfo[i][bMafia]) FractionInfo[BiznesInfo[i][bMafia]][oMoney] += floatround(money*0.25);
	        KAZNA += floatround(money*0.25);
			new string[128];	
			format(string,sizeof(string),"UPDATE `samp_biznes` SET `Money` = '%d' WHERE `ID` = '%d'",BiznesInfo[i][bMoney],i);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	    }
	}
	return 1;
}
stock ValidDialogValue(summa)
{
	if(summa < 0 || summa > 1000000000)
		return 0;
	return 1;
}

stock FindIP(const text[])
{
	// i = Текущая позиция
	// c = Количество цифр в числе
	// n = Количество чисел
	// s = Количество цифр
	// l = 
	//
	for(new i,c,n,s,l; i<strlen(text); i++)
	{
		if(i > 0 && i < strlen(text)-1 && text[i-1] == text[i] && text[i] == text[i+1]) continue;
		else if(i > 2 && text[i] == text[i-1] && text[i] == text[i-2]) continue;
		switch(c)
		{
			case 0:
			{
				switch(text[i])
				{
					case '0':
					{
						if(n >= 3 && i == strlen(text)-1) return true;
						if(i < strlen(text)-1 && text[i+1] == '0') continue;
						n ++;
						if(n >= 4) return true;
						c = 0; s ++;
						if(s > 16) return true;
					}
					case '1'..'2':
					{
						if(n >= 3 && i == strlen(text)-1) return true;
						c = 2; s ++; l = i;
						if(s > 16) return true;
					}
					case '3'..'9':
					{
						if(n >= 3 && i == strlen(text)-1) return true;
						c = 1; s ++; l = i;
						if(s > 16) return true;
					}
					default: continue;
				}
			}
			case 1:
			{
				switch(text[i])
				{
					case '0'..'9':
					{
						if(n >= 3 && i == strlen(text)-1) return true;
						n ++;
						if(n >= 4) return true;
						c = 0; s ++;
						if(s > 16) return true;
					}
					default: continue;
				}
			}
			case 2:
			{
				switch(text[i])
				{
					case '0'..'5':
					{
						if(n >= 3 && i == strlen(text)-1) return true;
						c = 1; s ++;
						if(s > 16) return true;
					}
					case '6'..'9':
					{
						if(n >= 3 && i == strlen(text)-1) return true;
						if(text[l] == '1') c = 1;
						else
						{
							c = 0;
							n ++;
							if(n >= 4) return true;
						}
						s ++;
						if(s > 16) return true;
					}
					default: continue;
				}
			}
			default: continue;
		}

	}
	return false;
}

stock IsInBand(playerid)
{
	switch(TeamInfo[playerid][tID])
	{
		case GROOVE,BALLAS,VAGOS,ECOR,RIFA: return 1;
		default: return 0;
	}
	return 0;
}
stock IsInMafia(playerid)
{
	switch(TeamInfo[playerid][tID])
	{
		case LCN,RM,YA,TRIADA: return 1;
		default: return 0;
	}
	return 0;
}
stock GetTeamName(fnumbwer)
{
	new string[24];
	switch(fnumbwer)
	{
		case LSPD:		format(string,sizeof(string),"Los Santos Police Dept"); //LVPD
		case SFPD:  	format(string,sizeof(string),"San Fierro Police Dept"); //LVPD
		case LVPD:		format(string,sizeof(string),"Las Venturas Police Dept"); //LVPD
		case FBI: 		format(string,sizeof(string),"FBI"); //FBI
		case DOKI: 		format(string,sizeof(string),"Армия 'Доки'"); //Zone 69
		case EBASE: 	format(string,sizeof(string),"Армия 'Авианосец'"); //Easter Base
		case ZONE51: 	format(string,sizeof(string),"Армия 'Зона 51'"); //Zone 69
		case MEDIC: 	format(string,sizeof(string),"San Andreas Medical Dept"); //Medic
		case CASINO: 	format(string,sizeof(string),"Казино");
		case NEWS: 		format(string,sizeof(string),"San Andreas News"); //LV News
		case LIC: 		format(string,sizeof(string),"Инструкторы"); //Licensers
		case MER: 		format(string,sizeof(string),"Мэрия"); //Meria
		case TAXI: 		format(string,sizeof(string),"Такси"); //Такси
		case HA: 		format(string,sizeof(string),"Hitman Agency"); //Кuллеры
		case HUN: 		format(string,sizeof(string),"Головорезы"); //Головорезы
		case LCN: 		format(string,sizeof(string),"La Cosa Nostra"); //Лкн
		case YA: 		format(string,sizeof(string),"Yakuza"); //Якудза
		case RM: 		format(string,sizeof(string),"Russian Mafia"); //Русская мафия
		case TRIADA:	format(string,sizeof(string),"Triada"); //Русская мафия
		case GROOVE: 	format(string,sizeof(string),"Grove Street Family"); //Грув
		case BALLAS: 	format(string,sizeof(string),"The Ballas Gang"); //Баллас
		case VAGOS: 	format(string,sizeof(string),"Los Santos Vagos"); //Вагос
		case ECOR: 		format(string,sizeof(string),"El Coronos"); //Ацтеки
		case RIFA: 		format(string,sizeof(string),"Rifa Gang"); //Рифа
		case SRACE: 	format(string,sizeof(string),"Street Racers"); //Стрит Рейсеры
		case RAST:	 	format(string,sizeof(string),"Растаманы"); //Стрит Рейсеры
		default: 		format(string,sizeof(string),"Нет");
	}
	return string;
}
stock GetGangZoneColor(gangzonex)
{ 
	new zx;
	switch(GZInfo[gangzonex][gFrakVlad])
	{
	    case LCN: zx = 0x057F94FF;
	    case YA: zx = 0xFAFB71FF;
	    case RM: zx = 0xFF1493FF;
	    case TRIADA: zx = 0x65ADEBFF;
		case GROOVE: zx = 0x00FF1465;
		case BALLAS: zx = 0xFF00EB65;
		case VAGOS: zx = 0xFFC80065;
		case ECOR: zx = 0x00EBFF65;
		case RIFA: zx = 0x2D74FD65;
		default: zx = 0xAABE0000;
	}
	return zx;
}
stock GetGZColorF(fnumber)
{
	new zx;
	switch(fnumber)
	{
	    case LCN: zx = 0x057F94FF;
	    case YA: zx = 0xFAFB71FF;
	    case RM: zx = 0xFF1493FF;
		case GROOVE: zx =0x00FF1465;
		case BALLAS: zx =0xFF00EB65;
		case VAGOS: zx =0xFFC80065;
		case ECOR: zx = 0x00EBFF65;
		case RIFA: zx = 0x2D74FD65;
		default: zx = 0xFFBE0000;
	}
	return zx;
}

stock VehicleUpgrade(vehicleid,q,w,e,r,t,y,u,paintjob)
{
    AddVehicleComponent(vehicleid, q);
	AddVehicleComponent(vehicleid, w);
	AddVehicleComponent(vehicleid, e);
	AddVehicleComponent(vehicleid, r);
	AddVehicleComponent(vehicleid, t);
	AddVehicleComponent(vehicleid, y);
	AddVehicleComponent(vehicleid, u);
	AddVehicleComponent(vehicleid, 1010);
	ChangeVehiclePaintjob(vehicleid, paintjob);
	return 1;
}

//------------------------------------------------------------------------------Античит
stock FP_GivePlayerMoney(playerid,money)
{
	if(!IsPlayerConnected(playerid)) return 0;
	SetSyncTime(playerid,SYNC_TYPE_MONEY);
	new string[80];
	if(money > 0) format(string, sizeof(string), "~g~+$%d", money);
	else if(money < 0) format(string, sizeof(string), "~r~-$%d", -money);
	GivePlayerMoney(playerid,money);
	PlayerInfo[playerid][pMoney] += money;
	GameTextForPlayer(playerid, string, 2500, 1);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	format(string,sizeof(string),"UPDATE `samp_users` SET `Money`='%d' WHERE `Name`='%s'", 
		PlayerInfo[playerid][pMoney], PlayerInfo[playerid][pName]); 
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

	format(string, sizeof(string), "~g~$%d", PlayerInfo[playerid][pMoney]);
	PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_MONEY], string);
	return 1;
}

stock FP_SetPlayerHealth(playerid,Float:health)
{ 
	if(health < 0.0) health = 0.0;
	if(health > 100.0) health = 100.0;
	SetSyncTime(playerid,SYNC_TYPE_HEALTH);
	PlayerInfo[playerid][pHealth] = health;
	return SetPlayerHealth(playerid, health);
}
stock FP_SetPlayerArmour(playerid, Float:armour, slotid)
{ 
	if(armour < 0.0) armour = 0.0;
	else if(armour > 100.0) armour = 100.0;
	SetSyncTime(playerid,SYNC_TYPE_ARMOUR);

	PlayerInfo[playerid][pArmour] = slotid;
	return SetPlayerArmour(playerid, armour);
}

stock FP_SetVehicleHealth(vehicleid,Float:health)
{ 
	if(!IsValidVehicle(vehicleid)) return 0;
	if(health < 0.0) health = 0.0;
	else if(health > 1000.0) health = 1000.0;
	VehInfo[vehicleid][vHealth] = health;
	ForEachPlayer(i) if(PlayerInfo[i][pVehID] == vehicleid) SetSyncTime(i,SYNC_TYPE_VEHICLE);
	return SetVehicleHealth(vehicleid, health);
}
//------------------------------------------------------------------------------

stock FP_GivePlayerWeapon(playerid,weaponid,ammo,slotid)
{
	if(!weaponid) return 1;
	SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
	PlayerInfo[playerid][pGun][oData[weaponid][imType]] = slotid;
	GivePlayerWeapon(playerid,weaponid,ammo);
	return 1;
}

stock FP_ResetPlayerWeapons(playerid)
{
	SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
	ResetPlayerWeapons(playerid);
	for(new i = 0; i < 13; i++) PlayerInfo[playerid][pGun][i] = -1;
	for(new i = 20; i < 25; i++)
	{
		if(oData[iData[playerid][inItems][i]][imType] > 12) continue;
		iData[playerid][inItems][i] = 0;
		iData[playerid][inValue][i] = 0;
		iData[playerid][inState][i] = 0.0;

		ImageHide(playerid, i);
		if(GetPVarInt(playerid, "RMenu_Type") == BT_HANDS)
			ImageShow(playerid, i, 0);
		else ImageShow(playerid, i, 0, false);
	}
	
}
stock FP_SetPlayerSpecialAction(playerid,actionid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return ErrorMes(playerid,"Ты не можешь использовать анимации, находясь в транспорте.");
	if(GetPVarInt(playerid,"Tazerom") || GetPVarInt(playerid,"Cuffed")) return ErrorMes(playerid,"Ты не можешь использовать анимации в данный момент.");
	return SetPlayerSpecialAction(playerid,actionid);
}
stock FP_ApplyAnimation(playerid, animlib[], animname[], Float:fDelta, loop, lockx, locky, freeze, time)
{
    if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return ErrorMes(playerid,"Ты не можешь использовать анимации, находясь в транспорте.");
	if(GetPVarInt(playerid,"Tazerom") || GetPVarInt(playerid,"Cuffed")) return ErrorMes(playerid,"Ты не можешь использовать анимации в данный момент.");
	ApplyAnimation(playerid, animlib, animname, fDelta, loop, lockx, locky, freeze, time, 1);
	PlayerUsingLoopingAnim[playerid] = 1;
    TextDrawShowForPlayer(playerid,txtAnimHelper);
    return 1;
}
stock FP_SetPlayerVirtualWorld(playerid,worldid)
{
	PlayerInfo[playerid][pWorld] = worldid;
	SetPlayerVirtualWorld(playerid,worldid);
}
stock FP_SetPlayerInterior(playerid,interiorid)
{
	PlayerInfo[playerid][pInt] = interiorid;
	SetPlayerInterior(playerid,interiorid);
}
stock FP_PutPlayerInVehicle(playerid,vehicleid,seatid)
{
	if(IsPlayerConnected(playerid) && vehicleid!=INVALID_VEHICLE_ID)
	{
	   	PutPlayerInVehicle(playerid,vehicleid,seatid);
		SetSyncTime(playerid, SYNC_TYPE_POS);
	   	SetPVarInt(playerid,"EnterVehicle",vehicleid);
		
	   	new Float:x,Float:y,Float:z;
	   	GetVehiclePos(vehicleid,x,y,z);
	   	PlayerInfo[playerid][pPos][0]=x;
		PlayerInfo[playerid][pPos][1]=y;
		PlayerInfo[playerid][pPos][2]=z;
		PlayerInfo[playerid][pSetPos][0]=x;
		PlayerInfo[playerid][pSetPos][1]=y;
		PlayerInfo[playerid][pSetPos][2]=z;
		//SetTimerEx("CheckPut",1000,false,"i",playerid);
		return 1;
	}
	return 0;
}
stock FP_Kick(playerid,reason[], bool:wotimer = false)
{
	if(!IsPlayerConnected(playerid)) return 0;
	TogglePlayerControllable(playerid,false);
	
	new string[220];
	format(string,sizeof(string),"INSERT INTO `logs_anticheat` (`Name`,`Reason`,`Date`,`Time`) VALUES ('%s','был(а) кикнут(а). Причина: %s','%02d.%02d.%d','%02d:%02d:%02d')",
		PlayerInfo[playerid][pName], reason, Day,Month,Year,Hour,Minute,Second);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	format(string,sizeof(string),"Ты был(а) кикнут(а) античитом. Причина: %s",reason);
	SendClientMessage(playerid, COLOR_YELLOW, string);	
	
	format(string,sizeof(string),"Античит: %s[%d] был(а) кикнут(а). Причина: %s",PlayerInfo[playerid][pName],playerid,reason);
	ForEachPlayer(i) if(PlayerInfo[i][pAdmin]) SendClientMessage(i, COLOR_YELLOW, string);
	if(wotimer == true) return Kick(playerid);
	SetTimerEx("KickTimer",500,false,"d",playerid);
	return 1;
}

stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	if((PlayerInfo[playerid][pPos][0] <= max_x && PlayerInfo[playerid][pPos][0] >= min_x) && (PlayerInfo[playerid][pPos][1] <= max_y && PlayerInfo[playerid][pPos][1] >= min_y)) return 1;
	return 0;
}

stock FP_SetPlayerRaceCheckpoint(playerid,style,Float:x,Float:y,Float:z,Float:nx,Float:ny,Float:nz,Float:a)
{
    if(GetPVarInt(playerid,"StartJob"))return ErrorMes(playerid,"У тебя уже установлена метка.");

    SetPVarInt(playerid,"RChecType",style);
    SetPVarFloat(playerid,"RChecX",x);
    SetPVarFloat(playerid,"RChecY",y);
    SetPVarFloat(playerid,"RChecZ",z);
    SetPVarFloat(playerid,"RChecNX",nx);
    SetPVarFloat(playerid,"RChecNY",ny);
    SetPVarFloat(playerid,"RChecNZ",nz);
    SetPVarFloat(playerid,"RChecA",a);
    if(GetPVarInt(playerid,"RCheckUsed"))return ShowDialog(playerid,D_CHANGE_CHECK);
    SetPlayerRaceCheckpoint(playerid, style,Float:x,Float:y,Float:z,Float:nx,Float:ny,Float:nz,Float:a);
    SetPVarInt(playerid,"RCheckUsed",1);
	return 1;
}
stock FP_DisablePlayerRaceCheckpoint(playerid)
{
	if(GetPVarInt(playerid,"StartJob"))return ErrorMes(playerid,"Ты не можешь удалить рабочую метку.");
    DisablePlayerRaceCheckpoint(playerid);
    DeletePVar(playerid,"RCheckUsed");
	return 1;
}
stock ShowLicenses(playerid,targetid)
{
	new header[40],string[1280],str[256];
	format(header,sizeof(header),""FPHEAD"Лицензии %s",PlayerInfo[targetid][pName]);

	if(LicInfo[targetid][MotoLic]) format(str,sizeof(str),"{FFFFFF}Мототранспорт:\t\t{00CC00}Есть\n\n");
	else if(LicInfo[targetid][TimeMotoLic])
	format(str,sizeof(str),"{FFFFFF}Мототранспорт:\t\t{FFD700}Конфисковал(а) {FFFFFF}%s{FFD700}\n\t\t\t\tПричина: {FFFFFF}%s{FFD700}\n\t\t\t\tДата возврата: {FFFFFF}%s\n\n",
	LicInfo[targetid][TookMotoLic],LicInfo[targetid][ReasonMotoLic],LicInfo[targetid][DateMotoLic]);
	else format(str,sizeof(str),"{FFFFFF}Мототранспорт:\t\t{FF0000}Нет\n\n");
	strcat(string,str);

	if(LicInfo[targetid][AutoLic]) format(str,sizeof(str),"{FFFFFF}Автотранспорт:\t\t{00CC00}Есть\n\n");
	else if(LicInfo[targetid][TimeAutoLic])
	format(str,sizeof(str),"{FFFFFF}Автотранспорт:\t\t{FFD700}Конфисковал(а) {FFFFFF}%s{FFD700}\n\t\t\t\tПричина: {FFFFFF}%s{FFD700}\n\t\t\t\tДата возврата: {FFFFFF}%s\n\n",
	LicInfo[targetid][TookAutoLic],LicInfo[targetid][ReasonAutoLic],LicInfo[targetid][DateAutoLic]);
	else format(str,sizeof(str),"{FFFFFF}Автотранспорт:\t\t{FF0000}Нет\n\n");
	strcat(string,str);

	if(LicInfo[targetid][BoatLic]) format(str,sizeof(str),"{FFFFFF}Водный транспорт:\t\t{00CC00}Есть\n\n");
	else if(LicInfo[targetid][TimeBoatLic])
	format(str,sizeof(str),"{FFFFFF}Водный транспорт:\t\t{FFD700}Конфисковал(а) {FFFFFF}%s{FFD700}\n\t\t\t\tПричина: {FFFFFF}%s{FFD700}\n\t\t\t\tДата возврата: {FFFFFF}%s\n\n",
	LicInfo[targetid][TookBoatLic],LicInfo[targetid][ReasonBoatLic],LicInfo[targetid][DateBoatLic]);
	else format(str,sizeof(str),"{FFFFFF}Водный транспорт:\t\t{FF0000}Нет\n\n");
	strcat(string,str);

	if(LicInfo[targetid][FlyLic]) format(str,sizeof(str),"{FFFFFF}Воздушный транспорт:\t{00CC00}Есть\n\n");
	else if(LicInfo[targetid][TimeFlyLic])
	format(str,sizeof(str),"{FFFFFF}Воздушный транспорт:\t{FFD700}Конфисковал(а) {FFFFFF}%s{FFD700}\n\t\t\t\tПричина: {FFFFFF}%s{FFD700}\n\t\t\t\tДата возврата: {FFFFFF}%s\n\n",
	LicInfo[targetid][TookFlyLic],LicInfo[targetid][ReasonFlyLic],LicInfo[targetid][DateFlyLic]);
	else format(str,sizeof(str),"{FFFFFF}Воздушный транспорт:\t{FF0000}Нет\n\n");
	strcat(string,str);

    if(LicInfo[targetid][GunLic]) format(str,sizeof(str),"{FFFFFF}Разрешение на оружие:\t{00CC00}Есть\n\n");
	else if(LicInfo[targetid][TimeGunLic])
	format(str,sizeof(str),"{FFFFFF}Разрешение на оружие:\t{FFD700}Конфисковал(а) {FFFFFF}%s{FFD700}\n\t\t\t\tПричина: {FFFFFF}%s{FFD700}\n\t\t\t\tДата возврата: {FFFFFF}%s\n\n",
	LicInfo[targetid][TookGunLic],LicInfo[targetid][ReasonGunLic],LicInfo[targetid][DateGunLic]);
	else format(str,sizeof(str),"{FFFFFF}Разрешение на оружие:\t{FF0000}Нет\n\n");
	strcat(string,str);

	return ShowPlayerDialog(playerid, 555, DIALOG_STYLE_MSGBOX,header,string,"OK","");
}

stock CheckMuteTime(playerid)
{
	new string[80];
	if(MuteInfo[playerid][mTime] < 60) format(string,sizeof(string),"Ты не можешь говорuть. Оставшееся время: %d секунд.",MuteInfo[playerid][mTime]%60);
	else format(string,sizeof(string),"Ты не можешь говорuть. Оставшееся время: %d минут %d секунд.",floatround(MuteInfo[playerid][mTime]/60),MuteInfo[playerid][mTime]%60);
	return SendClientMessage(playerid,COLOR_WHITE, string);
}
stock CheckMatsTime(playerid)
{
	new string[80], minut = floatround(PlayerInfo[playerid][pMatsTime]/60), sek = PlayerInfo[playerid][pMatsTime] - minut*60;
	if(minut) format(string,sizeof(string),"Ты недавно воровал материалы, попробуй через %d минут %d секунд.",minut,sek);
	else format(string,sizeof(string),"Ты недавно воровал материалы, попробуй через %d секунд.",sek);
	return SendClientMessage(playerid,COLOR_WHITE, string);
}
stock CheckCaptureTime(playerid,fraction)
{
	new string[80], minut = floatround(WarTime[fraction]/60), sek = WarTime[fraction] - minut*60;
	if(minut) format(string,sizeof(string),"Новый захват можно организовать через %d минут %d секунд.",minut,sek);
	else format(string,sizeof(string),"Новый захват можно организовать через %d секунд.",sek);
	return SendClientMessage(playerid,COLOR_WHITE, string);
}

stock CheckRobBank(playerid)
{
	new string[128];
	if(GetPVarInt(playerid,"BankRobCheck") == 1)
    {
	    if(!IsACop(playerid))
	    {
	        if(PlayerInfo[playerid][pLevel] < 1)return ErrorMes(playerid, "Грабuть банк можно грабuть только с 1 уровня.");
            if(PlayerInfo[playerid][pRobTime])
			{
			 	new minut = floatround(PlayerInfo[playerid][pRobTime]/60),sek = PlayerInfo[playerid][pRobTime] - minut*60;
			 	if(minut) format(string,sizeof(string),"Ты недавно грабuл банк, попробуй через %d минут %d секунд.",minut,sek);
			 	else format(string,sizeof(string),"Ты недавно грабuл банк, попробуй через %d секунд.",sek);
				return SendClientMessage(playerid,COLOR_WHITE, string);
			}
	        if(banksistem[PlayerInfo[playerid][pWorld]-1] == 2)return ErrorMes(playerid,"Полuция еще расследует недавнее ограбление.Ты не можешь проникнуть в хранuлuще незамеченным.");
            if(banksistem[PlayerInfo[playerid][pWorld]-1] == 0)
			{
			    if(RobTimer[PlayerInfo[playerid][pWorld]-1] == 0) RobTimer[PlayerInfo[playerid][pWorld]-1] = 15;
				format(string,sizeof(string),"У тебя есть %d секунд(ы) до срабатывания сигнализацuu.",RobTimer[PlayerInfo[playerid][pWorld]-1]);
				if(!Proniknovenie)Proniknovenie = SetTimer("Pronik",15000,false);
			}
			else if(banksistem[PlayerInfo[playerid][pWorld]-1] == 1) format(string,sizeof(string),"Кто-то уже грабит банк.У тебя есть %d секунд(ы) до закрытия хранuлuща.",RobTimer[PlayerInfo[playerid][pWorld]-1]);
	        SendClientMessage(playerid,COLOR_WHITE,string);
	    }
	    PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
	    if(PlayerInfo[playerid][pWorld] == 1)SetPos(playerid,1435.7402,-1008.9294,2013.7601,0.0,0,1);
	    else if(PlayerInfo[playerid][pWorld] == 2)SetPos(playerid,1435.7402,-1008.9294,3013.7601,0.0,0,2);
	}
 	else if(GetPVarInt(playerid,"BankRobCheck") == 2 || GetPVarInt(playerid,"BankRobCheck") == 8)
    {
    	PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
        SetPos(playerid,2315.5581,0.3544,26.7422,0.0,0,PlayerInfo[playerid][pWorld]);
        RobTimer[PlayerInfo[playerid][pWorld]-1] = 0;
		KillTimer(Proniknovenie);Proniknovenie = 0;
    }
    else if(GetPVarInt(playerid,"BankRobCheck") == 3 || GetPVarInt(playerid,"BankRobCheck") == 9)
    {
    	PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
        //RobTimer[PlayerInfo[playerid][pWorld]-1] = 0;
		KillTimer(Proniknovenie);Proniknovenie = 0;
        if(PlayerInfo[playerid][pWorld] == 1) SetPos(playerid,1520.8666992188,-1011.3131713867,23.715165328979,0.0,0,0);
        else if(PlayerInfo[playerid][pWorld] == 2) SetPos(playerid,-2539.6658,551.3868,14.6191,60.0,0,0);
        FP_GivePlayerMoney(playerid,GetPVarInt(playerid,"RobMoney"));
        DeletePVar(playerid,"RobMoney");
   	}
   	else if(GetPVarInt(playerid,"BankRobCheck") == 4 || GetPVarInt(playerid,"BankRobCheck") == 10)
    {
        if(PlayerInfo[playerid][pCP] == -1)return ErrorMes(playerid, "Взломщик паролей должен быть у тебя в руках.");
		SetTimerEx("VzlomTimer",3000,false,"d",playerid);
		if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный начинает взлом пароля...");
		else format(string, sizeof(string), "* %s начинает взлом пароля...",PlayerInfo[playerid][pName]);
	    ProxDetector(20.0, playerid, string,COLOR_PURPLE);
	    TogglePlayerControllable(playerid,false);
	    DeletePVar(playerid,"BankRobCheck");
	    return 1;
    }
    else if(GetPVarInt(playerid,"BankRobCheck") == 5 || GetPVarInt(playerid,"BankRobCheck") == 11)
    {
        if(PlayerInfo[playerid][pCP] == -1)return ErrorMes(playerid, "Взломщик паролей должен быть у тебя в руках.");
        if(banksistem[PlayerInfo[playerid][pWorld]-1] == 0)return SendClientMessage(playerid, COLOR_LIGHTRED, "Дверь хранuлuща находится под сигнализацией, её нужно отключuть.");
	 	if(IsACop(playerid))
		{
			if(PlayerInfo[playerid][pWorld] == 1)MoveObject(hrandver[0],1412.7796630859,-1014.91796875,2001.3489612340927,0.1);
			else if(PlayerInfo[playerid][pWorld] == 2)MoveObject(hrandver[1],1412.7796630859,-1014.91796875,3001.3489612340927,0.1);
			return 1;
		}
		SetTimerEx("VzlomTimer",5000,false,"d",playerid);
		if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный начинает взлом пароля...");
		else format(string, sizeof(string), "* %s начинает взлом пароля...",PlayerInfo[playerid][pName]);
		ProxDetector(20.0, playerid, string,COLOR_PURPLE);
		TogglePlayerControllable(playerid,false);
		DeletePVar(playerid,"BankRobCheck");
		return 1;
    }
    else if(GetPVarInt(playerid,"BankRobCheck") == 6 || GetPVarInt(playerid,"BankRobCheck") == 12)
    {
    	if(IsACop(playerid)) return 1;
		if(banksistem[PlayerInfo[playerid][pWorld]-1] == 1)return ErrorMes(playerid, "Система защиты от взлома хранuлuща уже отключена.");
		banksistem[PlayerInfo[playerid][pWorld]-1] = 1;
		SetTimerEx("elektrosig",40000,false,"i",PlayerInfo[playerid][pWorld]);
		SendClientMessage(playerid, COLOR_GREEN, "Система защиты от взлома хранuлuща успешно отключена.");
		SendClientMessage(playerid, COLOR_WHITE, "У тебя есть 40 секунд до закрытия хранuлuща.");
		RobTimer[PlayerInfo[playerid][pWorld]-1] = 40;
		KillTimer(Proniknovenie);Proniknovenie = 0;
	}
	else if(GetPVarInt(playerid,"BankRobCheck") == 7 || GetPVarInt(playerid,"BankRobCheck") == 13)
    {
        DeletePVar(playerid,"BankRobCheck");
    	if(GetPVarInt(playerid,"RobMoney") != 0)return ErrorMes(playerid, "Ты уже взял деньги.");
        if(PlayerInfo[playerid][pLevel] == 0) return ErrorMes(playerid, "Грабить банк можно только с 1 уровня.");
		if(PlayerInfo[playerid][pSD] == -1) return ErrorMes(playerid, "Отмычки должны быть у тебя в руках.");
		if(IsACop(playerid) || TeamInfo[playerid][tID] >= DOKI && TeamInfo[playerid][tID] <= ZONE51)return SendClientMessage(playerid, COLOR_WHITE, "Cовесть не позволяет тебе совершuть преступление.");
		if(!RobTimer[PlayerInfo[playerid][pWorld]-1] || Proniknovenie) return ErrorMes(playerid, "Сначала неоходимо отключить сигнализацию.");
    	if(PlayerInfo[playerid][pRobTime] > 0)
		{
		 	new minut = PlayerInfo[playerid][pRobTime]/60;
		 	new sek = PlayerInfo[playerid][pRobTime] - minut*60;
		 	if(minut > 0) format(string,sizeof(string),"Ты недавно грабuл банк, попробуй через %d минут %d секунд.",minut,sek);
		 	else format(string,sizeof(string),"Ты недавно грабuл банк, попробуй через %d секунд.",sek);
			return SendClientMessage(playerid,COLOR_WHITE, string);
		}
    	SetTimerEx("StopGrab",2000,0,"d",playerid);
	    TogglePlayerControllable(playerid,false);
	    return 1;
	}
   	return 1;
}

stock GiveTeamGun(playerid)
{
    if(TeamInfo[playerid][tID] >= LSPD && TeamInfo[playerid][tID] <= FBI)
    {	
	    if(GetPVarInt(playerid,"OnDuty"))
	    {
	    	AddItem(playerid, 24, 140, 0);
			AddItem(playerid, 25, 100, 0);
			AddItem(playerid, 31, 500, 0);
			AddItem(playerid, 69, 1);
			AddItem(playerid, 19, 1, 100);
		}
	}

	else if(TeamInfo[playerid][tID] >= DOKI && TeamInfo[playerid][tID] <= ZONE51)
	{
        AddItem(playerid, 24, 250, 0);
		AddItem(playerid, 29, 500, 0);
		AddItem(playerid, 31, 500, 0);
		AddItem(playerid, 19, 1, 100);
	}
    /*else if(TeamInfo[playerid][tID] == MEDIC)
	{
		if(LicInfo[playerid][GunLic]) AddItem(playerid,24,250,0);
	}*/
	else if(TeamInfo[playerid][tID] == NEWS)
	{
		if(LicInfo[playerid][GunLic]) AddItem(playerid,24,250,0);
		AddItem(playerid,43,500,0);
	}
	else if(TeamInfo[playerid][tID] == LIC)
	{
		if(LicInfo[playerid][GunLic]) AddItem(playerid,24,250,0);
	}
	else if(TeamInfo[playerid][tID] == CASINO)
	{
		if(LicInfo[playerid][GunLic]) AddItem(playerid,24,250,0);
	}
	else if(TeamInfo[playerid][tID] == MER && LicInfo[playerid][GunLic])
	{
		AddItem(playerid,24,250,0);
		AddItem(playerid,25,50,0);
	}
	else if(TeamInfo[playerid][tID] == HUN)
	{
		AddItem(playerid,9,1,0);
	}
	else if(TeamInfo[playerid][tID] == HA)
	{
	    AddItem(playerid,4,1,0);
		if(LicInfo[playerid][GunLic] == 1) AddItem(playerid,23,170,0);
	}
	else if(TeamInfo[playerid][tID] >= LCN && TeamInfo[playerid][tID] <= RIFA)
	{
	    if(TeamInfo[playerid][tID] == YA || TeamInfo[playerid][tID] == TRIADA)AddItem(playerid,8,1);
		else AddItem(playerid,5,1);
		if(LicInfo[playerid][GunLic])
		{
			if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] >= 1 && FractionInfo[TeamInfo[playerid][tID]][oMats] >= 80)
			{
			    AddItem(playerid,22,100);
				FractionInfo[TeamInfo[playerid][tID]][oMats] -= 80;
			}
			if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] >= 2 && FractionInfo[TeamInfo[playerid][tID]][oMats] >= 120)
			{
			    AddItem(playerid,24,50);
				FractionInfo[TeamInfo[playerid][tID]][oMats] -= 120;
			}
			if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] >= 3 && FractionInfo[TeamInfo[playerid][tID]][oMats] >= 150)
			{
			    AddItem(playerid,29,120);
				FractionInfo[TeamInfo[playerid][tID]][oMats] -= 150;
			}
			if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] >= 4 && FractionInfo[TeamInfo[playerid][tID]][oMats] >= 150)
			{
			    AddItem(playerid,25,50);
				FractionInfo[TeamInfo[playerid][tID]][oMats] -= 150;
			}
			if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] >= 5 && FractionInfo[TeamInfo[playerid][tID]][oMats] >= 200)
			{
                AddItem(playerid,30,120);
				FractionInfo[TeamInfo[playerid][tID]][oMats] -= 200;
			}
			new string[128];
			format(string,sizeof(string),"UPDATE `samp_fracs` SET `Mats`='%d' WHERE `ID`='%d'",FractionInfo[TeamInfo[playerid][tID]][oMats],TeamInfo[playerid][tID]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
	}
	else if(TeamInfo[playerid][tID] >= SRACE && TeamInfo[playerid][tID] <= RAST)
	{
	    if(FractionInfo[TeamInfo[playerid][tID]][oMats] >= 120)
		{
		    AddItem(playerid,24,50);
			FractionInfo[TeamInfo[playerid][tID]][oMats] -= 120;
		}
	}
	return 1;
}
stock SearchingHit(playerid)
{ 
	new string[1536],str[48],searchhit;
	ForEachPlayer(i)
	{
	    if(PlayerInfo[i][pHeadValue] && Killer[i] == -1 && TeamInfo[i][tID] != HA && !AdminInfo[i][aLevel] && searchhit < 30)
	    {
			format(str,sizeof(str),"%s[%d], награда: $%d\n",PlayerInfo[i][pName],i,PlayerInfo[i][pHeadValue]);
			strcat(string,str);
			HitList[searchhit] = i;
			searchhit ++;
		}
	}
 	if(!searchhit)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Нет доступных контрактов.");
	    return ShowHitDialog(playerid);
	}
	return ShowPlayerDialog(playerid, D_HIT_CONTRACT,DIALOG_STYLE_LIST,""FPHEAD"Контракты:",string,"Выбрать","Назад");
}
stock SearchingMedic(playerid)
{
	new string[2048],str[128],searchhit;
	ForEachPlayer(i)
	{
	    if(!GetPVarInt(i,"MedicCall") || searchhit > 19)continue;
	    for(new z=0; z < sizeof(ZoneInfo);z++)
		{
		    if(IsPlayerInCubeArea(i,ZoneInfo[z][zone_minx],ZoneInfo[z][zone_maxx],ZoneInfo[z][zone_miny],ZoneInfo[z][zone_maxy],ZoneInfo[z][zone_minz],ZoneInfo[z][zone_maxz]))
			{
				for (new z1=0; z1 < sizeof(ZoneInfoM);z1++)
				{
					if(IsPlayerInCubeArea(i,ZoneInfoM[z1][zone_minx],ZoneInfoM[z1][zone_maxx],ZoneInfoM[z1][zone_miny],ZoneInfoM[z1][zone_maxy],ZoneInfoM[z1][zone_minz],ZoneInfoM[z1][zone_maxz]))
					{
						format(str,sizeof(str),"%s[%d] (%.0f HP), Район: %s, Область: %s", PlayerInfo[i][pName], i, PlayerInfo[i][pHealth], ZoneInfo[z][zone_name], ZoneInfoM[z1][zone_name]);
						strcat(string,str);
						MedicList[searchhit] = i;
						searchhit ++;
					}
				}
			}
		}
 	}
 	if(!searchhit)return ErrorMes(playerid, "Никто не вызывал медика.");
	else ShowPlayerDialog(playerid, D_MEDIC_CALL,DIALOG_STYLE_LIST,""FPHEAD"Вызовы:",string,"Выбрать","Назад");
	return 0;
}
stock SearchingTaxi(playerid)
{
	new string[2048],str[128],searchhit;
	ForEachPlayer(i)
	{
	    if(!GetPVarInt(i,"TaxiCall"))continue;
	    for(new z=0; z < sizeof(ZoneInfo);z++)
		{
		    if(IsPlayerInCubeArea(i,ZoneInfo[z][zone_minx],ZoneInfo[z][zone_maxx],ZoneInfo[z][zone_miny],ZoneInfo[z][zone_maxy],ZoneInfo[z][zone_minz],ZoneInfo[z][zone_maxz]))
			{
				for (new z1=0; z1 < sizeof(ZoneInfoM);z1++)
				{
					if(IsPlayerInCubeArea(i,ZoneInfoM[z1][zone_minx],ZoneInfoM[z1][zone_maxx],ZoneInfoM[z1][zone_miny],ZoneInfoM[z1][zone_maxy],ZoneInfoM[z1][zone_minz],ZoneInfoM[z1][zone_maxz]))
					{
						format(str,sizeof(str),"%s[%d], Район: %s, Область: %s", PlayerInfo[i][pName], i, ZoneInfo[z][zone_name], ZoneInfoM[z1][zone_name]);
						strcat(string,str);
						TaxiList[searchhit] = i;
						searchhit ++;
					}
				}
			}
		}
 	}
 	if(!searchhit)return ErrorMes(playerid, "Никто не вызывал таксиста.");
	else ShowPlayerDialog(playerid, D_TAXI_CALL,DIALOG_STYLE_LIST,""FPHEAD"Вызовы:",string,"Выбрать","Назад");
	return 0;
}
stock SearchingMech(playerid)
{
	new string[2048],str[128],searchhit;
	ForEachPlayer(i)
	{
	    if(!GetPVarInt(i,"MechCall"))continue;
	    for(new z=0; z < sizeof(ZoneInfo);z++)
		{
		    if(IsPlayerInCubeArea(i,ZoneInfo[z][zone_minx],ZoneInfo[z][zone_maxx],ZoneInfo[z][zone_miny],ZoneInfo[z][zone_maxy],ZoneInfo[z][zone_minz],ZoneInfo[z][zone_maxz]))
			{
				for (new z1=0; z1 < sizeof(ZoneInfoM);z1++)
				{
					if(IsPlayerInCubeArea(i,ZoneInfoM[z1][zone_minx],ZoneInfoM[z1][zone_maxx],ZoneInfoM[z1][zone_miny],ZoneInfoM[z1][zone_maxy],ZoneInfoM[z1][zone_minz],ZoneInfoM[z1][zone_maxz]))
					{
						format(str,sizeof(str),"%s[%d], Район: %s, Область: %s", PlayerInfo[i][pName], i, ZoneInfo[z][zone_name], ZoneInfoM[z1][zone_name]);
						strcat(string,str);
						MechList[searchhit] = i;
						searchhit ++;
					}
				}
			}
		}
 	}
 	if(!searchhit)return ErrorMes(playerid, "Никто не вызывал механика.");
	else ShowPlayerDialog(playerid, D_MECH_CALL,DIALOG_STYLE_LIST,""FPHEAD"Вызовы:",string,"Выбрать","Назад");
	return 0;
}
stock JobOn(playerid,jobid)
{
	new string[128];
    if(jobid == J_LOADER)
	{
	    if(GetPVarInt(playerid,"OnJob") != J_LOADER)
	    {
			if(TeamInfo[playerid][tID])return ErrorMes(playerid,"Данная работа недоступна фракциям.");
		    SetPVarInt(playerid,"OnJob",J_LOADER);
			FP_DisablePlayerRaceCheckpoint(playerid);
			SetPlayerSkin(playerid,27);
			switch(random(3))
			{
			    case 0: FP_SetPlayerRaceCheckpoint(playerid,1,2194.0007,-2284.9656,15.9408,0.0,0.0,0.0,1.5);
			    case 1: FP_SetPlayerRaceCheckpoint(playerid,1,2188.4128,-2297.6790,13.6695,0.0,0.0,0.0,1.5);	
			    case 2: FP_SetPlayerRaceCheckpoint(playerid,1,2183.1956,-2301.5183,13.6695,0.0,0.0,0.0,1.5);
			}
			JobMes(playerid,"Переноси ящики из контейнера на продуктовый склад.");
		}
		else
		{
		    FP_GivePlayerMoney(playerid,GetPVarInt(playerid,"JobPrice"));
		    format(string,sizeof(string),"{FFD700}[РАБОТА]{FFFFFF} Ты получuл(а) {228B22}$%d{FFFFFF} за свою работу. Приходи еще.",GetPVarInt(playerid,"JobPrice"));
	        SendClientMessage(playerid,0xFFFFFFFF,string);
		    DeletePVar(playerid,"OnJob");
			DeletePVar(playerid,"AttachObject"); 
			DeletePVar(playerid,"JobAmmount"); 
		    DeletePVar(playerid,"JobPrice");
		    if(TeamInfo[playerid][tID]) SetPlayerSkin(playerid,TeamInfo[playerid][tSkin]);
		    else SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
		    FP_DisablePlayerRaceCheckpoint(playerid);
		    RemovePlayerAttachedObject(playerid,0);
		}
		return 1;
	}
	else if(jobid == J_FOREST)
	{
	    if(GetPVarInt(playerid,"OnJob") != J_FOREST)
	    {
			if(TeamInfo[playerid][tID])return ErrorMes(playerid,"Данная работа недоступна фракциям.");
		    SetPVarInt(playerid,"OnJob",J_FOREST);
			FP_DisablePlayerRaceCheckpoint(playerid);
			SetPlayerSkin(playerid,27);
			SetPVarInt(playerid,"ForestPlace",random(5));
			SetPlayerRaceCheckpoint(playerid, 1, ForestPos[GetPVarInt(playerid,"ForestPlace")][0], ForestPos[GetPVarInt(playerid,"ForestPlace")][1], ForestPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
			JobMes(playerid,"Пили деревья и относи дрова на склад.");
		}
		else
		{
		    FP_GivePlayerMoney(playerid,GetPVarInt(playerid,"JobPrice"));
		    format(string,sizeof(string),"{FFD700}[РАБОТА]{FFFFFF} Ты получuл(а) {228B22}$%d{FFFFFF} за свою работу. Приходи еще.",GetPVarInt(playerid,"JobPrice"));
	        SendClientMessage(playerid,0xFFFFFFFF,string);
		    DeletePVar(playerid,"OnJob");
			DeletePVar(playerid,"AttachObject"); 
			DeletePVar(playerid,"JobAmmount"); 
		    DeletePVar(playerid,"JobPrice");
		    if(TeamInfo[playerid][tID]) SetPlayerSkin(playerid,TeamInfo[playerid][tSkin]);
		    else SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
		    FP_DisablePlayerRaceCheckpoint(playerid);
		    RemovePlayerAttachedObject(playerid,0);
		}
		return 1;
	}
	else if(jobid == J_STEEL)
	{
	    if(GetPVarInt(playerid,"OnJob") != J_STEEL)
	    {
			if(TeamInfo[playerid][tID])return ErrorMes(playerid,"Данная работа недоступна фракциям.");
		    SetPVarInt(playerid,"OnJob",J_STEEL);
			FP_DisablePlayerRaceCheckpoint(playerid);
			SetPlayerSkin(playerid,27);
			SetPVarInt(playerid,"ForestPlace",random(5));
			SetPlayerRaceCheckpoint(playerid, 1, SteelPos[GetPVarInt(playerid,"ForestPlace")][0], SteelPos[GetPVarInt(playerid,"ForestPlace")][1], SteelPos[GetPVarInt(playerid,"ForestPlace")][2],0.0,0.0,0.0,1.5);
			JobMes(playerid,"Добывай руду и неси в плавильню.");
		}
		else
		{
		    FP_GivePlayerMoney(playerid,GetPVarInt(playerid,"JobPrice"));
		    format(string,sizeof(string),"{FFD700}[РАБОТА]{FFFFFF} Ты получuл(а) {228B22}$%d{FFFFFF} за свою работу. Приходи еще.",GetPVarInt(playerid,"JobPrice"));
	        SendClientMessage(playerid,0xFFFFFFFF,string);
		    DeletePVar(playerid,"OnJob");
			DeletePVar(playerid,"AttachObject"); 
			DeletePVar(playerid,"JobAmmount"); 
		    DeletePVar(playerid,"JobPrice");
		    if(TeamInfo[playerid][tID]) SetPlayerSkin(playerid,TeamInfo[playerid][tSkin]);
		    else SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
		    FP_DisablePlayerRaceCheckpoint(playerid);
		    RemovePlayerAttachedObject(playerid,0);
		}
		return 1;
	}
	
    SetPVarInt(playerid,"GettingJob",jobid);
	if(jobid == BDG)
	{
	    if(PlayerInfo[playerid][pJob] != 0)return ErrorMes(playerid,"У тебя уже есть работа.");
	    if(PlayerInfo[playerid][pLevel] < 3)return ErrorMes(playerid,"Данная работа доступна с 3 уровня.");
		ShowPlayerDialog(playerid,D_JOB,DIALOG_STYLE_MSGBOX,""FPHEAD"Телохранитель","{F5DEB3}Работа: Продаешь игрокам легкuй бронежuлет.\n\
						     										Оплата: Самостоятельно выбираешь стоимость брони.\n\
							 										Ограничения: \n\
							 										Ты хочешь устроuться на работу?","Да","Нет");
	}
	if(jobid == STR)
	{
	    if(PlayerInfo[playerid][pJob] != 0)return ErrorMes(playerid,"У тебя уже есть работа.");
	    if(PlayerInfo[playerid][pLevel] < 2)return ErrorMes(playerid,"Данная работа доступна со 2 уровня.");
		ShowPlayerDialog(playerid,D_JOB,DIALOG_STYLE_MSGBOX,""FPHEAD"Страховщик","{F5DEB3}Работа: Страхуешь транспорт игроков.\n\
						     										Оплата: Выбираешь самостоятельно.\n\
							 										Ограничения: \n\
							 										Ты хочешь устроuться на работу?","Да","Нет");

	}
	if(jobid == MECH)
	{
	    if(PlayerInfo[playerid][pJob] != 0)return ErrorMes(playerid,"У тебя уже есть работа.");
	    if(PlayerInfo[playerid][pLevel] < 2)return ErrorMes(playerid,"Данная работа доступна со 2 уровня.");
		ShowPlayerDialog(playerid,D_JOB,DIALOG_STYLE_MSGBOX,""FPHEAD"Механик","{F5DEB3}Работа: Чинишь u заправляешь транспорт.\n\
						     										Оплата: Выбираешь самостоятельно.\n\
																	Ограничения: \n\
							 										Ты хочешь устроuться на работу?","Да","Нет");
	}
	if(jobid == TRUCK)
	{
	    if(PlayerInfo[playerid][pJob] != 0)return ErrorMes(playerid,"У тебя уже есть работа.");
	    if(PlayerInfo[playerid][pLevel] < 1)return ErrorMes(playerid,"Данная работа доступна с 1 уровня.");
		ShowPlayerDialog(playerid,D_JOB,DIALOG_STYLE_MSGBOX,""FPHEAD"Дальнобойщик","{F5DEB3}Работа: Садишься в грузовик, цепляешь трейлер u везешь груз в указанное место.\n\
						     										Оплата: 1.000$-5.000$ при успешной доставке груза.\n\
							 										Ограничения: Интервал между заказами - от 15 до 10 минут.\n\
							 										Ты хочешь устроuться на работу?","Да","Нет");
	}
	if(jobid == GUNNER)
	{
	    if(PlayerInfo[playerid][pJob] != 0)return ErrorMes(playerid,"У тебя уже есть работа.");
	    if(TeamInfo[playerid][tID] < LCN)return ErrorMes(playerid,"Данная работа доступна только бандам u мафиям.");
		ShowPlayerDialog(playerid,D_JOB,DIALOG_STYLE_MSGBOX,""FPHEAD"Продавец оружия","{F5DEB3}Работа: Закупаешь пакеты на складе u везешь на фабрику\nИз полученных на фабрике матерuалов собираешь u продаешь оружие.\n\
						     									Оплата: Самостоятельно выбираешь стоимость оружия.\n\
							 									Ограничения: Стоимость u размер закупки зависит от скuла.\n\
							 									Вы хотите устроuться на работу?","Да","Нет");
	}
	if(jobid == GUNNER_GET)
	{
	    if(PlayerInfo[playerid][pJob] != GUNNER)return ErrorMes(playerid,"Ты не продавец оружия.");
		cmd_materials(playerid,"get");
	}
	if(jobid == GUNNER_DELIVER)
	{
	    if(PlayerInfo[playerid][pJob] != GUNNER)return ErrorMes(playerid,"Ты не продавец оружия.");
		cmd_materials(playerid,"deliver");
	}
	if(jobid == DRUGER)
	{
	    if(PlayerInfo[playerid][pJob] != 0)return ErrorMes(playerid,"У тебя уже есть работа.");
	    if(TeamInfo[playerid][tID] < LCN)return ErrorMes(playerid,"Данная работа доступна только бандам u мафиям.");
		ShowPlayerDialog(playerid,D_JOB,DIALOG_STYLE_MSGBOX,""FPHEAD"Продавец наркотиков","{F5DEB3}Работа: Закупаешь наркотики на складе u продаешь клиентам.\n\
						     										Оплата: Самостоятельно выбираешь стоимость наркотиков.\n\
							 										Ограничения: Стоимость u размер закупки зависит от скuла.\n\
							 										Вы хотите устроuться на работу?","Да","Нет");
	}
	if(jobid == DRUGER_GET)
	{
	    if(PlayerInfo[playerid][pJob] != DRUGER)return ErrorMes(playerid,"Ты не продавец наркотиков.");
		cmd_gevDrugs(playerid,"");
	}
	if(jobid == JACK)
	{
	    if(PlayerInfo[playerid][pJob] != 0)return ErrorMes(playerid,"У тебя уже есть работа.");
	    if(TeamInfo[playerid][tID] < LCN)return ErrorMes(playerid,"Данная работа доступна только бандам u мафиям.");
		ShowPlayerDialog(playerid,D_JOB,DIALOG_STYLE_MSGBOX,""FPHEAD"Автоугонщик","{F5DEB3}Работа: Угоняешь машину u везешь на точку сбыта.\n\
						     										Оплата: От $1000 до $6000.\n\
							 										Ограничения: Время u оплата закупки зависит от скuла.\n\
							 										Вы хотите устроuться на работу?","Да","Нет");
	}
	if(jobid == DET)
	{
	    if(PlayerInfo[playerid][pJob] != 0)return ErrorMes(playerid,"У тебя уже есть работа.");
	    if(PlayerInfo[playerid][pLevel] < 3)return ErrorMes(playerid,"Данная работа доступна с 3 уровня.");
	    if(TeamInfo[playerid][tID] > 0 && TeamInfo[playerid][tID] != HA)return ErrorMes(playerid,"Данная работа недоступна фракциям.");
		ShowPlayerDialog(playerid,D_JOB,DIALOG_STYLE_MSGBOX,""FPHEAD"Детектив","{F5DEB3}Работа: Поиск людей.\n\
						     										Оплата: Выбираешь самостоятельно.\n\
																	Ограничения: Зависит от ранга.\n\
							 										Ты хочешь устроuться на работу?","Да","Нет");
	}
	DeletePVar(playerid,"JobCheck");
	return 1;
}
stock JobOff(playerid)
{ 
	ShowPlayerDialog(playerid,D_JOBOFF,DIALOG_STYLE_MSGBOX,""FPHEAD"Увольнение","{F5DEB3}Ты действительно хочешь уволuться с работы?","Да","Нет");
	DeletePVar(playerid,"JobCheck");
	return 1;
}
stock TeamOnline(team)
{ 
	new f;
	ForEachPlayer(i)
	{
		if(TeamInfo[i][tID] != team)continue;
		f++;
	}
	return f;
}
stock ShowMembersOnline(playerid)
{ 
    new string[1024],str[128],f;
    if(!TeamInfo[playerid][tID])return ErrorMes(playerid,"Ты не состоишь во фракцuu.");
	ForEachPlayer(i)
	{
		if(TeamInfo[i][tID] != TeamInfo[playerid][tID] || TeamInfo[i][tID] == 0)continue;
		if(TeamInfo[i][tType]) format(str,sizeof(str),"%s[%d] (Лидер)\n",PlayerInfo[i][pName],i);
		else format(str,sizeof(str),"%s[%d], Ранг: %d, Выговоры: %d\n",PlayerInfo[i][pName],i,TeamInfo[i][tRank],TWarnInfo[i][wWarns]);
		strcat(string,str);
		f++;
	}
	if(f == 0)return ErrorMes(playerid,"В данный момент на сервере нет членов фракции.");
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_LIST,""FPHEAD"Члены фракцuu онлайн:",string,"OK","");
	return 1;
}

stock ShowWantedOnline(playerid)
{
    new string[1024],str[128],f;
	ForEachPlayer(i)
	{
	    if(!PlayerInfo[i][pWanted])continue;
	    if(!strlen(CrimeInfo[i][pCrime])) strmid(CrimeInfo[i][pCrime], "Неизвестно", 0, strlen("Неизвестно"), 32);
		format(str,sizeof(str),"%s[%d] Розыск: %d , Преступление: %s\n",PlayerInfo[i][pName],i,PlayerInfo[i][pWanted],CrimeInfo[i][pCrime]);
		strcat(string,str);
		f++;
	}
	if(f == 0)return ErrorMes(playerid,"Список нарушителей порядка пуст.");
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_LIST,""FPHEAD"Список разыскиваемых:",string,"OK","");
	return 1;
}
stock ShowLeadersOnline(playerid)
{
    new string[2048],str[128],f;
	ForEachPlayer(i)
	{
		if(!TeamInfo[i][tType])continue;
		else if(TeamInfo[i][tType] == 1) format(str,sizeof(str),"%s: %s[%d] (Зам.)\n",GetTeamName(TeamInfo[i][tID]),PlayerInfo[i][pName],i);
		else if(TeamInfo[i][tType] == 2) format(str,sizeof(str),"%s: %s[%d]\n",GetTeamName(TeamInfo[i][tID]),PlayerInfo[i][pName],i);
		strcat(string,str);
		f++;
	}
	if(!f)return ErrorMes(playerid,"В данный момент на сервере нет лидеров.");
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_LIST,""FPHEAD"Лидеры онлайн:",string,"OK","");
	return 1;
}
stock SText(playerid)
{
    PlayerTextDrawShow(playerid, Helper[playerid]);
	
	if(GetPlayerState(playerid) == 1) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ОТКРЫТЬ ШЛАГБАУМ"));
	else PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~VEHICLE_HORN~~w~ ЧТОБЫ ОТКРЫТЬ ШЛАГБАУМ"));
	SetPVarInt(playerid,"GateCheck",1);
	return 1;
}
stock GText(playerid)
{ 
    PlayerTextDrawShow(playerid, Helper[playerid]);
	
	if(GetPlayerState(playerid) == 1) PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ОТКРЫТЬ ВОРОТА"));
	else PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~VEHICLE_HORN~~w~ ЧТОБЫ ОТКРЫТЬ ВОРОТА"));
	SetPVarInt(playerid,"GateCheck",1);
	return 1;
}
stock DText(playerid)
{ 
    PlayerTextDrawShow(playerid, Helper[playerid]);
	
	if(GetPlayerState(playerid) == 1)PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~SNEAK_ABOUT~~w~ ЧТОБЫ ОТКРЫТЬ ДВЕРЬ"));
	SetPVarInt(playerid,"GateCheck",1);
	return 1;
}
stock OpenGate(playerid)//Откытие ворот,дверей u чекпоинтов
{
	SetTimerEx("ClearGateCheck",2500,false,"i",playerid);
	if(IsPlayerInRangeOfPoint(playerid,10,-2043.7904052734,-80.300003051758,34.921859741211))
	{
		MoveDynamicObject(SchoolS,-2043.7904052734,-80.300003051758,34.921+0.001,0.001,0,0,0);
		SetTimerEx("CloseSchoolS",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1544.6999511719,-1630.6999511719,13.179565429688))
	{
		MoveDynamicObject(PoliceS[0],1544.6999511719,-1630.6999511719,13.179+0.001,0.001,0,0,90);
		SetTimerEx("CloseLSPDS",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1580,-1606.8298339844,13.132816314697))
	{
		MoveDynamicObject(PoliceS[1],1580,-1606.8298339844,13.1328+0.001,0.001,0,0,270);
		SetTimerEx("CloseLSPDS2",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1592.6000976563,-1638.0947265625,14.929574966431) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		MoveDynamicObject(PoliceG[0],1592.6000976563,-1638.0947265625,14.929574966431+5,2);
		SetTimerEx("CloseLSPDG",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,4,1584.0598144531,-1637.9163818359,13.888319015503) && GetPlayerState(playerid) == 1)
	{
		MoveDynamicObject(PoliceD[0],1584.0598144531 - 3,-1637.9163818359,13.888319015503,2);
		SetTimerEx("CloseLSPDD",3000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Двери будут автоматически закрыты через 3 секунды"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-2126.3918457031,-80.953262329102,37.093704223633))
	{
		MoveDynamicObject(StreetG,-2115.3918457031,-80.953262329102,37.093704223633,2);
		SetTimerEx("CloseStreetG",6000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 6 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1637.5649414063,1836.6199951172,10.520301818848))
	{
		MoveDynamicObject(MedicS[0],1637.5649414063,1836.6199951172,10.5203+0.001,0.001,0,0,270);
		SetTimerEx("CloseSAMDS0",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1577.2600097656,1836.9532470703,10.505041122437))
	{
		MoveDynamicObject(MedicS[1],1577.2600097656,1836.9532470703,10.5050+0.001,0.001,0,0,270);
		SetTimerEx("CloseSAMDS1",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-2612,628,14.204555511475))
	{
		MoveDynamicObject(MedicS[2],-2612,628,14.2045+0.001,0.001,0,0,90);
		SetTimerEx("CloseSAMDS2",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-2663.5,578.09997558594,14.233460426331))
	{
		MoveDynamicObject(MedicS[3],-2663.5,578.09997558594,14.2334+0.001,0.001,0,0,0);
		SetTimerEx("CloseSAMDS3",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1144.6500244141,-1291.5,13.39999961853))
	{
		MoveDynamicObject(MedicS[4],1144.6500244141,-1291.5,13.3999+0.001,0.001,0,0,0);
		SetTimerEx("CloseSAMDS4",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-1701.431640625,687.61090087891,24.682815551758))
	{
		MoveDynamicObject(PoliceS[2],-1701.431640625,687.61090087891,24.6828+0.001,0.001,0,0,270);
		SetTimerEx("CloseSFPDS",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-1572.1981201172,658.86138916016,6.903124332428))
	{
		MoveDynamicObject(PoliceS[3],-1572.1981201172,658.86138916016,6.9031+0.001,0.001,0,0,90);
		SetTimerEx("CloseSFPDS2",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-1631.7344970703,688.26672363281,8.7092628479004) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		MoveDynamicObject(PoliceG[1],-1631.7344970703,688.26672363281,13.7092628479004,2);
		SetTimerEx("CloseSFPDG",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,4,-1620.4948730469,688.12200927734,8.5112857818604) && GetPlayerState(playerid) == 1)
	{
		MoveDynamicObject(PoliceD[3],-1620.4948730469,688.12200927734,11.5112857818604,2);
		SetTimerEx("CloseSFPDD",3000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Двери будут автоматически закрыты через 3 секунды"),2500,3);
	}

	else if(IsPlayerInRangeOfPoint(playerid,10,2238.1779785156,2450.4128417969,10.638172149658))
	{
		MoveDynamicObject(PoliceS[4],2238.1779785156,2450.4128417969,10.6381+0.001,0.001,0,0,90);
		SetTimerEx("CloseLVPDS",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,2334.8742675781,2443.0551757813,7.1970891952515) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		MoveDynamicObject(PoliceG[2],2334.8742675781,2443.0551757813,12.1970891952515,2);
		SetTimerEx("CloseLVPDG",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,2293.9038085938,2498.8479003906,4.4465570449829) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		MoveDynamicObject(PoliceG[3],2293.9038085938,2498.8479003906,9.4465570449829,2);
		SetTimerEx("CloseLVPDG2",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,4,2293.8784179688,2494.3864746094,3.7715213298798) && GetPlayerState(playerid) == 1)
	{
		MoveDynamicObject(PoliceD[4],2293.8784179688,2492.5064746094,3.7715213298798,2);
		SetTimerEx("CloseLVPDD",3000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Двери будут автоматически закрыты через 3 секунды"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-1547.9007568359,518.48699951172,6.9368948936462))
	{
		MoveDynamicObject(ArmaS,-1547.9007568359,518.48699951172,6.9368+0.001,0.001,0,0,85);
		SetTimerEx("CloseEBS",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-2016.5184326172,471.12432861328,34.996864318848))
	{
		MoveDynamicObject(NewsS,-2016.5184326172,471.12432861328,34.9968+0.001,0.001,0,0,270);
		SetTimerEx("CloseSFNS",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,246.13708496094,72.5,1003.9000244141) && GetPlayerState(playerid) == 1)
	{
		MoveDynamicObject(PoliceD[1],247.63708496094,72.5,1003.9000244141,2);
		MoveDynamicObject(PoliceD[2],245.14151000977,72.5,1003.9000244141,2);
		SetTimerEx("CloseLSPDd",3000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Двери будут автоматически закрыты через 3 секунды"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,2430.6103515625,1623.0999755859,10.42858505249))
	{
		MoveDynamicObject(TAXIS[0],2430.6103515625,1623.0999755859,10.4285+0.001,0.001,0,0,0);
		SetTimerEx("CloseTAXIS0",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,2490.7287597656,1623.0999755859,10.420300483704))
	{
		MoveDynamicObject(TAXIS[1],2490.7287597656,1623.0999755859,10.4203+0.001,0.001,0,0,0);
		SetTimerEx("CloseTAXIS1",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,2430.9084472656,1703.4080810547,10.456097602844))
	{
		MoveDynamicObject(TAXIS[2],2430.9084472656,1703.4080810547,10.4560+0.001,0.001,0,0,0);
		SetTimerEx("CloseTAXIS2",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-2198.5,310.173828125,38.116401672363))
	{
		MoveDynamicObject(PoliceG[4],-2198.5,310.173828125,38.116401672363+5,2);
		SetTimerEx("CloseCOPSFG2",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,15,2719.92285,-2500.1757,12.6461 ))
	{
		MoveDynamicObject(ArmaG[0],2719.92285,-2500.1757,12.6461,3);
		SetTimerEx("CloseArma0",5000,false,"f",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,15, 2719.9111328125,-2401.51171875,12.610935211182))
	{
	    MoveDynamicObject(ArmaG[1],2719.9111328125,-2401.51171875,12.610935211182,3);
	    SetTimerEx("CloseArma1",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,15, 2774.2646484375,-2417.7998046875,18.817487716675))
	{
	    MoveDynamicObject(ArmaG[2],2774.2646484375,-2417.7998046875,18.817487716675,3);
	    SetTimerEx("CloseArma2",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10, 2774.3486328125,-2455.802734375,18.817487716675))
	{
	    MoveDynamicObject(ArmaG[3],2774.3486328125,-2455.802734375,18.817487716675,3);
	    SetTimerEx("CloseArma3",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,15, 2774.244140625,-2493.9267578125,18.817487716675))
	{
	    MoveDynamicObject(ArmaG[4],2774.244140625,-2493.9267578125,18.817487716675,3);
	    SetTimerEx("CloseArma4",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Ворота будут автоматически закрыты через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,-1991.6520996094,545.98077392578,34.765609741211))
	{
		MoveDynamicObject(FbiS,-1991.6520996094,545.98077392578,34.7656+0.001,0.001,0,0,90);
		SetTimerEx("CloseFbiS",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	
	else if(IsPlayerInRangeOfPoint(playerid,10,1760.20, 532.65, 26.60))
	{
		MoveDynamicObject(PostS[0],1760.20, 532.65, 26.6000+0.001,0.001,0,0,340);
		SetTimerEx("ClosePostS0",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1751.22, 535.72, 26.60))
	{
		MoveDynamicObject(PostS[1],1751.22, 535.72, 26.6000+0.001,0.001,0,0,340);
		SetTimerEx("ClosePostS1",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1736.67, 520.61, 27.53))
	{
		MoveDynamicObject(PostS[2],1736.67, 520.61, 27.5300+0.001,0.001,0,0,340);
		SetTimerEx("ClosePostS2",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1727.87, 523.76, 27.53))
	{
		MoveDynamicObject(PostS[3],1727.87, 523.76, 27.5300+0.001,0.001,0,0,340);
		SetTimerEx("ClosePostS3",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,52.3515625,-1534.7744140625,4.795916557312))
	{
		MoveDynamicObject(PostS[4],52.3515625,-1534.7744140625,4.7959+0.001,0.001,0,0,82.75);
		SetTimerEx("ClosePostS4",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,53.375,-1528.6474609375,4.7856683731079))
	{
		MoveDynamicObject(PostS[5],53.375,-1528.6474609375,4.7856+0.001,0.001,0,0,261.75);
		SetTimerEx("ClosePostS5",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,614.07104492188,-1199.6805419922,17.784364700317))
	{
		MoveDynamicObject(PostS[6],614.07104492188,-1199.6805419922,17.7843+0.001,0.001,0,0,19);
		SetTimerEx("ClosePostS6",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,628.03521728516,-1194.0726318359,17.891927719116))
	{
		MoveDynamicObject(PostS[7],628.03521728516,-1194.0726318359,17.8919+0.001,0.001,0,0,204);
		SetTimerEx("ClosePostS7",5000,false,"i",playerid);
		GameTextForPlayer(playerid,FixText("~w~Шлагбаум будет автоматически закрыт через 5 секунд"),2500,3);
	}
	return 1;
}
stock Jail(playerid)
{
	new rand = random(4);
	if(JailInfo[playerid][jID] == LSPD)
 	{
        if(rand == 0) SetPos(playerid,264.46627807617,82.381126403809,1001.0390625,0.0,6,LSPD);
		else if(rand == 1) SetPos(playerid,264.43045043945,87.011795043945,1001.0390625,0.0,6,LSPD);
		else if(rand == 2) SetPos(playerid,219.87768554688,69.165153503418,1005.0390625,0.0,6,LSPD);
		else if(rand == 3) SetPos(playerid,217.57272338867,78.175140380859,1005.0390625,0.0,6,LSPD);
	}
	else if(JailInfo[playerid][jID] == SFPD)
	{
		if(rand == 0) SetPos(playerid,227.23985290527,110.16992950439,999.015625,0.0,10,SFPD);
		else if(rand == 1) SetPos(playerid,222.99754333496,110.15985107422,999.015625,0.0,10,SFPD);
		else if(rand == 2) SetPos(playerid,218.87197875977,109.90370941162,999.015625,0.0,10,SFPD);
		else if(rand == 3) SetPos(playerid,214.82757568359,109.73677062988,999.015625,0.0,10,SFPD);
	}
	else if(JailInfo[playerid][jID] == FBI)
	{
		if(rand == 0) SetPos(playerid,227.23985290527,110.16992950439,999.015625,0.0,10,FBI);
		else if(rand == 1) SetPos(playerid,222.99754333496,110.15985107422,999.015625,0.0,10,FBI);
		else if(rand == 2) SetPos(playerid,218.87197875977,109.90370941162,999.015625,0.0,10,FBI);
		else if(rand == 3) SetPos(playerid,214.82757568359,109.73677062988,999.015625,0.0,10,FBI);
	}
	else
	{
	    if(rand == 0) SetPos(playerid,264.46627807617,82.381126403809,1001.0390625,0.0,6,LSPD);
		else if(rand == 1) SetPos(playerid,264.43045043945,87.011795043945,1001.0390625,0.0,6,LSPD);
		else if(rand == 2) SetPos(playerid,219.87768554688,69.165153503418,1005.0390625,0.0,6,LSPD);
		else if(rand == 3) SetPos(playerid,217.57272338867,78.175140380859,1005.0390625,0.0,6,LSPD);
	}
	return 1;
}
stock UnJail(playerid)
{ 
    if(JailInfo[playerid][jID] == LSPD) SetPos(playerid,246.12194824219,69.04972076416,1003.640625,0.0,6,LSPD);
	else if(JailInfo[playerid][jID] == SFPD) SetPos(playerid,241.71095275879,115.88655853271,1003.2257080078,0.0,10,SFPD);
	else if(JailInfo[playerid][jID] == FBI) SetPos(playerid,241.71095275879,115.88655853271,1003.2257080078,0.0,10,FBI);
	
	JailInfo[playerid][jID] = 0;
    JailInfo[playerid][jPrice] = 0;
	JailInfo[playerid][jDate] = EOS;
	JailInfo[playerid][jCop] = EOS;
	JailInfo[playerid][jReason] = EOS;
	
	new string[64];
	format(string,sizeof(string),"DELETE FROM `samp_jail` WHERE `Name`='%s'",PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

    SendClientMessage(playerid,COLOR_WHITE,"Поздравляю, ты отсидел свой срок.");
	return 1;
}
stock TempBan(PlayerName[],PlayerIP[],AdminName[],days,reason[])
{ 
	new string[320];
	format(string, sizeof(string), "INSERT INTO `samp_bans` (Name, Admin, IP, Date, Time, Days, Reason) VALUES('%s', '%s', '%s', '%02d.%02d.%d %02d:%02d:%02d', '%d', '%d', '%s')", PlayerName, AdminName, PlayerIP, Day,Month,Year,Hour,Minute,Second, (GetTime+days*24*60*60), days, reason);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

	return 1;
}

stock FixText(string[])
{
	new result[256];
    for(new i; i < 256; i++)
	{
    	switch(string[i])
		{
        	case 'а':result[i] = 'a';
			case 'А':result[i] = 'A';
            case 'б':result[i] = '—';
            case 'Б':result[i] = 'Ђ';
            case 'в':result[i] = 'ў';
            case 'В':result[i] = '‹';
            case 'г':result[i] = '™';
            case 'Г':result[i] = '‚';
            case 'д':result[i] = 'љ';
            case 'Д':result[i] = 'ѓ';
            case 'е':result[i] = 'e';
            case 'Е':result[i] = 'E';
            case 'ё':result[i] = 'e';
            case 'Ё':result[i] = 'E';
            case 'ж':result[i] = '›';
            case 'Ж':result[i] = '„';
            case 'з':result[i] = 'џ';
            case 'З':result[i] = '€';
            case 'и':result[i] = 'њ';
            case 'И':result[i] = '…';
            case 'й':result[i] = 'њ';
            case 'Й':result[i] = '…';
            case 'к':result[i] = 'k';
            case 'К':result[i] = 'K';
            case 'л':result[i] = 'ћ';
            case 'Л':result[i] = '‡';
            case 'м':result[i] = 'Ї';
            case 'М':result[i] = 'M';
            case 'н':result[i] = '®';
            case 'Н':result[i] = '­';
            case 'о':result[i] = 'o';
            case 'О':result[i] = 'O';
            case 'п':result[i] = 'Ј';
            case 'П':result[i] = 'Њ';
            case 'р':result[i] = 'p';
            case 'Р':result[i] = 'P';
            case 'с':result[i] = 'c';
            case 'С':result[i] = 'C';
            case 'т':result[i] = '¦';
            case 'Т':result[i] = 'Џ';
            case 'у':result[i] = 'y';
            case 'У':result[i] = 'Y';
            case 'ф':result[i] = 'Ѓ';
            case 'Ф':result[i] = 'Ѓ';
            case 'х':result[i] = 'x';
            case 'Х':result[i] = 'X';
            case 'ц':result[i] = ' ';
            case 'Ц':result[i] = '‰';
            case 'ч':result[i] = '¤';
            case 'Ч':result[i] = 'Ќ';
            case 'ш':result[i] = 'Ґ';
            case 'Ш':result[i] = 'Ћ';
            case 'щ':result[i] = 'Ў';
            case 'Щ':result[i] = 'Љ';
            case 'ь':result[i] = '©';
            case 'Ь':result[i] = '’';
            case 'ъ':result[i] = 'ђ';
            case 'Ъ':result[i] = '§';
            case 'ы':result[i] = 'Ё';
            case 'Ы':result[i] = '‘';
            case 'э':result[i] = 'Є';
            case 'Э':result[i] = '“';
            case 'ю':result[i] = '«';
            case 'Ю':result[i] = '”';
            case 'я':result[i] = '¬';
            case 'Я':result[i] = '•';
            default:result[i]=string[i];
    	}
	}
    return result;
}
stock ShowBankDialog(playerid)
{
	new string[128];
	format(string, sizeof(string),"Баланс банковского счета: %d$\nПеревести на другой счет",PlayerInfo[playerid][pMoney]);
	ShowPlayerDialog(playerid,D_BANKOMAT,DIALOG_STYLE_LIST,""FPHEAD"Банкомат",string,"Выбрать","Выйти");
	return 1;
}
stock ShowTransferDialog(playerid)
{
	new string[128];
	format(string,sizeof(string),"Получатель: %s\nСколько денег вы хотите перевети на счет?",PlayerInfo[GetPVarInt(playerid,"Transfer")][pName]);
	ShowPlayerDialog(playerid,D_BANKOMAT_PEREVOD_SUMMA,DIALOG_STYLE_INPUT,""FPHEAD"Перевод денег",string,"Выбрать","Назад");
	return 1;
}
stock ShowRulesDialog(playerid)
{
	new string[1280];
	
	strcat(string,"{00CC00}Ники игроков:{F5DEB3}\n\n");
	strcat(string,"- Ник не должен быть похож на ники других игроков.\n");
	strcat(string,"- Ник не должен содержать нецензурных слов или рекламу.\n\n");
	strcat(string,"{00CC00}Правила чатов:{F5DEB3}\n\n");
	strcat(string,"- Запрещена любая реклама, некасающаяся портала SAMP Stories.\n");
	strcat(string,"- Запрещены флуд, мат, оскорбления и засорение публичных чатов.\n");
	strcat(string,"- Запрещены оскорбления игроков и родственников игроков.\n");
	strcat(string,"- Запрещен CAPS (написание сообщения заглавными буквами).\n\n");
	strcat(string,"{00CC00}Игровой процесс:{F5DEB3}\n\n");
	strcat(string,"- Запрещено использовать любые программы, дающие преимущество над другими.\n");
	strcat(string,"- Запрещен SpawnKill (убийство игроков на месте их возрождения).\n");
	strcat(string,"- Запрещено использовать любые баги и недоработки игрового сервера.\n");
	strcat(string,"- Запрещено подстрекать других игроков на нарушение правил сервера.\n");
	strcat(string,"- Запрешен Drive-By (убийство игроков с транспортного средства).\n");
	strcat(string,"- Запрещены любые продажи игровых благ за реальные деньги.\n\n");
	strcat(string,"{00CC00}Игровой аккаунт:{FF0000}\n\n");
	strcat(string,"- Запрещено передавать или продавать свой аккаунт вторым лицам.\n");
	strcat(string,"- Запрещено передавать пароли другим игрокам, даже администрации.\n");
	strcat(string,"- Используйте сложные пароли, чтобы избежать взлома аккаунта.\n");
	strcat(string,"- Обязательно подтвердите Email и введите код безопасности для защиты.\n");
	strcat(string,"- При утере пароля, его можно восстановить по введенному Email.");
	
	return ShowPlayerDialog(playerid,D_RULES,DIALOG_STYLE_MSGBOX,""FPHEAD"Правuла сервера SAMP Stories",string,"OK","");
}
stock ShowHouseDialog(playerid)
{
	ShowPlayerDialog(playerid,D_HMENU,DIALOG_STYLE_LIST,""FPHEAD"Дом u аренда","{FFFFFF}[1] Местоположение дома\n\
																		[2] Улучшения\n\
																		[3] Замок\n\
																		[4] Домашний тайник\n\
																		[5] Гардероб\n\
																		[6] Продать дом","Выбрать","Отмена");
	return 1;
}
stock ShowBiznesDialog(playerid)
{
	ShowPlayerDialog(playerid,D_BMENU,DIALOG_STYLE_LIST,""FPHEAD"Бизнес","{FFFFFF}[1] Информация\n\
																		[2] Изменить цены\n\
																		[3] Взять деньги из корзины\n\
																		[4] Положuть деньги в корзину\n\
																		[5] Продать","Выбрать","Отмена");
	return 1;
}

stock ShowHitDialog(playerid)
{
	new string[128],str[80];
	if(Aim[playerid] == -1)format(str,sizeof(str),"Нет");
    else format(str,sizeof(str),"%s[%d] $%d",PlayerInfo[Aim[playerid]][pName],Aim[playerid],PlayerInfo[Aim[playerid]][pHeadValue]);
	format(string,sizeof(string),"[1] Контракт: %s\n[2] Проверить заказы\n[3] Хитманы онлайн",str);
	ShowPlayerDialog(playerid, D_HIT_MAIN,DIALOG_STYLE_LIST,""FPHEAD"Агенство Убuйц",string,"Купuть","Выйти");
	return 1;
}
stock ShowHitmanGun(playerid)
{
    new string[140];
    format(string,sizeof(string),"[1]  Desert Eagle ($500)\n\
								  [2]  MP5 ($1500)\n\
								  [3]  Shotgun ($1000)\n\
								  [4]  M4 ($2000)\n\
								  [5]  AK47 ($2000)\n\
								  [6]  Sniper Rifle ($2500)");
    ShowPlayerDialog(playerid,D_HIT_GUN,DIALOG_STYLE_LIST,""FPHEAD"Снаряжение",string,"Заказать","Назад");
    return 1;
}
stock ShowDrugsGetDialog(playerid)
{
	ShowPlayerDialog(playerid, D_DRUGS_BUY,DIALOG_STYLE_INPUT,""FPHEAD"Закупка наркотиков","{F5DEB3}Сколько наркоты ты хочешь закупuть?\
																				\n от 1 до 100 грамм","Купuть","Отмена");
	return 1;
}
stock ShowMatsGetDialog(playerid)
{
	ShowPlayerDialog(playerid, D_MATS_BUY,DIALOG_STYLE_INPUT,""FPHEAD"Закупка пакетов","{F5DEB3}Сколько пакетов ты хочешь закупuть?\
																					\n 1 до 30 пакетов","Купuть","Отмена");
	return 1;
}

stock ShowObshDialog(playerid)
{
	new string[128];
	if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Ты не можешь пользоваться общаком на 0 уровне.");
	if(TeamInfo[playerid][tID] < LCN)return ErrorMes(playerid,"Общак доступен только бандам и мафuям.");
    format(string,sizeof(string),"Деньги: $%d \nНаркотики: %d \nМатериалы: %d",FractionInfo[TeamInfo[playerid][tID]][oMoney],FractionInfo[TeamInfo[playerid][tID]][oDrugs],FractionInfo[TeamInfo[playerid][tID]][oMats]);
	return ShowPlayerDialog(playerid,D_OBSHAK,DIALOG_STYLE_LIST,""FPHEAD"Общак:",string,"Выбрать","Отмена");
}
stock ShowObsh2Dialog(playerid)
{
	return ShowPlayerDialog(playerid,D_OBSHAK_SELECT,DIALOG_STYLE_LIST,""FPHEAD"Общак:","Взять\nПоложить","Выбрать","Назад");
}

stock ErrorMes(playerid, text[])
{ 
	PlayerPlaySound(playerid, 1053, 0.0, 0.0, 0.0);
    DeletePVar(playerid,"AntiFlood");
	new message[144];
	format(message,sizeof(message),"{FF0000}[ОШИБКА]{FFFFFF} %s",text);
    return SendClientMessage(playerid,-1,message);
}
stock JobMes(playerid, text[])
{ 
	new message[144];
	format(message,sizeof(message),"{FFD700}[РАБОТА]{FFFFFF} %s",text);
	return SendClientMessage(playerid,-1,message);
}
stock ComMes(playerid, text[])
{
    DeletePVar(playerid,"AntiFlood");
	new message[144];
	format(message,sizeof(message),"{00BFFF}[КОМАНДЫ]{FFFFFF} %s",text);
    return SendClientMessage(playerid,-1,message);
}
stock VehMes(playerid, text[], bool:showdialog)
{
	new string[256];
	format(string,sizeof(string), "{6A5ACD}[ТРАНСПОРТ]{FFFFFF} %s",text);
	SendClientMessage(playerid, COLOR_WHITE, string);
	if(showdialog)
	{
    	format(string,sizeof(string), "{F5DEB3}%s\n\nПолучить лицензии, можно в школах.\n/kpk -> GPS-навигатор -> Основные локации -> Нужная школа",text);
    	ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Транспорт",string,"OK","");
    }
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) SetPlayerPos(playerid,PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2]+0.8);
	else FP_RemovePlayerFromVehicle(playerid);
	TogglePlayerControllable(playerid,true);
    return 1;
}
stock CloseMes(playerid)
{
	GameTextForPlayer(playerid, FixText("~r~ЗАКРЫТО"), 5000, 1);
    return 1;
}
stock EmptyMessages(playerid, count)
{
    for(new i; i < count; i++) SendClientMessage(playerid, -1, "\n");
}

stock CreateTextDraws()
{
	new TimeString[32];
	gettime(Hour,Minute,Second);
	getdate(Year, Month, Day);
	SetWorldTime(Hour);
	format(TimeString,sizeof(TimeString), "~w~%02d~y~:~w~%02d~y~:~w~%02d",Hour,Minute,Second);

	TimeDisp = TextDrawCreate(547.000000, 23.000000, TimeString);
	TextDrawBackgroundColor(TimeDisp, 255);
	TextDrawFont(TimeDisp, 0);
	TextDrawLetterSize(TimeDisp, 0.479999, 2.099998);
	TextDrawColor(TimeDisp, -1);
	TextDrawSetOutline(TimeDisp, 1);
	TextDrawSetProportional(TimeDisp, 1);
	TextDrawSetShadow(TimeDisp, 1);
	
	format(TimeString,sizeof(TimeString),"~w~%02d~y~.~w~%02d~y~.~w~%d",Day,Month,Year);
	DateDisp = TextDrawCreate(87.000000, 426.000000, TimeString);
	TextDrawAlignment(DateDisp, 2);
	TextDrawBackgroundColor(DateDisp, 255);
	TextDrawFont(DateDisp, 2);
	TextDrawLetterSize(DateDisp, 0.300000, 1.299998);
	TextDrawColor(DateDisp, -1);
	TextDrawSetOutline(DateDisp, 0);
	TextDrawSetProportional(DateDisp, 1);
	TextDrawSetShadow(DateDisp, 1);
	
	Site = TextDrawCreate(87.000000, 434.000000, "~w~samp~y~-~w~stories~y~.~w~ru");
	TextDrawAlignment(Site, 2);
	TextDrawBackgroundColor(Site, 255);
	TextDrawFont(Site, 2);
	TextDrawLetterSize(Site, 0.289999, 1.199998);
	TextDrawColor(Site, -1);
	TextDrawSetOutline(Site, 0);
	TextDrawSetProportional(Site, 1);
	TextDrawSetShadow(Site, 1);

	ShopTXD[0] = TextDrawCreate(115.000000, 225.000000, ".");
	TextDrawAlignment(ShopTXD[0], 2);
	TextDrawBackgroundColor(ShopTXD[0], 255);
	TextDrawFont(ShopTXD[0], 1);
	TextDrawLetterSize(ShopTXD[0], 5.099997, 10.000000);
	TextDrawColor(ShopTXD[0], 48);
	TextDrawSetOutline(ShopTXD[0], 0);
	TextDrawSetProportional(ShopTXD[0], 1);
	TextDrawSetShadow(ShopTXD[0], 0);
	TextDrawSetSelectable(ShopTXD[0], 0);

	ShopTXD[1] = TextDrawCreate(210.000000, 255.000000, ".");
	TextDrawAlignment(ShopTXD[1], 2);
	TextDrawBackgroundColor(ShopTXD[1], 255);
	TextDrawFont(ShopTXD[1], 1);
	TextDrawLetterSize(ShopTXD[1], 5.999996, 12.000006);
	TextDrawColor(ShopTXD[1], 48);
	TextDrawSetOutline(ShopTXD[1], 0);
	TextDrawSetProportional(ShopTXD[1], 1);
	TextDrawSetShadow(ShopTXD[1], 0);
	TextDrawSetSelectable(ShopTXD[1], 0);

	ShopTXD[2] = TextDrawCreate(330.000000, 228.000000, ".");
	TextDrawAlignment(ShopTXD[2], 2);
	TextDrawBackgroundColor(ShopTXD[2], 255);
	TextDrawFont(ShopTXD[2], 1);
	TextDrawLetterSize(ShopTXD[2], 8.499996, 19.000003);
	TextDrawColor(ShopTXD[2], 48);
	TextDrawSetOutline(ShopTXD[2], 0);
	TextDrawSetProportional(ShopTXD[2], 1);
	TextDrawSetShadow(ShopTXD[2], 0);
	TextDrawSetSelectable(ShopTXD[2], 0);

	ShopTXD[3] = TextDrawCreate(450.000000, 255.000000, ".");
	TextDrawAlignment(ShopTXD[3], 2);
	TextDrawBackgroundColor(ShopTXD[3], 255);
	TextDrawFont(ShopTXD[3], 1);
	TextDrawLetterSize(ShopTXD[3], 5.999996, 12.000006);
	TextDrawColor(ShopTXD[3], 48);
	TextDrawSetOutline(ShopTXD[3], 0);
	TextDrawSetProportional(ShopTXD[3], 1);
	TextDrawSetShadow(ShopTXD[3], 0);
	TextDrawSetSelectable(ShopTXD[3], 0);

	ShopTXD[4] = TextDrawCreate(540.000000, 225.000000, ".");
	TextDrawAlignment(ShopTXD[4], 2);
	TextDrawBackgroundColor(ShopTXD[4], 255);
	TextDrawFont(ShopTXD[4], 1);
	TextDrawLetterSize(ShopTXD[4], 5.099997, 10.000000);
	TextDrawColor(ShopTXD[4], 48);
	TextDrawSetOutline(ShopTXD[4], 0);
	TextDrawSetProportional(ShopTXD[4], 1);
	TextDrawSetShadow(ShopTXD[4], 0);
	TextDrawSetSelectable(ShopTXD[4], 0);

	ShopTXD[5] = TextDrawCreate(250.000000, 385.000000, "LD_BEAT:left");
	TextDrawAlignment(ShopTXD[5], 2);
	TextDrawBackgroundColor(ShopTXD[5], 255);
	TextDrawFont(ShopTXD[5], 4);
	TextDrawLetterSize(ShopTXD[5], 0.500000, 1.000000);
	TextDrawColor(ShopTXD[5], -1);
	TextDrawSetOutline(ShopTXD[5], 0);
	TextDrawSetProportional(ShopTXD[5], 1);
	TextDrawSetShadow(ShopTXD[5], 1);
	TextDrawUseBox(ShopTXD[5], 1);
	TextDrawBoxColor(ShopTXD[5], 255);
	TextDrawTextSize(ShopTXD[5], 30.000000, 30.000000);
	TextDrawSetSelectable(ShopTXD[5], 1);

	ShopTXD[6] = TextDrawCreate(362.000000, 385.000000, "LD_BEAT:right");
	TextDrawBackgroundColor(ShopTXD[6], 255);
	TextDrawFont(ShopTXD[6], 4);
	TextDrawLetterSize(ShopTXD[6], 0.500000, 1.000000);
	TextDrawColor(ShopTXD[6], -1);
	TextDrawSetOutline(ShopTXD[6], 0);
	TextDrawSetProportional(ShopTXD[6], 1);
	TextDrawSetShadow(ShopTXD[6], 1);
	TextDrawUseBox(ShopTXD[6], 1);
	TextDrawBoxColor(ShopTXD[6], 255);
	TextDrawTextSize(ShopTXD[6], 30.000000, 30.000000);
	TextDrawSetSelectable(ShopTXD[6], 1);

	ShopTXD[7] = TextDrawCreate(277.000000, 415.000000, "LD_CHAT:thumbup");
	TextDrawAlignment(ShopTXD[7], 2);
	TextDrawBackgroundColor(ShopTXD[7], 255);
	TextDrawFont(ShopTXD[7], 4);
	TextDrawLetterSize(ShopTXD[7], 0.790000, 1.500000);
	TextDrawColor(ShopTXD[7], -1);
	TextDrawSetOutline(ShopTXD[7], 0);
	TextDrawSetProportional(ShopTXD[7], 1);
	TextDrawSetShadow(ShopTXD[7], 1);
	TextDrawUseBox(ShopTXD[7], 1);
	TextDrawBoxColor(ShopTXD[7], 48);
	TextDrawTextSize(ShopTXD[7], 35.000000, 25.000000);
	TextDrawSetSelectable(ShopTXD[7], 1);

	ShopTXD[8] = TextDrawCreate(332.000000, 415.000000, "LD_CHAT:thumbdn");
	TextDrawAlignment(ShopTXD[8], 2);
	TextDrawBackgroundColor(ShopTXD[8], 255);
	TextDrawFont(ShopTXD[8], 4);
	TextDrawLetterSize(ShopTXD[8], 0.500000, 1.100000);
	TextDrawColor(ShopTXD[8], -1);
	TextDrawSetOutline(ShopTXD[8], 0);
	TextDrawSetProportional(ShopTXD[8], 1);
	TextDrawSetShadow(ShopTXD[8], 1);
	TextDrawUseBox(ShopTXD[8], 1);
	TextDrawBoxColor(ShopTXD[8], 48);
	TextDrawTextSize(ShopTXD[8], 35.000000, 25.000000);
	TextDrawSetSelectable(ShopTXD[8], 1);

	ClothesTXD[0] = TextDrawCreate(136.000000, 230.000000, ".");
	TextDrawAlignment(ClothesTXD[0], 2);
	TextDrawBackgroundColor(ClothesTXD[0], 80);
	TextDrawFont(ClothesTXD[0], 1);
	TextDrawLetterSize(ClothesTXD[0], 6.999995, 15.000000);
	TextDrawColor(ClothesTXD[0], 48);
	TextDrawSetOutline(ClothesTXD[0], 0);
	TextDrawSetProportional(ClothesTXD[0], 1);
	TextDrawSetShadow(ClothesTXD[0], 0);
	TextDrawSetSelectable(ClothesTXD[0], 0);

	ClothesTXD[1] = TextDrawCreate(236.000000, 230.000000, ".");
	TextDrawAlignment(ClothesTXD[1], 2);
	TextDrawBackgroundColor(ClothesTXD[1], 80);
	TextDrawFont(ClothesTXD[1], 1);
	TextDrawLetterSize(ClothesTXD[1], 6.999995, 15.000000);
	TextDrawColor(ClothesTXD[1], 48);
	TextDrawSetOutline(ClothesTXD[1], 0);
	TextDrawSetProportional(ClothesTXD[1], 1);
	TextDrawSetShadow(ClothesTXD[1], 0);
	TextDrawSetSelectable(ClothesTXD[1], 0);

	ClothesTXD[2] = TextDrawCreate(336.000000, 230.000000, ".");
	TextDrawAlignment(ClothesTXD[2], 2);
	TextDrawBackgroundColor(ClothesTXD[2], 80);
	TextDrawFont(ClothesTXD[2], 1);
	TextDrawLetterSize(ClothesTXD[2], 6.999995, 15.000000);
	TextDrawColor(ClothesTXD[2], 48);
	TextDrawSetOutline(ClothesTXD[2], 0);
	TextDrawSetProportional(ClothesTXD[2], 1);
	TextDrawSetShadow(ClothesTXD[2], 0);
	TextDrawSetSelectable(ClothesTXD[2], 0);

	ClothesTXD[3] = TextDrawCreate(436.000000, 230.000000, ".");
	TextDrawAlignment(ClothesTXD[3], 2);
	TextDrawBackgroundColor(ClothesTXD[3], 80);
	TextDrawFont(ClothesTXD[3], 1);
	TextDrawLetterSize(ClothesTXD[3], 6.999995, 15.000000);
	TextDrawColor(ClothesTXD[3], 48);
	TextDrawSetOutline(ClothesTXD[3], 0);
	TextDrawSetProportional(ClothesTXD[3], 1);
	TextDrawSetShadow(ClothesTXD[3], 0);
	TextDrawSetSelectable(ClothesTXD[3], 0);

	ClothesTXD[4] = TextDrawCreate(536.000000, 230.000000, ".");
	TextDrawAlignment(ClothesTXD[4], 2);
	TextDrawBackgroundColor(ClothesTXD[4], 80);
	TextDrawFont(ClothesTXD[4], 1);
	TextDrawLetterSize(ClothesTXD[4], 6.999995, 15.000000);
	TextDrawColor(ClothesTXD[4], 48);
	TextDrawSetOutline(ClothesTXD[4], 0);
	TextDrawSetProportional(ClothesTXD[4], 1);
	TextDrawSetShadow(ClothesTXD[4], 0);
	TextDrawSetSelectable(ClothesTXD[4], 0);

	ClothesTXD[5] = TextDrawCreate(310.000000, 415.000000, "LD_CHAT:thumbdn");
	TextDrawAlignment(ClothesTXD[5], 2);
	TextDrawBackgroundColor(ClothesTXD[5], 255);
	TextDrawFont(ClothesTXD[5], 4);
	TextDrawLetterSize(ClothesTXD[5], 0.500000, 1.100000);
	TextDrawColor(ClothesTXD[5], -1);
	TextDrawSetOutline(ClothesTXD[5], 0);
	TextDrawSetProportional(ClothesTXD[5], 1);
	TextDrawSetShadow(ClothesTXD[5], 1);
	TextDrawUseBox(ClothesTXD[5], 1);
	TextDrawBoxColor(ClothesTXD[5], 48);
	TextDrawTextSize(ClothesTXD[5], 35.000000, 25.000000);
	TextDrawSetSelectable(ClothesTXD[5], 1);

 	txtAnimHelper = TextDrawCreate(610.0, 400.0,"~w~мA„–…  ~r~LEFT SHIFT ~w~ѓ‡• OCЏAмOBK… Aм…–A‰……");
	TextDrawUseBox(txtAnimHelper, 0);
	TextDrawFont(txtAnimHelper, 2);
	TextDrawSetShadow(txtAnimHelper,0); 
    TextDrawSetOutline(txtAnimHelper,1); 
    TextDrawBackgroundColor(txtAnimHelper,0x000000FF);
    TextDrawColor(txtAnimHelper,0xFFFFFFFF);
    TextDrawAlignment(txtAnimHelper,3); 
    
	LoadScreen = TextDrawCreate(0.0, 0.0, "loadsc1:loadsc1"); 
    TextDrawBackgroundColor(LoadScreen, 255); 
    TextDrawFont(LoadScreen, 4); 
    TextDrawLetterSize(LoadScreen, 0.5, 1.0); 
    TextDrawTextSize(LoadScreen, 640.0, 480.0);
	
	SpeedTXD[0] = TextDrawCreate(510.000000, 385.000000, "_");
	TextDrawAlignment(SpeedTXD[0], 2);
	TextDrawBackgroundColor(SpeedTXD[0], 255);
	TextDrawFont(SpeedTXD[0], 1);
	TextDrawLetterSize(SpeedTXD[0], 0.500000, 4.400000);
	TextDrawColor(SpeedTXD[0], -1);
	TextDrawSetOutline(SpeedTXD[0], 0);
	TextDrawSetProportional(SpeedTXD[0], 1);
	TextDrawSetShadow(SpeedTXD[0], 1);
	TextDrawUseBox(SpeedTXD[0], 1);
	TextDrawBoxColor(SpeedTXD[0], 50);
	TextDrawTextSize(SpeedTXD[0], 0.000000, -200.000000);
	TextDrawSetSelectable(SpeedTXD[0], 0);

	SpeedTXD[1] = TextDrawCreate(510.000000, 385.000000, "~p~ЏOЊ‡…BO");
	TextDrawAlignment(SpeedTXD[1], 2);
	TextDrawBackgroundColor(SpeedTXD[1], 255);
	TextDrawFont(SpeedTXD[1], 2);
	TextDrawLetterSize(SpeedTXD[1], 0.290000, 1.199999);
	TextDrawColor(SpeedTXD[1], -1);
	TextDrawSetOutline(SpeedTXD[1], 0);
	TextDrawSetProportional(SpeedTXD[1], 1);
	TextDrawSetShadow(SpeedTXD[1], 1);
	TextDrawSetSelectable(SpeedTXD[1], 0);

	SpeedTXD[2] = TextDrawCreate(445.000000, 412.000000, "K–/Ќ"); // KM/H
	TextDrawAlignment(SpeedTXD[2], 2);
	TextDrawBackgroundColor(SpeedTXD[2], 255);
	TextDrawFont(SpeedTXD[2], 2);
	TextDrawLetterSize(SpeedTXD[2], 0.320000, 1.200000);
	TextDrawColor(SpeedTXD[2], -1);
	TextDrawSetOutline(SpeedTXD[2], 0);
	TextDrawSetProportional(SpeedTXD[2], 1);
	TextDrawSetShadow(SpeedTXD[2], 1);
	
	ShopTD[0] = TextDrawCreate(555.000000, 250.000000, "_");
	TextDrawAlignment(ShopTD[0], 2);
	TextDrawBackgroundColor(ShopTD[0], 255);
	TextDrawFont(ShopTD[0], 1);
	TextDrawLetterSize(ShopTD[0], 0.600000, 11.000000);
	TextDrawColor(ShopTD[0], -1);
	TextDrawSetOutline(ShopTD[0], 0);
	TextDrawSetProportional(ShopTD[0], 1);
	TextDrawSetShadow(ShopTD[0], 1);
	TextDrawUseBox(ShopTD[0], 1);
	TextDrawBoxColor(ShopTD[0], 80);
	TextDrawTextSize(ShopTD[0], 0.000000, 120.000000);
	
	ShopTD[1] = TextDrawCreate(555.000000, 265.000000, "MODEL");
	TextDrawAlignment(ShopTD[1], 2);
	TextDrawBackgroundColor(ShopTD[1], 255);
	TextDrawFont(ShopTD[1], 2);
	TextDrawLetterSize(ShopTD[1], 0.389999, 1.700000);
	TextDrawColor(ShopTD[1], -1);
	TextDrawSetOutline(ShopTD[1], 0);
	TextDrawSetProportional(ShopTD[1], 1);
	TextDrawSetShadow(ShopTD[1], 1);
	
	ShopTD[2] = TextDrawCreate(555.000000, 290.000000, "COLOR");
	TextDrawAlignment(ShopTD[2], 2);
	TextDrawBackgroundColor(ShopTD[2], 255);
	TextDrawFont(ShopTD[2], 2);
	TextDrawLetterSize(ShopTD[2], 0.399999, 1.700000);
	TextDrawColor(ShopTD[2], -1);
	TextDrawSetOutline(ShopTD[2], 0);
	TextDrawSetProportional(ShopTD[2], 1);
	TextDrawSetShadow(ShopTD[2], 1);

	ShopTD[3] = TextDrawCreate(530.000000, 315.000000, "BUY");
	TextDrawAlignment(ShopTD[3], 2);
	TextDrawBackgroundColor(ShopTD[3], 255);
	TextDrawFont(ShopTD[3], 2);
	TextDrawLetterSize(ShopTD[3], 0.399999, 1.700000);
	TextDrawColor(ShopTD[3], -1);
	TextDrawSetOutline(ShopTD[3], 0);
	TextDrawSetProportional(ShopTD[3], 1);
	TextDrawSetShadow(ShopTD[3], 1);
	TextDrawUseBox(ShopTD[3], 1);
	TextDrawBoxColor(ShopTD[3], 0);
	TextDrawTextSize(ShopTD[3], 15.000000, 40.000000);
	TextDrawSetSelectable(ShopTD[3], true);
	
	ShopTD[4] = TextDrawCreate(585.000000, 315.000000, "EXIT");
	TextDrawAlignment(ShopTD[4], 2);
	TextDrawBackgroundColor(ShopTD[4], 255);
	TextDrawFont(ShopTD[4], 2);
	TextDrawLetterSize(ShopTD[4], 0.399999, 1.700000);
	TextDrawColor(ShopTD[4], -1);
	TextDrawSetOutline(ShopTD[4], 0);
	TextDrawSetProportional(ShopTD[4], 1);
	TextDrawSetShadow(ShopTD[4], 1);
	TextDrawUseBox(ShopTD[4], 1);
	TextDrawBoxColor(ShopTD[4], 0);
	TextDrawTextSize(ShopTD[4], 15.000000, 40.000000);
	TextDrawSetSelectable(ShopTD[4], true);
	
	ShopTD[5] = TextDrawCreate(504.000000, 263.000000, "LD_BEAT:left");
	TextDrawAlignment(ShopTD[5], 2);
	TextDrawBackgroundColor(ShopTD[5], 255);
	TextDrawFont(ShopTD[5], 4);
	TextDrawLetterSize(ShopTD[5], 0.359999, 2.000000);
	TextDrawColor(ShopTD[5], -1);
	TextDrawSetOutline(ShopTD[5], 0);
	TextDrawSetProportional(ShopTD[5], 1);
	TextDrawSetShadow(ShopTD[5], 1);
	TextDrawUseBox(ShopTD[5], 1);
	TextDrawBoxColor(ShopTD[5], 255);
	TextDrawTextSize(ShopTD[5], 20.000000, 20.000000);
	TextDrawSetSelectable(ShopTD[5], true);
	
	ShopTD[6] = TextDrawCreate(586.000000, 263.000000, "LD_BEAT:right");
	TextDrawAlignment(ShopTD[6], 2);
	TextDrawBackgroundColor(ShopTD[6], 255);
	TextDrawFont(ShopTD[6], 4);
	TextDrawLetterSize(ShopTD[6], 0.359999, 2.000000);
	TextDrawColor(ShopTD[6], -1);
	TextDrawSetOutline(ShopTD[6], 0);
	TextDrawSetProportional(ShopTD[6], 1);
	TextDrawSetShadow(ShopTD[6], 1);
	TextDrawUseBox(ShopTD[6], 1);
	TextDrawBoxColor(ShopTD[6], 255);
	TextDrawTextSize(ShopTD[6], 20.000000, 20.000000);
	TextDrawSetSelectable(ShopTD[6], true);
	
	ShopTD[7] = TextDrawCreate(504.000000, 289.000000, "LD_BEAT:left");
	TextDrawAlignment(ShopTD[7], 2);
	TextDrawBackgroundColor(ShopTD[7], 255);
	TextDrawFont(ShopTD[7], 4);
	TextDrawLetterSize(ShopTD[7], 0.359999, 2.000000);
	TextDrawColor(ShopTD[7], -1);
	TextDrawSetOutline(ShopTD[7], 0);
	TextDrawSetProportional(ShopTD[7], 1);
	TextDrawSetShadow(ShopTD[7], 1);
	TextDrawUseBox(ShopTD[7], 1);
	TextDrawBoxColor(ShopTD[7], 16711935);
	TextDrawTextSize(ShopTD[7], 20.000000, 20.000000);
	TextDrawSetSelectable(ShopTD[7], true);
	
	ShopTD[8] = TextDrawCreate(586.000000, 289.000000, "LD_BEAT:right");
	TextDrawAlignment(ShopTD[8], 2);
	TextDrawBackgroundColor(ShopTD[8], 255);
	TextDrawFont(ShopTD[8], 4);
	TextDrawLetterSize(ShopTD[8], 0.359999, 2.000000);
	TextDrawColor(ShopTD[8], -1);
	TextDrawSetOutline(ShopTD[8], 0);
	TextDrawSetProportional(ShopTD[8], 1);
	TextDrawSetShadow(ShopTD[8], 1);
	TextDrawUseBox(ShopTD[8], 1);
	TextDrawBoxColor(ShopTD[8], 255);
	TextDrawTextSize(ShopTD[8], 20.000000, 20.000000);
	TextDrawSetSelectable(ShopTD[8], true);

	ShopTD[9] = TextDrawCreate(585.000000, 335.000000, "DONATE");
	TextDrawAlignment(ShopTD[9], 2);
	TextDrawBackgroundColor(ShopTD[9], 255);
	TextDrawFont(ShopTD[9], 2);
	TextDrawLetterSize(ShopTD[9], 0.239999, 1.399999);
	TextDrawColor(ShopTD[9], -1);
	TextDrawSetOutline(ShopTD[9], 0);
	TextDrawSetProportional(ShopTD[9], 1);
	TextDrawSetShadow(ShopTD[9], 1);
	TextDrawUseBox(ShopTD[9], 1);
	TextDrawBoxColor(ShopTD[9], 0);
	TextDrawTextSize(ShopTD[9], 15.000000, 40.000000);
	TextDrawSetSelectable(ShopTD[9], true);
	
	ShopTD[10] = TextDrawCreate(530.000000, 335.000000, "rent");
	TextDrawAlignment(ShopTD[10], 2);
	TextDrawBackgroundColor(ShopTD[10], 255);
	TextDrawFont(ShopTD[10], 2);
	TextDrawLetterSize(ShopTD[10], 0.239998, 1.399999);
	TextDrawColor(ShopTD[10], -1);
	TextDrawSetOutline(ShopTD[10], 0);
	TextDrawSetProportional(ShopTD[10], 1);
	TextDrawSetShadow(ShopTD[10], 1);
	TextDrawUseBox(ShopTD[10], 1);
	TextDrawBoxColor(ShopTD[10], 0);
	TextDrawTextSize(ShopTD[10], 15.000000, 40.000000);
	TextDrawSetSelectable(ShopTD[10], true);
	
	SpecTD[0] = TextDrawCreate(450.000000, 332.000000, "_");
	TextDrawBackgroundColor(SpecTD[0], 255);
	TextDrawFont(SpecTD[0], 1);
	TextDrawLetterSize(SpecTD[0], 0.500000, 6.499999);
	TextDrawColor(SpecTD[0], -1);
	TextDrawSetOutline(SpecTD[0], 0);
	TextDrawSetProportional(SpecTD[0], 1);
	TextDrawSetShadow(SpecTD[0], 1);
	TextDrawUseBox(SpecTD[0], 1);
	TextDrawBoxColor(SpecTD[0], 80);
	TextDrawTextSize(SpecTD[0], 640.000000, 0.000000);
	
	SpecTD[1] = TextDrawCreate(490.000000, 338.000000, "CHECK");
	TextDrawAlignment(SpecTD[1], 2);
	TextDrawBackgroundColor(SpecTD[1], 255);
	TextDrawFont(SpecTD[1], 2);
	TextDrawLetterSize(SpecTD[1], 0.439999, 1.299999);
	TextDrawColor(SpecTD[1], -1);
	TextDrawSetOutline(SpecTD[1], 0);
	TextDrawSetProportional(SpecTD[1], 1);
	TextDrawSetShadow(SpecTD[1], 1);
	TextDrawUseBox(SpecTD[1], 0);
	TextDrawBoxColor(SpecTD[1], 80);
	TextDrawTextSize(SpecTD[1], 10.000000, 65.000000);
	TextDrawSetSelectable(SpecTD[1], true);
	
	SpecTD[2] = TextDrawCreate(550.000000, 338.000000, "MIB");
	TextDrawAlignment(SpecTD[2], 2);
	TextDrawBackgroundColor(SpecTD[2], 255);
	TextDrawFont(SpecTD[2], 2);
	TextDrawLetterSize(SpecTD[2], 0.439999, 1.299999);
	TextDrawColor(SpecTD[2], -1);
	TextDrawSetOutline(SpecTD[2], 0);
	TextDrawSetProportional(SpecTD[2], 1);
	TextDrawSetShadow(SpecTD[2], 1);
	TextDrawUseBox(SpecTD[2], 0);
	TextDrawBoxColor(SpecTD[2], 80);
	TextDrawTextSize(SpecTD[2], 10.000000, 35.000000);
	TextDrawSetSelectable(SpecTD[2], true);
	
	SpecTD[3] = TextDrawCreate(605.000000, 338.000000, "SLAP");
	TextDrawAlignment(SpecTD[3], 2);
	TextDrawBackgroundColor(SpecTD[3], 255);
	TextDrawFont(SpecTD[3], 2);
	TextDrawLetterSize(SpecTD[3], 0.439999, 1.299999);
	TextDrawColor(SpecTD[3], -1);
	TextDrawSetOutline(SpecTD[3], 0);
	TextDrawSetProportional(SpecTD[3], 1);
	TextDrawSetShadow(SpecTD[3], 1);
	TextDrawUseBox(SpecTD[3], 0);
	TextDrawBoxColor(SpecTD[3], 80);
	TextDrawTextSize(SpecTD[3], 10.000000, 55.000000);
	TextDrawSetSelectable(SpecTD[3], true);
	
	SpecTD[4] = TextDrawCreate(485.000000, 362.000000, "<");
	TextDrawAlignment(SpecTD[4], 2);
	TextDrawBackgroundColor(SpecTD[4], 255);
	TextDrawFont(SpecTD[4], 2);
	TextDrawLetterSize(SpecTD[4], 0.439999, 2.399998);
	TextDrawColor(SpecTD[4], -1);
	TextDrawSetOutline(SpecTD[4], 0);
	TextDrawSetProportional(SpecTD[4], 1);
	TextDrawSetShadow(SpecTD[4], 1);
	TextDrawUseBox(SpecTD[4], 0);
	TextDrawBoxColor(SpecTD[4], 80);
	TextDrawTextSize(SpecTD[4], 15.000000, 60.000000);
	TextDrawSetSelectable(SpecTD[4], true);
	
	SpecTD[5] = TextDrawCreate(605.000000, 362.000000, ">");
	TextDrawAlignment(SpecTD[5], 2);
	TextDrawBackgroundColor(SpecTD[5], 255);
	TextDrawFont(SpecTD[5], 2);
	TextDrawLetterSize(SpecTD[5], 0.439999, 2.399998);
	TextDrawColor(SpecTD[5], -1);
	TextDrawSetOutline(SpecTD[5], 0);
	TextDrawSetProportional(SpecTD[5], 1);
	TextDrawSetShadow(SpecTD[5], 1);
	TextDrawUseBox(SpecTD[5], 0);
	TextDrawBoxColor(SpecTD[5], 80);
	TextDrawTextSize(SpecTD[5], 15.000000, 60.000000);
	TextDrawSetSelectable(SpecTD[5], true);
	
	SpecTD[6] = TextDrawCreate(545.000000, 358.000000, "refresh");
	TextDrawAlignment(SpecTD[6], 2);
	TextDrawBackgroundColor(SpecTD[6], 255);
	TextDrawFont(SpecTD[6], 2);
	TextDrawLetterSize(SpecTD[6], 0.270000, 1.399999);
	TextDrawColor(SpecTD[6], -1);
	TextDrawSetOutline(SpecTD[6], 0);
	TextDrawSetProportional(SpecTD[6], 1);
	TextDrawSetShadow(SpecTD[6], 1);
	TextDrawUseBox(SpecTD[6], 0);
	TextDrawBoxColor(SpecTD[6], 80);
	TextDrawTextSize(SpecTD[6], 10.000000, 65.000000);
	TextDrawSetSelectable(SpecTD[6], true);
	
	SpecTD[7] = TextDrawCreate(545.000000, 377.000000, "HIDE");
	TextDrawAlignment(SpecTD[7], 2);
	TextDrawBackgroundColor(SpecTD[7], 255);
	TextDrawFont(SpecTD[7], 2);
	TextDrawLetterSize(SpecTD[7], 0.270000, 1.399999);
	TextDrawColor(SpecTD[7], -1);
	TextDrawSetOutline(SpecTD[7], 0);
	TextDrawSetProportional(SpecTD[7], 1);
	TextDrawSetShadow(SpecTD[7], 1);
	TextDrawUseBox(SpecTD[7], 0);
	TextDrawBoxColor(SpecTD[7], 80);
	TextDrawTextSize(SpecTD[7], 10.000000, 65.000000);
	TextDrawSetSelectable(SpecTD[7], true);
	
	GasBox[0] = TextDrawCreate(320.000000, 310.000000, "_");
	TextDrawAlignment(GasBox[0], 2);
	TextDrawBackgroundColor(GasBox[0], 255);
	TextDrawFont(GasBox[0], 2);
	TextDrawLetterSize(GasBox[0], 0.500000, 8.199999);
	TextDrawColor(GasBox[0], -1);
	TextDrawSetOutline(GasBox[0], 0);
	TextDrawSetProportional(GasBox[0], 1);
	TextDrawSetShadow(GasBox[0], 1);
	TextDrawUseBox(GasBox[0], 1);
	TextDrawBoxColor(GasBox[0], 80);
	TextDrawTextSize(GasBox[0], 0.000000, 160.000000);

	GasBox[8] = TextDrawCreate(385.000000, 336.000000, "_");
	TextDrawAlignment(GasBox[8], 2);
	TextDrawBackgroundColor(GasBox[8], 255);
	TextDrawFont(GasBox[8], 1);
	TextDrawLetterSize(GasBox[8], 0.500000, 2.000000);
	TextDrawColor(GasBox[8], -1);
	TextDrawSetOutline(GasBox[8], 0);
	TextDrawSetProportional(GasBox[8], 1);
	TextDrawSetShadow(GasBox[8], 1);
	TextDrawUseBox(GasBox[8], 1);
	TextDrawBoxColor(GasBox[8], 80);
	TextDrawTextSize(GasBox[8], 0.000000, 16.000000);

	GasBox[9] = TextDrawCreate(255.000000, 336.000000, "_");
	TextDrawAlignment(GasBox[9], 2);
	TextDrawBackgroundColor(GasBox[9], 255);
	TextDrawFont(GasBox[9], 1);
	TextDrawLetterSize(GasBox[9], 0.500000, 2.000000);
	TextDrawColor(GasBox[9], -1);
	TextDrawSetOutline(GasBox[9], 0);
	TextDrawSetProportional(GasBox[9], 1);
	TextDrawSetShadow(GasBox[9], 1);
	TextDrawUseBox(GasBox[9], 1);
	TextDrawBoxColor(GasBox[9], 80);
	TextDrawTextSize(GasBox[9], 0.000000, 16.000000);

	GasBox[1] = TextDrawCreate(255.000000, 332.000000, "-");
	TextDrawAlignment(GasBox[1], 2);
	TextDrawBackgroundColor(GasBox[1], 255);
	TextDrawFont(GasBox[1], 1);
	TextDrawLetterSize(GasBox[1], 0.659999, 2.200000);
	TextDrawColor(GasBox[1], -1);
	TextDrawSetOutline(GasBox[1], 1);
	TextDrawSetProportional(GasBox[1], 1);
	TextDrawTextSize(GasBox[1], 18.000000, 18.000000);
	TextDrawSetSelectable(GasBox[1], true);

	GasBox[2] = TextDrawCreate(385.000000, 335.000000, "+");
	TextDrawAlignment(GasBox[2], 2);
	TextDrawBackgroundColor(GasBox[2], 255);
	TextDrawFont(GasBox[2], 1);
	TextDrawLetterSize(GasBox[2], 0.659999, 2.200000);
	TextDrawColor(GasBox[2], -1);
	TextDrawSetOutline(GasBox[2], 1);
	TextDrawSetProportional(GasBox[2], 1);
	TextDrawTextSize(GasBox[2], 18.000000, 18.000000);
	TextDrawSetSelectable(GasBox[2], true);

 	GasBox[3] = TextDrawCreate(320.000000, 340.000000, "_");
	TextDrawAlignment(GasBox[3], 2);
	TextDrawBackgroundColor(GasBox[3], 255);
	TextDrawFont(GasBox[3], 1);
	TextDrawLetterSize(GasBox[3], 0.500000, 1.000000);
	TextDrawColor(GasBox[3], -1);
	TextDrawSetOutline(GasBox[3], 0);
	TextDrawSetProportional(GasBox[3], 1);
	TextDrawSetShadow(GasBox[3], 1);
	TextDrawUseBox(GasBox[3], 1);
	TextDrawBoxColor(GasBox[3], 80);
	TextDrawTextSize(GasBox[3], 0.000000, 100.000000);

	GasBox[4] = TextDrawCreate(270.000000, 313.000000, "<");
	TextDrawAlignment(GasBox[4], 2);
	TextDrawBackgroundColor(GasBox[4], 255);
	TextDrawFont(GasBox[4], 2);
	TextDrawLetterSize(GasBox[4], 0.400000, 1.600000);
	TextDrawColor(GasBox[4], -1);
	TextDrawSetOutline(GasBox[4], 1);
	TextDrawSetProportional(GasBox[4], 1);
	TextDrawTextSize(GasBox[4], 16.000000, 16.000000);
	TextDrawSetSelectable(GasBox[4], true);
	
	GasBox[5] = TextDrawCreate(370.000000, 313.000000, ">");
	TextDrawAlignment(GasBox[5], 2);
	TextDrawBackgroundColor(GasBox[5], 255);
	TextDrawFont(GasBox[5], 2);
	TextDrawLetterSize(GasBox[5], 0.400000, 1.600000);
	TextDrawColor(GasBox[5], -1);
	TextDrawSetOutline(GasBox[5], 1);
	TextDrawSetProportional(GasBox[5], 1);
	TextDrawTextSize(GasBox[5], 16.000000, 16.000000);
	TextDrawSetSelectable(GasBox[5], true);

 	GasBox[6] = TextDrawCreate(275.000000, 370.000000, "exit");
 	TextDrawAlignment(GasBox[6], 2);
	TextDrawBackgroundColor(GasBox[6], 255);
	TextDrawFont(GasBox[6], 2);
	TextDrawLetterSize(GasBox[6], 0.450000, 1.000000);
	TextDrawColor(GasBox[6], -1);
	TextDrawSetOutline(GasBox[6], 1);
	TextDrawSetProportional(GasBox[6], 1);
	TextDrawTextSize(GasBox[6], 50.000000, 50.000000);
	TextDrawSetSelectable(GasBox[6], true);
	
	GasBox[7] = TextDrawCreate(370.000000, 370.000000, "buy");
	TextDrawAlignment(GasBox[7], 2);
	TextDrawBackgroundColor(GasBox[7], 255);
	TextDrawFont(GasBox[7], 2);
	TextDrawLetterSize(GasBox[7], 0.450000, 1.000000);
	TextDrawColor(GasBox[7], -1);
	TextDrawSetOutline(GasBox[7], 1);
	TextDrawSetProportional(GasBox[7], 1);
	TextDrawTextSize(GasBox[7], 50.000000, 50.000000);
	TextDrawSetSelectable(GasBox[7], true);

// Инвентарь

	new count = 0;
	static CharNames[7][16] = {"€ѓOPOB’E:","ЂPOм•:","C‘ЏOCЏ’:","ЊO‡мOЏA:","“мEP‚…•:","C…‡A:","CЏO†KOCЏ’:"};

	MenuTXD[count] = TextDrawCreate(510.000000, 145.000000, "_");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255); 
	TextDrawFont(MenuTXD[count], 1);
	TextDrawLetterSize(MenuTXD[count], 0.500000, 18.0);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 0.000000, -200.000000);
	count ++;

	for(new i = 0, Float:tY = 155; i < 7; i++, count++, tY += 15)
	{
		MenuTXD[count] = TextDrawCreate(520.000000, tY, CharNames[i]);
		TextDrawBackgroundColor(MenuTXD[count], 255);
		TextDrawFont(MenuTXD[count], 2);
		TextDrawLetterSize(MenuTXD[count], 0.250000, 0.799998);
		TextDrawColor(MenuTXD[count], -1);
		TextDrawSetOutline(MenuTXD[count], 0);
		TextDrawSetProportional(MenuTXD[count], 1);
		TextDrawSetShadow(MenuTXD[count], 1);
	}
	for(new i = 0, Float:tY = 165; i < 7; i++, count++, tY += 15)
	{
		MenuTXD[count] = TextDrawCreate(555.000000, tY, "_");
		TextDrawAlignment(MenuTXD[count], 2);
		TextDrawBackgroundColor(MenuTXD[count], 255);
		TextDrawFont(MenuTXD[count], 1);
		TextDrawLetterSize(MenuTXD[count], 0.500000, 0.399998);
		TextDrawColor(MenuTXD[count], -1);
		TextDrawSetOutline(MenuTXD[count], 0);
		TextDrawSetProportional(MenuTXD[count], 1);
		TextDrawSetShadow(MenuTXD[count], 1);
		TextDrawUseBox(MenuTXD[count], 1);
		TextDrawBoxColor(MenuTXD[count], 255);
		TextDrawTextSize(MenuTXD[count], 0.000000, 70.000000);
	}

	// Левая часть

	MenuTXD[count] = TextDrawCreate(130.000000, 190.000000, "_");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 1);
	TextDrawLetterSize(MenuTXD[count], 0.500000, 16.999969);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 0.000000, -200.000000);
	count++;

	MenuTXD[count] = TextDrawCreate(65.000000, 179.000000, "P”K€AK");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	TextDrawSetSelectable(MenuTXD[count], 1);
	BTS_INVENTORY = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(130.000000, 179.000000, "мAB‘K…"); // "SKILLS"
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	TextDrawSetSelectable(MenuTXD[count], 1);
	BTS_ACHEVEMENTS = count;
	count ++;

//

// Нижняя часть, руки, лицензии, объекты

	MenuTXD[count] = TextDrawCreate(510.000000, 331.000000, "_");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 1);
	TextDrawLetterSize(MenuTXD[count], 0.500000, 4.599996);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 0.000000, -200.000000);
	count ++;

	MenuTXD[count] = TextDrawCreate(445.000000, 320.000000, "PYK…"); // "HANDS"
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	TextDrawSetSelectable(MenuTXD[count], 1);
	BTS_HANDS = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(510.000000, 320.000000, "ћ…‰Eм€……");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	TextDrawSetSelectable(MenuTXD[count], 1);
	BTS_LICENSES = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(575.000000, 320.000000, "OѓE„ѓA");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	TextDrawSetSelectable(MenuTXD[count], 1);
	BTS_OBJECTS = count;
	count ++;


	TD_LIC = count;
	for(new i = 20; i < 25; i++, count ++)
	{
		MenuTXD[count] = TextDrawCreate(InvPos[i][1], InvPos[i][0], "_");
		TextDrawAlignment(MenuTXD[count], 2);
		TextDrawBackgroundColor(MenuTXD[count], 255);
		TextDrawFont(MenuTXD[count], 1);
		TextDrawLetterSize(MenuTXD[count], 0.500000, 2.999999);
		TextDrawColor(MenuTXD[count], -1);
		TextDrawSetOutline(MenuTXD[count], 0);
		TextDrawSetProportional(MenuTXD[count], 1);
		TextDrawSetShadow(MenuTXD[count], 1);
		TextDrawUseBox(MenuTXD[count], 1);
		TextDrawBoxColor(MenuTXD[count], -176);
		TextDrawTextSize(MenuTXD[count], 30.000000, 30.000000);
		TextDrawSetSelectable(MenuTXD[count], 1);
	}


	TXDCount = count;

// Для выделения ячейки

	for(new i = 20; i < 25; i++, count ++)
	{
		MenuTXD[count] = TextDrawCreate(InvPos[i][1], InvPos[i][0], "_");
		TextDrawAlignment(MenuTXD[count], 2);
		TextDrawBackgroundColor(MenuTXD[count], 255);
		TextDrawFont(MenuTXD[count], 1);
		TextDrawLetterSize(MenuTXD[count], 0.500000, 2.999999);
		TextDrawColor(MenuTXD[count], -1);
		TextDrawSetOutline(MenuTXD[count], 0);
		TextDrawSetProportional(MenuTXD[count], 1);
		TextDrawSetShadow(MenuTXD[count], 1);
		TextDrawUseBox(MenuTXD[count], 1);
		TextDrawBoxColor(MenuTXD[count], -176);
		TextDrawTextSize(MenuTXD[count], 30.000000, 30.000000);
	}

// Кнопки

	MenuTXD[count] = TextDrawCreate(65.000000, 179.000000, "P”K€AK"); // "INVENTORY"
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	BT_INVENTORY = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(130.000000, 179.000000, "мAB‘K…"); // "SKILLS"
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	BT_ACHEVEMENTS = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(445.000000, 320.000000, "PYK…");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	BT_HANDS = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(510.000000, 320.000000, "ћ…‰Eм€……");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	BT_LICENSES = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(575.000000, 320.000000, "OѓE„ѓA");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	BT_OBJECTS = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(130.000000, 347.000000, "мA€Aѓ"); // "PREV"
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	TextDrawSetSelectable(MenuTXD[count], 1);
	BTS_PREV = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(195.000000, 347.000000, "BЊEPEѓ"); // "NEXT"
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 10.000000, 60.000000);
	TextDrawSetSelectable(MenuTXD[count], 1);
	BTS_NEXT = count;
	count ++;


// Инвентарь

	TD_INV = count;
	for(new i = 0; i < 20; i++, count ++)
	{
		MenuTXD[count] = TextDrawCreate(InvPos[i][1], InvPos[i][0], "_");
		TextDrawAlignment(MenuTXD[count], 2);
		TextDrawBackgroundColor(MenuTXD[count], 255);
		TextDrawFont(MenuTXD[count], 1);
		TextDrawLetterSize(MenuTXD[count], 0.500000, 2.999999);
		TextDrawColor(MenuTXD[count], -1);
		TextDrawSetOutline(MenuTXD[count], 0);
		TextDrawSetProportional(MenuTXD[count], 1);
		TextDrawSetShadow(MenuTXD[count], 1);
		TextDrawUseBox(MenuTXD[count], 1);
		TextDrawBoxColor(MenuTXD[count], -176);
		TextDrawTextSize(MenuTXD[count], 30.000000, 30.000000);
		TextDrawSetSelectable(MenuTXD[count], 1);
	}

// Выделение ячеек

	for(new i = 0; i < 20; i++, count ++)
	{
		MenuTXD[count] = TextDrawCreate(InvPos[i][1], InvPos[i][0], "_");
		TextDrawAlignment(MenuTXD[count], 2);
		TextDrawBackgroundColor(MenuTXD[count], 255);
		TextDrawFont(MenuTXD[count], 1);
		TextDrawLetterSize(MenuTXD[count], 0.500000, 2.999999);
		TextDrawColor(MenuTXD[count], -1);
		TextDrawSetOutline(MenuTXD[count], 0);
		TextDrawSetProportional(MenuTXD[count], 1);
		TextDrawSetShadow(MenuTXD[count], 1);
		TextDrawUseBox(MenuTXD[count], 1);
		TextDrawBoxColor(MenuTXD[count], -176);
		TextDrawTextSize(MenuTXD[count], 30.000000, 30.000000);
	}

// Достижения

	TD_ACHIVE = count;
	for(new i = 30; i < 34; i ++, count ++)
	{
		MenuTXD[count] = TextDrawCreate(InvPos[i][1], InvPos[i][0], "_");
		TextDrawAlignment(MenuTXD[count], 2);
		TextDrawBackgroundColor(MenuTXD[count], 255);
		TextDrawFont(MenuTXD[count], 1);
		TextDrawLetterSize(MenuTXD[count], 0.500000, 2.999999);
		TextDrawColor(MenuTXD[count], -1);
		TextDrawSetOutline(MenuTXD[count], 0);
		TextDrawSetProportional(MenuTXD[count], 1);
		TextDrawSetShadow(MenuTXD[count], 1);
		TextDrawUseBox(MenuTXD[count], 1);
		TextDrawBoxColor(MenuTXD[count], -176);
		TextDrawTextSize(MenuTXD[count], 30.000000, 30.000000);
	}

	for(new i = 30; i < 34; i ++, count ++)
	{
		MenuTXD[count] = TextDrawCreate(149.0, InvPos[i][0], "_");
		TextDrawAlignment(MenuTXD[count], 2);
		TextDrawBackgroundColor(MenuTXD[count], 255);
		TextDrawFont(MenuTXD[count], 1);
		TextDrawLetterSize(MenuTXD[count], 0.500000, 2.999999);
		TextDrawColor(MenuTXD[count], -1);
		TextDrawSetOutline(MenuTXD[count], 0);
		TextDrawSetProportional(MenuTXD[count], 1);
		TextDrawSetShadow(MenuTXD[count], 1);
		TextDrawUseBox(MenuTXD[count], 1);
		TextDrawBoxColor(MenuTXD[count], -176);
		TextDrawTextSize(MenuTXD[count], 30.000000, 147.000000);
	}

// Информация 

	MenuTXD[count] = TextDrawCreate(130.000000, 371.000000, "_");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 1);
	TextDrawLetterSize(MenuTXD[count], 0.500000, 5.999967);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 0.000000, -200.000000);
	TD_INFO = count;
	count ++;

	MenuTXD[count] = TextDrawCreate(130.000000, 373.000000, "_");
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 1);
	TextDrawLetterSize(MenuTXD[count], 0.500000, 4.099997);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], -176);
	TextDrawTextSize(MenuTXD[count], 0.000000, 188.000000);
	count ++;

	MenuTXD[count] = TextDrawCreate(65.000000, 360.000000, "њмЃO"); // "INFO"
	TextDrawAlignment(MenuTXD[count], 2);
	TextDrawBackgroundColor(MenuTXD[count], 255);
	TextDrawFont(MenuTXD[count], 2);
	TextDrawLetterSize(MenuTXD[count], 0.230000, 0.899999);
	TextDrawColor(MenuTXD[count], -1);
	TextDrawSetOutline(MenuTXD[count], 0);
	TextDrawSetProportional(MenuTXD[count], 1);
	TextDrawSetShadow(MenuTXD[count], 1);
	TextDrawUseBox(MenuTXD[count], 1);
	TextDrawBoxColor(MenuTXD[count], 48);
	TextDrawTextSize(MenuTXD[count], 0.000000, 60.000000);
	count ++;
	
	return 1;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	#if defined LOGGING

	#endif
	if(playertextid == PlayerText:INVALID_TEXT_DRAW) 
	{
		switch(GetPVarInt(playerid,"TypeTextDraw"))
		{
			case 4: MenuHide(playerid); // Инвентарь
			case 6: ClothesHide(playerid); // Инвентарь
			default: return 1;
		}
		DeletePVar(playerid, "TypeTextDraw");
		return 1;
	}
	if(GetPVarInt(playerid,"TypeTextDraw") == 4)
	{
		if(playertextid == pMenuTXD[playerid][BTS_USE])
		{
			if(GetPVarInt(playerid, "Menu_Type") == BT_LICENSES) 
				return ShowLicenses(playerid, playerid);

			else if(GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
			{
				// Переодевание
				//if(!atData[playerid][atModel][GetPVarInt(playerid, "InfoShowSlot")]) return 1;
				//SetPlayerAttachedObject
				//EditAttachedObject(playerid, atData[playerid][at_index][GetPVarInt(playerid, "InfoShowSlot")]);
				return 1;
			} 
			else if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY || GetPVarInt(playerid, "Menu_Type") == BT_HANDS) 
			{
				switch(oData[iData[playerid][inItems][GetPVarInt(playerid, "InfoShowSlot")]][imType])
				{
					case 14..22: return UseItem(playerid, GetPVarInt(playerid, "InfoShowSlot"));
					default: return 1;
				}
			}
			return 1;
		}
		else if(playertextid == pMenuTXD[playerid][BTS_GIVE])
		{
			if(GetPVarInt(playerid, "Menu_Type") == BT_LICENSES) 
				return ShowDialog(playerid, D_LIC_SHOW);

			else if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
			{
				if(GetPVarInt(playerid, "Menu_Other") == 3)
				{
					if(PlayerInfo[playerid][pMoney] < ShopType[1][GetPVarInt(playerid, "InfoShowSlot")])
						return ErrorMes(playerid, "Недостаточно средств на банковской карте.");

					if(ShopType[0][GetPVarInt(playerid, "InfoShowSlot")] == 59)
					{
						new number = 1000000 + random(8999999); 
						if(!AddItem(playerid, ShopType[0][GetPVarInt(playerid, "InfoShowSlot")], number)) return 1;
					}
					else if(!AddItem(playerid, ShopType[0][GetPVarInt(playerid, "InfoShowSlot")],ShopType[2][GetPVarInt(playerid, "InfoShowSlot")])) return 1;
					
					FP_GivePlayerMoney(playerid, -ShopType[1][GetPVarInt(playerid, "InfoShowSlot")]);	
					MoneyToBiznes(playerid, ShopType[1][GetPVarInt(playerid, "InfoShowSlot")]);
					return 1;
				}
				else if(GetPVarInt(playerid, "Menu_Other") == 4)
				{
					if(PlayerInfo[playerid][pMoney] < GunType[1][GetPVarInt(playerid, "InfoShowSlot")])
						return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
					if(!AddItem(playerid, GunType[0][GetPVarInt(playerid, "InfoShowSlot")],GunType[2][GetPVarInt(playerid, "InfoShowSlot")])) return 1;

					FP_GivePlayerMoney(playerid, -GunType[1][GetPVarInt(playerid, "InfoShowSlot")]);
					MoneyToBiznes(playerid, GunType[1][GetPVarInt(playerid, "InfoShowSlot")]);
					return 1;
				}
				else if(GetPVarInt(playerid, "Menu_Other") == 5)
				{
					if(PlayerInfo[playerid][pMoney] < KfcType[1][GetPVarInt(playerid, "InfoShowSlot")])
						return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
					
					if(PlayerInfo[playerid][pHealth] >= 100) return ErrorMes(playerid,"Ты уже сыт(а).");
					FP_SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth] + KfcType[2][GetPVarInt(playerid, "InfoShowSlot")]);

					FP_GivePlayerMoney(playerid, -KfcType[1][GetPVarInt(playerid, "InfoShowSlot")]);
					MoneyToBiznes(playerid, KfcType[1][GetPVarInt(playerid, "InfoShowSlot")]);
					return 1;
				}
				else if(GetPVarInt(playerid, "Menu_Other") == 6)
				{
					if(PlayerInfo[playerid][pMoney] < BarType[1][GetPVarInt(playerid, "InfoShowSlot")])
						return ErrorMes(playerid, "Недостаточно средств на банковской карте.");

					/*new napitok[30],string[128];

					if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный купuл себе %s u начал(а) пuть.",napitok);
					else format(string, sizeof(string), "* %s купuл(а) себе %s u начал(а) пuть.", PlayerInfo[playerid][pName] ,napitok);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE);*/

					if(PlayerInfo[playerid][pHealth] <= 40) 
						FP_SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth] + 10.0);

					if(!BarType[2][GetPVarInt(playerid, "InfoShowSlot")])
						FP_SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
					else if(BarType[2][GetPVarInt(playerid, "InfoShowSlot")] == 1)
						FP_SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
					else if(BarType[2][GetPVarInt(playerid, "InfoShowSlot")] == 2)
						FP_SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
					else SetPlayerDrunkLevel(playerid,GetPlayerDrunkLevel(playerid) + BarType[2][GetPVarInt(playerid, "InfoShowSlot")]);

					FP_GivePlayerMoney(playerid, -BarType[1][GetPVarInt(playerid, "InfoShowSlot")]);
					MoneyToBiznes(playerid, BarType[1][GetPVarInt(playerid, "InfoShowSlot")]);
					return 1;
				}
				else if(GetPVarInt(playerid, "Menu_Other") == 7)
				{
					if(PlayerInfo[playerid][pMoney] < SexType[1][GetPVarInt(playerid, "InfoShowSlot")])
						return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
					if(!AddItem(playerid, SexType[0][GetPVarInt(playerid, "InfoShowSlot")],1)) return 1;

					FP_GivePlayerMoney(playerid, -SexType[1][GetPVarInt(playerid, "InfoShowSlot")]);
					MoneyToBiznes(playerid, SexType[1][GetPVarInt(playerid, "InfoShowSlot")]);
					return 1;
				}
				return 1;
			}

			if(!GetPVarInt(playerid, "InfoShow"))
			{
				if(oData[iData[playerid][inItems][GetPVarInt(playerid, "InfoShowSlot")]][imType] == 13) return ErrorMes(playerid, "Ты не можешь продать банковскую карту.");
				if(oData[iData[playerid][inItems][GetPVarInt(playerid, "InfoShowSlot")]][imType] == 27) return ErrorMes(playerid, "Ты не можешь продать шокер.");

				if(iData[playerid][inState][GetPVarInt(playerid, "InfoShowSlot")] <= 0) return ErrorMes(playerid, "Ты не можешь продать этот предмет.");
			}
			return ShowDialog(playerid, D_SELL_ID);	
		}
		else if(playertextid == pMenuTXD[playerid][BTS_DROP])
		{
			if(GetPVarInt(playerid, "Menu_Type") == BT_LICENSES || GetPVarInt(playerid, "Menu_Type") == BT_OTHER) return 1;

			if(!GetPVarInt(playerid, "InfoShow"))
			{
				if(oData[iData[playerid][inItems][GetPVarInt(playerid, "InfoShowSlot")]][imType] == 13) return ErrorMes(playerid, "Ты не можешь выбросить банковскую карту.");
				if(oData[iData[playerid][inItems][GetPVarInt(playerid, "InfoShowSlot")]][imType] == 27) return ErrorMes(playerid, "Ты не можешь выбросить шокер.");
				//if(iData[playerid][inState][GetPVarInt(playerid, "InfoShowSlot")] <= 0) return ErrorMes(playerid, "Ты не можешь выбросить этот предмет.");
			}
			return ShowDialog(playerid, D_DROP);
		}
		else if(playertextid == pMenuTXD[playerid][BTS_OTHER])
		{
			if(GetPVarInt(playerid, "LMenu_Type") == BT_OTHER) return 1;

			if(GetPVarInt(playerid, "Menu_Select"))
			{
				if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY || GetPVarInt(playerid, "Menu_Type") == BT_ACHEVEMENTS)
					TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
				else if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
					TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);	
			}
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			MenuUpdate(playerid, BT_OTHER, GetPVarInt(playerid, "RMenu_Type"));
			return 1;
		}
		else if(playertextid == pMenuTXD[playerid][14])
		{
			return ShowStats(playerid, playerid);
		}
	}
	else if(GetPVarInt(playerid,"TypeTextDraw") == 6)
	{
		if(TeamInfo[playerid][tID]) return ErrorMes(playerid, "Ты не можешь сменить одежду.");
		for(new i = 0; i < 5; i++)
		{
			if(playertextid == pClothesTXD[playerid][i])
			{
				if(GetPVarInt(playerid, "SkinShop_ID"))
				{
					SetPVarInt(playerid, "Skin_Slot", i);
					ShowDialog(playerid, D_CLOTHES_REPLACE);
				}	

				else if(PlayerInfo[playerid][pSkins][i] == SKIN_NULL) // Сделать скин в трусах
					ShowDialog(playerid, D_CLOTHES_NULL);
				else
				{
					SetPVarInt(playerid, "Skin_Slot", i);
					SetPVarInt(playerid, "Skin_ID", PlayerInfo[playerid][pSkins][i]);
					ShowDialog(playerid, D_CLOTHES_GET);
				}		
			}
		}
	}
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
	#if defined LOGGING

	#endif
	/*
	new str__[32];
	format(str__, sizeof str__, "CLICK: %d", _:clickedid);
	SendClientMessage(playerid, -1, str__);
	*/
	if(clickedid == Text:INVALID_TEXT_DRAW) 
	{
		switch(GetPVarInt(playerid,"TypeTextDraw"))
		{
			case 1: CarShopTextDrawExit(playerid); // Автосалоны
			case 2: GasTextDrawHide(playerid); // Заправки
			case 3: SpectateTextDrawHide(playerid); // Наблюдение
			case 4: MenuHide(playerid); // Инвентарь
			case 5: SkinShopHide(playerid);
			case 6: ClothesHide(playerid);
			default: return 1;
		}
		DeletePVar(playerid, "TypeTextDraw");
		return 1;
	}
	if(GetPVarInt(playerid,"TypeTextDraw") == 1)
	{
		if(ShopTD[3] == clickedid) // Buy
		{
			if(PlayerInfo[playerid][pLevel] < 3) return ErrorMes(playerid,"Покупка личного транспота доступна только с 3 уровня.");
			if(PremiumInfo[playerid][Level])
			{
				if(PlayerInfo[playerid][pCars] >= 3) return ErrorMes(playerid,"У тебя уже есть 3 личных/арендованных транспортных средства.");
			}
			else if(PlayerInfo[playerid][pLevel] >= 20)
			{
				if(PlayerInfo[playerid][pCars] >= 2) return ErrorMes(playerid,"У тебя уже есть 2 личных/арендованных транспортных средства.");
			}
			else if(PlayerInfo[playerid][pCars]) return ErrorMes(playerid,"У тебя уже есть личное/арендованное транспортное средство.");
			
			if(PlayerInfo[playerid][pMoney] < VehMInfo[GetVehicleModel(GetPVarInt(playerid,"BuyCar"))-400][mPrice])return ErrorMes(playerid, "У вас недостаточно денег для покупки.");
			FP_GivePlayerMoney(playerid,-VehMInfo[GetVehicleModel(GetPVarInt(playerid,"BuyCar"))-400][mPrice]);

			CarShopBuy(playerid, VT_OWNED);
			CarShopTextDrawHide(playerid);
			return 1;
		}
		else if(ShopTD[9] == clickedid) // Donate
		{
			if(PlayerInfo[playerid][pLevel] < 3) return ErrorMes(playerid,"Покупка личного транспота доступна только с 3 уровня.");
			if(PremiumInfo[playerid][Level])
			{
				if(PlayerInfo[playerid][pCars] >= 3) return ErrorMes(playerid,"У тебя уже есть 3 личных/арендованных транспортных средства.");
			}
			else if(PlayerInfo[playerid][pLevel] >= 20)
			{
				if(PlayerInfo[playerid][pCars] >= 2) return ErrorMes(playerid,"У тебя уже есть 2 личных/арендованных транспортных средства.");
			}
			else if(PlayerInfo[playerid][pCars]) return ErrorMes(playerid,"У тебя уже есть личное/арендованное транспортное средство.");
			
			if(PlayerInfo[playerid][pSSM] < floatround(VehMInfo[GetVehicleModel(GetPVarInt(playerid,"BuyCar"))-400][mPrice]/5000))return ErrorMes(playerid, "У вас недостаточно SSM для покупки транспорта.");
			PlayerInfo[playerid][pSSM] -= floatround(VehMInfo[GetVehicleModel(GetPVarInt(playerid,"BuyCar"))-400][mPrice]/5000);
			
			new string[80];

			format(string, sizeof string, "%d SSM", PlayerInfo[playerid][pSSM]);
			PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], string);

			format(string,sizeof(string),"UPDATE `samp_users` SET `SSM`=%d WHERE `name`='%s'", PlayerInfo[playerid][pSSM], PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
			CarShopBuy(playerid, VT_OWNED);
			CarShopTextDrawHide(playerid);
			return 1;
		}
		else if(ShopTD[10] == clickedid) // Rent
		{
			if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Аренда транспота доступна только с 1 уровня.");
			if(PremiumInfo[playerid][Level])
			{
				if(PlayerInfo[playerid][pCars] >= 3) return ErrorMes(playerid,"У тебя уже есть 3 личных/арендованных транспортных средства.");
			}
			else if(PlayerInfo[playerid][pLevel] >= 20)
			{
				if(PlayerInfo[playerid][pCars] >= 2) return ErrorMes(playerid,"У тебя уже есть 2 личных/арендованных транспортных средства.");
			}
			else if(PlayerInfo[playerid][pCars]) return ErrorMes(playerid,"У тебя уже есть личное/арендованное транспортное средство.");
			
			if(PlayerInfo[playerid][pMoney] < floatround(VehMInfo[GetVehicleModel(GetPVarInt(playerid,"BuyCar"))-400][mPrice]/800))return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
			FP_GivePlayerMoney(playerid, -floatround(VehMInfo[GetVehicleModel(GetPVarInt(playerid,"BuyCar"))-400][mPrice]/800));
			
			CarShopBuy(playerid, VT_RENT);
			CarShopTextDrawHide(playerid);
			return 1;
		}
		else if(ShopTD[5] == clickedid) // Model left
		{
			SetPVarInt(playerid,"ChoseCar",GetPVarInt(playerid,"ChoseCar") - 1);
			if(GetPVarInt(playerid,"ChoseCar") == -1)
			{
				if(GetPVarInt(playerid,"CarShop") == 1) SetPVarInt(playerid,"ChoseCar",13);
				else if(GetPVarInt(playerid,"CarShop") == 2) SetPVarInt(playerid,"ChoseCar",14);
				else if(GetPVarInt(playerid,"CarShop") == 3) SetPVarInt(playerid,"ChoseCar",17);
				else if(GetPVarInt(playerid,"CarShop") == 4) SetPVarInt(playerid,"ChoseCar",20);
				else if(GetPVarInt(playerid,"CarShop") == 5) SetPVarInt(playerid,"ChoseCar",20);
			}
			CarShopTextDrawUpdate(playerid);
			return 1;
		}
		else if(ShopTD[6] == clickedid) //Model right
		{
			SetPVarInt(playerid,"ChoseCar",GetPVarInt(playerid,"ChoseCar") + 1);
			if(GetPVarInt(playerid,"CarShop") == 1 && GetPVarInt(playerid,"ChoseCar") == 14) DeletePVar(playerid,"ChoseCar");
			else if(GetPVarInt(playerid,"CarShop") == 2 && GetPVarInt(playerid,"ChoseCar") == 15) DeletePVar(playerid,"ChoseCar");
			else if(GetPVarInt(playerid,"CarShop") == 3 && GetPVarInt(playerid,"ChoseCar") == 18) DeletePVar(playerid,"ChoseCar");
			else if(GetPVarInt(playerid,"CarShop") == 4 && GetPVarInt(playerid,"ChoseCar") == 21) DeletePVar(playerid,"ChoseCar");
			else if(GetPVarInt(playerid,"CarShop") == 5 && GetPVarInt(playerid,"ChoseCar") == 21) DeletePVar(playerid,"ChoseCar");
			CarShopTextDrawUpdate(playerid);
			return 1;
		}
		else if(ShopTD[7] == clickedid) //Color left
		{
			SetPVarInt(playerid,"BuyCarColor",GetPVarInt(playerid,"BuyCarColor") - 1);
			if(GetPVarInt(playerid,"BuyCarColor") == -1) SetPVarInt(playerid,"BuyCarColor",255);
			ChangeVehicleColor(GetPVarInt(playerid,"BuyCar"),GetPVarInt(playerid,"BuyCarColor"),GetPVarInt(playerid,"BuyCarColor"));
		}
		else if(ShopTD[8] == clickedid) //Color right
		{
			SetPVarInt(playerid,"BuyCarColor",GetPVarInt(playerid,"BuyCarColor") + 1);
			if(GetPVarInt(playerid,"BuyCarColor") == 256) DeletePVar(playerid,"BuyCarColor");
			ChangeVehicleColor(GetPVarInt(playerid,"BuyCar"),GetPVarInt(playerid,"BuyCarColor"),GetPVarInt(playerid,"BuyCarColor"));
		}
		else
		{
			CarShopTextDrawExit(playerid);
			return 1;
		}
	}
	else if(GetPVarInt(playerid,"TypeTextDraw") == 2)
	{
		new vehicleid = PlayerInfo[playerid][pVehID], model = GetVehicleModel(vehicleid)-400;
		if(!vehicleid || model < 0 || !VehMInfo[model][mLicType] || VehMInfo[model][mLicType] > 2) return 1;

		if(clickedid == GasBox[1])
		{
			if(!GetPVarFloat(playerid,"GasBuyValue")) return 1;

			new Float:price = VehMInfo[model][mTank]/20;

			if(GetPVarFloat(playerid,"GasBuyValue") < price)
				price = GetPVarFloat(playerid,"GasBuyValue") ;

			SetPVarFloat(playerid,"GasBuyValue", GetPVarFloat(playerid,"GasBuyValue") - price);
			SetPVarFloat(playerid,"GasBuyPrice",GetPVarFloat(playerid,"GasBuyPrice") - price * 20); 
			//GasInfo[GetPVarInt(playerid,"GasStationID")][Price][GetPVarInt(playerid,"GasType")]);
			
			GasTextDrawUpdate(playerid, vehicleid, model);

		}
		else if(clickedid == GasBox[2])
		{
			if(GetPVarFloat(playerid,"GasBuyValue") + VehInfo[vehicleid][vGas] >= VehMInfo[model][mTank]) return 1;
	
			new Float:price = VehMInfo[model][mTank]/20;

			if(GetPVarFloat(playerid,"GasBuyValue") + VehInfo[vehicleid][vGas] + price > VehMInfo[model][mTank])
				price = VehMInfo[model][mTank] - GetPVarFloat(playerid,"GasBuyValue") - VehInfo[vehicleid][vGas];

			/*if(price > GasInfo[GetPVarInt(playerid,"GasStationID")][Value][GetPVarInt(playerid,"GasType")])
			{
				return GameTextForPlayer(playerid,FixText("~r~Недостаточно топлива"),5000,4);
			}*/
			SetPVarFloat(playerid,"GasBuyValue", GetPVarFloat(playerid,"GasBuyValue") + price);
			SetPVarFloat(playerid,"GasBuyPrice",GetPVarFloat(playerid,"GasBuyPrice") + price * 20); 
			//GasInfo[GetPVarInt(playerid,"GasStationID")][Price][GetPVarInt(playerid,"GasType")]);
			
			GasTextDrawUpdate(playerid, vehicleid, model);

		}
		else if(clickedid == GasBox[4])
		{
			DeletePVar(playerid,"GasBuyValue");
			DeletePVar(playerid,"GasBuyPrice");

			if(GetPVarInt(playerid,"GasType") == 1) SetPVarInt(playerid,"GasType", 4);
			else SetPVarInt(playerid,"GasType", GetPVarInt(playerid,"GasType") - 1);
			
			GasTextDrawUpdate(playerid, vehicleid, model);
		}
		else if(clickedid == GasBox[5])
		{
			DeletePVar(playerid,"GasBuyValue");
			DeletePVar(playerid,"GasBuyPrice");

			if(GetPVarInt(playerid,"GasType") == 4) SetPVarInt(playerid,"GasType", 1);
			else SetPVarInt(playerid,"GasType", GetPVarInt(playerid,"GasType") + 1);
			
			GasTextDrawUpdate(playerid, vehicleid, model);
		}
		else if(clickedid == GasBox[7])
		{
			if(PlayerInfo[playerid][pMoney] < floatround(GetPVarFloat(playerid,"GasBuyPrice"))) return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
			
			
			static Float:Percent[4] = {0.8,0.92,0.95,0.5};
			VehInfo[vehicleid][vPercent] = (GetPVarFloat(playerid,"GasBuyValue") * Percent[GetPVarInt(playerid,"GasType")-1] + VehInfo[vehicleid][vGas] * VehInfo[vehicleid][vPercent]) / VehMInfo[model][mTank];
			VehInfo[vehicleid][vGas] += GetPVarFloat(playerid,"GasBuyValue");

			FP_GivePlayerMoney(playerid, -floatround(GetPVarFloat(playerid,"GasBuyPrice")));

			for(new i=1; i<=BIZNES; i++) //t biin
			{
				if(BiznesInfo[i][bType] == 1)
				{
					BiznesInfo[i][bMoney] += floatround(GetPVarFloat(playerid,"GasBuyPrice")*0.75);
					if(BiznesInfo[i][bMafia]) FractionInfo[BiznesInfo[i][bMafia]][oMoney] += floatround(GetPVarFloat(playerid,"GasBuyPrice")*0.25);
					KAZNA += floatround(GetPVarFloat(playerid,"GasBuyPrice")*0.25);
					new string[128];	
					format(string,sizeof(string),"UPDATE `samp_biznes` SET `Money` = '%d' WHERE `ID` = '%d'",BiznesInfo[i][bMoney],i);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					break;
				}
			}
			
			new FuelText[8];
			format(FuelText,sizeof(FuelText),"%.2f",VehInfo[GetPlayerVehicleID(playerid)][vGas]);
			PlayerTextDrawSetString(playerid,pSpeedTXD[playerid][2],FuelText);

			GasTextDrawHide(playerid);
			return 1;
		}
		else
		{
			GasTextDrawHide(playerid);
			return 1;
		}
	}
	else if(GetPVarInt(playerid,"TypeTextDraw") == 3)
	{
		if(SpecTD[1] == clickedid) //CHECK
		{
			new string[4];
			format(string,sizeof(string)," %d",Spectate[playerid]);
			return cmd_check(playerid, string);
		}
		else if(SpecTD[2] == clickedid) //GMCHECK
		{

		}
		else if(SpecTD[3] == clickedid) //SLAP
		{
			new string[4];
			format(string,sizeof(string)," %d",Spectate[playerid]);
			return cmd_slap(playerid, string);
		}
		else if(SpecTD[4] == clickedid) //
		{
			Spectate[playerid] --;
			while(!GetPVarInt(Spectate[playerid],"Login") || playerid == Spectate[playerid])
			{
				Spectate[playerid] --;
				if(Spectate[playerid] < 0) Spectate[playerid] = MAX_PLAYER_ID;
			}
			if(GetPlayerState(Spectate[playerid]) == PLAYER_STATE_ONFOOT) PlayerSpectatePlayer(playerid,Spectate[playerid]);
			else if(GetPlayerState(Spectate[playerid]) == PLAYER_STATE_DRIVER) PlayerSpectateVehicle(playerid,GetPlayerVehicleID(Spectate[playerid]));
			FP_SetPlayerInterior(playerid,PlayerInfo[Spectate[playerid]][pInt]);
			FP_SetPlayerVirtualWorld(playerid,PlayerInfo[Spectate[playerid]][pWorld]);
		}
		else if(SpecTD[5] == clickedid) //
		{
			Spectate[playerid] ++;
			while(!GetPVarInt(Spectate[playerid],"Login") || playerid == Spectate[playerid])
			{
				Spectate[playerid] ++;
				if(Spectate[playerid] > MAX_PLAYER_ID) Spectate[playerid] = 0;
			}
			if(GetPlayerState(Spectate[playerid]) == PLAYER_STATE_ONFOOT) PlayerSpectatePlayer(playerid,Spectate[playerid]);
			else if(GetPlayerState(Spectate[playerid]) == PLAYER_STATE_DRIVER) PlayerSpectateVehicle(playerid,GetPlayerVehicleID(Spectate[playerid]));
			FP_SetPlayerInterior(playerid,PlayerInfo[Spectate[playerid]][pInt]);
			FP_SetPlayerVirtualWorld(playerid,PlayerInfo[Spectate[playerid]][pWorld]);
		}
		else if(SpecTD[6] == clickedid) //
		{
			if(!PlayerInfo[Spectate[playerid]][pVehID]) PlayerSpectatePlayer(playerid,Spectate[playerid]);
			else PlayerSpectateVehicle(playerid,PlayerInfo[Spectate[playerid]][pVehID]);
			FP_SetPlayerInterior(playerid,PlayerInfo[Spectate[playerid]][pInt]);
			FP_SetPlayerVirtualWorld(playerid,PlayerInfo[Spectate[playerid]][pWorld]);
		}
		else if(SpecTD[7] == clickedid)
		{
			DeletePVar(playerid, "TypeTextDraw");
			CancelSelectTextDraw(playerid);
			for(new i; i < 8; i++) 
				TextDrawHideForPlayer(playerid,SpecTD[i]);
		}
		else SpectateTextDrawHide(playerid);
	}
	else if(GetPVarInt(playerid,"TypeTextDraw") == 4)
	{
		if(clickedid == MenuTXD[BTS_HANDS])
		{
			if(GetPVarInt(playerid, "RMenu_Type") == BT_HANDS) return 1;

			if(GetPVarInt(playerid, "Menu_Select"))
			{
				if(GetPVarInt(playerid, "Menu_Type") == BT_LICENSES || GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
					TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
				else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
					TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);	
			}
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			MenuUpdate(playerid, GetPVarInt(playerid, "LMenu_Type"), BT_HANDS);
			return 1;
		}
		else if(clickedid == MenuTXD[BTS_LICENSES])
		{
			if(GetPVarInt(playerid, "RMenu_Type") == BT_LICENSES) return 1;

			if(GetPVarInt(playerid, "Menu_Select"))
			{
				if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS || GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
					TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
				else if(GetPVarInt(playerid, "Menu_Type") == BT_LICENSES)
					TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);	
			}
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			MenuUpdate(playerid, GetPVarInt(playerid, "LMenu_Type"), BT_LICENSES);
			return 1;
		}
		else if(clickedid == MenuTXD[BTS_OBJECTS])
		{
			if(GetPVarInt(playerid, "RMenu_Type") == BT_OBJECTS) return 1;

			if(GetPVarInt(playerid, "Menu_Select"))
			{
				if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS || GetPVarInt(playerid, "Menu_Type") == BT_LICENSES)
					TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
				else if(GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
					TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);	
			}
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			MenuUpdate(playerid, GetPVarInt(playerid, "LMenu_Type"), BT_OBJECTS);
			return 1;
		}
		else if(clickedid == MenuTXD[BTS_INVENTORY])
		{
			if(GetPVarInt(playerid, "LMenu_Type") == BT_INVENTORY) return 1;

			if(GetPVarInt(playerid, "Menu_Select"))
			{
				if(GetPVarInt(playerid, "Menu_Type") == BT_ACHEVEMENTS || GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
					TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
				else if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
					TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);	
			}
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			MenuUpdate(playerid, BT_INVENTORY, GetPVarInt(playerid, "RMenu_Type"));
			return 1;
		}
		else if(clickedid == MenuTXD[BTS_ACHEVEMENTS])
		{
			if(GetPVarInt(playerid, "LMenu_Type") == BT_ACHEVEMENTS) return 1;

			if(GetPVarInt(playerid, "Menu_Select"))
			{
				if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY || GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
					TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
				else if(GetPVarInt(playerid, "Menu_Type") == BT_ACHEVEMENTS)
					TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);	
			}
			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			MenuUpdate(playerid, BT_ACHEVEMENTS, GetPVarInt(playerid, "RMenu_Type"));
			return 1;
		}

		else if(clickedid == MenuTXD[BTS_PREV])
		{
			if(!GetPVarInt(playerid, "Skill_Page")) return 1;
			AddPVarInt(playerid, "Skill_Page", -1);

			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			SkillShow(playerid, GetPVarInt(playerid, "Skill_Page"));
			return 1;
		}

		else if(clickedid == MenuTXD[BTS_NEXT])
		{
			if(GetPVarInt(playerid, "Skill_Page") == 0) return 1;
			AddPVarInt(playerid, "Skill_Page", 1);

			PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
			SkillShow(playerid, GetPVarInt(playerid, "Skill_Page"));
			return 1;
		}


		for(new slotid = 0, i = TD_INV, count = TD_INV + 20; i < count; i++, slotid ++)
		{
			if(clickedid == MenuTXD[i])
			{
				if(GetPVarInt(playerid, "LMenu_Type") == BT_INVENTORY)
				{
					if(!iData[playerid][inItems][slotid])
					{
						if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
							ObjectToObject(playerid, slotid, oldslot);
							return 1;

						}
						else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14;

							if(oData[iData[playerid][inItems][oldslot]][imCount] && iData[playerid][inState][oldslot] > 0)
							{
								SetPVarInt(playerid, "Menu_To", slotid);
								SetPVarInt(playerid, "Menu_From", oldslot);
								return ShowDialog(playerid, D_HANDS_TO_BAG);
							}
							ObjectToObject(playerid, slotid, oldslot);
							return 1;
						}
						else if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
							
							if(GetPVarInt(playerid, "Menu_Other") == 1)
							{
								if(oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]][imCount] 
									&& VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot] > 0)
								{
									SetPVarInt(playerid, "Menu_To", slotid);
									SetPVarInt(playerid, "Menu_From", oldslot);
									return ShowDialog(playerid, D_TRUNK_TO_BAG);
								}
								TrunkToObject(playerid, slotid, oldslot);
							}
							else if(GetPVarInt(playerid, "Menu_Other") == 2)
							{
								if(oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]][imCount] 
									&& HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot] > 0)
								{
									SetPVarInt(playerid, "Menu_To", slotid);
									SetPVarInt(playerid, "Menu_From", oldslot);
									return ShowDialog(playerid, D_HOUSE_TO_BAG);
								}
								HouseToObject(playerid, slotid, oldslot);
							}
							else 
							{
								InfoHide(playerid);
							}
							return 1;
						}
						else if(GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC - 6;
							AttachToObject(playerid, slotid, oldslot);
							return 1;
						}
						else
						{
							InfoHide(playerid);
							return 1;
						}
					}
					else
					{

						if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY && GetPVarInt(playerid, "Menu_Select") - TD_INV - 21 == slotid)
						{
							InfoHide(playerid);
						}
						else
						{
							if(oData[iData[playerid][inItems][slotid]][imCount])
							{
								if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
								{
									new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
									if(iData[playerid][inItems][slotid] == iData[playerid][inItems][oldslot]
										&& iData[playerid][inState][slotid] == iData[playerid][inState][oldslot])
									ObjectToObject(playerid, slotid, oldslot);
								}
								else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
								{
									new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14;
									if(iData[playerid][inItems][slotid] == iData[playerid][inItems][oldslot]
										&& iData[playerid][inState][slotid] == iData[playerid][inState][oldslot])
									ObjectToObject(playerid, slotid, oldslot);
								}
								else if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
								{
									new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
									if(GetPVarInt(playerid, "Menu_Other") == 1)
									{
										if(iData[playerid][inItems][slotid] == VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]
											&& iData[playerid][inState][slotid] == VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot])
										TrunkToObject(playerid, slotid, oldslot);
									}
									else if(GetPVarInt(playerid, "Menu_Other") == 2)
									{
										if(iData[playerid][inItems][slotid] == HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]
											&& iData[playerid][inState][slotid] == HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot])
										HouseToObject(playerid, slotid, oldslot);
									}
								}
							}
							InfoShow(playerid, 0, slotid);
							TextDrawShowForPlayer(playerid, MenuTXD[i+20]);
							SetPVarInt(playerid, "Menu_Select", i + 21);
							SetPVarInt(playerid, "Menu_Type", BT_INVENTORY);
							TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
						}	
					}
				}
				else if(GetPVarInt(playerid, "LMenu_Type") == BT_OTHER) // В 3 вкладку
				{
					if(GetPVarInt(playerid, "Menu_Other") == 1) // Багажник
					{
						if(!VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid])
						{
							if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
							{
								new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
								TrunkToTrunk(playerid, slotid, oldslot); 
								return 1;

							}
							else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
							{
								new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14;

								if(iData[playerid][inState][oldslot] <= 0) return ErrorMes(playerid, "Ты не можешь положить этот предмет в багажник.");
								if(oData[iData[playerid][inItems][oldslot]][imCount] && iData[playerid][inState][oldslot] > 0)
								{
									SetPVarInt(playerid, "Menu_To", slotid);
									SetPVarInt(playerid, "Menu_From", oldslot);
									return ShowDialog(playerid, D_BAG_TO_TRUNK);
								}
								ObjectToTrunk(playerid, slotid, oldslot);
								return 1;
							}
							else if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
							{
								new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;

								if(iData[playerid][inState][oldslot] <= 0) return ErrorMes(playerid, "Ты не можешь положить этот предмет в багажник.");

								switch(oData[iData[playerid][inItems][oldslot]][imType])
								{
									case 13: return ErrorMes(playerid, "Ты не можешь положить банковскую карту в багажник.");
									case 27: return ErrorMes(playerid, "Ты не можешь положить шокер в багажник.");
									default: {}
								}
								if(oData[iData[playerid][inItems][oldslot]][imCount] && iData[playerid][inState][oldslot] > 0)
								{
									SetPVarInt(playerid, "Menu_To", slotid);
									SetPVarInt(playerid, "Menu_From", oldslot);
									return ShowDialog(playerid, D_BAG_TO_TRUNK);
								}
								ObjectToTrunk(playerid, slotid, oldslot);
								return 1;
							}
							else if(GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
							{
								new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC - 6;
								AttachToTrunk(playerid, slotid, oldslot);
							}
							else 
							{
								InfoHide(playerid);
							}
						}
						else
						{
							if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER && GetPVarInt(playerid, "Menu_Select") - TD_INV - 21 == slotid)
							{
								InfoHide(playerid);
							}
							else
							{
								if(oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid]][imCount])
								{
									if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
									{
										new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
										if(VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid] == iData[playerid][inItems][oldslot]
											&& VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][slotid] == iData[playerid][inState][oldslot])
										ObjectToTrunk(playerid, slotid, oldslot);
									}
									else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
									{
										new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14;
										if(VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid] == iData[playerid][inItems][oldslot]
											&& VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][slotid] == iData[playerid][inState][oldslot])
										ObjectToTrunk(playerid, slotid, oldslot);
									}
									else if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
									{
										new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
										if(VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid] == VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]
											&& VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][slotid] == VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot])
										TrunkToTrunk(playerid, slotid, oldslot);
									}
								}
								InfoShow(playerid, 3, slotid);
								TextDrawShowForPlayer(playerid, MenuTXD[i+20]);
								SetPVarInt(playerid, "Menu_Select", i + 21);
								SetPVarInt(playerid, "Menu_Type", BT_OTHER);
								TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
							}	
						}
					}
					else if(GetPVarInt(playerid, "Menu_Other") == 2)
					{
						if(!HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid])
						{
							if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
							{
								new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
								HouseToHouse(playerid, slotid, oldslot);
								return 1;
							}
							else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
							{
								new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14;

								if(iData[playerid][inState][oldslot] <= 0) return ErrorMes(playerid, "Ты не можешь положить этот предмет в тайник.");
								if(oData[iData[playerid][inItems][oldslot]][imCount] && iData[playerid][inState][oldslot] > 0)
								{
									SetPVarInt(playerid, "Menu_To", slotid);
									SetPVarInt(playerid, "Menu_From", oldslot);
									return ShowDialog(playerid, D_BAG_TO_HOUSE);
								}
								ObjectToHouse(playerid, slotid, oldslot);
								return 1;
							}
							else if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
							{
								new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;

								if(iData[playerid][inState][oldslot] <= 0) return ErrorMes(playerid, "Ты не можешь положить этот предмет в тайник.");

								switch(oData[iData[playerid][inItems][oldslot]][imType])
								{
									case 13: return ErrorMes(playerid, "Ты не можешь положить банковскую карту в тайник.");
									case 27: return ErrorMes(playerid, "Ты не можешь положить шокер в тайник.");
									default: {}
								}
								if(oData[iData[playerid][inItems][oldslot]][imCount] && iData[playerid][inState][oldslot] > 0)
								{
									SetPVarInt(playerid, "Menu_To", slotid);
									SetPVarInt(playerid, "Menu_From", oldslot);
									return ShowDialog(playerid, D_BAG_TO_HOUSE);
								}
								ObjectToHouse(playerid, slotid, oldslot);
								return 1;
							}
							else if(GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
							{
								new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC - 6;
								AttachToHouse(playerid, slotid, oldslot);
							}
							else 
							{
								InfoHide(playerid);

							}
						}
						else
						{
							if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER && GetPVarInt(playerid, "Menu_Select") - TD_INV - 21 == slotid)
							{
								InfoHide(playerid);
							}
							else
							{
								if(oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid]][imCount])
								{
									if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
									{
										new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
										if(HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid] == iData[playerid][inItems][oldslot]
											&& HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid] == iData[playerid][inState][oldslot])
										ObjectToHouse(playerid, slotid, oldslot);
									}
									else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
									{
										new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14;
										if(HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid] == iData[playerid][inItems][oldslot]
											&& HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid] == iData[playerid][inState][oldslot])
										ObjectToHouse(playerid, slotid, oldslot);
									}
									else if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
									{
										new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
										if(HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid] == HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]
											&& HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid] == HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot])
										HouseToHouse(playerid, slotid, oldslot);
									}
								}
								InfoShow(playerid, 4, slotid);
								TextDrawShowForPlayer(playerid, MenuTXD[i+20]);
								SetPVarInt(playerid, "Menu_Select", i + 21);
								SetPVarInt(playerid, "Menu_Type", BT_OTHER);
								TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
							}	
						}
					}
					else if(GetPVarInt(playerid, "Menu_Other") == 3)
					{
						if(slotid > 5 || (GetPVarInt(playerid, "Menu_Type") == BT_OTHER && GetPVarInt(playerid, "Menu_Select") - TD_INV - 21 == slotid) )
						{
							InfoHide(playerid);
							return 1;
						}
						InfoShow(playerid, 5, slotid);
						TextDrawShowForPlayer(playerid, MenuTXD[i+20]);
						SetPVarInt(playerid, "Menu_Select", i + 21);
						SetPVarInt(playerid, "Menu_Type", BT_OTHER);
						TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
					}
					else if(GetPVarInt(playerid, "Menu_Other") == 4)
					{
						if(slotid > 12 || (GetPVarInt(playerid, "Menu_Type") == BT_OTHER && GetPVarInt(playerid, "Menu_Select") - TD_INV - 21 == slotid) )
						{
							InfoHide(playerid);
							return 1;
						}
						InfoShow(playerid, 6, slotid);
						TextDrawShowForPlayer(playerid, MenuTXD[i+20]);
						SetPVarInt(playerid, "Menu_Select", i + 21);
						SetPVarInt(playerid, "Menu_Type", BT_OTHER);
						TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
					}
					else if(GetPVarInt(playerid, "Menu_Other") == 5)
					{
						if(slotid > 14 || (GetPVarInt(playerid, "Menu_Type") == BT_OTHER && GetPVarInt(playerid, "Menu_Select") - TD_INV - 21 == slotid) )
						{
							InfoHide(playerid);
							return 1;
						}
						InfoShow(playerid, 7, slotid);
						TextDrawShowForPlayer(playerid, MenuTXD[i+20]);
						SetPVarInt(playerid, "Menu_Select", i + 21);
						SetPVarInt(playerid, "Menu_Type", BT_OTHER);
						TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
					}
					else if(GetPVarInt(playerid, "Menu_Other") == 6)
					{
						if(slotid > 6 || (GetPVarInt(playerid, "Menu_Type") == BT_OTHER && GetPVarInt(playerid, "Menu_Select") - TD_INV - 21 == slotid) )
						{
							InfoHide(playerid);
							return 1;
						}
						InfoShow(playerid, 8, slotid);
						TextDrawShowForPlayer(playerid, MenuTXD[i+20]);
						SetPVarInt(playerid, "Menu_Select", i + 21);
						SetPVarInt(playerid, "Menu_Type", BT_OTHER);
						TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
					}
					else if(GetPVarInt(playerid, "Menu_Other") == 7)
					{
						if(slotid > 4 || (GetPVarInt(playerid, "Menu_Type") == BT_OTHER && GetPVarInt(playerid, "Menu_Select") - TD_INV - 21 == slotid) )
						{
							InfoHide(playerid);
							return 1;
						}
						InfoShow(playerid, 9, slotid);
						TextDrawShowForPlayer(playerid, MenuTXD[i+20]);
						SetPVarInt(playerid, "Menu_Select", i + 21);
						SetPVarInt(playerid, "Menu_Type", BT_OTHER);
						TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
					}
					else
					{

						if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER && GetPVarInt(playerid, "Menu_Select") - TD_INV - 21 == slotid)
						{
							InfoHide(playerid);
						}
						else
						{
							InfoShow(playerid, 5, slotid);
							TextDrawShowForPlayer(playerid, MenuTXD[i+20]);
							SetPVarInt(playerid, "Menu_Select", i + 21);
							SetPVarInt(playerid, "Menu_Type", BT_OTHER);
							TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
						}	
					}
				}
				return 1;	
			}
		}

		for(new slotid = 20, i = TD_LIC, count = TD_LIC + 5; i < count; i++, slotid ++)
		{
			if(clickedid == MenuTXD[i])
			{

				if(GetPVarInt(playerid, "RMenu_Type") == BT_HANDS) // В руки
				{
					if(!iData[playerid][inItems][slotid])
					{
						if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;

							if(oData[iData[playerid][inItems][oldslot]][imType] >= 100)
							{
								return ErrorMes(playerid, "Этот предмет должен быть в разделе \"Одежда\".");
							}	
							if(oData[iData[playerid][inItems][oldslot]][imCount] && iData[playerid][inState][oldslot] > 0)
							{
								SetPVarInt(playerid, "Menu_To", slotid);
								SetPVarInt(playerid, "Menu_From", oldslot);
								return ShowDialog(playerid, D_BAG_TO_HANDS);
							}	
							ObjectToObject(playerid, slotid, oldslot);
							return 1;

						}
						else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14;
							ObjectToObject(playerid, slotid, oldslot);
						}
						else if(GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
						{
							return ErrorMes(playerid, "Этот предмет должен быть в разделе \"Одежда\".");
						}
						else if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;

							if(GetPVarInt(playerid, "Menu_Other") == 1)
							{
								if(oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]][imType] >= 100)
								{
									return ErrorMes(playerid, "Этот предмет должен быть в разделе \"Одежда\".");
								}
								if(oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]][imCount] 
									&& VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot] > 0)
								{
									SetPVarInt(playerid, "Menu_To", slotid);
									SetPVarInt(playerid, "Menu_From", oldslot);
									return ShowDialog(playerid, D_TRUNK_TO_BAG);
								}
								TrunkToObject(playerid, slotid, oldslot);
							}
							else if(GetPVarInt(playerid, "Menu_Other") == 2)
							{
								if(oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]][imType] >= 100)
								{
									return ErrorMes(playerid, "Этот предмет должен быть в разделе \"Одежда\".");
								}	
								if(oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]][imCount] 
									&& HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot] > 0)
								{
									SetPVarInt(playerid, "Menu_To", slotid);
									SetPVarInt(playerid, "Menu_From", oldslot);
									return ShowDialog(playerid, D_HOUSE_TO_BAG);
								}
								HouseToObject(playerid, slotid, oldslot);
							}
							else
							{
								InfoHide(playerid);
								return 1;
							}
							return 1;

						}
						else 
						{
							InfoHide(playerid);

						}
					}
					else
					{
						if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS && GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14 == slotid)
						{
							InfoHide(playerid);
						}
						else
						{
							if(oData[iData[playerid][inItems][slotid]][imCount])
							{
								if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
								{
									new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
									if(iData[playerid][inItems][slotid] == iData[playerid][inItems][oldslot]
										&& iData[playerid][inState][slotid] == iData[playerid][inState][oldslot])
									ObjectToObject(playerid, slotid, oldslot);
								}
								else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
								{
									new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14;
									if(iData[playerid][inItems][slotid] == iData[playerid][inItems][oldslot]
										&& iData[playerid][inState][slotid] == iData[playerid][inState][oldslot])
									ObjectToObject(playerid, slotid, oldslot);
								}
								else if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
								{
									new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;
									if(GetPVarInt(playerid, "Menu_Other") == 1)
									{
										if(iData[playerid][inItems][slotid] == VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]
											&& iData[playerid][inState][slotid] == VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][oldslot])
										TrunkToObject(playerid, slotid, oldslot);
									}
									else if(GetPVarInt(playerid, "Menu_Other") == 2)
									{
										if(iData[playerid][inItems][slotid] == HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]
											&& iData[playerid][inState][slotid] == HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][oldslot])
										HouseToObject(playerid, slotid, oldslot);
									}
								}
							}
							InfoShow(playerid, 0, slotid);
							TextDrawShowForPlayer(playerid, MenuTXD[i+5]);
							SetPVarInt(playerid, "Menu_Select", i + 6);
							SetPVarInt(playerid, "Menu_Type", BT_HANDS);
							TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
						}
					}
				}
				else if(GetPVarInt(playerid, "RMenu_Type") == BT_LICENSES) // В лицензии
				{
					if(GetPVarInt(playerid, "Menu_Type") == BT_LICENSES && GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14 == slotid)
					{
						InfoHide(playerid);
					}
					else
					{
						InfoShow(playerid, 1, slotid-20);
						TextDrawShowForPlayer(playerid, MenuTXD[i+5]);
						SetPVarInt(playerid, "Menu_Select", i + 6);
						SetPVarInt(playerid, "Menu_Type", BT_LICENSES);
						TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
					}	
				}
				else if(GetPVarInt(playerid, "RMenu_Type") == BT_OBJECTS) // В одежду
				{
					if(!atData[playerid][atModel][slotid-20])
					{
						if(GetPVarInt(playerid, "Menu_Type") == BT_INVENTORY)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;

							if(oData[iData[playerid][inItems][oldslot]][imType] < 100)
							{
								return ErrorMes(playerid, "Эту вещь нельзя надеть.");
							}
							else if(oData[iData[playerid][inItems][oldslot]][imType] == 100)
							{
								if(PlayerInfo[playerid][pArmour] != -1)
								{
									return ErrorMes(playerid, "Ты уже надел бронежилет.");
								}	
							}

							ObjectToAttach(playerid, slotid-20, oldslot);

						}
						else if(GetPVarInt(playerid, "Menu_Type") == BT_OTHER)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_INV - 21;

							if(GetPVarInt(playerid, "Menu_Other") == 1)
							{
								if(oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]][imType] < 100)
								{
									return ErrorMes(playerid, "Эту вещь нельзя надеть.");
								}
								else if(oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][oldslot]][imType] == 100)
								{
									if(PlayerInfo[playerid][pArmour] != -1)
									{
										return ErrorMes(playerid, "Ты уже надел бронежилет.");
									}	
								}

								TrunkToAttach(playerid, slotid-20, oldslot);
							}
							else if(GetPVarInt(playerid, "Menu_Other") == 2)
							{
								if(oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]][imType] < 100)
								{
									return ErrorMes(playerid, "Эту вещь нельзя надеть.");
								}
								else if(oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][oldslot]][imType] == 100)
								{
									if(PlayerInfo[playerid][pArmour] != -1)
									{
										return ErrorMes(playerid, "Ты уже надел бронежилет.");
									}	
								}

								HouseToAttach(playerid, slotid-20, oldslot);
							}
							else 
							{
								InfoHide(playerid);
							}
						}
						else if(GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS)
						{
							new oldslot = GetPVarInt(playerid, "Menu_Select") - TD_LIC - 6;
							AttachToAttach(playerid, slotid-20, oldslot);
						}
						else if(GetPVarInt(playerid, "Menu_Type") == BT_HANDS)
						{
							return ErrorMes(playerid, "Эту вещь нельзя надеть.");
						}
						else 
						{
							InfoHide(playerid);
						}
					}
					else
					{
						if(GetPVarInt(playerid, "Menu_Type") == BT_OBJECTS && GetPVarInt(playerid, "Menu_Select") - TD_LIC + 14 == slotid)
						{
							InfoHide(playerid);
						}
						else
						{
							InfoShow(playerid, 2, slotid-20);
							TextDrawShowForPlayer(playerid, MenuTXD[i+5]);
							SetPVarInt(playerid, "Menu_Select", i + 6);
							SetPVarInt(playerid, "Menu_Type", BT_OBJECTS);
							TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);
						}
					}	
				}
				return 1;
			}
		}
	}
	else if(GetPVarInt(playerid,"TypeTextDraw") == 5)
	{
		if(clickedid == ShopTXD[5])
		{
			SetPVarInt(playerid, "SkinShop_Count", GetPVarInt(playerid, "SkinShop_Count") - 1);
			if(GetPVarInt(playerid, "SkinShop_Count") < 0) 
			{
				if(PlayerInfo[playerid][pSex] == 2)
					SetPVarInt(playerid, "SkinShop_Count", MAX_FEMALE_SKIN - 1);
				else SetPVarInt(playerid, "SkinShop_Count", MAX_MALE_SKIN - 1);
			}
			SkinShopUpdate(playerid);
		}
		else if(clickedid == ShopTXD[6])
		{
			SetPVarInt(playerid, "SkinShop_Count", GetPVarInt(playerid, "SkinShop_Count") + 1);
			if(PlayerInfo[playerid][pSex] == 2)
			{
				if(GetPVarInt(playerid, "SkinShop_Count") > MAX_FEMALE_SKIN - 1) 
					SetPVarInt(playerid, "SkinShop_Count", 0);
			}
			else
			{
				if(GetPVarInt(playerid, "SkinShop_Count") > MAX_MALE_SKIN - 1) 
					SetPVarInt(playerid, "SkinShop_Count", 0);
			}
			SkinShopUpdate(playerid);
		}
		else if(clickedid == ShopTXD[7])
		{
			return ShowDialog(playerid, D_SKIN_BUY);
		}
		else
		{
			if(!PlayerInfo[playerid][pSkin]) 
				return ShowDialog(playerid, D_SKIN);
			SkinShopHide(playerid);
		}
	}
	else if(GetPVarInt(playerid,"TypeTextDraw") == 6)
	{
		if(clickedid == ClothesTXD[5])
		{
			ClothesHide(playerid);
		}
	}	
	return 1;
}
COMMAND:inv(playerid, params[])return cmd_menu(playerid, params);
COMMAND:menu(playerid, params[])
{
	MenuShow(playerid, GetPVarInt(playerid, "LMenu_Type"), GetPVarInt(playerid, "RMenu_Type"));
	return 1;
}

CarShopBuy(playerid, vehicle_type)
{
	new vehicleid, string[320];
	FP_SetPlayerInterior(playerid,0);
	FP_SetPlayerVirtualWorld(playerid,0);
	TogglePlayerControllable(playerid,true);
	if(GetPVarInt(playerid,"BuyCar")) DestroyVehicle(GetPVarInt(playerid,"BuyCar"));

	if(GetPVarInt(playerid,"CarShop") == 1) 
	{
		vehicleid = AddStaticVehicleEx(CarShop[GetPVarInt(playerid,"CarShop")-1][GetPVarInt(playerid,"ChoseCar")], -1642.4165,1213.7360,6.8343,225.3909, -1, -1, 1800000);
		VehInfo[vehicleid][vParkX] = -1642.4165;
		VehInfo[vehicleid][vParkY] = 1213.7360;
		VehInfo[vehicleid][vParkZ] = 6.8343;
		VehInfo[vehicleid][vParkA] = 225.3909;
	}
	else if(GetPVarInt(playerid,"CarShop") == 2) 
	{
		vehicleid = AddStaticVehicleEx(CarShop[GetPVarInt(playerid,"CarShop")-1][GetPVarInt(playerid,"ChoseCar")], -1985.6677,295.8283,34.6492,88.5053, -1, -1, 1800000);
		VehInfo[vehicleid][vParkX] = -1985.6677;
		VehInfo[vehicleid][vParkY] = 295.8283;
		VehInfo[vehicleid][vParkZ] = 34.6492;
		VehInfo[vehicleid][vParkA] = 88.5053;
	}
	else if(GetPVarInt(playerid,"CarShop") == 3) 
	{
		vehicleid = AddStaticVehicleEx(CarShop[GetPVarInt(playerid,"CarShop")-1][GetPVarInt(playerid,"ChoseCar")], 567.3644,-1287.3446,16.9736,15.4038, -1, -1, 1800000);
		VehInfo[vehicleid][vParkX] = 567.3644;
		VehInfo[vehicleid][vParkY] = -1287.3446;
		VehInfo[vehicleid][vParkZ] = 16.9736;
		VehInfo[vehicleid][vParkA] = 15.4038;
	}
	else if(GetPVarInt(playerid,"CarShop") == 4) 
	{
		vehicleid = AddStaticVehicleEx(CarShop[GetPVarInt(playerid,"CarShop")-1][GetPVarInt(playerid,"ChoseCar")], 2208.5413,1391.8140,10.5474,89.9060, -1, -1, 1800000);
		VehInfo[vehicleid][vParkX] = 2208.5413;
		VehInfo[vehicleid][vParkY] = 1391.8140;
		VehInfo[vehicleid][vParkZ] = 10.5474;
		VehInfo[vehicleid][vParkA] = 89.9060;
	}
	else if(GetPVarInt(playerid,"CarShop") == 5) 
	{
		vehicleid = AddStaticVehicleEx(CarShop[GetPVarInt(playerid,"CarShop")-1][GetPVarInt(playerid,"ChoseCar")], 2126.7561,-1149.3563,23.9891,2.5691, -1, -1, 1800000);
		VehInfo[vehicleid][vParkX] = 2126.7561;
		VehInfo[vehicleid][vParkY] = -1149.3563;
		VehInfo[vehicleid][vParkZ] = 23.9891;
		VehInfo[vehicleid][vParkA] = 2.5691;
	}
	ChangeVehicleColor(vehicleid,GetPVarInt(playerid,"BuyCarColor"),GetPVarInt(playerid,"BuyCarColor"));
	SetPVarInt(playerid,"EnterVehicle",vehicleid);
	VehInfo[vehicleid][vEngine] = 1;
	VehInfo[vehicleid][vLights] = 1;
	VehInfo[vehicleid][vGas] = VehMInfo[GetVehicleModel(vehicleid)-400][mTank];
	VehInfo[vehicleid][vPercent] = VehMInfo[GetVehicleModel(vehicleid)-400][mPercent];
	VehInfo[vehicleid][vPos][0] = VehInfo[vehicleid][vParkX];
	VehInfo[vehicleid][vPos][1] = VehInfo[vehicleid][vParkY];
	VehInfo[vehicleid][vPos][2] = VehInfo[vehicleid][vParkZ];
	SetVehicleParamsEx(vehicleid, VehInfo[vehicleid][vEngine], VehInfo[vehicleid][vLights], VehInfo[vehicleid][vAlarm], VehInfo[vehicleid][vLock], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vBoot], 0);			
	FP_SetVehicleHealth(vehicleid,1000);
	PutPlayerInVehicle(playerid,vehicleid,0);
	
	VehInfo[vehicleid][vModel] = CarShop[GetPVarInt(playerid,"CarShop")-1][GetPVarInt(playerid,"ChoseCar")];
	VehInfo[vehicleid][vDelay] = 180000;
	VehInfo[vehicleid][vColor1] = GetPVarInt(playerid,"BuyCarColor");
	VehInfo[vehicleid][vColor2] = GetPVarInt(playerid,"BuyCarColor");
	VehInfo[vehicleid][vType] = vehicle_type;
	strmid(VehInfo[vehicleid][vOwner], PlayerInfo[playerid][pName], 0, 24, 24);
	strmid(VehInfo[vehicleid][vPlate], "STORIES", 0, strlen("STORIES"), 24);

	VehInfo[vehicleid][vGas] = VehMInfo[GetVehicleModel(vehicleid)-400][mTank]; 
	VehInfo[vehicleid][vPercent] = VehMInfo[GetVehicleModel(vehicleid)-400][mPercent];
	VehInfo[vehicleid][vSpoiler] = 0;
	VehInfo[vehicleid][vHood] = 0;
	VehInfo[vehicleid][vSideskirt] = 0;
	VehInfo[vehicleid][vNitro] = 0;
	VehInfo[vehicleid][vLamps] = 0;
	VehInfo[vehicleid][vExhaust] = 0;
	VehInfo[vehicleid][vWheels] = 0;
	VehInfo[vehicleid][vRoof] = 0;
	VehInfo[vehicleid][vStereo] = 0;
	VehInfo[vehicleid][vHydraulics] = 0;
	VehInfo[vehicleid][vBullbar] = 0;
	VehInfo[vehicleid][vRearBullbars] = 0;
	VehInfo[vehicleid][vFrontSign] = 0;
	VehInfo[vehicleid][vFrontBullbars] = 0;
	VehInfo[vehicleid][vFrontBumper] = 0;
	VehInfo[vehicleid][vRearBumper] = 0;
	VehInfo[vehicleid][vVents] = 0;
	VehInfo[vehicleid][vPaintJob] = -1;
	VehInfo[vehicleid][vNeon] = 0;

	for(new v = 0; v < 20; v++)
	{
		VehInfo[vehicleid][vtItems][v] = 0;
		VehInfo[vehicleid][vtValue][v] = 0;
		VehInfo[vehicleid][vtState][v] = 0.0;
	}

	SetVehicleNumberPlate(vehicleid,VehInfo[vehicleid][vPlate]);
	PlayerInfo[playerid][pCars] ++;


	format(string,sizeof(string), "INSERT INTO `samp_vehicles` (`Model`,`Owner`,`Plate`,`Park_x`,`Park_y`,`Park_z`,`Park_a`,`PaintJob`,`Delay`,`Type`,`Color1`,`Color2`) VALUES ('%d','%s','SStories','%f','%f','%f','%f','-1','1800000','%d','%d','%d')", 
	VehInfo[vehicleid][vModel],PlayerInfo[playerid][pName],VehInfo[vehicleid][vParkX],VehInfo[vehicleid][vParkY],VehInfo[vehicleid][vParkZ],VehInfo[vehicleid][vParkA],VehInfo[vehicleid][vType],VehInfo[vehicleid][vColor1],VehInfo[vehicleid][vColor2]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",vehicleid,DB_ADD_CAR);
}

CarShopTextDrawHide(playerid)
{
	for(new i; i<11; i++) TextDrawHideForPlayer(playerid,ShopTD[i]);
	if(CarShopTD[playerid] != PlayerText:INVALID_TEXT_DRAW)
		PlayerTextDrawDestroy(playerid, CarShopTD[playerid]); 

	DeletePVar(playerid,"BuyCar");
	DeletePVar(playerid,"CarShop");
	DeletePVar(playerid,"ChoseCar");

	DeletePVar(playerid, "TypeTextDraw");
	CancelSelectTextDraw(playerid);	
}

CarShopTextDrawExit(playerid)
{
	FP_SetPlayerInterior(playerid,0);
	FP_SetPlayerVirtualWorld(playerid,0);
	TogglePlayerControllable(playerid,true);
	if(GetPVarInt(playerid,"BuyCar")) DestroyVehicle(GetPVarInt(playerid,"BuyCar"));

	if(GetPVarInt(playerid,"CarShop") == 1) SetPos(playerid,-1664.0131,1207.7834,7.2546,325.0,0,0);
	else if(GetPVarInt(playerid,"CarShop") == 2) SetPos(playerid,-1967.8540,296.3083,35.1719,90.0,0,0);
	else if(GetPVarInt(playerid,"CarShop") == 3) SetPos(playerid,563.6541,-1293.1981,17.2482,0.0,0,0);
	else if(GetPVarInt(playerid,"CarShop") == 4) SetPos(playerid,2200.8901,1394.2567,11.0625,186.0,0,0);
	else if(GetPVarInt(playerid,"CarShop") == 5) SetPos(playerid,2131.7759,-1150.9517,24.1005,0.0,0,0);

	for(new i; i<11; i++) TextDrawHideForPlayer(playerid,ShopTD[i]);
	if(CarShopTD[playerid] != PlayerText:INVALID_TEXT_DRAW)
		PlayerTextDrawDestroy(playerid, CarShopTD[playerid]);

	DeletePVar(playerid,"BuyCar");
	DeletePVar(playerid,"CarShop");
	DeletePVar(playerid,"ChoseCar");

	DeletePVar(playerid, "TypeTextDraw");
	CancelSelectTextDraw(playerid);	
}

CarShopTextDrawUpdate(playerid)
{
	if(GetPVarInt(playerid,"BuyCar")) DestroyVehicle(GetPVarInt(playerid,"BuyCar"));
	new vehicleid = AddStaticVehicleEx(CarShop[GetPVarInt(playerid,"CarShop")-1][GetPVarInt(playerid,"ChoseCar")], 1388.279, -18.88, 1000.84, 0.0, -1, -1, 1800000);
	LinkVehicleToInterior(vehicleid, 1);
	SetVehicleVirtualWorld(vehicleid, playerid);
	ChangeVehicleColor(vehicleid,GetPVarInt(playerid,"BuyCarColor"),GetPVarInt(playerid,"BuyCarColor"));
	SetPVarInt(playerid,"BuyCar",vehicleid);
	
	new Model = CarShop[GetPVarInt(playerid,"CarShop")-1][GetPVarInt(playerid,"ChoseCar")]-400, string[160];
	format(string,sizeof(string),"~p~%s~n~~w~Class: ~y~%s~n~~w~Speed: ~b~%d KM/H~n~~w~Price: ~g~$%d~n~~w~Donate: ~b~%d SSM~n~~w~Rent: ~g~$%d",VehMInfo[Model][mName],VehMInfo[Model][mClassName],VehMInfo[Model][mMaxSpeed],VehMInfo[Model][mPrice],floatround(VehMInfo[Model][mPrice]/5000),floatround(VehMInfo[Model][mPrice]/800));
	PlayerTextDrawSetString(playerid, CarShopTD[playerid], string);
}

GasTextDrawHide(playerid)
{
	PlayerTextDrawDestroy(playerid, GasBoxEx[playerid][0]);
	PlayerTextDrawDestroy(playerid, GasBoxEx[playerid][1]);
	PlayerTextDrawDestroy(playerid, GasBoxEx[playerid][2]);

	for(new i; i<10; i++) TextDrawHideForPlayer(playerid,GasBox[i]);
	DeletePVar(playerid,"GasCheck");
	DeletePVar(playerid,"GasType");
	DeletePVar(playerid,"GasBuyValue");
	DeletePVar(playerid,"GasBuyPrice");
	DeletePVar(playerid,"GasStationID");
	
	DeletePVar(playerid, "TypeTextDraw");
	CancelSelectTextDraw(playerid);

	if(PlayerInfo[playerid][pVehID])
		EngineOn(-1,PlayerInfo[playerid][pVehID]);
}

GasTextDrawUpdate(playerid, vehicleid, model)
{
	new string[64];

	PlayerTextDrawTextSize(playerid, GasBoxEx[playerid][0], 271.0 + (GetPVarFloat(playerid,"GasBuyValue") + VehInfo[vehicleid][vGas]) / VehMInfo[model][mTank] * 98, -1.000000);
	PlayerTextDrawShow(playerid, GasBoxEx[playerid][0]);
	
	format(string,sizeof(string),"%.2f / %.1f~n~~n~~g~$%d", GetPVarFloat(playerid,"GasBuyValue") + VehInfo[vehicleid][vGas], VehMInfo[model][mTank], floatround(GetPVarFloat(playerid,"GasBuyPrice")));
	PlayerTextDrawSetString(playerid, GasBoxEx[playerid][1], string);

	if(GetPVarInt(playerid,"GasType") == VehMInfo[model][mGasType])
		format(string,sizeof(string),"~g~%s",GasType[GetPVarInt(playerid,"GasType") - 1]);
	else 
		format(string,sizeof(string),"~r~%s",GasType[GetPVarInt(playerid,"GasType") - 1]);
	PlayerTextDrawSetString(playerid, GasBoxEx[playerid][2], string);
}

SpectateTextDrawHide(playerid)
{
	if(SpecTDEx[playerid] != PlayerText:INVALID_TEXT_DRAW)
		PlayerTextDrawDestroy(playerid, SpecTDEx[playerid]);

	for(new i = 0; i < 8; i++) 
		TextDrawHideForPlayer(playerid,SpecTD[i]);
	Spectate[playerid] = -1;

	TogglePlayerSpectating(playerid, false);

	DeletePVar(playerid, "TypeTextDraw");
	CancelSelectTextDraw(playerid);
}

SpectateTextDrawUpdate(playerid)
{
	if(Spectate[playerid] == -1) return 1;

	new string[256], weapons[2],
		slotid = oData[GetPlayerWeapon(Spectate[playerid])][imType],
		WeaponString[64];

	GetPlayerWeaponData(Spectate[playerid], slotid, weapons[0], weapons[1]);

	if(!weapons[0]) format(WeaponString,sizeof(WeaponString),"No Gun");
	else format(WeaponString,sizeof(WeaponString),"%s: %d", oData[weapons[0]][imTDName], weapons[1]);

	new Float:armour = 0.0;
	if(PlayerInfo[Spectate[playerid]][pArmour] != -1)
		armour = atData[Spectate[playerid]][atState][PlayerInfo[Spectate[playerid]][pArmour]];

	new exp = 3; if(PlayerInfo[Spectate[playerid]][pLevel]) exp = PlayerInfo[Spectate[playerid]][pLevel]*5;
	format(string,sizeof(string),"%s (%d)~n~LEVEL: %d (%d / %d)~n~WARNS: %d / 3~n~HEALTH: %.0f~n~ARMOUR: %.0f~n~$%d~n~%s~n~SPEED: %d~n~VEHICLE: %.0f HP",
		PlayerInfo[Spectate[playerid]][pName],
		Spectate[playerid],
		PlayerInfo[Spectate[playerid]][pLevel],
		PlayerInfo[Spectate[playerid]][pExp],
		exp,
		WarnInfo[Spectate[playerid]][wWarns],
		PlayerInfo[Spectate[playerid]][pHealth],
		armour,
		PlayerInfo[Spectate[playerid]][pMoney],
		WeaponString,
		PlayerInfo[Spectate[playerid]][pSpeed],
		VehInfo[PlayerInfo[Spectate[playerid]][pVehID]][vHealth]);
	PlayerTextDrawSetString(playerid,SpecTDEx[playerid],string);
	return 1;
}

MenuUpdate(playerid, left, right)
{
// Левая часть
	if(GetPVarInt(playerid, "LMenu_Type") != left)
	{
		if(GetPVarInt(playerid, "LMenu_Type") == BT_OTHER)
			PlayerTextDrawHide(playerid, pMenuTXD[playerid][GetPVarInt(playerid, "LMenu_Type")]);

		else if(GetPVarInt(playerid, "LMenu_Type"))
			TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "LMenu_Type")]);

		if(GetPVarInt(playerid, "LMenu_Type") == BT_INVENTORY)
		{
			for(new i = TD_INV, count = TD_INV + 20; i < count; i++)  
				TextDrawHideForPlayer(playerid, MenuTXD[i]);
			for(new i = 0; i < 20; i++)
				PlayerTextDrawHide(playerid, pInvTXD[playerid][i]);
		}
		else if(GetPVarInt(playerid, "LMenu_Type") == BT_ACHEVEMENTS)
		{
			for(new i = TD_ACHIVE, count = TD_ACHIVE + 8; i < count; i++)  
				TextDrawHideForPlayer(playerid, MenuTXD[i]);

			TextDrawHideForPlayer(playerid, MenuTXD[BTS_PREV]);
			TextDrawHideForPlayer(playerid, MenuTXD[BTS_NEXT]);

			for(new i = 35; i < 47; i++)
				PlayerTextDrawHide(playerid, pInvTXD[playerid][i]);
		}
		if(GetPVarInt(playerid, "LMenu_Type") == BT_OTHER)
		{
			for(new i = TD_INV, count = TD_INV + 20; i < count; i++)  
				TextDrawHideForPlayer(playerid, MenuTXD[i]);
			for(new i = 47; i < 66; i++)
				PlayerTextDrawHide(playerid, pInvTXD[playerid][i]);
		}

		if(left == BT_INVENTORY)
		{
			for(new i = TD_INV, count = TD_INV + 20; i < count; i++)  
				TextDrawShowForPlayer(playerid, MenuTXD[i]);

			for(new i = 0; i < 20; i++)
				PlayerTextDrawShow(playerid, pInvTXD[playerid][i]);

			SetPVarInt(playerid, "LMenu_Type", BT_INVENTORY);
		}
		else if(left == BT_ACHEVEMENTS)
		{
			for(new i = TD_ACHIVE, count = TD_ACHIVE + 8; i < count; i++)  
				TextDrawShowForPlayer(playerid, MenuTXD[i]);

			TextDrawShowForPlayer(playerid, MenuTXD[BTS_PREV]);
			TextDrawShowForPlayer(playerid, MenuTXD[BTS_NEXT]);

			SkillShow(playerid, GetPVarInt(playerid, "Skill_Page"));

			SetPVarInt(playerid, "LMenu_Type", BT_ACHEVEMENTS);
		}
		else if(left == BT_OTHER)
		{
			for(new i = TD_INV, count = TD_INV + 20; i < count; i++)  
				TextDrawShowForPlayer(playerid, MenuTXD[i]);

			for(new i = 47; i < 67; i++)
				PlayerTextDrawShow(playerid, pInvTXD[playerid][i]);

			SetPVarInt(playerid, "LMenu_Type", BT_OTHER);
		}

		if(GetPVarInt(playerid, "LMenu_Type") == BT_OTHER)
			PlayerTextDrawShow(playerid, pMenuTXD[playerid][GetPVarInt(playerid, "LMenu_Type")]);

		else  TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "LMenu_Type")]);
	}
//  Правая часть
	if(GetPVarInt(playerid, "RMenu_Type") != right)
	{
		if(GetPVarInt(playerid, "RMenu_Type"))
			TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "RMenu_Type")]);

		static CharNames[10][12] = {"1","2","3","4","5","MOTO","AUTO","BOAT","FLY","GUN"};

		if(GetPVarInt(playerid, "RMenu_Type") == BT_HANDS)
		{
			for(new i = 20; i < 25; i++)
				PlayerTextDrawHide(playerid, pInvTXD[playerid][i]);
		}
		else if(GetPVarInt(playerid, "RMenu_Type") == BT_LICENSES)
		{
			for(new i = 25; i < 30; i++)
				PlayerTextDrawHide(playerid, pInvTXD[playerid][i]);
		}
		else if(GetPVarInt(playerid, "RMenu_Type") == BT_OBJECTS)
		{
			for(new i = 30; i < 35; i++)
				PlayerTextDrawHide(playerid, pInvTXD[playerid][i]);
		}


		if(right == BT_HANDS)
		{
			for(new i = TD_SLOT, count = TD_SLOT + 5, slotid = 0; i < count; i++, slotid ++)
			{
				PlayerTextDrawSetString(playerid, pMenuTXD[playerid][i], CharNames[slotid]);
				PlayerTextDrawShow(playerid, pMenuTXD[playerid][i]);
			}

			for(new i = 20; i < 25; i++)
				PlayerTextDrawShow(playerid, pInvTXD[playerid][i]);

			SetPVarInt(playerid, "RMenu_Type", BT_HANDS);
		}
		else if(right == BT_LICENSES)
		{
			for(new i = TD_SLOT, count = TD_SLOT + 5, slotid = 0; i < count; i++, slotid ++)
			{
				PlayerTextDrawSetString(playerid, pMenuTXD[playerid][i], CharNames[slotid+5]);
				PlayerTextDrawShow(playerid, pMenuTXD[playerid][i]);
			}

			for(new i = 25; i < 30; i++)
				PlayerTextDrawShow(playerid, pInvTXD[playerid][i]);
			
			SetPVarInt(playerid, "RMenu_Type", BT_LICENSES);
		}
		else if(right == BT_OBJECTS)
		{
			for(new i = TD_SLOT, count = TD_SLOT + 5, slotid = 0; i < count; i++, slotid ++)
			{
				PlayerTextDrawSetString(playerid, pMenuTXD[playerid][i], CharNames[slotid]);
				PlayerTextDrawShow(playerid, pMenuTXD[playerid][i]);
			}

			for(new i = 30; i < 35; i++)
				PlayerTextDrawShow(playerid, pInvTXD[playerid][i]);

			SetPVarInt(playerid, "RMenu_Type", BT_OBJECTS);
		}
		TextDrawShowForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "RMenu_Type")]);
	}
}

InfoShow(playerid, type, slotid)
{
	PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
	if(GetPVarInt(playerid, "Menu_Select"))
		TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);

	for(new i = TD_INFO, count = TD_INFO + 3; i < count; i++)
			TextDrawShowForPlayer(playerid, MenuTXD[i]);
	if(type == 0) // Объекты
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "ЈPOѓAЏ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "B‘ЂPOC…Џ’");
		
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], oData[iData[playerid][inItems][slotid]][imTDName]);
		
		new string[48];
		switch(oData[iData[playerid][inItems][slotid]][imType])
		{
			case 8,9: format(string, sizeof string, "KO‡…ЌECЏBO: %d", iData[playerid][inValue][slotid]);
			case 2..7: format(string, sizeof string, "ЊAЏPOм‘: %d", iData[playerid][inValue][slotid]);
			case 13: format(string, sizeof string, "Њ…м-KOѓ: %d~n~$%d", iData[playerid][inValue][slotid], PlayerInfo[playerid][pMoney]);
			case 14:
			{
				format(string, sizeof string, "KO‡…ЌECЏBO: %d", iData[playerid][inValue][slotid]);
				PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "њCЊO‡’€.");
			}	
			case 15..20:
			{
				format(string, sizeof string, "KO‡…ЌECЏBO: %d‚P", iData[playerid][inValue][slotid]); // w odata
				PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "њCЊO‡’€.");
			}	
			case 21:
			{
				format(string, sizeof string, "ЂYЏ‘‡OK: %d", iData[playerid][inValue][slotid]);
				PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "њCЊO‡’€.");
			}	
			case 22: 
			{
				format(string, sizeof string, "KO‡…ЌECЏBO: %d", iData[playerid][inValue][slotid]);
				PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "њCЊO‡’€.");
			}	
			case 23,25,26: format(string, sizeof string, "KO‡…ЌECЏBO: %d", iData[playerid][inValue][slotid]);
			case 24: format(string, sizeof string, "мO–EP: %d", iData[playerid][inValue][slotid]);
			case 100: format(string, sizeof string, "COCЏO•м…E: %.0f", iData[playerid][inState][slotid]);
			default: format(string, sizeof string, "_");
		}
		if(iData[playerid][inState][slotid] == 0) strcat(string, "~n~C‡Y„EЂмOE");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], string);
	}
	else if(type == 1) // Лицензии
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "C–OЏPEЏ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "ЊOKA€AЏ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "_");

		new licName[24], Info[128];
		switch(slotid)
		{
			case 0: 
			{
				format(licName, sizeof licName, "–OЏOЏPAмCЊOPЏ");

				if(LicInfo[playerid][MotoLic]) format(Info,sizeof(Info),"ECЏ’");
				else if(LicInfo[playerid][TimeMotoLic])
				format(Info,sizeof(Info),FixText("KOмЃ…CKOBAмA ѓO %s"), LicInfo[playerid][DateMotoLic]);
				else format(Info,sizeof(Info),"мEЏ");
			}	
			case 1: 
			{
				format(licName, sizeof licName, "ABЏOЏPAмCЊOPЏ");

				if(LicInfo[playerid][AutoLic]) format(Info,sizeof(Info),"ECЏ’");
				else if(LicInfo[playerid][TimeAutoLic])
				format(Info,sizeof(Info),FixText("KOмЃ…CKOBAмA ѓO %s"), LicInfo[playerid][DateAutoLic]);
				else format(Info,sizeof(Info),"мEЏ");
			}	
			case 2: 
			{
				format(licName, sizeof licName, "BOѓм‘† ЏPAмCЊOPЏ");

				if(LicInfo[playerid][BoatLic]) format(Info,sizeof(Info),"ECЏ’");
				else if(LicInfo[playerid][TimeBoatLic]) // ShowLicen
				format(Info,sizeof(Info),FixText("KOмЃ…CKOBAмA ѓO %s"), LicInfo[playerid][DateBoatLic]);
				else format(Info,sizeof(Info),"мEЏ");
			}
			case 3: 
			{
				format(licName, sizeof licName, "BO€ѓYЋм‘† ЏPAмCЊOPЏ");

				if(LicInfo[playerid][FlyLic]) format(Info,sizeof(Info),"ECЏ’");
				else if(LicInfo[playerid][TimeFlyLic])
				format(Info,sizeof(Info),FixText("KOмЃ…CKOBAмA ѓO %s"), LicInfo[playerid][DateFlyLic]);
				else format(Info,sizeof(Info),"мEЏ");
			}
			case 4: 
			{
				format(licName, sizeof licName, "PA€PEЋEм…E мA OPY„…E");

				if(LicInfo[playerid][GunLic]) format(Info,sizeof(Info),"ECЏ’");
				else if(LicInfo[playerid][TimeGunLic])
				format(Info,sizeof(Info),FixText("KOмЃ…CKOBAмA ѓO %s"), LicInfo[playerid][DateGunLic]);
				else format(Info,sizeof(Info),"мEЏ");
			}
			default: format(licName, sizeof licName, "_");
		}
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], licName);


		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], Info);
		
	}
	else if(type == 2) // Аттач
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "ЊEPEOѓEЏ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "ЈPOѓAЏ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "B‘ЂPOC…Џ’");

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], oData[atData[playerid][atModel][slotid]][imTDName]);
		
		new string[32];

		format(string, sizeof string, "COCЏO•м…E: %.0f", atData[playerid][atState][slotid]);

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], string);
	}
	else if(type == 3) // Багажник
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "_");
		
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid]][imTDName]);
		
		new string[32];
		switch(oData[VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][slotid]][imType])
		{
			case 8,9: format(string, sizeof string, "KO‡…ЌECЏBO: %d", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid]);
			case 2..7: format(string, sizeof string, "ЊAЏPOм‘: %d", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid]);
			case 13: format(string, sizeof string, "Њ…м-KOѓ: %d~n~$%d", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid], PlayerInfo[playerid][pMoney]);
			case 14: format(string, sizeof string, "KO‡…ЌECЏBO: %d", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid]);
			case 15..20: format(string, sizeof string, "KO‡…ЌECЏBO: %d‚P", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid]); // w odata
			case 21: format(string, sizeof string, "ЂYЏ‘‡OK: %d", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid]);
			case 22: format(string, sizeof string, "KO‡…ЌECЏBO: %d", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid]);
			case 23,25,26: format(string, sizeof string, "KO‡…ЌECЏBO: %d", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid]);
			case 24: format(string, sizeof string, "мO–EP: %d", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtValue][slotid]);
			case 100: format(string, sizeof string, "COCЏO•м…E: %.0f", VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][slotid]);
			default: format(string, sizeof string, "_");
		}
		if(VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtState][slotid] == 0) strcat(string, "~n~C‡Y„EЂмOE");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], string);
	}
	else if(type == 4) // Дом
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "_");
		
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid]][imTDName]);
		
		new string[32];
		switch(oData[HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][slotid]][imType])
		{
			case 8,9: format(string, sizeof string, "KO‡…ЌECЏBO: %d", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid]);
			case 2..7: format(string, sizeof string, "ЊAЏPOм‘: %d", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid]);
			case 13: format(string, sizeof string, "Њ…м-KOѓ: %d~n~$%d", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid], PlayerInfo[playerid][pMoney]);
			case 14:format(string, sizeof string, "KO‡…ЌECЏBO: %d", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid]);
			case 15..20: format(string, sizeof string, "KO‡…ЌECЏBO: %d‚P", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid]); // w odata	
			case 21: format(string, sizeof string, "ЂYЏ‘‡OK: %d", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid]);
			case 22: format(string, sizeof string, "KO‡…ЌECЏBO: %d", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid]);	
			case 23,25,26: format(string, sizeof string, "KO‡…ЌECЏBO: %d", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid]);
			case 24: format(string, sizeof string, "мO–EP: %d", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hValue][slotid]);
			case 100: format(string, sizeof string, "COCЏO•м…E: %.0f", HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid]);
			default: format(string, sizeof string, "_");
		}
		if(HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hState][slotid] == 0) strcat(string, "~n~C‡Y„EЂмOE");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], string);
	}
	else if(type == 5) // Магазин
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "KYЊ…Џ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "_");

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], oData[ShopType[0][slotid]][imTDName]);
		
		new string[36];

		format(string, sizeof string, "KO‡…ЌECЏBO: %d~n~‰EмA: $%d", ShopType[2][slotid], ShopType[1][slotid]);

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], string);
	}
	else if(type == 6) // Магазин оружия
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "KYЊ…Џ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "_");

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], oData[GunType[0][slotid]][imTDName]);
		
		new string[36];

		switch(oData[GunType[0][slotid]][imType])
		{
			case 0,1,8..12: format(string, sizeof string, "KO‡…ЌECЏBO: %d~n~‰EмA: $%d", GunType[2][slotid], GunType[1][slotid]);
			default: format(string, sizeof string, "ЊAЏPOм‘: %d~n~‰EмA: $%d", GunType[2][slotid], GunType[1][slotid]);
		}			

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], string);
	}
	else if(type == 7) // Закусочные
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "KYЊ…Џ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "_");

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], oData[KfcType[0][slotid]][imTDName]);
		
		new string[36];

		format(string, sizeof string, "€ѓOPOB’E: +%d~n~‰EмA: $%d", KfcType[2][slotid], KfcType[1][slotid]);			

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], string);
	}
	else if(type == 8) // Бар
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "KYЊ…Џ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "_");

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], oData[BarType[0][slotid]][imTDName]);
		
		new string[36];

		format(string, sizeof string, "‰EмA: $%d", BarType[1][slotid]);			

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], string);
	}
	else if(type == 9) // Бар
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_USE], "_");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_GIVE], "KYЊ…Џ’");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_DROP], "_");

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NAME], oData[SexType[0][slotid]][imTDName]);
		
		new string[36];

		format(string, sizeof string, "‰EмA: $%d", SexType[1][slotid]);			

		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_STATE], string);
	}
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_USE]);
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_GIVE]);
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_DROP]);

	PlayerTextDrawShow(playerid, pMenuTXD[playerid][TD_NAME]);
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][TD_STATE]);
	
	SetPVarInt(playerid, "InfoShow", type);
	SetPVarInt(playerid, "InfoShowSlot", slotid);
}

InfoHide(playerid)
{
	PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
	for(new i = TD_INFO, count = TD_INFO + 3; i < count; i++)
		TextDrawHideForPlayer(playerid, MenuTXD[i]);

	PlayerTextDrawHide(playerid, pMenuTXD[playerid][BTS_USE]);
	PlayerTextDrawHide(playerid, pMenuTXD[playerid][BTS_GIVE]);
	PlayerTextDrawHide(playerid, pMenuTXD[playerid][BTS_DROP]);

	PlayerTextDrawHide(playerid, pMenuTXD[playerid][TD_NAME]);
	PlayerTextDrawHide(playerid, pMenuTXD[playerid][TD_STATE]);

	if(GetPVarInt(playerid, "Menu_Select"))
		TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "Menu_Select")-1]);

	DeletePVar(playerid, "Menu_Select");
	DeletePVar(playerid, "Menu_Type");
	DeletePVar(playerid, "InfoShow");
	DeletePVar(playerid, "InfoShowSlot");
}

GetStatusColor(value)
{
	switch(value)
	{
		case 0..30: return 0xFF000050;
		case 31..70: return 0xFFFF0050;
		default: return 0x00FF0050;
	}
	return 0x00FF0050;
}

PlayerTextDrawsCreate(playerid)
{
	CreatePlayerTextDraw(playerid, 640.0, 480.0,"_");

	Helper[playerid] = CreatePlayerTextDraw(playerid, 552.000000, 105.000000, "_");
	PlayerTextDrawAlignment(playerid, Helper[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, Helper[playerid], 255);
	PlayerTextDrawFont(playerid, Helper[playerid], 2);
	PlayerTextDrawLetterSize(playerid, Helper[playerid], 0.250000, 0.899999);
	PlayerTextDrawColor(playerid, Helper[playerid], -1);
	PlayerTextDrawSetOutline(playerid, Helper[playerid], 0);
	PlayerTextDrawSetProportional(playerid, Helper[playerid], 1);
	PlayerTextDrawSetShadow(playerid, Helper[playerid], 1);
	PlayerTextDrawUseBox(playerid, Helper[playerid], 1);
	PlayerTextDrawBoxColor(playerid, Helper[playerid], 50);
	PlayerTextDrawTextSize(playerid, Helper[playerid], 0.000000, 110.000000);

	LvL[playerid] = CreatePlayerTextDraw(playerid, 552.000000, 2.000000, "~w~LvL~y~:~w~0   Exp~y~:~w~ 0~y~/~w~3");
	PlayerTextDrawAlignment(playerid, LvL[playerid], 2);
	PlayerTextDrawBackgroundColor(playerid, LvL[playerid], 255);
	PlayerTextDrawFont(playerid, LvL[playerid], 2);
	PlayerTextDrawLetterSize(playerid, LvL[playerid], 0.310000, 2.299999);
	PlayerTextDrawColor(playerid, LvL[playerid], -1);
	PlayerTextDrawSetOutline(playerid, LvL[playerid], 0);
	PlayerTextDrawSetProportional(playerid, LvL[playerid], 1);
	PlayerTextDrawSetShadow(playerid, LvL[playerid], 1);

	pSpeedTXD[playerid][0] = CreatePlayerTextDraw(playerid, 445.000000, 388.000000, "0");
	PlayerTextDrawAlignment(playerid, pSpeedTXD[playerid][0], 2);
	PlayerTextDrawBackgroundColor(playerid, pSpeedTXD[playerid][0], 255);
	PlayerTextDrawFont(playerid, pSpeedTXD[playerid][0], 0);
	PlayerTextDrawLetterSize(playerid, pSpeedTXD[playerid][0], 0.649999, 2.299999);
	PlayerTextDrawColor(playerid, pSpeedTXD[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, pSpeedTXD[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, pSpeedTXD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, pSpeedTXD[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, pSpeedTXD[playerid][0], 0);

	pSpeedTXD[playerid][1] = CreatePlayerTextDraw(playerid, 575.000000, 388.000000, "100%");
	PlayerTextDrawAlignment(playerid, pSpeedTXD[playerid][1], 2);
	PlayerTextDrawBackgroundColor(playerid, pSpeedTXD[playerid][1], 255);
	PlayerTextDrawFont(playerid, pSpeedTXD[playerid][1], 0);
	PlayerTextDrawLetterSize(playerid, pSpeedTXD[playerid][1], 0.649999, 2.299999);
	PlayerTextDrawColor(playerid, pSpeedTXD[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, pSpeedTXD[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, pSpeedTXD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, pSpeedTXD[playerid][1], 1);

	pSpeedTXD[playerid][2] = CreatePlayerTextDraw(playerid, 510.000000, 397.000000, "0.0");
	PlayerTextDrawAlignment(playerid, pSpeedTXD[playerid][2], 2);
	PlayerTextDrawBackgroundColor(playerid, pSpeedTXD[playerid][2], 255);
	PlayerTextDrawFont(playerid, pSpeedTXD[playerid][2], 0);
	PlayerTextDrawLetterSize(playerid, pSpeedTXD[playerid][2], 0.509999, 1.600000);
	PlayerTextDrawColor(playerid, pSpeedTXD[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, pSpeedTXD[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, pSpeedTXD[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, pSpeedTXD[playerid][2], 1);

	pSpeedTXD[playerid][3] = CreatePlayerTextDraw(playerid, 510.000000, 412.000000, "~w~E ~w~L ~w~F ~w~T");
	PlayerTextDrawAlignment(playerid, pSpeedTXD[playerid][3], 2);
	PlayerTextDrawBackgroundColor(playerid, pSpeedTXD[playerid][3], 255);
	PlayerTextDrawFont(playerid, pSpeedTXD[playerid][3], 2);
	PlayerTextDrawLetterSize(playerid, pSpeedTXD[playerid][3], 0.320000, 1.200000);
	PlayerTextDrawColor(playerid, pSpeedTXD[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, pSpeedTXD[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, pSpeedTXD[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, pSpeedTXD[playerid][3], 1);

	pSpeedTXD[playerid][4] = CreatePlayerTextDraw(playerid, 575.000000, 412.000000, "~r~CLOSE");
	PlayerTextDrawAlignment(playerid, pSpeedTXD[playerid][4], 2);
	PlayerTextDrawBackgroundColor(playerid, pSpeedTXD[playerid][4], 255);
	PlayerTextDrawFont(playerid, pSpeedTXD[playerid][4], 2);
	PlayerTextDrawLetterSize(playerid, pSpeedTXD[playerid][4], 0.320000, 1.200000); // KM/H
	PlayerTextDrawColor(playerid, pSpeedTXD[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, pSpeedTXD[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, pSpeedTXD[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, pSpeedTXD[playerid][4], 1);

	for(new i = 0, Float:tY = 166; i < 7; i++, tY += 15)
	{
		pMenuTXD[playerid][i] = CreatePlayerTextDraw(playerid, 555.000000, tY, "_");
		PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][i], 2);
		PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][i], 255);
		PlayerTextDrawFont(playerid, pMenuTXD[playerid][i], 1);
		PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][i], 0.500000, 0.1);
		PlayerTextDrawColor(playerid, pMenuTXD[playerid][i], -1);
		PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][i], 0);
		PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][i], 1);
		PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][i], 1);
		PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][i], 1);
		PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][i], 0xFF000050);
		PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][i], 0.000000, 67.000000);

		pMenuTXD[playerid][i+7] = CreatePlayerTextDraw(playerid, 521.000000, tY, "_");
		PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][i+7], 1);
		PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][i+7], 255);
		PlayerTextDrawFont(playerid, pMenuTXD[playerid][i+7], 1);
		PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][i+7], 0.500000, 0.1);
		PlayerTextDrawColor(playerid, pMenuTXD[playerid][i+7], -1);
		PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][i+7], 0);
		PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][i+7], 1);
		PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][i+7], 1);
		PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][i+7], 1);
		PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][i+7], 0xFF000050);
		PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][i+7], 518.0, 0.000000); // 588
	}

	new count = 14;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 510.000000, 270.000000, "_");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.280000, 1.200000);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 140.000000);
	PlayerTextDrawSetSelectable(playerid, pMenuTXD[playerid][count], 1);
	TD_NICK = count;
	count ++;


	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 465.000000, 136.000000, "_");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.499998, 1.999999);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 20.000000, 90.000000);
	BT_WANTED = count;
	count ++;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 420.000000, 152.000000, "_");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], -176);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 5);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.000000, 0.000000);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 90.000000, 115.000000);
	PlayerTextDrawSetPreviewModel(playerid, pMenuTXD[playerid][count], 0);
	count ++;

// Номера слотов и типы лицензий
	TD_SLOT = count;
	for(new i = 0; i < 5; i++, count++)
	{
		pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, InvPos[i+25][1], InvPos[i+25][0], "_");
		PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
		PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
		PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
		PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.250000, 0.799997);
		PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
		PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
		PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
		PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	} // 26 - 30

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 65.000000, 415.000000, "_");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.230000, 0.899999);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][count], -176);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 58.000000);
	PlayerTextDrawSetSelectable(playerid, pMenuTXD[playerid][count], 1);
	BTS_USE = count;
	count ++;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 130.000000, 415.000000, "_");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.230000, 0.899999);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][count], -176);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 58.000000);
	PlayerTextDrawSetSelectable(playerid, pMenuTXD[playerid][count], 1);
	BTS_GIVE = count;
	count ++;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 195.000000, 415.000000, "_");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.230000, 0.899999);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][count], -176);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 58.000000);
	PlayerTextDrawSetSelectable(playerid, pMenuTXD[playerid][count], 1);
	BTS_DROP = count;
	count ++;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 195.000000, 179.000000, "_");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.230000, 0.899999);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][count], 48);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 60.000000);
	PlayerTextDrawSetSelectable(playerid, pMenuTXD[playerid][count], 1);
	BTS_OTHER = count;
	count ++;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 195.000000, 179.000000, "_"); 
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.230000, 0.899999);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][count], 48);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 60.000000);
	BT_OTHER = count;
	count ++;

// Информация об объекте

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 135.000000, 374.000000, "_"); 
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 48);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.210000, 1.000000);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	TD_NAME = count;
	count ++;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 135.000000, 387.000000, "AMMO: 365~n~STATE: 100%");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 48);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.200000, 1.000000);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	TD_STATE = count;
	count ++;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 422.500000, 255.000000, "00:00");
	//PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.230000, 1.199999);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 25.000000);
	PlayerTextDrawSetSelectable(playerid, pMenuTXD[playerid][count], 1);
	TD_TIME = count;
	count ++;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 507.000000, 255.000000, "~p~ 0 SSM");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 3);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.230000, 1.199999);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawUseBox(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 25.000000);
	PlayerTextDrawSetSelectable(playerid, pMenuTXD[playerid][count], 1);
	TD_SSM = count;
	count ++;


	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 510.000000, 280.000000, "_");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.280000, 1.200000);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 140.000000);
	//PlayerTextDrawSetSelectable(playerid, pMenuTXD[playerid][count], 1);
	TD_LVL = count;
	count ++;

	pMenuTXD[playerid][count] = CreatePlayerTextDraw(playerid, 510.000000, 290.000000, "~g~$0");
	PlayerTextDrawAlignment(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawBackgroundColor(playerid, pMenuTXD[playerid][count], 255);
	PlayerTextDrawFont(playerid, pMenuTXD[playerid][count], 2);
	PlayerTextDrawLetterSize(playerid, pMenuTXD[playerid][count], 0.280000, 1.200000);
	PlayerTextDrawColor(playerid, pMenuTXD[playerid][count], -1);
	PlayerTextDrawSetOutline(playerid, pMenuTXD[playerid][count], 0);
	PlayerTextDrawSetProportional(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawSetShadow(playerid, pMenuTXD[playerid][count], 1);
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][count], 10.000000, 140.000000);
	//PlayerTextDrawSetSelectable(playerid, pMenuTXD[playerid][count], 1);
	TD_MONEY = count;

// Содержимое инвентаря

	for(new i = 30; i < 35; i++) // Аттач 30 - 34
		AttachShow(playerid, i, atData[playerid][atModel][i-30], false);

	count = 35;
	for(new i = 0; i < 4; i++, count++) // Ачивки 35 - 46
	{
		pInvTXD[playerid][count] = CreatePlayerTextDraw(playerid, InvPos[i+30][1]-16, InvPos[i+30][0]-1, "_");
		PlayerTextDrawAlignment(playerid, pInvTXD[playerid][count], 2);
		PlayerTextDrawBackgroundColor(playerid, pInvTXD[playerid][count], 255);
		PlayerTextDrawFont(playerid, pInvTXD[playerid][count], 4);
		PlayerTextDrawLetterSize(playerid, pInvTXD[playerid][count], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, pInvTXD[playerid][count], -1);
		PlayerTextDrawSetOutline(playerid, pInvTXD[playerid][count], 0);
		PlayerTextDrawSetProportional(playerid, pInvTXD[playerid][count], 1);
		PlayerTextDrawSetShadow(playerid, pInvTXD[playerid][count], 1);
		PlayerTextDrawUseBox(playerid, pInvTXD[playerid][count], 1);
		PlayerTextDrawBoxColor(playerid, pInvTXD[playerid][count], 255);
		PlayerTextDrawTextSize(playerid, pInvTXD[playerid][count], 32.000000, 29.000000);
		count++;

		pInvTXD[playerid][count] = CreatePlayerTextDraw(playerid, 149.000000, InvPos[i+30][0]-2, "_");
		PlayerTextDrawAlignment(playerid, pInvTXD[playerid][count], 2);
		PlayerTextDrawBackgroundColor(playerid, pInvTXD[playerid][count], 48);
		PlayerTextDrawFont(playerid, pInvTXD[playerid][count], 2);
		PlayerTextDrawLetterSize(playerid, pInvTXD[playerid][count], 0.210000, 1.000000);
		PlayerTextDrawColor(playerid, pInvTXD[playerid][count], -1);
		PlayerTextDrawSetOutline(playerid, pInvTXD[playerid][count], 1);
		PlayerTextDrawSetProportional(playerid, pInvTXD[playerid][count], 1);
		count ++;

		pInvTXD[playerid][count] = CreatePlayerTextDraw(playerid, 149.000000, InvPos[i+30][0]+8, "_");
		PlayerTextDrawAlignment(playerid, pInvTXD[playerid][count], 2);
		PlayerTextDrawBackgroundColor(playerid, pInvTXD[playerid][count], 48);
		PlayerTextDrawFont(playerid, pInvTXD[playerid][count], 2);
		PlayerTextDrawLetterSize(playerid, pInvTXD[playerid][count], 0.200000, 1.000000);
		PlayerTextDrawColor(playerid, pInvTXD[playerid][count], -1);
		PlayerTextDrawSetOutline(playerid, pInvTXD[playerid][count], 1);
		PlayerTextDrawSetProportional(playerid, pInvTXD[playerid][count], 1);
	}
}

StatusUpdate(playerid)
{
	new StatusColor = floatround(PlayerInfo[playerid][pHealth]);

	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][0], GetStatusColor(StatusColor));
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][7], GetStatusColor(StatusColor));
	PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][7], 518.0 + PlayerInfo[playerid][pHealth]*0.7, 0.000000);

	PlayerTextDrawShow(playerid, pMenuTXD[playerid][0]);
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][7]);

	if(PlayerInfo[playerid][pArmour] == -1) 
	{
		StatusColor = 0;
		PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][8], 518.0, 0.000000);
	}	
	else 
	{
		StatusColor = floatround(atData[playerid][atState][PlayerInfo[playerid][pArmour]]);
		PlayerTextDrawTextSize(playerid, pMenuTXD[playerid][8], 
			518.0 + atData[playerid][atState][PlayerInfo[playerid][pArmour]]*0.7, 0.000000);
	}

	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][1], GetStatusColor(StatusColor));
	PlayerTextDrawBoxColor(playerid, pMenuTXD[playerid][8], GetStatusColor(StatusColor));

	PlayerTextDrawShow(playerid, pMenuTXD[playerid][1]);
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][8]);
		
}

MenuShow(playerid, left, right)
{
	if(GetPVarInt(playerid, "TypeTextDraw") == 4) return 1;
	if(GetPVarInt(playerid, "TypeTextDraw")) 
		return ErrorMes(playerid, "Ты не можешь открыть меню в данный момент.");
	if(GetPVarInt(playerid,"EventStart") > GetTime) 
		return ErrorMes(playerid,"Ты не можешь использовать меню на ивенте.");

	SetPVarInt(playerid, "TypeTextDraw", 4);

	if(!left) left = BT_INVENTORY;
	if(!right) right = BT_HANDS;

	for(new i = 0; i < TXDCount; i++) TextDrawShowForPlayer(playerid, MenuTXD[i]);

	new count = 0, string[64];

	StatusUpdate(playerid); // Формируем полоски
	for(new i = 0; i < 14; i++, count++)
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][count]);

	format(string, sizeof string, "%s", PlayerInfo[playerid][pName]);
	PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_NICK], string);

	PlayerTextDrawShow(playerid, pMenuTXD[playerid][TD_NICK]);

	PlayerTextDrawShow(playerid, pMenuTXD[playerid][TD_LVL]);
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][TD_MONEY]);


	count ++;

	PlayerTextDrawShow(playerid, pMenuTXD[playerid][count]);
	count ++;

	if(!TeamInfo[playerid][tID] || (IsACop(playerid) && !GetPVarInt(playerid,"OnDuty"))) 
    	PlayerTextDrawSetPreviewModel(playerid, pMenuTXD[playerid][count], PlayerInfo[playerid][pSkin]);
	else 
		PlayerTextDrawSetPreviewModel(playerid, pMenuTXD[playerid][count], TeamInfo[playerid][tSkin]);
	
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][count]);
	count ++;

// Номера слотов и типы лицензий
	static CharNames[5][12] = {"1","2","3","4","5"};
	for(new i = 0; i < 5; i++, count++)
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][count], CharNames[i]);
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][count]);
	} // 26 - 30

	new timetext[16];
	format(timetext, sizeof timetext, "%02d:%02d", floatround(PlayerInfo[playerid][pPayDay]/60),PlayerInfo[playerid][pPayDay]%60);
	PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_TIME], timetext);
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][TD_TIME]);

	format(timetext, sizeof timetext, "%d SSM", PlayerInfo[playerid][pSSM]);
	PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], timetext);
	PlayerTextDrawShow(playerid, pMenuTXD[playerid][TD_SSM]);

	for(new i = 20; i < 25; i ++)
	{
		if(!iData[playerid][inItems][i] || iData[playerid][inValue][i] > 0) continue;
		DropItem(playerid, i);
	}

	// Создали наполнение

	if(GetPVarInt(playerid, "Menu_Other") == 1)
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_OTHER], "ЂA‚A„м…K");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_OTHER], "ЂA‚A„м…K");

		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BT_OTHER]);
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_OTHER]);

		for(new i = 0; i < 20; i++)
			OtherShow(playerid, i+47, VehInfo[GetPVarInt(playerid, "Menu_OtherID")][vtItems][i], false);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 2)
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_OTHER], "ЏA†м…K");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_OTHER], "ЏA†м…K");

		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BT_OTHER]);
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_OTHER]);

		for(new i = 0; i < 20; i++)
			OtherShow(playerid, i+47, HouseInfo[GetPVarInt(playerid, "Menu_OtherID")][hItems][i], false);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 3)
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_OTHER], "–A‚A€…м");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_OTHER], "–A‚A€…м");

		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BT_OTHER]);
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_OTHER]);

		for(new i = 0; i < 6; i++)
			OtherShow(playerid, i+47, ShopType[0][i], false);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 4)
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_OTHER], "OPY„E†KA");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_OTHER], "OPY„E†KA");

		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BT_OTHER]);
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_OTHER]);

		for(new i = 0; i < 13; i++)
			OtherShow(playerid, i+47, GunType[0][i], false);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 5)
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_OTHER], "KAЃE");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_OTHER], "KAЃE");

		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BT_OTHER]);
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_OTHER]);

		for(new i = 0; i < 15; i++)
			OtherShow(playerid, i+47, KfcType[0][i], false);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 6)
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_OTHER], "ЂAP");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_OTHER], "ЂAP");

		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BT_OTHER]);
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_OTHER]);

		for(new i = 0; i < 7; i++)
			OtherShow(playerid, i+47, BarType[0][i], false);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 7)
	{
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BT_OTHER], "CEKC ЋOЊ");
		PlayerTextDrawSetString(playerid, pMenuTXD[playerid][BTS_OTHER], "CEKC ЋOЊ");

		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BT_OTHER]);
		PlayerTextDrawShow(playerid, pMenuTXD[playerid][BTS_OTHER]);

		for(new i = 0; i < 5; i++)
			OtherShow(playerid, i+47, SexType[0][i], false);
	}

	MenuUpdate(playerid, left, right);

	SelectTextDraw(playerid, 0xFFFFFF50);
	return 1;
}


MenuHide(playerid)
{
	DeletePVar(playerid, "TypeTextDraw");

	for(new i = 0; i < TXDCount; i++) TextDrawHideForPlayer(playerid, MenuTXD[i]);
	for(new i = 0; i < PMENUTXD; i++) PlayerTextDrawHide(playerid, pMenuTXD[playerid][i]);
	for(new i = 0; i < 47; i++) PlayerTextDrawHide(playerid, pInvTXD[playerid][i]);
	if(GetPVarInt(playerid, "Menu_Other") == 1 || GetPVarInt(playerid, "Menu_Other") == 2)
	{
		for(new i = 0, count = 47; i < 20; i++, count ++) 
			ImageHide(playerid, count);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 3)
	{
		for(new i = 0, count = 47; i < 6; i++, count ++) 
			ImageHide(playerid, count);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 4)
	{
		for(new i = 0, count = 47; i < 13; i++, count ++) 
			ImageHide(playerid, count);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 5)
	{
		for(new i = 0, count = 47; i < 15; i++, count ++) 
			ImageHide(playerid, count);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 6)
	{
		for(new i = 0, count = 47; i < 7; i++, count ++) 
			ImageHide(playerid, count);
	}
	else if(GetPVarInt(playerid, "Menu_Other") == 7)
	{
		for(new i = 0, count = 47; i < 5; i++, count ++) 
			ImageHide(playerid, count);
	}

	if(GetPVarInt(playerid, "LMenu_Type") == BT_INVENTORY || GetPVarInt(playerid, "LMenu_Type") == BT_OTHER)
	{
		for(new i = TD_INV, count = TD_INV + 20; i < count; i++)  
			TextDrawHideForPlayer(playerid, MenuTXD[i]);

	}
	else if(GetPVarInt(playerid, "LMenu_Type") == BT_ACHEVEMENTS)
	{
		for(new i = TD_ACHIVE, count = TD_ACHIVE + 8; i < count; i++)  
			TextDrawHideForPlayer(playerid, MenuTXD[i]);

		TextDrawHideForPlayer(playerid, MenuTXD[BTS_PREV]);
		TextDrawHideForPlayer(playerid, MenuTXD[BTS_NEXT]);
	}

	TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "LMenu_Type")]);
	TextDrawHideForPlayer(playerid, MenuTXD[GetPVarInt(playerid, "RMenu_Type")]);

	DeletePVar(playerid, "LMenu_Type");
	DeletePVar(playerid, "RMenu_Type");

	DeletePVar(playerid, "Menu_Other");
	DeletePVar(playerid, "Menu_OtherID");

	InfoHide(playerid);

	CancelSelectTextDraw(playerid);
}


ImageShow(playerid, slotid, imageid, bool:show = true)
{
	new Float:X = InvPos[slotid][1] + oData[imageid][imX],
		Float:Y = InvPos[slotid][0] + oData[imageid][imY];

	pInvTXD[playerid][slotid] = CreatePlayerTextDraw(playerid, X, Y, "_");
	if(!imageid) return 1;
	PlayerTextDrawAlignment(playerid, pInvTXD[playerid][slotid], 2);
	PlayerTextDrawBackgroundColor(playerid, pInvTXD[playerid][slotid], 0x00000000);
	PlayerTextDrawFont(playerid, pInvTXD[playerid][slotid], 5);
	PlayerTextDrawLetterSize(playerid, pInvTXD[playerid][slotid], 0.000000, 0.000000);
	PlayerTextDrawColor(playerid, pInvTXD[playerid][slotid], -1);
	PlayerTextDrawSetOutline(playerid, pInvTXD[playerid][slotid], 1);
	PlayerTextDrawSetProportional(playerid, pInvTXD[playerid][slotid], 1);
	PlayerTextDrawUseBox(playerid, pInvTXD[playerid][slotid], 1);
	PlayerTextDrawBoxColor(playerid, pInvTXD[playerid][slotid], 0x00000000);
	PlayerTextDrawTextSize(playerid, pInvTXD[playerid][slotid], oData[imageid][imBX], oData[imageid][imBY]);
	PlayerTextDrawSetSelectable(playerid, pInvTXD[playerid][slotid], 0);
	PlayerTextDrawSetPreviewModel(playerid, pInvTXD[playerid][slotid], oData[imageid][imModel]);
	PlayerTextDrawSetPreviewRot(playerid, pInvTXD[playerid][slotid], 
		oData[imageid][imRX], oData[imageid][imRY], oData[imageid][imRZ], oData[imageid][imZoom]);

	if(show == true) PlayerTextDrawShow(playerid, pInvTXD[playerid][slotid]);
	return 1;
}

AttachShow(playerid, slotid, imageid, bool:show = true)
{
	new Float:X = InvPos[slotid-10][1] + oData[imageid][imX],
		Float:Y = InvPos[slotid-10][0] + oData[imageid][imY];

	pInvTXD[playerid][slotid] = CreatePlayerTextDraw(playerid, X, Y, "_");
	if(!imageid) return 1;
	PlayerTextDrawBackgroundColor(playerid, pInvTXD[playerid][slotid], 0x00000000);
	PlayerTextDrawAlignment(playerid, pInvTXD[playerid][slotid], 2);
	PlayerTextDrawFont(playerid, pInvTXD[playerid][slotid], 5);
	PlayerTextDrawLetterSize(playerid, pInvTXD[playerid][slotid], 0.000000, 0.000000);
	PlayerTextDrawColor(playerid, pInvTXD[playerid][slotid], -1);
	PlayerTextDrawSetOutline(playerid, pInvTXD[playerid][slotid], 1);
	PlayerTextDrawSetProportional(playerid, pInvTXD[playerid][slotid], 1);
	PlayerTextDrawUseBox(playerid, pInvTXD[playerid][slotid], 1);
	PlayerTextDrawBoxColor(playerid, pInvTXD[playerid][slotid], 0x00000000);
	PlayerTextDrawTextSize(playerid, pInvTXD[playerid][slotid], oData[imageid][imBX], oData[imageid][imBY]);
	PlayerTextDrawSetSelectable(playerid, pInvTXD[playerid][slotid], 0);
	PlayerTextDrawSetPreviewModel(playerid, pInvTXD[playerid][slotid], oData[imageid][imModel]);
	PlayerTextDrawSetPreviewRot(playerid, pInvTXD[playerid][slotid], 
		oData[imageid][imRX], oData[imageid][imRY], oData[imageid][imRZ], oData[imageid][imZoom]);

	if(show == true) PlayerTextDrawShow(playerid, pInvTXD[playerid][slotid]);
	return 1;
}

OtherShow(playerid, slotid, imageid, bool:show = true) // 47 - 66
{
	new Float:X = InvPos[slotid-47][1] + oData[imageid][imX],
		Float:Y = InvPos[slotid-47][0] + oData[imageid][imY];	

	pInvTXD[playerid][slotid] = CreatePlayerTextDraw(playerid, X, Y, "_");
	if(!imageid) return 1;
	PlayerTextDrawBackgroundColor(playerid, pInvTXD[playerid][slotid], 0x00000000);
	PlayerTextDrawAlignment(playerid, pInvTXD[playerid][slotid], 2);
	PlayerTextDrawFont(playerid, pInvTXD[playerid][slotid], 5);
	PlayerTextDrawLetterSize(playerid, pInvTXD[playerid][slotid], 0.000000, 0.000000);
	PlayerTextDrawColor(playerid, pInvTXD[playerid][slotid], -1);
	PlayerTextDrawSetOutline(playerid, pInvTXD[playerid][slotid], 1);
	PlayerTextDrawSetProportional(playerid, pInvTXD[playerid][slotid], 1);
	PlayerTextDrawUseBox(playerid, pInvTXD[playerid][slotid], 1);
	PlayerTextDrawBoxColor(playerid, pInvTXD[playerid][slotid], 0x00000000);
	PlayerTextDrawTextSize(playerid, pInvTXD[playerid][slotid], oData[imageid][imBX], oData[imageid][imBY]);
	PlayerTextDrawSetPreviewModel(playerid, pInvTXD[playerid][slotid], oData[imageid][imModel]);
	PlayerTextDrawSetPreviewRot(playerid, pInvTXD[playerid][slotid], 
		oData[imageid][imRX], oData[imageid][imRY], oData[imageid][imRZ], oData[imageid][imZoom]);

	if(show == true) PlayerTextDrawShow(playerid, pInvTXD[playerid][slotid]);
	return 1;
}

ImageHide(playerid, slotid)
{
	if(pInvTXD[playerid][slotid] != PlayerText:INVALID_TEXT_DRAW)
		PlayerTextDrawDestroy(playerid, pInvTXD[playerid][slotid]);
}

SkillShow(playerid, pageid)
{
	switch (pageid)
	{
		case 0:
		{

		    PlayerTextDrawSetString(playerid, pInvTXD[playerid][35], "LD_DRV:nawtxt");
		    PlayerTextDrawSetString(playerid, pInvTXD[playerid][36], "ЂOKC");
			PlayerTextDrawSetString(playerid, pInvTXD[playerid][37], "мE …€YЌEмO");
		    if(PlayerInfo[playerid][pFStyle] == 1)
		    {
		    	PlayerTextDrawSetString(playerid, pInvTXD[playerid][35], "LD_DRV:gold");
		    	PlayerTextDrawSetString(playerid, pInvTXD[playerid][37], "…CЊO‡’€YEЏC•");
		    }	
		    else if(PlayerInfo[playerid][pBoxing])
		    {
		    	PlayerTextDrawSetString(playerid, pInvTXD[playerid][35], "LD_DRV:silver");
		    	PlayerTextDrawSetString(playerid, pInvTXD[playerid][37], "…€YЌEмO");
		    }
			
			PlayerTextDrawSetString(playerid, pInvTXD[playerid][38], "LD_DRV:nawtxt");
			PlayerTextDrawSetString(playerid, pInvTXD[playerid][39], "KYм‚-ЃY");
			PlayerTextDrawSetString(playerid, pInvTXD[playerid][40], "мE …€YЌEмO");
			if(PlayerInfo[playerid][pFStyle] == 2)
		    {
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][38], "LD_DRV:gold");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][40], "…CЊO‡’€YEЏC•");
			}
		    else if(PlayerInfo[playerid][pKunfu])
		    {
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][38], "LD_DRV:silver");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][40], "…€YЌEмO");
			}			

			PlayerTextDrawSetString(playerid, pInvTXD[playerid][41], "LD_DRV:nawtxt");
			PlayerTextDrawSetString(playerid, pInvTXD[playerid][42], "KneeHead"); //® - Н
			PlayerTextDrawSetString(playerid, pInvTXD[playerid][43], "мE …€YЌEмO");
			if(PlayerInfo[playerid][pFStyle] == 3)
		    {
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][41], "LD_DRV:gold");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][43], "…CЊO‡’€YEЏC•");

			}
		    else if(PlayerInfo[playerid][pKneehead])
		    {
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][41], "LD_DRV:silver");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][43], "…€YЌEмO");

			}

			PlayerTextDrawSetString(playerid, pInvTXD[playerid][44], "LD_DRV:nawtxt");
			PlayerTextDrawSetString(playerid, pInvTXD[playerid][45], "GrabKick");
			PlayerTextDrawSetString(playerid, pInvTXD[playerid][46], "мE …€YЌEмO");
			if(PlayerInfo[playerid][pFStyle] == 4)
		    {
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][44], "LD_DRV:gold");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][46], "…CЊO‡’€YEЏC•");

			}
		    else if(PlayerInfo[playerid][pGrabkick])
		    {
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][44], "LD_DRV:silver");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][46], "…€YЌEмO");

			}


		}

		default: return 1;
	}
	for(new i = 35; i < 47; i++)
		PlayerTextDrawShow(playerid, pInvTXD[playerid][i]);
	return 1;
}

stock IsPlayerInCubeArea(playerid, Float:minx, Float:maxx, Float:miny, Float:maxy, Float:minz, Float:maxz)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	if (x > minx && x < maxx && y > miny && y < maxy && z > minz && z < maxz) return 1;
	return 0;
}
stock ProxDetector(Float:radi, playerid, string[], col)
{
	if(GetPVarInt(playerid,"ProxDetectorLimit") > GetTime)return 1;
	ForEachPlayer(i)
	{
	    if(!GetPVarInt(i,"Login"))continue;
		if(GetPVarInt(i,"BigEar")) SendClientMessage(i, col, string);
		else
		{
			if(!IsPlayerInRangeOfPoint(i, radi, PlayerInfo[playerid][pPos][0], PlayerInfo[playerid][pPos][1], PlayerInfo[playerid][pPos][2])) continue;
			if(PlayerInfo[i][pWorld] != PlayerInfo[playerid][pWorld]) continue;
			SendClientMessage(i, col, string);
		}
	}
	SetPVarInt(playerid,"ProxDetectorLimit",GetTime+1);
	return 1;
}
stock DistPlayerToPlayer(Float:radi, playerid, targetid)
{
    new Float:posx, Float:posy, Float:posz;
	GetPlayerPos(targetid, posx, posy, posz);
	if(IsPlayerInRangeOfPoint(playerid, radi, posx, posy, posz)) return 1;
	return 0;
}
stock DistPlayerToVehicle(Float:radi, playerid, vehicleid)
{
    new Float:posx, Float:posy, Float:posz;
	GetVehiclePos(vehicleid, posx, posy, posz);
	if(IsPlayerInRangeOfPoint(playerid, radi, posx, posy, posz)) return 1;
	return 0;
}
stock SetPos(playerid,Float:x,Float:y,Float:z,Float:a,interior,world)
{
	SetSyncTime(playerid, SYNC_TYPE_POS);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		SetVehiclePos(PlayerInfo[playerid][pVehID], x, y, z);
		VehInfo[PlayerInfo[playerid][pVehID]][vPos][0] = x;
		VehInfo[PlayerInfo[playerid][pVehID]][vPos][1] = y;
		VehInfo[PlayerInfo[playerid][pVehID]][vPos][2] = z;
		LinkVehicleToInterior(PlayerInfo[playerid][pVehID], interior);
		SetVehicleVirtualWorld(PlayerInfo[playerid][pVehID], world);
	}
	else
	{
		SetPlayerPos(playerid, x, y, z);
		SetPlayerFacingAngle(playerid, a);
		SetCameraBehindPlayer(playerid);
	}
	FP_SetPlayerInterior(playerid, interior);
	FP_SetPlayerVirtualWorld(playerid, world);
	
	PlayerInfo[playerid][pPos][0] = x;
	PlayerInfo[playerid][pPos][1] = y;
	PlayerInfo[playerid][pPos][2] = z;
	PlayerInfo[playerid][pSetPos][0] = x;
	PlayerInfo[playerid][pSetPos][1] = y;
	PlayerInfo[playerid][pSetPos][2] = z;

	return 1;
}
stock FP_SetVehiclePos(vehicleid,Float:x,Float:y,Float:z)
{
	if(vehicleid == INVALID_VEHICLE_ID) return 0;
	VehInfo[vehicleid][vPos][0] = x;
	VehInfo[vehicleid][vPos][1] = y;
	VehInfo[vehicleid][vPos][2] = z;
	SetVehiclePos(vehicleid,x,y,z);
	ForEachPlayer(i)
	{
	    if(PlayerInfo[i][pVehID] == vehicleid)
	    {
	        PlayerInfo[i][pPos][0] = x;
	        PlayerInfo[i][pPos][1] = y;
	        PlayerInfo[i][pPos][2] = z;
	        PlayerInfo[i][pSetPos][0] = x;
			PlayerInfo[i][pSetPos][1] = y;
			PlayerInfo[i][pSetPos][2] = z;

			SetSyncTime(i, SYNC_TYPE_POS);
	    }
	}
	return 1;	
}

stock CreateResp()
{
	// ----------  DS шапки всякие
	CreateDynamicObject(2593, 207.32, -167.38, 1000.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(2593, 209.58, -167.38, 1000.39,   0.00, 0.00, 0.00);
	CreateDynamicObject(18962, 209.90, -167.36, 1000.76,   92.46, 365.94, -1.50);
	CreateDynamicObject(18967, 209.90, -167.36, 1000.40,   92.46, 365.94, 102.84);
	CreateDynamicObject(18962, 209.90, -167.36, 1000.04,   92.46, 365.94, -1.50);
	CreateDynamicObject(18967, 209.90, -167.36, 1001.12,   92.46, 365.94, 102.84);
	CreateDynamicObject(18971, 209.60, -167.10, 1000.80,   354.96, 108.00, 95.22);
	CreateDynamicObject(18972, 209.60, -167.10, 1000.38,   354.96, 108.00, 95.22);
	CreateDynamicObject(18973, 209.60, -167.10, 999.97,   354.96, 108.00, 95.22);
	CreateDynamicObject(18974, 209.59, -167.07, 1001.11,   354.96, 108.00, 95.22);
	CreateDynamicObject(19096, 209.36, -167.36, 1000.76,   92.46, 365.94, 185.82);
	CreateDynamicObject(19097, 209.36, -167.36, 1001.14,   92.46, 365.94, 185.82);
	CreateDynamicObject(19098, 209.36, -167.36, 1000.42,   92.46, 365.94, 185.82);
	CreateDynamicObject(19099, 209.36, -167.36, 1000.02,   92.46, 365.94, 185.82);
	CreateDynamicObject(18967, 209.62, -167.58, 1001.12,   92.46, 365.94, -1.50);
	CreateDynamicObject(18972, 209.60, -167.63, 1000.73,   354.96, 108.00, 269.10);
	CreateDynamicObject(18967, 209.62, -167.58, 1000.40,   92.46, 365.94, -1.50);
	CreateDynamicObject(18973, 209.59, -167.56, 999.97,   354.96, 108.00, -88.86);
	CreateDynamicObject(19095, 207.35, -167.10, 1000.76,   388.02, 0.18, 95.22);
	CreateDynamicObject(19096, 207.35, -167.10, 1001.14,   388.02, 0.18, 95.22);
	CreateDynamicObject(19097, 207.35, -167.10, 1000.26,   388.02, 0.18, 95.22);
	CreateDynamicObject(19097, 207.35, -167.10, 1000.40,   388.02, 0.18, 95.22);
	CreateDynamicObject(19096, 207.35, -167.10, 1000.03,   388.02, 0.18, 95.22);
	CreateDynamicObject(19097, 207.07, -167.37, 1000.76,   388.02, 0.18, 183.30);
	CreateDynamicObject(19099, 207.07, -167.37, 1001.12,   388.02, 0.18, 183.30);
	CreateDynamicObject(19100, 207.07, -167.35, 1000.42,   388.02, 0.18, 183.30);
	CreateDynamicObject(19096, 207.07, -167.35, 1000.04,   388.02, 0.18, 183.30);
	CreateDynamicObject(18972, 207.35, -167.56, 999.97,   354.96, 108.00, -88.86);
	CreateDynamicObject(18973, 207.35, -167.56, 1000.37,   354.96, 108.00, -88.86);
	CreateDynamicObject(18971, 207.35, -167.56, 1000.76,   354.90, 108.00, -88.86);
	CreateDynamicObject(18975, 207.37, -167.56, 1001.12,   353.82, 107.58, 20.64);
	CreateDynamicObject(18967, 207.64, -167.32, 1001.12,   92.46, 365.94, 102.84);
	CreateDynamicObject(18968, 207.64, -167.32, 1000.78,   92.46, 365.94, 102.84);
	CreateDynamicObject(18969, 207.64, -167.32, 1000.44,   92.34, 365.94, 102.84);
	CreateDynamicObject(18970, 207.64, -167.32, 1000.10,   92.34, 365.94, 102.84);
	CreateDynamicObject(19039, 201.22, -166.84, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(2710, 201.26, -166.78, 1000.88,   0.00, 0.00, -180.00);
	CreateDynamicObject(2710, 200.96, -166.78, 1000.88,   0.00, 0.00, -180.00);
	CreateDynamicObject(2710, 200.62, -166.78, 1000.88,   0.00, 0.00, -180.00);
	CreateDynamicObject(2710, 200.26, -166.78, 1000.88,   0.00, 0.00, -180.00);
	CreateDynamicObject(2710, 199.96, -166.78, 1000.88,   0.00, 0.00, -180.00);
	CreateDynamicObject(2710, 199.68, -166.78, 1000.88,   0.00, 0.00, -180.12);
	CreateDynamicObject(19044, 201.21, -166.67, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19047, 201.22, -166.50, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19040, 200.98, -166.84, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19043, 200.99, -166.67, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19048, 201.01, -166.50, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19041, 200.76, -166.84, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19045, 200.77, -166.67, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19049, 200.77, -166.50, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19042, 200.58, -166.84, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19046, 200.59, -166.67, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19050, 200.57, -166.50, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(2710, 200.22, -166.81, 1000.48,   0.00, 0.00, -180.00);
	CreateDynamicObject(2710, 199.56, -166.82, 1000.48,   0.00, 0.00, -180.00);
	CreateDynamicObject(19051, 200.03, -166.70, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19052, 199.73, -166.71, 1000.40,   0.00, 0.00, 0.00);
	CreateDynamicObject(19053, 199.89, -166.52, 1000.40,   0.00, 0.00, 0.00);

// Binco Шапки всякие

	CreateDynamicObject(2593, 212.68, -108.63, 1005.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(2593, 212.75, -110.09, 1005.03,   0.00, 0.00, 0.00);
	CreateDynamicObject(18891, 212.69, -108.36, 1005.78,   0.00, 0.00, 0.00);
	CreateDynamicObject(18892, 212.69, -108.36, 1005.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(18893, 212.69, -108.36, 1005.08,   0.00, 0.00, 0.00);
	CreateDynamicObject(18894, 212.69, -108.36, 1004.68,   0.06, 0.00, 0.00);
	CreateDynamicObject(18896, 212.41, -108.58, 1005.08,   0.00, 0.00, 91.56);
	CreateDynamicObject(18893, 212.41, -108.58, 1004.72,   0.00, 0.00, 91.56);
	CreateDynamicObject(18895, 212.41, -108.58, 1005.46,   -0.24, -0.12, 91.56);
	CreateDynamicObject(18894, 212.41, -108.58, 1005.78,   0.00, 0.00, 91.56);
	CreateDynamicObject(18896, 212.69, -108.82, 1005.46,   -0.24, -0.12, 182.76);
	CreateDynamicObject(18895, 212.69, -108.82, 1005.77,   -0.24, -0.12, 182.76);
	CreateDynamicObject(18897, 212.69, -108.82, 1005.04,   -1.38, -0.18, 182.76);
	CreateDynamicObject(18898, 212.69, -108.82, 1004.66,   -1.20, -0.36, 182.76);
	CreateDynamicObject(18895, 212.97, -108.59, 1004.68,   0.06, 0.00, -89.70);
	CreateDynamicObject(18896, 212.97, -108.59, 1005.07,   0.12, -0.06, -89.70);
	CreateDynamicObject(18897, 212.99, -108.63, 1005.37,   0.18, -0.06, -89.70);
	CreateDynamicObject(18892, 212.97, -108.59, 1005.75,   0.30, -0.06, -89.70);
	CreateDynamicObject(18906, 212.53, -110.04, 1005.74,   0.00, 0.00, 87.72);
	CreateDynamicObject(18907, 212.53, -110.04, 1005.42,   0.00, 0.00, 87.72);
	CreateDynamicObject(18908, 212.53, -110.04, 1005.06,   0.12, -0.06, 87.72);
	CreateDynamicObject(18909, 212.53, -110.04, 1004.66,   0.00, 0.00, 87.72);
	CreateDynamicObject(18905, 212.77, -109.85, 1004.66,   0.00, 0.00, -1.86);
	CreateDynamicObject(18902, 213.00, -110.05, 1004.66,   0.00, 0.00, -93.18);
	CreateDynamicObject(18901, 212.78, -110.27, 1004.66,   0.00, 0.00, -181.92);
	CreateDynamicObject(18910, 212.77, -109.85, 1005.05,   0.00, 0.00, -1.86);
	CreateDynamicObject(18903, 212.77, -109.85, 1005.43,   0.00, 0.00, -1.86);
	CreateDynamicObject(18904, 212.77, -109.85, 1005.79,   0.00, 0.00, -1.86);
	CreateDynamicObject(18894, 212.78, -110.31, 1005.04,   0.18, -0.24, -181.92);
	CreateDynamicObject(18893, 212.78, -110.31, 1005.39,   1.68, -1.38, -181.92);
	CreateDynamicObject(18892, 212.78, -110.31, 1005.73,   0.78, -1.44, -181.92);
	CreateDynamicObject(18904, 213.00, -110.05, 1005.06,   0.00, 0.00, -93.18);
	CreateDynamicObject(18906, 213.00, -110.05, 1005.42,   0.00, 0.00, -93.18);
	CreateDynamicObject(18903, 213.00, -110.05, 1005.80,   0.06, 0.00, -93.18);
	CreateDynamicObject(2593, 201.79, -110.04, 1005.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(18912, 201.83, -109.69, 1005.41,   33.66, -202.14, 0.00);
	CreateDynamicObject(18911, 201.83, -109.69, 1005.74,   33.66, -202.14, 0.00);
	CreateDynamicObject(18913, 201.83, -109.69, 1005.01,   33.66, -202.14, 0.00);
	CreateDynamicObject(18914, 201.83, -109.69, 1004.63,   33.66, -202.14, 0.00);
	CreateDynamicObject(18915, 202.13, -110.00, 1004.63,   33.66, -202.14, -65.40);
	CreateDynamicObject(18916, 202.13, -110.00, 1005.01,   33.66, -202.14, -65.40);
	CreateDynamicObject(18917, 202.13, -110.00, 1005.39,   33.84, -202.08, -65.40);
	CreateDynamicObject(18918, 202.13, -110.00, 1005.74,   33.66, -202.14, -65.40);
	CreateDynamicObject(18914, 201.82, -110.31, 1004.65,   33.66, -202.14, 211.44);
	CreateDynamicObject(18915, 201.85, -110.34, 1005.02,   33.66, -202.14, 211.44);
	CreateDynamicObject(18916, 201.85, -110.34, 1005.41,   33.66, -202.14, 211.44);
	CreateDynamicObject(18917, 201.85, -110.34, 1005.75,   33.66, -202.14, 211.44);
	CreateDynamicObject(18920, 201.51, -110.04, 1005.41,   33.66, -202.14, 96.30);
	CreateDynamicObject(18916, 201.51, -110.04, 1005.75,   33.66, -202.14, 96.30);
	CreateDynamicObject(18919, 201.51, -110.04, 1005.03,   33.60, -202.14, 96.30);
	CreateDynamicObject(18912, 201.51, -110.04, 1004.65,   31.26, -202.26, 96.30);


//------------------------------------------------------------------------------
	CreateObject(18789,-799.0927734375,-1137.88671875,90.977401733398,2.735595703125,354.990234375,169.2333984375);
	CreateObject(18789,-653.21875,-1168.90625,77.928215026855,2.7960205078125,354.990234375,167.23937988281);
	CreateObject(18789,-510.2255859375,-1208.9599609375,64.910003662109,3.197021484375,354.990234375,161.98791503906);
	CreateObject(18788,-421.52734375,-1239.6943359375,55.411647796631,3.3892822265625,352.99072265625,158.26904296875);
	CreateObject(18788,-385.947265625,-1255.279296875,50.654003143311,3.7957763671875,352.99072265625,155.26428222656);
	CreateObject(18788,-350.609375,-1272.4873046875,45.483001708984,3.9715576171875,351.99645996094,153.75915527344);
	CreateObject(18788,-315.9697265625,-1290.76953125,39.599998474121,4.0924072265625,350.99670410156,151.79809570313);
	CreateObject(18788,-281.74551391602,-1310.0373535156,33.022998809814,4.097900390625,350,150.75408935547);
	CreateObject(18788,-248.39453125,-1330.1240234375,25.450000762939,4.295654296875,347.99743652344,148.74389648438);
	CreateObject(18788,-216.03439331055,-1351.3426513672,16.875,4.7000122070313,347,146.74401855469);
	CreateObject(18788,-184.60647583008,-1373.6689453125,7.6302561759949,5,346,144.73889160156);
	CreateObject(18787,-165.4375,-1387.703125,3.2136449813843,342.32849121094,5.4986572265625,55.596313476563);
	CreateObject(18787,-159.02386474609,-1392.4300537109,2.0246427059174,342.32653808594,5.498291015625,56.346801757813);
	CreateObject(18787,-152.89674377441,-1377.8294677734,0.87999999523163,341.95983886719,351.04486083984,140.12872314453);
	CreateObject(3330,-725.96246337891,-1152.181640625,73.572540283203,0,0,77.5);
	CreateObject(3330,-508.34014892578,-1210.1423339844,53.965553283691,0,0,72.49755859375);
	CreateObject(3330,-345.66586303711,-1274.5152587891,34.197456359863,0,0,59.493316650391);
	CreateObject(3330,-209.58256530762,-1355.5438232422,4.2507457733154,0,358.5,53.740966796875);
	CreateObject(3976,1970.65722656,-341.23883057,1100.22949219,0.00000000,0.00000000,0.00000000); //object(policest02_lan) (1)
	redver[1] =  CreateObject(2930,1435.1789550781,-1007.7760009766,10.696892738342+3000,0,0,0.5);//решетка
	hrandver[1] = CreateObject(2634,1412.7796630859,-1012.91796875,1.3489612340927+3000,0,0,273.00524902344);//дверь в банк
	redver[0] =  CreateObject(2930,1435.1789550781,-1007.7760009766,10.696892738342+2000,0,0,0.5);//решетка
	hrandver[0] = CreateObject(2634,1412.7796630859,-1012.91796875,1.3489612340927+2000,0,0,273.00524902344);//дверь в банк
	CreateObject(14819,1419.2808837891,-998.86291503906,13.732931137085+2000,0,0,0);
    CreateObject(14819,1417.7979736328,-998.90246582031,13.732931137085+2000,0,0,0);
    CreateObject(13188,1417.1651611328,-998.16284179688,13.880835533142+2000,0,0,270.27026367188);
    CreateObject(14819,1419.2808837891,-998.86291503906,13.732931137085+3000,0,0,0);
    CreateObject(14819,1417.7979736328,-998.90246582031,13.732931137085+3000,0,0,0);
    CreateObject(13188,1417.1651611328,-998.16284179688,13.880835533142+3000,0,0,270.27026367188);
    CreateObject(2949,-2217.796875,286.09375,34.3203125,0,0,270);
	CreateObject(9241,-2198.8581542969,290.19839477539,51.45287322998,0,0,268.75);
	CreateObject(4588,-2199.5234375,306.3623046875,51.248142242432,0,0,0);
	CreateObject(4574,-2170.0556640625,294.13931274414,78.433738708496,0,0,0);


	CreateDynamicObject(973,-1749.4731445313,-703.54254150391,28.016496658325,0,8,118.25);
	CreateDynamicObject(973,-1745.1539306641,-711.08612060547,26.79150390625,0,335.998046875,121.74584960938);
	CreateDynamicObject(973,-1752.7420654297,-695.23516845703,26.441486358643,0,11.998046875,104.24588012695);
	CreateDynamicObject(973,-1754.2919921875,-686.29638671875,24.666479110718,0,9.9970703125,95.993774414063);
	CreateDynamicObject(973,-1754.6433105469,-677.29052734375,23.216485977173,0,7.9920654296875,88.993041992188);
	CreateDynamicObject(973,-1754.1779785156,-668.46350097656,21.991493225098,0,7.987060546875,84.7392578125);
	CreateDynamicObject(973,-1753.6481933594,-660.30242919922,20.941486358643,0,5.9815673828125,88.987548828125);
	CreateDynamicObject(973,-1753.4737548828,-651.40411376953,19.91649055481,0,6.9765625,88.983764648438);
	CreateDynamicObject(973,-1753.3389892578,-643.57965087891,19.01650428772,0,5.976318359375,88.978271484375);
	CreateDynamicObject(973,-1753.1903076172,-635.26245117188,18.166501998901,0,5.9710693359375,88.972778320313);
	CreateDynamicObject(973,-1753.3231201172,-626.20910644531,17.416498184204,0,3.4710693359375,92.972778320313);
	CreateDynamicObject(973,-1753.8421630859,-618.09594726563,16.941505432129,0,3.4661865234375,94.471801757813);
	CreateDynamicObject(973,-1754.5461425781,-609.03918457031,16.491512298584,0,2.460693359375,94.471435546875);
	CreateDynamicObject(973,-1755.5240478516,-600.48406982422,14.31650352478,0,25.955444335938,98.965972900391);
	CreateDynamicObject(973,-1758.5334472656,-716.11090087891,27.629512786865,0,14,286.75);
	CreateDynamicObject(973,-1761.6590576172,-707.81030273438,27.954500198364,0,349.99658203125,294.74865722656);
	CreateDynamicObject(973,-1764.6378173828,-699.92016601563,26.629501342773,356.0390625,351.97216796875,286.1884765625);
	CreateDynamicObject(973,-1766.7575683594,-691.30743408203,25.179508209229,350.41006469727,349.33764648438,278.45095825195);
	CreateDynamicObject(973,-1767.6966552734,-682.70935058594,23.754514694214,358.26062011719,351.97937011719,272.00109863281);
	CreateDynamicObject(973,-1767.7102050781,-673.65295410156,22.504514694214,358.25659179688,352.474609375,268.01477050781);
	CreateDynamicObject(973,-1767.3977050781,-664.53619384766,21.329532623291,358.25317382813,352.47436523438,267.76147460938);
	CreateDynamicObject(973,-1767.0676269531,-655.56958007813,20.129535675049,358.24768066406,352.47436523438,267.5087890625);
	CreateDynamicObject(973,-1766.7209472656,-647.20788574219,19.129539489746,358.24304199219,353.72497558594,267.54443359375);
	CreateDynamicObject(973,-1766.6496582031,-638.37658691406,18.154542922974,358.2421875,353.72131347656,271.0390625);
	CreateDynamicObject(973,-1766.8422851563,-629.25982666016,17.404539108276,357.97937011719,356.716796875,271.11645507813);
	CreateDynamicObject(973,-1766.9901123047,-620.28424072266,16.904539108276,357.978515625,356.71508789063,271.11511230469);
	CreateDynamicObject(973,-1767.2044677734,-611.27673339844,16.379547119141,357.978515625,356.71508789063,271.11511230469);
	CreateDynamicObject(973,-1767.4046630859,-602.93383789063,13.629558563232,358.30743408203,326.70074462891,270.11962890625);
	CreateDynamicObject(973,-1770.1209716797,-566.33435058594,16.2024974823,0,0,180.25);
	CreateDynamicObject(973,-1761.0734863281,-566.33123779297,16.22749710083,0,0,180.24719238281);
	CreateDynamicObject(973,-1751.9487304688,-566.31286621094,16.22749710083,0,0,180.24719238281);
	CreateDynamicObject(973,-1742.8245849609,-566.39245605469,16.22749710083,0,0,180.24719238281);
	CreateDynamicObject(973,-1734.154296875,-566.23968505859,14.377471923828,0,336,181.99719238281);
	CreateDynamicObject(973,-1777.9594726563,-566.37091064453,16.2024974823,0,0,180.24719238281);
	CreateDynamicObject(973,-1786.6087646484,-566.36444091797,14.352510452271,0,24,179.99719238281);

	CreateDynamicObject(9931,1947.54003906,-368.51269531,1108.01086426,0.00000000,0.00000000,90.00000000); //object(church_sfe) (1)
	
	CreateDynamicObject(9931,1980.55761719,-368.51562500,1108.01086426,0.00000000,0.00000000,90.00000000); //object(church_sfe) (2)
	CreateDynamicObject(3976,1962.70117188,-400.46679688,1109.52941895,0.00000000,0.00000000,90.00000000); //object(policest02_lan) (2)
	CreateDynamicObject(11472,1964.78710938,-372.02050781,1089.22351074,0.00000000,0.00000000,0.00000000); //object(des_swtstairs1) (1)
	CreateDynamicObject(11472,1963.28967285,-372.02139282,1089.22351074,0.00000000,0.00000000,0.00000000); //object(des_swtstairs1) (2)
	CreateDynamicObject(11472,1964.04479980,-372.98049927,1089.46386719,0.00000000,0.00000000,0.00000000); //object(des_swtstairs1) (3)
	CreateDynamicObject(2896,1959.29248047,-370.91723633,1093.34313965,0.00000000,0.00000000,90.00000000); //object(casket_law) (1)
	CreateDynamicObject(11472,1962.66918945,-373.82989502,1087.66955566,90.00000000,180.00000000,270.00000000); //object(des_swtstairs1) (4)
	CreateDynamicObject(11472,1965.41259766,-373.81991577,1087.66992188,90.00000000,180.00000000,90.00000000); //object(des_swtstairs1) (5)
	CreateDynamicObject(970,1970.61437988,-368.20404053,1093.28039551,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1968.51074219,-368.20703125,1093.28039551,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1957.52185059,-368.25833130,1093.28039551,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1959.61914062,-368.25585938,1093.28039551,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(6959,1963.97839355,-368.12149048,1072.75439453,90.00000000,0.00000000,0.25000000); //object(vegasnbball1) (2)
	CreateDynamicObject(2960,1964.05883789,-348.98986816,1101.36645508,0.00000000,90.00000000,89.99450684); //object(kmb_beam) (1)
	CreateDynamicObject(2960,1963.98291016,-349.00000000,1101.70666504,90.00000000,0.00000000,179.99450684); //object(kmb_beam) (2)
	CreateDynamicObject(2960,1964.05871582,-348.99044800,1100.00585938,0.00000000,90.00000000,90.00000000); //object(kmb_beam) (3)
	CreateDynamicObject(3872,1964.02685547,-346.40850830,1102.33020020,0.00000000,155.25000000,90.27026367); //object(ws_floodbeams) (1)
	CreateDynamicObject(1667,1962.98828125,-370.41271973,1093.62292480,0.00000000,0.00000000,0.00000000); //object(propwineglass1) (1)
	CreateDynamicObject(1664,1962.83520508,-370.42520142,1093.70104980,0.00000000,0.00000000,0.00000000); //object(propwinebotl2) (1)
	CreateDynamicObject(2868,1965.95605469,-370.30142212,1093.53430176,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (1)
	CreateDynamicObject(2869,1964.02185059,-373.78527832,1093.66992188,0.00000000,0.00000000,323.75000000); //object(gb_ornament04) (1)
	CreateDynamicObject(2870,1965.26269531,-373.64062500,1093.66992188,0.00000000,0.00000000,350.03002930); //object(gb_ornament05) (1)
	CreateDynamicObject(2270,1965.47998047,-352.47622681,1093.48364258,0.00000000,0.00000000,270.00000000); //object(frame_wood_6) (1)
	CreateDynamicObject(2257,1964.05615234,-373.94995117,1095.86132812,0.00000000,0.00000000,180.00000000); //object(frame_clip_4) (1)
	CreateDynamicObject(2271,1962.60437012,-352.58059692,1093.48803711,0.00000000,0.00000000,90.00000000); //object(frame_wood_1) (1)
	CreateDynamicObject(2357,1964.05090332,-370.68905640,1093.12402344,0.00000000,0.00000000,0.00000000); //object(dunc_dinning) (1)
	CreateDynamicObject(2808,1957.51367188,-364.26171875,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (1)
	CreateDynamicObject(2808,1959.68164062,-364.26171875,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (2)
	CreateDynamicObject(2808,1970.61328125,-364.26171875,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (3)
	CreateDynamicObject(2808,1968.44238281,-364.26171875,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (4)
	CreateDynamicObject(2808,1961.85546875,-364.26171875,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (5)
	CreateDynamicObject(2808,1966.27246094,-364.26171875,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2868,1962.14697266,-370.30624390,1093.53430176,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (4)
	CreateDynamicObject(948,1966.09277344,-374.17285156,1092.72888184,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (1)
	CreateDynamicObject(948,1961.96313477,-374.22888184,1092.72888184,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (2)
	CreateDynamicObject(2894,1963.95080566,-370.94277954,1093.53430176,0.00000000,0.00000000,0.00000000); //object(kmb_rhymesbook) (1)
	CreateDynamicObject(3462,1959.30407715,-374.06838989,1094.24255371,0.00000000,0.00000000,270.00000000); //object(csrangel_lvs) (1)
	CreateDynamicObject(3462,1968.78125000,-374.06835938,1094.24255371,0.00000000,0.00000000,270.00000000); //object(csrangel_lvs) (2)
	CreateDynamicObject(949,1956.02258301,-353.46194458,1095.83190918,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (1)
	CreateDynamicObject(2946,1965.59985352,-349.21301270,1091.94543457,0.00000000,0.00000000,90.00000000); //object(cr_door_03) (2)
	CreateDynamicObject(2946,1962.47033691,-349.19955444,1091.94543457,0.00000000,0.00000000,270.00000000); //object(cr_door_03) (3)
	CreateDynamicObject(2808,1970.60681152,-360.67248535,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1968.43054199,-360.67248535,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1966.25378418,-360.67248535,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1957.52233887,-360.67248535,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1959.69580078,-360.67248535,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1961.86865234,-360.67248535,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1957.51660156,-357.18194580,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1959.69250488,-357.18194580,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1961.86779785,-357.18194580,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1970.61279297,-357.18194580,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1968.43701172,-357.18194580,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(2808,1966.26782227,-357.18194580,1092.59191895,0.00000000,0.00000000,179.99450684); //object(cj_pizza_chair4) (6)
	CreateDynamicObject(14705,1962.68139648,-373.67498779,1093.91894531,0.00000000,0.00000000,0.00000000); //object(int2vase) (1)
	CreateDynamicObject(14410,1968.61401367,-349.16000366,1092.01757812,0.00000000,0.00000000,270.00000000); //object(carter-stairs03) (1)
	CreateDynamicObject(11472,1971.98046875,-351.97091675,1092.19567871,0.00000000,0.00000000,90.00000000); //object(des_swtstairs1) (6)
	CreateDynamicObject(11472,1971.98046875,-353.19616699,1092.19567871,0.00000000,0.00000000,90.00000000); //object(des_swtstairs1) (7)
	CreateDynamicObject(14410,1959.47412109,-349.41287231,1092.01660156,0.00000000,0.00000000,90.00000000); //object(carter-stairs03) (2)
	CreateDynamicObject(11472,1956.10046387,-351.96487427,1092.19567871,0.00000000,0.00000000,270.00000000); //object(des_swtstairs1) (8)
	CreateDynamicObject(11472,1956.10046387,-353.19616699,1092.19567871,0.00000000,0.00000000,270.00000000); //object(des_swtstairs1) (9)
	CreateDynamicObject(11472,1965.10974121,-347.94531250,1095.44091797,0.00000000,90.00000000,180.00000000); //object(des_swtstairs1) (10)
	CreateDynamicObject(11472,1962.98315430,-347.94104004,1095.44018555,0.00000000,270.00000000,179.99450684); //object(des_swtstairs1) (11)
	CreateDynamicObject(1698,1962.46606445,-352.53399658,1095.31420898,0.00000000,0.00000000,270.27026367); //object(esc_step8) (1)
	CreateDynamicObject(1698,1962.87316895,-352.53399658,1095.53918457,0.00000000,0.00000000,270.26916504); //object(esc_step8) (2)
	CreateDynamicObject(1698,1963.24682617,-352.53399658,1095.76416016,0.00000000,0.00000000,270.26916504); //object(esc_step8) (3)
	CreateDynamicObject(1698,1965.60021973,-352.53399658,1095.31420898,0.00000000,0.00000000,90.00000000); //object(esc_step8) (4)
	CreateDynamicObject(1698,1965.20434570,-352.53399658,1095.53918457,0.00000000,0.00000000,90.00000000); //object(esc_step8) (5)
	CreateDynamicObject(1698,1964.72375488,-352.53399658,1095.76416016,0.00000000,0.00000000,270.26916504); //object(esc_step8) (6)
	CreateDynamicObject(970,1964.05688477,-353.88497925,1096.74243164,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1959.94470215,-353.88497925,1095.74719238,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1955.77246094,-353.88589478,1095.74719238,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1968.17297363,-353.88497925,1095.74719238,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1972.25000000,-353.88589478,1095.74719238,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1959.97607422,-351.29064941,1095.74719238,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1968.10302734,-351.29064941,1095.74719238,0.00000000,0.00000000,0.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1965.96203613,-349.21618652,1096.74169922,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1962.13757324,-349.21618652,1096.74243164,0.00000000,0.00000000,90.00000000); //object(fencesmallb) (4)
	CreateDynamicObject(2887,1964.04821777,-349.34906006,1094.78955078,90.00000000,0.00000000,0.00000000); //object(a51_spotbulb) (1)
	CreateDynamicObject(949,1971.95068359,-353.46038818,1095.83190918,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (2)
	CreateDynamicObject(948,1965.68554688,-352.45767212,1091.94543457,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (1)
	CreateDynamicObject(948,1962.38427734,-352.45767212,1091.94543457,0.00000000,0.00000000,0.00000000); //object(plant_pot_10) (1)
	CreateDynamicObject(1742,1955.84399414,-353.83831787,1091.94543457,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (1)
	CreateDynamicObject(1742,1957.28173828,-353.83831787,1091.94543457,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (2)
	CreateDynamicObject(1742,1958.71166992,-353.83831787,1091.94543457,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (3)
	CreateDynamicObject(1742,1960.15112305,-353.83831787,1091.94543457,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (4)
	CreateDynamicObject(1742,1971.77673340,-353.83831787,1091.94543457,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (5)
	CreateDynamicObject(1742,1970.34277344,-353.83831787,1091.94543457,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (6)
	CreateDynamicObject(1742,1968.90930176,-353.83831787,1091.94543457,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (7)
	CreateDynamicObject(1742,1967.47534180,-353.83831787,1091.94543457,0.00000000,0.00000000,0.00000000); //object(med_bookshelf) (8)
	CreateDynamicObject(949,1961.60729980,-354.34103394,1092.58166504,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (3)
	CreateDynamicObject(949,1966.46325684,-354.34805298,1092.58166504,0.00000000,0.00000000,0.00000000); //object(plant_pot_4) (4)
	CreateDynamicObject(1720,1970.09338379,-373.59497070,1092.72888184,0.00000000,0.00000000,180.00000000); //object(rest_chair) (1)
	CreateDynamicObject(1720,1970.91198730,-373.58316040,1092.72888184,0.00000000,0.00000000,179.99450684); //object(rest_chair) (2)
	CreateDynamicObject(741,1969.29675293,-369.22723389,1093.71252441,0.00000000,0.00000000,0.00000000); //object(pot_01) (1)
	CreateDynamicObject(3440,1969.29125977,-370.86264038,1091.08007812,0.00000000,0.00000000,0.00000000); //object(arptpillar01_lvs) (1)
	CreateDynamicObject(14455,1955.32812500,-348.54144287,1096.87585449,0.00000000,0.00000000,270.00000000); //object(gs_bookcase) (1)
	CreateDynamicObject(14455,1972.78356934,-352.90487671,1096.86743164,0.00000000,0.00000000,90.00000000); //object(gs_bookcase) (2)
	CreateDynamicObject(2842,1964.51916504,-365.60891724,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (1)
	CreateDynamicObject(2842,1964.51843262,-363.77880859,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (2)
	CreateDynamicObject(2842,1964.51867676,-361.94879150,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (3)
	CreateDynamicObject(2842,1964.52172852,-360.12713623,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (4)
	CreateDynamicObject(2842,1964.52636719,-358.30560303,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (5)
	CreateDynamicObject(2842,1964.52600098,-356.47940063,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (6)
	CreateDynamicObject(2842,1964.52343750,-354.64611816,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (7)
	CreateDynamicObject(2842,1964.52136230,-352.82815552,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (8)
	CreateDynamicObject(2842,1964.51867676,-350.99310303,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (9)
	CreateDynamicObject(2842,1964.52026367,-349.16046143,1091.94543457,0.00000000,0.00000000,90.00000000); //object(gb_bedrug04) (10)
	CreateDynamicObject(2833,1963.55749512,-369.65057373,1092.72888184,0.00000000,0.00000000,0.00000000); //object(gb_livingrug02) (1)
	CreateDynamicObject(2834,1968.81579590,-372.52481079,1092.72888184,0.00000000,0.00000000,0.00000000); //object(gb_livingrug03) (1)
	CreateDynamicObject(6959,1951.26586914,-360.22650146,1095.56030273,310.00000000,180.00000000,90.00000000); //object(vegasnbball1) (1)
	CreateDynamicObject(6959,1976.87695312,-356.75421143,1095.51965332,310.00000000,180.00000000,270.00000000); //object(vegasnbball1) (3)
	CreateDynamicObject(6959,1958.95715332,-378.23306274,1096.33813477,309.99572754,179.99450684,180.00000000); //object(vegasnbball1) (4)

	CreateDynamicObject(973,-170.22543334961,-1395.1046142578,4.1812930107117,0,7.25,309.25);
	CreateDynamicObject(973,-162.25469970703,-1375.0130615234,3.1176476478577,0.24850463867188,353.74993896484,243.27722167969);
	CreateDynamicObject(973,-159.9781036377,-1366.2724609375,2.6105327606201,0.2486572265625,359.99884033203,267.49865722656);
	CreateDynamicObject(9339,-859.95672607422,-1125.9553222656,96.383026123047,3.2464599609375,0,78.898315429688);
	CreateDynamicObject(9339,-834.47149658203,-1130.9205322266,94.51000213623,4.9932861328125,0,79.096069335938);
	CreateDynamicObject(9339,-808.99975585938,-1135.8564453125,92.24137878418,4.98779296875,0,79.008178710938);
	CreateDynamicObject(9339,-783.47485351563,-1140.8229980469,89.971000671387,4.98779296875,0,79.008178710938);
	CreateDynamicObject(9339,-757.99194335938,-1145.7819824219,87.706398010254,4.9822998046875,0,79.008178710938);
	CreateDynamicObject(9339,-738.72174072266,-1149.5329589844,85.994003295898,4.9822998046875,0,79.008178710938);
	CreateDynamicObject(9339,-713.3193359375,-1155.1176757813,83.727996826172,4.9822998046875,0,77.003173828125);
	CreateDynamicObject(9339,-687.97760009766,-1160.7979736328,81.465339660645,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-662.70483398438,-1166.6429443359,79.207000732422,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-637.37365722656,-1172.501953125,76.944000244141,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-612.03405761719,-1178.3603515625,74.679000854492,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-593.0400390625,-1182.7550048828,72.980003356934,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-568.060546875,-1189.7469482422,70.71900177002,4.976806640625,0,71.751708984375);
	CreateDynamicObject(9339,-543.36895751953,-1197.8990478516,68.455001831055,4.9713134765625,0,71.746215820313);
	CreateDynamicObject(9339,-518.70068359375,-1206.0439453125,66.194999694824,4.9713134765625,0,71.746215820313);
	CreateDynamicObject(9339,-494.00970458984,-1214.2320556641,63.932998657227,4.9713134765625,0,71.597900390625);
	CreateDynamicObject(9339,-469.36468505859,-1222.4050292969,61.67440032959,4.9713134765625,0,71.746215820313);
	CreateDynamicObject(9339,-451.41046142578,-1228.3349609375,60.029598236084,4.9713134765625,0,71.746215820313);
	CreateDynamicObject(9339,-427.1220703125,-1237.3010253906,57.319000244141,6.976318359375,0,67.747192382813);
	CreateDynamicObject(9339,-415.7392578125,-1241.9645996094,55.814998626709,6.976318359375,0,67.747192382813);
	CreateDynamicObject(9339,-392.01937866211,-1252.3800048828,52.645000457764,6.976318359375,0,64.742431640625);
	CreateDynamicObject(1290,-403.65676879883,-1246.9327392578,58.834041595459,0,0,64.9951171875);
	CreateDynamicObject(1290,-439.03311157227,-1232.4833984375,63.560821533203,0,0,64.9951171875);
	CreateDynamicObject(9339,-379.6220703125,-1258.2353515625,50.967998504639,6.976318359375,0,64.736938476563);
	CreateDynamicObject(1290,-481.65423583984,-1218.4100341797,67.554542541504,0,0,69.999389648438);
	CreateDynamicObject(1290,-578.85827636719,-1186.2578125,76.438018798828,0,0,69.993896484375);
	CreateDynamicObject(1290,-532.44909667969,-1201.5776367188,72.178817749023,0,0,69.993896484375);
	CreateDynamicObject(1290,-367.73519897461,-1263.9150390625,53.96208190918,0,0,64.9951171875);
	CreateDynamicObject(9339,-356.35568237305,-1269.5050048828,47.575000762939,7.97607421875,0,63.600006103516);
	CreateDynamicObject(9339,-344.20129394531,-1275.5450439453,45.669998168945,8.2232666015625,0,63.600006103516);
	CreateDynamicObject(1290,-332.56118774414,-1281.3905029297,48.499229431152,0,0,58.743896484375);
	CreateDynamicObject(1290,-724.44982910156,-1152.4464111328,89.562171936035,0,0,78.994995117188);
	CreateDynamicObject(1290,-659.1865234375,-1167.55078125,83.690299987793,0,0,76.734008789063);
	CreateDynamicObject(1290,-807.02685546875,-1136.3259277344,97.194618225098,0,0,79.239501953125);
	CreateDynamicObject(9339,-321.37634277344,-1287.5875244141,41.826000213623,8.72314453125,0.252685546875,60.799987792969);
	CreateDynamicObject(9339,-287.28588867188,-1306.7600097656,35.541999816895,9.9700927734375,0.252685546875,60.399993896484);
	CreateDynamicObject(9339,-275.52130126953,-1313.4539794922,33.162998199463,9.964599609375,0.252685546875,60.299987792969);
	CreateDynamicObject(9339,-253.603515625,-1326.6280517578,28.20599937439,11.969604492188,0.252685546875,57.700012207031);
	CreateDynamicObject(9339,-221.0537109375,-1347.7535400391,19.749000549316,12.969360351563,0.252685546875,55.662231445313);
	CreateDynamicObject(9339,-210.1337890625,-1355.2209472656,16.704000473022,12.9638671875,0.252685546875,55.662231445313);
	CreateDynamicObject(9339,-189.62475585938,-1369.791015625,10.10000038147,16.468505859375,0.516357421875,53.5693359375);
	CreateDynamicObject(1290,-299.9563293457,-1299.6169433594,42.545513153076,0,0,62.990112304688);
	CreateDynamicObject(1290,-264.27127075195,-1319.943359375,35.271324157715,0,0,62.984619140625);
	CreateDynamicObject(1290,-231.59927368164,-1340.6037597656,27.037887573242,0,0,57.98583984375);
	CreateDynamicObject(1290,-199.41258239746,-1362.6177978516,18.023513793945,0,0,57.98583984375);
	CreateDynamicObject(973,-870.92462158203,-1111.3842773438,97.949562072754,0,0,90);
	CreateDynamicObject(973,-874.67907714844,-1135.6818847656,100.00110626221,1.7296142578125,8.7540283203125,78.483673095703);
	CreateDynamicObject(9339,-859.99035644531,-1126.2042236328,96.383026123047,3.2464599609375,0,78.898315429688);
	CreateDynamicObject(9339,-842.77770996094,-1129.7569580078,94.51000213623,4.9932861328125,0,79.096069335938);
	CreateDynamicObject(9339,-834.51263427734,-1131.1579589844,94.513000488281,4.9932861328125,0,79.096069335938);
	CreateDynamicObject(9339,-809.06500244141,-1136.0799560547,92.24137878418,4.98779296875,0,79.008178710938);
	CreateDynamicObject(9339,-783.53314208984,-1141.0400390625,89.971000671387,4.98779296875,0,79.008178710938);
	CreateDynamicObject(9339,-758.03875732422,-1145.9920654297,87.706398010254,4.9822998046875,0,79.008178710938);
	CreateDynamicObject(9339,-735.29290771484,-1150.4100341797,85.685997009277,4.9822998046875,0,79.008178710938);
	CreateDynamicObject(9339,-713.31121826172,-1154.9399414063,83.731002807617,4.9822998046875,0,77.003173828125);
	CreateDynamicObject(9339,-688.03344726563,-1160.9560546875,81.465339660645,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-662.75372314453,-1166.7951660156,79.207000732422,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-637.42370605469,-1172.6478271484,76.944000244141,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-612.07537841797,-1178.501953125,74.679000854492,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-593.03082275391,-1182.8995361328,72.976997375488,4.976806640625,0,76.997680664063);
	CreateDynamicObject(9339,-568.09930419922,-1189.8666992188,70.71900177002,4.976806640625,0,71.751708984375);
	CreateDynamicObject(9339,-543.40197753906,-1198.0119628906,68.455001831055,4.9713134765625,0,71.746215820313);
	CreateDynamicObject(9339,-518.73327636719,-1206.1483154297,66.194999694824,4.9713134765625,0,71.746215820313);
	CreateDynamicObject(9339,-494.07086181641,-1214.3179931641,63.936000823975,4.9713134765625,0,71.597900390625);
	CreateDynamicObject(9339,-469.41088867188,-1222.4868164063,61.675998687744,4.9713134765625,0,71.746215820313);
	CreateDynamicObject(9339,-451.43807983398,-1228.4146728516,60.029800415039,4.9713134765625,0,71.746215820313);
	CreateDynamicObject(9339,-427.10653686523,-1237.3890380859,57.317001342773,6.976318359375,0,67.747192382813);
	CreateDynamicObject(9339,-415.75228881836,-1242.0349121094,55.814998626709,6.976318359375,0,67.747192382813);
	CreateDynamicObject(9339,-392.03396606445,-1252.4730224609,52.645000457764,6.976318359375,0,64.742431640625);
	CreateDynamicObject(9339,-379.5412902832,-1258.3669433594,50.950000762939,6.976318359375,0,64.736938476563);
	CreateDynamicObject(9339,-356.27575683594,-1269.6290283203,47.55899810791,7.97607421875,0,63.599853515625);
	CreateDynamicObject(9339,-344.22247314453,-1275.6130371094,45.669998168945,8.2232666015625,0,63.599853515625);
	CreateDynamicObject(9339,-321.41723632813,-1287.6359863281,41.828998565674,8.7176513671875,0.252685546875,60.79833984375);
	CreateDynamicObject(9339,-309.68447875977,-1294.1290283203,39.772998809814,8.7176513671875,0.252685546875,60.79833984375);
	CreateDynamicObject(9339,-309.72592163086,-1294.1749267578,39.774089813232,8.7176513671875,0.252685546875,60.79833984375);
	CreateDynamicObject(9339,-287.28573608398,-1306.8199462891,35.53689956665,9.964599609375,0.252685546875,60.397338867188);
	CreateDynamicObject(9339,-275.55035400391,-1313.5200195313,33.161998748779,9.9591064453125,0.252685546875,60.200012207031);
	CreateDynamicObject(9339,-253.61219787598,-1326.7238769531,28.203693389893,11.969604492188,0.252685546875,57.694702148438);
	CreateDynamicObject(9339,-242.33399963379,-1333.7567138672,25.378999710083,11.969604492188,0.252685546875,57.694702148438);
	CreateDynamicObject(9339,-242.36805725098,-1333.833984375,25.382999420166,11.969604492188,0.252685546875,57.694702148438);
	CreateDynamicObject(9339,-221.10278320313,-1347.8100585938,19.753000259399,12.969360351563,0.252685546875,55.662231445313);
	CreateDynamicObject(9339,-210.14834594727,-1355.29296875,16.704000473022,12.9638671875,0.252685546875,55.662231445313);
	CreateDynamicObject(9339,-189.66412353516,-1369.833984375,10.10000038147,16.468505859375,0.516357421875,53.5693359375);
	
//Банки

    CreateDynamicObject(13007,1425.00390625,-1006.3369140625,14.372081756592+2000,0,0,1.2469482421875);
    CreateDynamicObject(14576,1420.40625,-1012.8154296875,7.8501682281494+2000,0,0,90.6953125);
    CreateDynamicObject(2071,1421.7590332031,-1007.3538208008,14.912284851074+2000,0,0,0);
    CreateDynamicObject(1964,1422.1842041016,-1005.1556396484,13.771874427795+2000,0,0,269.56530761719);
    CreateDynamicObject(1702,1416.8876953125,-1004.427734375,12.590396881104+2000,0,0,91.477661132813);
    CreateDynamicObject(2007,1419.3303222656,-1016.2568969727,7.1315684318542+2000,0,0,89.730041503906);
    CreateDynamicObject(2164,1433.9787597656,-1013.091003418,7.0628595352173+2000,0,0,270.77026367188);
    CreateDynamicObject(2606,1434.3529052734,-1008.9838867188,15.396750450134+2000,0,0,270.27026367188);
    CreateDynamicObject(2608,1424.9298095703,-1004.7521362305,9.2608585357666+2000,0,0,0);
    CreateObject(5171,1426.8211669922,-1010.2001953125,7.4918675422668+2000,0,0,0);
    CreateDynamicObject(14455,1424.5854492188,-1016.7573852539,8.835807800293+2000,0,0,0);
    CreateDynamicObject(3109,1435.25390625,-1014.0764770508,13.47310256958+2000,0,0,0);
    CreateDynamicObject(3089,1436.1652832031,-1007.01171875,9.3890390396118+2000,0,0,0);
    CreateDynamicObject(2959,1436.1295166016,-1007.0358886719,8.0600366592407+2000,0,0,271.78527832031);
    CreateDynamicObject(2754,1433.8576660156,-1007.0051269531,13.386645317078+2000,0,0,0);
    CreateDynamicObject(2922,1435.17578125,-1007.5089111328,9.8865146636963+2000,0,0,267.75524902344);
    CreateDynamicObject(2922,1412.9813232422,-1014.1073608398,1.2460784912109+2000,0,0,273.740234375);
    CreateDynamicObject(2921,1417.0677490234,-1020.3650512695,3.6593725681305+2000,0,0,324.240234375);
    CreateDynamicObject(2921,1324.6818847656,-1015.1112670898,-36.863521575928+2000,0,0,0);
    CreateDynamicObject(2921,1417.4133300781,-1021.5797119141,3.5857803821564+2000,0,0,87.790161132813);
    CreateDynamicObject(2921,1417.3247070313,-1007.0040283203,3.8346025943756+2000,0,0,181.7099609375);
    CreateDynamicObject(2921,1443.8924560547,-1012.2043457031,4.9590225219727+2000,0,0,34.994750976563);
    CreateDynamicObject(2921,1433.9610595703,-1010.4979858398,10.264769554138+2000,0,0,40.660034179688);
    CreateDynamicObject(2921,1438.7248535156,-1014.1942138672,15.517020225525+2000,0,0,324.27026367188);
    CreateDynamicObject(2921,1434.3942871094,-1010.8924560547,15.729566574097+2000,0,0,350.07507324219);
    CreateDynamicObject(2921,1417.2938232422,-1011.326171875,15.754571914673+2000,0,0,280.240234375);
    CreateDynamicObject(3389,1418.8056640625,-1012.1982421875,7.0611057281494+2000,0,0,181.35131835938);
    CreateDynamicObject(2986,1415.5572509766,-1027.4515380859,1.4987223148346+2000,270,0,0);
    CreateDynamicObject(2986,1520.8666992188,-1011.3131713867,23.015165328979+2000,0,0,0);
    CreateDynamicObject(2986,-2538.2932128906,551.02203369141,13.636164665222+2000,0,0,0);
    CreateDynamicObject(3035,1428.8520507813,-1095.2708740234,17.33299446106+2000,0,0,0);
    CreateDynamicObject(2947,1434.9931640625,-1008.2965698242,12.583019256592+2000,0,0,0);
    CreateDynamicObject(2959,1435.2033691406,-1009.780090332,12.260051727295+2000,0,0,0);
    CreateDynamicObject(2930,1418.8072509766,-1013.0993652344,10.535212516785+2000,0,0,1.25);
    CreateDynamicObject(2332,1421.7973632813,-999.05133056641,14.078409194946+2000,0,0,0);
    CreateDynamicObject(1421,1432.6567382813,-1005.501159668,7.8200144767761+2000,0,0,0);
    CreateDynamicObject(1416,1419.0391845703,-1007.823425293,7.6277041435242+2000,0,0,89.699951171875);
    //------------------------------------------------------------------------------
    CreateDynamicObject(13007,1425.00390625,-1006.3369140625,14.372081756592+3000,0,0,1.2469482421875);
    CreateDynamicObject(14576,1420.40625,-1012.8154296875,7.8501682281494+3000,0,0,90.6953125);
    CreateDynamicObject(2071,1421.7590332031,-1007.3538208008,14.912284851074+3000,0,0,0);
    CreateDynamicObject(1964,1422.1842041016,-1005.1556396484,13.771874427795+3000,0,0,269.56530761719);
    CreateDynamicObject(1702,1416.8876953125,-1004.427734375,12.590396881104+3000,0,0,91.477661132813);
    CreateDynamicObject(2007,1419.3303222656,-1016.2568969727,7.1315684318542+3000,0,0,89.730041503906);
    CreateDynamicObject(2164,1433.9787597656,-1013.091003418,7.0628595352173+3000,0,0,270.77026367188);
    CreateDynamicObject(2606,1434.3529052734,-1008.9838867188,15.396750450134+3000,0,0,270.27026367188);
    CreateDynamicObject(2608,1424.9298095703,-1004.7521362305,9.2608585357666+3000,0,0,0);
    CreateObject(5171,1426.8211669922,-1010.2001953125,7.4918675422668+3000,0,0,0);
    CreateDynamicObject(14455,1424.5854492188,-1016.7573852539,8.835807800293+3000,0,0,0);
    CreateDynamicObject(3109,1435.25390625,-1014.0764770508,13.47310256958+3000,0,0,0);
    CreateDynamicObject(3089,1436.1652832031,-1007.01171875,9.3890390396118+3000,0,0,0);
    CreateDynamicObject(2959,1436.1295166016,-1007.0358886719,8.0600366592407+3000,0,0,271.78527832031);
    CreateDynamicObject(2754,1433.8576660156,-1007.0051269531,13.386645317078+3000,0,0,0);
    CreateDynamicObject(2922,1435.17578125,-1007.5089111328,9.8865146636963+3000,0,0,267.75524902344);
    CreateDynamicObject(2922,1412.9813232422,-1014.1073608398,1.2460784912109+3000,0,0,273.740234375);
    CreateDynamicObject(2921,1417.0677490234,-1020.3650512695,3.6593725681305+3000,0,0,324.240234375);
    CreateDynamicObject(2921,1324.6818847656,-1015.1112670898,-36.863521575928+3000,0,0,0);
    CreateDynamicObject(2921,1417.4133300781,-1021.5797119141,3.5857803821564+3000,0,0,87.790161132813);
    CreateDynamicObject(2921,1417.3247070313,-1007.0040283203,3.8346025943756+3000,0,0,181.7099609375);
    CreateDynamicObject(2921,1443.8924560547,-1012.2043457031,4.9590225219727+3000,0,0,34.994750976563);
    CreateDynamicObject(2921,1433.9610595703,-1010.4979858398,10.264769554138+3000,0,0,40.660034179688);
    CreateDynamicObject(2921,1438.7248535156,-1014.1942138672,15.517020225525+3000,0,0,324.27026367188);
    CreateDynamicObject(2921,1434.3942871094,-1010.8924560547,15.729566574097+3000,0,0,350.07507324219);
    CreateDynamicObject(2921,1417.2938232422,-1011.326171875,15.754571914673+3000,0,0,280.240234375);
    CreateDynamicObject(3389,1418.8056640625,-1012.1982421875,7.0611057281494+3000,0,0,181.35131835938);
    CreateDynamicObject(2986,1415.5572509766,-1027.4515380859,1.4987223148346+3000,270,0,0);
    CreateDynamicObject(2986,1520.8666992188,-1011.3131713867,23.015165328979+3000,0,0,0);
    CreateDynamicObject(2986,-2538.2932128906,551.02203369141,13.636164665222+3000,0,0,0);
    CreateDynamicObject(3035,1428.8520507813,-1095.2708740234,17.33299446106+3000,0,0,0);
    CreateDynamicObject(2947,1434.9931640625,-1008.2965698242,12.583019256592+3000,0,0,0);
    CreateDynamicObject(2959,1435.2033691406,-1009.780090332,12.260051727295+3000,0,0,0);
    CreateDynamicObject(2930,1418.8072509766,-1013.0993652344,10.535212516785+3000,0,0,1.25);
    CreateDynamicObject(2332,1421.7973632813,-999.05133056641,14.078409194946+3000,0,0,0);
    CreateDynamicObject(1421,1432.6567382813,-1005.501159668,7.8200144767761+3000,0,0,0);
    CreateDynamicObject(1416,1419.0391845703,-1007.823425293,7.6277041435242+3000,0,0,89.699951171875);

//банкоматы

	CreateDynamicObject(2754,-20.595277786255,-91.714157104492,1003.4490356445,0,0,270);
	CreateDynamicObject(2754,-33.900596618652,-57.909881591797,1003.4490356445,0,0,270);
	CreateDynamicObject(2754,-33.526794433594,-31.378700256348,1003.4594116211,0,0,270);
	CreateDynamicObject(2754,1954.6915283203,-2179.7014160156,13.449019432068,0,0,270);
	CreateDynamicObject(2754,1496.2087402344,-1749.7947998047,15.347456932068,0,0,270);
	CreateDynamicObject(2754,-79.314300537109,-1172.0469970703,2.0352199077606,0,0,336.5);
	CreateDynamicObject(2754,-2029.2609863281,-101.96164703369,35.066207885742,0,0,270);
	CreateDynamicObject(2754,-1648.9376220703,1202.5944824219,7.1521444320679,0,0,270);
	CreateDynamicObject(2754,-2238.7355957031,2356.1899414063,4.8821663856506,0,0,42.25);
	CreateDynamicObject(2754,-1319.0035400391,2699.8916015625,50.168426513672,0,0,120);
	CreateDynamicObject(2754,-253.462890625,2592.6572265625,63.472457885742,0,0,90);
	CreateDynamicObject(2754,2633.2006835938,2351.7009277344,10.714917182922,0,0,103.5);
	CreateDynamicObject(2754,2187.5375976563,2473.0612792969,11.144331932068,0,0,180);
	CreateDynamicObject(2754,2197.48046875,1394.607421875,10.964644432068,0,0,90);
	CreateDynamicObject(2754,1672.3275146484,1444.8571777344,10.689973831177,0,0,180);

	CreateDynamicMapIcon(-1989.7310,1117.9515,54.4688,21,0, 0, 0, -1, 300.0);

	CreateDynamicMapIcon(-2455.6724,503.8921,30.0781, 52, 0, 0, 0, -1, 300.0);
	
	BankomatCP[0] = CreateDynamicCP(1954.7420654297,-2178.7573242188,13.546875, 0.75, -1, -1, -1, 1.5);
	//CreateDynamicMapIcon(-2455.5773925781,504.00894165039,30.078125, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[1] = CreateDynamicCP(1496.2335205078,-1749.0200195313,15.4453125, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(1496.2335205078,-1749.0200195313,15.4453125, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[2] = CreateDynamicCP(-80.214721679688,-1171.7033691406,2.1565637588501, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(-80.214721679688,-1171.7033691406,2.1565637588501, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[3] = CreateDynamicCP(-2029.3646240234,-101.0767288208,35.1640625, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(-2029.3646240234,-101.0767288208,35.1640625, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[4] = CreateDynamicCP(-1649.0135498047,1203.5905761719,7.25, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(-1649.0135498047,1203.5905761719,7.25, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[5] = CreateDynamicCP(-2239.40625,2355.615234375,4.9793963432312, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(-2239.40625,2355.615234375,4.9793963432312, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[6] = CreateDynamicCP(-1318.6433105469,2699.1796875,50.26628112793, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(-1318.6433105469,2699.1796875,50.26628112793, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[7] = CreateDynamicCP(-253.53668212891,2591.5905761719,63.5703125, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(-253.53668212891,2591.5905761719,63.5703125, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[8] = CreateDynamicCP(2633.5561523438,2350.9377441406,10.812772750854, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(2633.5561523438,2350.9377441406,10.8127727508545, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[9] = CreateDynamicCP(2188.5378417969,2473.1154785156,11.2421875, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(2188.5378417969,2473.1154785156,11.2421875, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[10] = CreateDynamicCP(2197.5617675781,1393.7086181641,10.8203125, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(2197.5617675781,1393.7086181641,10.8203125, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[11] = CreateDynamicCP(1673.3570556641,1444.9161376953,10.793506622314, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(1673.3570556641,1444.9161376953,10.793506622314, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[12] = CreateDynamicCP(-33.9085,-57.1119,1003.5469, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(-33.9085,-57.1119,1003.5469, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[13] = CreateDynamicCP(-20.6052,-90.9165,1003, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(-20.6052,-90.9165,1003, 56, 0, 0, 0, -1, 100.0);
	BankomatCP[14] = CreateDynamicCP(-33.526794433594,-30.578700256348,1003.4594116211, 0.75, -1, -1, -1, 1.5);
	CreateDynamicMapIcon(-33.526794433594,-30.578700256348,1003.4594116211, 56, 0, 0, 0, -1, 100.0);

    BankCP[0] = CreateDynamicCP(2315.5581,0.3544,26.7422, 0.75, -1, -1, -1, 1.5);
    BankCP[1] = CreateDynamicCP(1435.7402,-1008.9294,2013.7601, 0.75, -1, -1, -1, 1.5);
    BankCP[2] = CreateDynamicCP(1415.1216,-1026.7407,2001.2805, 0.75, -1, -1, -1, 1.5);
    BankCP[3] = CreateDynamicCP(1435.5389,-1007.4714,2009.0600, 0.75, -1, -1, -1, 1.5);
    BankCP[4] = CreateDynamicCP(1413.3344,-1013.9662,2000.7805, 0.75, -1, -1, -1, 1.5);
    BankCP[5] = CreateDynamicCP(1419.6614,-1012.0810,2008.0611, 0.75, -1, -1, -1, 1.5);
    BankCP[6] = CreateDynamicCP(1402.6705,-1010.2061,2000.6685, 0.75, -1, -1, -1, 1.5);
    BankCP[7] = CreateDynamicCP(1435.7402,-1008.9294,3013.7601, 0.75, -1, -1, -1, 1.5);
    BankCP[8] = CreateDynamicCP(1415.1216,-1026.7407,3001.2805, 0.75, -1, -1, -1, 1.5);
    BankCP[9] = CreateDynamicCP(1435.5389,-1007.4714,3009.0600, 0.75, -1, -1, -1, 1.5);
    BankCP[10] = CreateDynamicCP(1413.3344,-1013.9662,3000.7805, 0.75, -1, -1, -1, 1.5);
    BankCP[11] = CreateDynamicCP(1419.6614,-1012.0810,3008.0611, 0.75, -1, -1, -1, 1.5);
    BankCP[12] = CreateDynamicCP(1402.6705,-1010.2061,3000.6685, 0.75, -1, -1, -1, 1.5);

    CreatePickup(1239,23,1402.5995,-1010.0593,2000.6685,-1);
    CreatePickup(1239,23,1402.5995,-1010.0593,3000.6685,-1);
	Create3DTextLabel("Банковские ячейки",COLOR_WHITE,1402.5995,-1010.0593,2000.6685+0.9,15.0,1,1);
	Create3DTextLabel("Банковские ячейки",COLOR_WHITE,1402.5995,-1010.0593,3000.6685+0.9,15.0,2,1);
	CreatePickup(1239,23,1420.0964,-1012.0809,2008.0611,-1);
	CreatePickup(1239,23,1420.0964,-1012.0809,3008.0611,-1);
	Create3DTextLabel("Сигнализация",COLOR_WHITE,1420.0964,-1012.0809,2008.0611+0.9,15.0,1,1);
	Create3DTextLabel("Сигнализация",COLOR_WHITE,1420.0964,-1012.0809,3008.0611+0.9,15.0,2,1);

//Трейлер.Внутр интерьер

	CreateDynamicObject(3089,0.20898206532001,5.3926911354065,999.75738525391,0,0,0);
	CreateDynamicObject(3089,-0.76182329654694,3.2734367847443,999.75738525391,0,0,90);
	CreateDynamicObject(10184,0.43074011802673,0.45998221635818,998.24755859375,0,90,0);
	CreateDynamicObject(10184,2.6354491710663,-0.46424549818039,1000.9471435547,0,0.5,0);
	CreateDynamicObject(10184,-1.9463251829147,-0.81524151563644,1000.541809082,0,0,0);
	CreateDynamicObject(10150,0.29849082231522,-6.3237509727478,1000.6259155273,0,0,90);
	CreateDynamicObject(10150,0.32025501132011,7.5861768722534,1000.4607543945,0,0,90);
	CreateDynamicObject(1566,-1.1981445550919,5.4416227340698,999.94384765625,0,0,0);
	CreateDynamicObject(1566,1.6311814785004,5.4387917518616,999.94384765625,0,0,0);
	CreateDynamicObject(1566,-2.3820295333862,2.795889377594,999.89416503906,0,0,0);                        
	CreateDynamicObject(3061,-0.86662232875824,4.9023652076721,1000.1679077148,0,0,0);
	CreateDynamicObject(2945,0.59338808059692,-6.790509223938,998.95672607422,90,0,1);
	CreateDynamicObject(2945,-3.1383330821991,-2.0903584957123,999.55352783203,90,0,90.460021972656);
	CreateDynamicObject(2945,-3.2166414260864,-2.1822559833527,1000.1970825195,90,0,1.1309204101563);
	CreateDynamicObject(2945,-2.7619452476501,1.2378913164139,999.25701904297,90,0,90.455932617188);
	CreateDynamicObject(2945,3.3796973228455,2.2261784076691,999.45678710938,90,0,269.92498779297);
	CreateDynamicObject(2945,3.6251354217529,-0.3546037375927,998.98132324219,90,0,269.92309570313);
	CreateDynamicObject(1965,1.9284957647324,-0.42148813605309,999.01739501953,0,90,0);
	CreateDynamicObject(3089,3.4930007457733,2.8505265712738,1000.8742675781,90,90,90);
	CreateDynamicObject(10184,0.5495593547821,0.0052801929414272,1001.8260498047,0,90,0);
	CreateDynamicObject(2747,0.37728232145309,-4.5394926071167,998.56567382813,0,0,0);
	CreateDynamicObject(14385,0.29665747284889,0.62602376937866,1000.0018310547,0,0,0);
	
//Альхамбра

    CreateDynamicObject(19128,485.91,-1.68,1001.39,0.00,0.00,0.00);
	CreateDynamicObject(19128,489.11,-1.67,1001.39,0.00,0.00,0.00);
	CreateDynamicObject(19126,494.19,-13.88,1001.33,0.00,0.00,0.00);
	CreateDynamicObject(19125,494.19,-13.88,1002.15,0.00,0.00,0.00);
	CreateDynamicObject(19124,494.18,-13.89,1003.14,0.00,0.00,0.00);
	CreateDynamicObject(19123,494.45,-13.19,1000.30,0.00,0.00,0.00);
	CreateDynamicObject(19127,494.32,-14.63,1000.24,0.00,0.00,0.00);
	CreateDynamicObject(19147,488.99,-26.85,1005.48,0.00,0.00,24.00);
	CreateDynamicObject(19149,499.30,-24.80,1005.55,0.00,0.00,48.00);
	CreateDynamicObject(19150,499.41,-8.96,1004.73,0.00,0.00,92.00);
	CreateDynamicObject(19150,499.41,-8.96,1004.73,0.00,0.00,91.99);
	CreateDynamicObject(19150,499.43,-9.56,1004.73,0.00,0.00,91.99);
	CreateDynamicObject(19150,499.39,-8.43,1004.73,0.00,0.00,91.99);
	CreateDynamicObject(19150,499.38,-8.43,1004.73,0.00,0.00,91.99);
	CreateDynamicObject(19150,499.43,-9.55,1004.73,0.00,0.00,91.99);
	CreateDynamicObject(19151,505.77,-7.63,1003.99,0.00,0.00,61.25);
	CreateDynamicObject(19151,505.77,-7.63,1003.99,0.00,0.00,61.24);
	CreateDynamicObject(19151,505.77,-7.63,1003.99,0.00,0.00,61.24);
	CreateDynamicObject(19152,505.74,-1.06,1004.13,0.00,0.00,126.00);
	CreateDynamicObject(19152,505.74,-1.06,1004.13,0.00,0.00,125.99);
	CreateDynamicObject(19152,505.74,-1.06,1004.13,0.00,0.00,125.99);
	CreateDynamicObject(19153,492.30,-0.42,1005.49,0.00,0.00,140.00);
	CreateDynamicObject(19153,492.30,-0.42,1005.49,0.00,0.00,139.99);
	CreateDynamicObject(19153,492.30,-0.42,1005.49,0.00,0.00,139.99);
	CreateDynamicObject(19153,492.30,-0.42,1005.49,0.00,0.00,139.99);
	CreateDynamicObject(19153,492.30,-0.42,1005.49,0.00,0.00,139.99);
	CreateDynamicObject(19154,482.84,-0.48,1005.46,0.00,0.00,235.25);
	CreateDynamicObject(19154,482.84,-0.48,1005.46,0.00,0.00,235.24);
	CreateDynamicObject(19154,482.84,-0.48,1005.46,0.00,0.00,235.24);
	CreateDynamicObject(19154,482.84,-0.48,1005.46,0.00,0.00,235.24);
	CreateDynamicObject(19155,477.47,-1.97,1005.52,0.00,0.00,220.00);
	CreateDynamicObject(19155,477.47,-1.97,1005.52,0.00,0.00,219.99);
	CreateDynamicObject(19155,477.47,-1.97,1005.52,0.00,0.00,219.99);
	CreateDynamicObject(19155,477.47,-1.97,1005.52,0.00,0.00,219.99);
	CreateDynamicObject(19155,477.47,-1.97,1005.52,0.00,0.00,219.99);
	CreateDynamicObject(19083,472.47,-14.01,1000.63,0.00,0.00,0.00);
	CreateDynamicObject(19083,472.42,-13.20,1000.63,0.00,0.00,0.00);
	CreateDynamicObject(19083,472.41,-12.41,1000.63,0.00,0.00,0.00);
	CreateDynamicObject(19075,494.86,-4.59,1004.73,0.00,0.00,0.00);
	CreateDynamicObject(19075,480.15,-4.34,1004.73,0.00,0.00,0.00);
	CreateDynamicObject(18639,487.69,-3.40,1002.33,0.00,0.00,92.00);
	CreateDynamicObject(2595,476.72,-15.56,1003.82,0.00,0.00,126.00);
	CreateDynamicObject(2229,489.17,-5.70,1001.07,0.00,0.00,354.25);
	CreateDynamicObject(2229,489.16,-5.70,1002.40,0.00,0.00,354.24);
	CreateDynamicObject(2229,486.23,-5.69,1001.07,0.00,0.00,17.24);
	CreateDynamicObject(2229,486.23,-5.69,1002.47,0.00,0.00,17.24);
	CreateDynamicObject(2229,490.44,-3.29,1001.25,0.00,0.00,1.24);
	CreateDynamicObject(2229,490.09,-3.30,1001.25,0.00,0.00,1.24);
	CreateDynamicObject(2229,489.74,-3.31,1001.25,0.00,0.00,1.24);
	CreateDynamicObject(2229,489.38,-3.29,1001.25,0.00,0.00,1.24);
	CreateDynamicObject(2229,489.03,-3.29,1001.25,0.00,0.00,1.24);
	CreateDynamicObject(2229,488.68,-3.30,1001.25,0.00,0.00,1.24);
	CreateDynamicObject(2230,488.33,-3.35,1001.25,0.00,0.00,0.00);
	CreateDynamicObject(2230,487.98,-3.33,1001.25,0.00,0.00,0.00);
	CreateDynamicObject(2230,487.62,-3.35,1001.25,0.00,0.00,0.00);
	CreateDynamicObject(2229,487.28,-3.32,1001.25,0.00,0.00,358.24);
	CreateDynamicObject(2229,486.96,-3.27,1001.25,0.00,0.00,358.24);
	CreateDynamicObject(2229,486.62,-3.30,1001.25,0.00,0.00,358.24);
	CreateDynamicObject(2229,486.26,-3.30,1001.25,0.00,0.00,358.24);
	CreateDynamicObject(2229,485.91,-3.27,1001.25,0.00,0.00,358.24);
	CreateDynamicObject(2229,485.56,-3.22,1001.25,0.00,0.00,0.24);
	CreateDynamicObject(2229,485.09,-3.18,1001.27,0.00,0.00,17.24);
	CreateDynamicObject(18102,487.94,-27.17,1002.09,84.00,180.00,180.00);
	CreateDynamicObject(18102,483.30,-0.27,1001.69,83.99,179.99,359.99);
	//CreateDynamicObject(18883,487.89,-2.87,1002.44,343.75,0.00,2.25);
	CreateDynamicObject(1723,506.81,-3.15,999.67,0.00,0.00,269.75);
	CreateDynamicObject(1723,503.86,-1.89,999.67,0.00,0.00,355.74);
	CreateDynamicObject(1723,506.40,-6.32,999.67,0.00,1.25,211.74);
	CreateDynamicObject(2207,503.67,-5.35,999.67,0.00,0.00,0.00);
	CreateDynamicObject(2207,505.53,-3.44,999.67,0.00,0.00,179.74);
	CreateDynamicObject(18895,484.47,-28.56,1003.46,0.00,0.00,88.99);
	CreateDynamicObject(18895,485.54,-28.56,1003.46,0.00,0.00,88.99);
	CreateDynamicObject(1491,473.79,-21.32,1002.69,0.00,0.00,0.50);
	CreateDynamicObject(2290,476.62,-16.70,1002.74,0.00,0.00,270.50);
	CreateDynamicObject(1667,476.45,-14.12,1003.57,0.00,0.00,0.00);
	CreateDynamicObject(18872,471.97,-14.98,1003.95,0.00,0.00,0.00);
	CreateDynamicObject(1649,477.34,-14.48,1005.40,0.00,0.00,90.00);
	CreateDynamicObject(1649,477.37,-14.49,1005.40,0.00,0.00,269.99);
	CreateDynamicObject(967,490.53,-24.11,999.67,0.00,0.00,0.00);
	CreateDynamicObject(1806,490.01,-24.53,999.67,0.00,0.00,308.00);
	CreateDynamicObject(1806,475.52,-15.54,1002.67,0.00,0.00,307.99);
	CreateDynamicObject(1806,489.54,-0.56,1001.45,0.00,0.00,157.99);
	CreateDynamicObject(19129,482.57,-8.31,999.74,0.00,0.00,0.00);

//Ресторан

    CreateDynamicObject(1532, 1469.1804199219, -1370.8819580078, 61.432624816895, 0, 0, 0);
	CreateDynamicObject(10184, 1473.6063232422, -1370.7125244141, 60.02942276001, 0, 0, 90);
	CreateDynamicObject(10184, 1477.541015625, -1362.30859375, 63.479358673096, 0, 0, 179.99450683594);
	CreateDynamicObject(10184, 1465.2955322266, -1362.3197021484, 60.048545837402, 0, 0, 179.99450683594);
	CreateDynamicObject(13007, 1472.8076171875, -1362.1455078125, 66.805435180664, 0, 0, 90);
	CreateDynamicObject(10184, 1465.3873291016, -1362.3668212891, 66.438110351563, 0, 180, 179.99450683594);
	CreateDynamicObject(10184, 1473.7408447266, -1370.7000732422, 66.432518005371, 0, 179.99450683594, 269.99450683594);
	CreateDynamicObject(13007, 1472.5556640625, -1362.2724609375, 59.280479431152, 0, 0, 90.499877929688);
	CreateDynamicObject(10184, 1473.61328125, -1354.8544921875, 63.49946975708, 0, 0, 269.24194335938);
	CreateDynamicObject(1532, 1470.7119140625, -1370.537109375, 61.452735900879, 0, 0, 179.99450683594);
	CreateDynamicObject(18001, 1469.3399658203, -1370.6790771484, 63.194400787354, 0, 0, 179.25);
	CreateDynamicObject(18001, 1477.4831542969, -1370.7331542969, 63.233585357666, 0, 0, 179.99743652344);
	CreateDynamicObject(18001, 1465.3187255859, -1366.5894775391, 63.225715637207, 0, 0, 89.494506835938);
	CreateDynamicObject(18001, 1465.3200683594, -1358.43359375, 63.252708435059, 0, 0, 90.489135742188);
	CreateDynamicObject(16151, 1476.3255615234, -1363.9326171875, 61.76244354248, 0, 0, 0.99755859375);
	CreateDynamicObject(1532, 1477.3422851563, -1368.4739990234, 61.402732849121, 0, 0, 269.49450683594);
	CreateDynamicObject(18060, 1466.712890625, -1362.6975097656, 63.23783493042, 0, 0, 270);
	CreateDynamicObject(18059, 1466.8125, -1362.6313476563, 61.832069396973, 0, 0, 270);
	CreateDynamicObject(1825, 1470.1729736328, -1366.3392333984, 61.468589782715, 0, 0, 0);
	CreateDynamicObject(1825, 1470.2203369141, -1362.2003173828, 61.452735900879, 0, 0, 0);
	CreateDynamicObject(1569, 1469.9420166016, -1354.9914550781, 61.452735900879, 0, 0, 0);
	CreateDynamicObject(1569, 1472.9361572266, -1354.9898681641, 61.452735900879, 0, 0, 180);
	CreateDynamicObject(1825, 1475.3491210938, -1357.6102294922, 61.452735900879, 0, 0, 0);
	CreateDynamicObject(1825, 1473.3898925781, -1369.3563232422, 61.452735900879, 0, 0, 0);
	CreateDynamicObject(2591, 1469.8254394531, -1356.7149658203, 61.254447937012, 0, 0, 180);
	CreateDynamicObject(2591, 1473.0048828125, -1356.6672363281, 61.254447937012, 0, 0, 179.99450683594);
	CreateDynamicObject(2204, 1469.9184570313, -1357.4599609375, 61.377731323242, 90, 180, 270);
	CreateDynamicObject(2204, 1471.1453857422, -1357.4654541016, 61.377731323242, 90, 179.99450683594, 270);
	CreateDynamicObject(16780, 1474.3746337891, -1360.0413818359, 65.260185241699, 0, 0, 0);
	CreateDynamicObject(16780, 1468.9481201172, -1359.9123535156, 65.235046386719, 0, 0, 0);
	CreateDynamicObject(16780, 1474.3016357422, -1367.1644287109, 65.335159301758, 0, 0, 0);
	CreateDynamicObject(16780, 1468.9451904297, -1367.0417480469, 65.260047912598, 0, 0, 0);
	CreateDynamicObject(2233, 1477.4221191406, -1370.1348876953, 65.563682556152, 12, 180, 220);
	CreateDynamicObject(2233, 1476.8178710938, -1355.1151123047, 65.466400146484, 11.9970703125, 179.99450683594, 307.99572753906);
	CreateDynamicObject(2233, 1465.7941894531, -1355.5318603516, 65.472137451172, 11.991577148438, 179.99450683594, 49.99072265625);
	CreateDynamicObject(2233, 1466.0129394531, -1370.4895019531, 65.498779296875, 11.986083984375, 179.99450683594, 133.98779296875);
	CreateDynamicObject(2369, 1475.5980224609, -1365.1715087891, 62.242855072021, 0, 0, 268);
	CreateDynamicObject(2266, 1476.8605957031, -1366.0712890625, 63.117908477783, 0, 0, 270);
	CreateDynamicObject(2267, 1477.3419189453, -1358.4763183594, 63.459217071533, 0, 0, 270);
	CreateDynamicObject(2286, 1475.0205078125, -1355.0847167969, 63.418785095215, 0, 0, 0);
	CreateDynamicObject(2270, 1468.8409423828, -1355.4627685547, 63.027755737305, 0, 0, 0);
	CreateDynamicObject(8507, 1472.1646728516, -1380.7744140625, 59.138652801514, 0, 0, 0.25);
	CreateDynamicObject(3660, 1481.0109863281, -1380.6253662109, 64.097557067871, 0, 0, 270.25);
	CreateDynamicObject(3660, 1473.5812988281, -1390.2446289063, 64.12255859375, 0, 0, 180.24717712402);
	CreateDynamicObject(3660, 1464.6208496094, -1380.6573486328, 64.12255859375, 0, 0, 89.24169921875);
	CreateDynamicObject(3810, 1471.5434570313, -1371.5736083984, 64.000267028809, 0, 0, 270);
	CreateDynamicObject(3810, 1468.3835449219, -1371.7172851563, 63.937454223633, 0, 0, 270);
	CreateDynamicObject(1432, 1468.7755126953, -1383.7933349609, 61.469493865967, 0, 0, 0);
	CreateDynamicObject(1432, 1471.6829833984, -1386.1733398438, 61.469493865967, 0, 0, 0);
	CreateDynamicObject(1432, 1469.1146240234, -1377.4276123047, 61.469493865967, 0, 0, 0);
	CreateDynamicObject(1432, 1473.4946289063, -1374.4973144531, 61.469493865967, 0, 0, 0);
	CreateDynamicObject(1432, 1473.2681884766, -1381.7587890625, 61.469493865967, 0, 0, 0);
	CreateDynamicObject(1432, 1477.1638183594, -1377.3240966797, 61.469493865967, 0, 0, 0);
	CreateDynamicObject(1432, 1477.0280761719, -1386.0363769531, 61.469493865967, 0, 0, 0);

//Остров

	CreateDynamicObject( 16258, 713.127807 , -2830.472167 , -49.000000 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 16258, 786.879211 , -2788.695068 , -49.051086 , 0.000000 , 0.000000 , 616.000000);
	CreateDynamicObject( 14393, 775.366760 , -2852.287597 , 1000 , 0.000000 , 0.000000 , 0.000000);
	CreateObject( 11490, 775.366760 , -2852.287597 , 3.101735 , 0.000000 , 0.000000 , 180.000000);
	CreateDynamicObject( 11491, 775.361760 , -2841.227597 , 4.581735 , 0.000000 , 0.000000 , 180.000000);
	CreateDynamicObject( 1736, 775.343994 , -2845.351074 , 7.986301 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 1828, 773.874267 , -2849.023193 , 4.712166 , 0.000000 , 0.000000 , 972.000000);
	CreateDynamicObject( 11665, 778.163024 , -2848.560791 , 5.262573 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 11631, 778.724426 , -2855.769042 , 5.832248 , 0.000000 , 0.000000 , 2700.000000);
	CreateDynamicObject( 1723, 773.437622 , -2851.886474 , 4.543708 , 0.000000 , 0.000000 , 500.000000);
	CreateDynamicObject( 1723, 771.825256 , -2847.923095 , 4.659612 , 0.000000 , 0.000000 , 62.000000);
	CreateDynamicObject( 1646, 752.722167 , -2828.767333 , 2.899070 , 14.000000 , 4.000000 , 134.000000);
	CreateDynamicObject( 1637, 797.763366 , -2739.296386 , 3.537348 , 0.000000 , 0.000000 , 562.000000);
	CreateDynamicObject( 1645, 755.381652 , -2829.870117 , 2.989241 , 6.000000 , 4.000000 , 162.000000);
	CreateDynamicObject( 3461, 753.242614 , -2830.517822 , 4.409924 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 3461, 781.970947 , -2839.107910 , 4.633762 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 3461, 770.198242 , -2838.895019 , 4.482945 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 3461, 793.469116 , -2849.874511 , 4.444637 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 3461, 754.584960 , -2849.569335 , 4.983467 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 3524, 775.391357 , -2844.545410 , 2.848451 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 11495, 739.596008 , -2809.593994 , 0.552734 , 0.000000 , 0.000000 , 22.000000);
	CreateDynamicObject( 628, 771.829040 , -2849.189697 , 6.439230 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 711, 758.597900 , -2831.965087 , 7.285028 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 711, 749.412597 , -2825.102294 , 6.212321 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 711, 753.797424 , -2834.210205 , 7.373906 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 711, 749.493286 , -2830.800781 , 6.950206 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 746, 752.793151 , -2831.859375 , 3.196425 , 0.000000 , 0.000000 , 710.000000);
	CreateDynamicObject( 747, 749.715209 , -2827.758789 , 2.571616 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 745, 758.796447 , -2833.511962 , 2.694536 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 745, 803.764343 , -2745.086669 , 1.771249 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 758, 788.502441 , -2746.630126 , 0.270166 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 3461, 795.436279 , -2739.261718 , 3.969913 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 745, 797.694213 , -2751.673339 , 0.992662 , -4.000000 , -374.000000 , -252.000000);
	CreateDynamicObject( 747, 809.927429 , -2740.485839 , 0.770636 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 880, 808.694396 , -2757.377197 , 0.602614 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 1461, 797.715332 , -2743.173583 , 3.084697 , 0.000000 , 0.000000 , 292.000000);
	CreateDynamicObject( 620, 803.803283 , -2743.131591 , 2.027884 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 746, 799.412963 , -2735.666503 , 2.232966 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 3507, 798.960815 , -2732.974365 , 1.892477 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 1642, 790.478576 , -2740.722412 , 1.562498 , 1272.000000 , 168.000000 , 272.000000);
	CreateDynamicObject( 3626, 743.321960 , -2850.708740 , 2.471598 , 0.000000 , 0.000000 , 90.000000);
	CreateDynamicObject( 3626, 747.092834 , -2850.708740 , 2.471598 , 0.000000 , 0.000000 , 90.000000);
	CreateDynamicObject( 6295, 664.527465 , -2828.540039 , 25.431104 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 3525, 664.734375 , -2830.136474 , 46.465351 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 14392, 775.500732 , -2852.239501 , 998.987304 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 14391, 776.419372 , -2853.211914 , 998.772949 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 16501, 784.189941 , -2853.812011 , 998.315429 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 14402, 771.519458 , -2841.296386 , 3.760829 , 0.000000 , 0.000000 , 90.000000);
	CreateDynamicObject( 14402, 778.750732 , -2839.212939 , 3.855211 , 0.000000 , 0.000000 , -85.000000);
	CreateDynamicObject( 14402, 775.750732 , -2839.212939 , 3.855211 , 0.000000 , 0.000000 , -85.000000);
	CreateDynamicObject( 18368, 788.338073 , -2837.393310 , -1.214880 , 0.000000 , 0.000000 , 81.000000);
	CreateDynamicObject( 1481, 781.346557 , -2842.115966 , 5.282270 , 0.000000 , 0.000000 , 270.000000);
	CreateDynamicObject( 1209, 773.206604 , -2856.266845 , 4.587175 , 0.000000 , 0.000000 , 180.000000);
	CreateDynamicObject( 749, 799.586425 , -2844.199951 , 2.616182 , 0.000000 , -88.000000 , 149.000000);
	CreateDynamicObject( 751, 805.584594 , -2847.051269 , 0.917457 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 751, 796.158386 , -2840.441162 , 2.724733 , 0.000000 , -88.000000 , 497.000000);
	CreateDynamicObject( 751, 792.195983 , -2838.640625 , 2.797317 , 0.000000 , 271.000000 , 153.000000);
	CreateDynamicObject( 751, 787.706054 , -2838.414306 , 2.694507 , 0.000000 , -88.000000 , 179.000000);
	CreateDynamicObject( 751, 787.416503 , -2838.270996 , 3.043086 , -41.000000 , -94.000000 , 361.000000);
	CreateDynamicObject( 747, 787.390197 , -2838.923339 , 2.906169 , 0.000000 , 0.000000 , 202.000000);
	CreateDynamicObject( 14402, 782.427185 , -2841.299804 , 3.831256 , 0.000000 , 0.000000 , 30.000000);
	CreateDynamicObject( 820, 795.641662 , -2835.278076 , -0.281279 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 820, 799.628112 , -2835.732666 , -0.329932 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 820, 802.533081 , -2839.652099 , -0.184889 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 820, 804.181457 , -2843.673828 , -0.279970 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 820, 792.411010 , -2836.382324 , -0.260778 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 856, 788.636108 , -2842.894775 , 3.274733 , 0.000000 , 0.000000 , 7.000000);
	CreateDynamicObject( 822, 802.613098 , -2848.104003 , 3.682669 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 813, 795.377807 , -2842.323242 , 5.201782 , 0.000000 , 0.000000 , 54.000000);
	CreateDynamicObject( 814, 798.977783 , -2854.163818 , 3.136753 , 0.000000 , 0.000000 , 143.000000);
	CreateDynamicObject( 728, 795.915893 , -2845.093017 , 3.136753 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 762, 799.099548 , -2850.169921 , 3.136753 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 800, 742.493469 , -2837.144287 , 3.835455 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 803, 751.945800 , -2839.794189 , 5.828198 , 0.000000 , 0.000000 , 11.000000);
	CreateDynamicObject( 805, 760.978088 , -2837.949218 , 4.345748 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 762, 745.792114 , -2835.337158 , 6.292323 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 762, 736.394042 , -2842.148681 , 6.230221 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 762, 733.836242 , -2852.465820 , 5.068370 , 0.000000 , 0.000000 , 33.000000);
	CreateDynamicObject( 762, 737.218811 , -2861.736572 , 6.685624 , 0.000000 , 0.000000 , 99.000000);
	CreateDynamicObject( 762, 747.773010 , -2867.318847 , 7.064486 , 0.000000 , 0.000000 , 231.000000);
	CreateDynamicObject( 800, 754.087341 , -2844.785644 , 4.800476 , 0.000000 , 0.000000 , 68.000000);
	CreateDynamicObject( 800, 759.247436 , -2841.550781 , 4.151706 , 0.000000 , 0.000000 , 215.000000);
	CreateDynamicObject( 762, 806.219909 , -2748.782714 , 4.119337 , 0.000000 , 0.000000 , 30.000000);
	CreateDynamicObject( 762, 805.732055 , -2736.918701 , 4.549339 , 0.000000 , 0.000000 , 0.000000);
	CreateDynamicObject( 1432,779.653137,-2840.894042,4.674414,0.000000,0.000000,52.500000);
	CreateDynamicObject( 1280,784.811584,-2837.284912,3.654738,0.000000,0.000000,-90.000000);
		// WALL
	CreateDynamicObject( 10671,778.255615,-2844.951416,0.795554,90.000000,0.000000,270.000000);
	CreateDynamicObject( 10671,772.443542,-2844.951416,0.795554,90.000000,0.000000,270.000000);

	// GLASS
	CreateDynamicObject( 3851, 772.546325 , -2844.9 , 1.05 , -90.000000 , 0.000000 , 90.000000);
	CreateDynamicObject( 3851, 778.246512 , -2844.9 , 1.05 , -90.000000 , 0.000000 , 270.000000);

	//DOORS
	CreateDynamicObject( 1557,778.984191,-2844.860595,4.334251,0.000000,0.000000,180.000000);
	CreateDynamicObject( 1557,778.984191,-2844.960595,4.334251,0.000000,0.000000,180.000000);
	CreateDynamicObject( 1557, 776.868705 , -2856.821777 , 4.404764 , 0.000000 , 0.000000 , 180.000000);
	CreateDynamicObject( 1557, 773.868083 , -2856.821777 , 4.404764 , 0.000000 , 0.000000 , 0.000000);
	
//Инструкторы(автошкола)

	SchoolS = CreateDynamicObject(968,-2043.7904052734,-80.300003051758,34.921859741211,0,270,0);
	SchoolCP[0] = CreateDynamicCP(-2047.5,-84.0,34.7685, 3, 0, 0, -1, 5.0);
	SchoolCP[1] = CreateDynamicCP(-2047.5,-76.0,34.7574, 3, 0, 0, -1, 5.0);

//Полuцейскuй участок ЛС

	PoliceS[0] = CreateDynamicObject(968,1544.6999511719,-1630.6999511719,13.179565429688,0,90,90);
	CreateDynamicObject(983,1544.9434814453,-1620.8065185547,13.063118934631,0,0,0);
	CreateDynamicObject(983,1544.8553466797,-1635.9431152344,13.187717437744,0,0,0);
	CreateDynamicObject(984,1556.0340576172,-1617.7742919922,13.183554649353,0,0,90);
	CreateDynamicObject(984,1568.8156738281,-1617.7542724609,13.183554649353,0,0,90);
	CreateDynamicObject(983,1576.8078613281,-1617.7783203125,13.180430412292,0,0,90);
	CreateDynamicObject(997,1580,-1617.6300048828,12.3828125,0,0,90);
	CreateDynamicObject(966,1580,-1606.8461914063,12.3828125,0,0,90);
	CreateDynamicObject(997,1580,-1605.9877929688,12.3828125,0,0,90);
	PoliceS[1] = CreateDynamicObject(968,1580,-1606.8298339844,13.132816314697,0,90,270);
	CreateDynamicObject(3660,1570.0675048828,-1618.7525634766,14,0,0,0);
	CreateDynamicObject(3660,1554.8862304688,-1618.7515869141,14,0,0,0);
	CreateDynamicObject(860,1566.4913330078,-1619.1878662109,12.959781646729,0,0,0);
	CreateDynamicObject(859,1564.2377929688,-1619.3991699219,12.959781646729,0,0,0);
	CreateDynamicObject(3660,1554.9020996094,-1620.7808837891,14,0,0,180);
	CreateDynamicObject(3660,1570.0750732422,-1620.7119140625,14,0,0,179.99450683594);
	CreateDynamicObject(3660,1570.0443115234,-1621.4959716797,14,0,0,0);
	CreateDynamicObject(3660,1554.9100341797,-1621.4653320313,14,0,0,0);
	CreateDynamicObject(870,1576.2825927734,-1620.2541503906,12.851947784424,0,0,0);
	CreateDynamicObject(871,1573.3646240234,-1619.9639892578,12.892888069153,0,0,0);
	CreateDynamicObject(871,1568.5479736328,-1620.4005126953,12.892888069153,0,0,0);
	CreateDynamicObject(870,1554.8250732422,-1620.1767578125,12.851947784424,0,0,0);
	CreateDynamicObject(871,1546.4880371094,-1620.2407226563,12.892888069153,0,0,0);
	CreateDynamicObject(871,1550.3173828125,-1620.3353271484,12.892888069153,0,0,0);
	CreateDynamicObject(970,1580,-1620.2440185547,12.934293746948,0,0,90);
	CreateDynamicObject(982,1557.7095947266,-1622.8499755859,13.093383789063,0,0,90);
	CreateDynamicObject(984,1573.6982421875,-1622.8453369141,13.058556556702,0,0,90);
	PoliceG[0] = CreateDynamicObject(10184,1592.6000976563,-1638.0947265625,14.929574966431,0,0,270);
	CreateDynamicObject(7191,1581.6430664063,-1637.9525146484,20.853843688965,0,0,270);
	CreateDynamicObject(7191,1581.6378173828,-1638.0822753906,20.851629257202,0,0,270);
	CreateDynamicObject(7191,1580.9455566406,-1638.3328857422,20.853843688965,0,0,90);
	CreateDynamicObject(1965,1577.3078613281,-1637.3359375,13.959880828857,0,0,0);
	PoliceD[0] = CreateDynamicObject(1965,1584.0598144531,-1637.9163818359,13.888319015503,0,0,90);
	CreateDynamicObject(998,1539.4543457031,-1660.8752441406,12.836400985718,90,0,90);
	CreateDynamicObject(998,1539.4556884766,-1671.6810302734,12.836400985718,90,0,90);
	CreateDynamicObject(1257,1522.6270751953,-1677.0180664063,13.826066970825,0,0,180);
	CreateDynamicObject(998,1539.5246582031,-1688.3444824219,12.836400985718,90,0,90);
	CreateDynamicObject(998,1539.5393066406,-1698.86328125,12.836400985718,90,0,90);
	CreateDynamicObject(4199,1601.7806396484,-1618.7380371094,14.476059913635,0,0,180);
	CreateDynamicObject(2922,1582.4044189453,-1637.8176269531,13.911600112915,0,0,0);
	CreateDynamicObject(3934,1566.0411376953,-1653.2047119141,27.395606994629,0,0,0);
	CreateDynamicObject(3934,1565.7047119141,-1697.0787353516,27.395587921143,0,0,0);

    PoliceCP[0] = CreateDynamicCP(1576,-1610.6999511719,13.3828125, 3, 0, 0, -1, 5.0);
	PoliceCP[1] = CreateDynamicCP(1584,-1610.6999511719,13.3828125, 3, 0, 0, -1, 5.0);
	PoliceCP[2] = CreateDynamicCP(1541,-1627.5,13.3828125, 3, 0, 0, -1, 5.0);
	PoliceCP[3] = CreateDynamicCP(1548.5,-1627.5,13.3828125, 3, 0, 0, -1, 5.0);
	PoliceCP[4] = CreateDynamicCP(1589.42578125,-1643.7065429688,12.368983268738, 3, 0, 0, -1, 5.0);
	PoliceCP[5] = CreateDynamicCP(1588.5338134766,-1633.00390625,13.3828125, 3, 0, 0, -1, 5.0);
	PoliceCP[6] = CreateDynamicCP(1583.3721923828,-1636.8326416016,13.390459060669, 1, 0, 0, -1, 1.5);
	PoliceCP[7] = CreateDynamicCP(1583.4525146484,-1639.4091796875,13.252097129822, 1, 0, 0, -1, 1.5);
	PoliceCP[8] = CreateDynamicCP(246.41040039063,73.420349121094,1003.640625, 1, -1, -1, -1, 1.5);
	PoliceCP[9] = CreateDynamicCP(246.45822143555,71.623542785645,1003.640625, 1, -1, -1, -1, 1.5);

	PoliceD[1] = CreateDynamicObject(3089,246.13708496094,72.5,1003.9000244141,0,0,0);
	PoliceD[2] = CreateDynamicObject(3089,246.64151000977,72.5,1003.9000244141,0,0,180);
	CreateDynamicObject(2930,221.99227905273,70.649642944336,1006.55078125,0,0,0);
	CreateDynamicObject(2930,222.0270690918,80.687080383301,1006.5758056641,0,0,0);
	CreateDynamicObject(2930,266.39038085938,88.322845458984,1002.6008300781,0,0,0);
	CreateDynamicObject(2930,266.39105224609,83.816024780273,1002.6008300781,0,0,0);

//Полuцейскuй участок СФ

    PoliceS[2] = CreateDynamicObject(968,-1701.431640625,687.61090087891,24.682815551758,0,90,270);
	CreateDynamicObject(982,-1701.6654052734,702.43316650391,24.574180603027,0,0,0);
	CreateDynamicObject(983,-1701.6597900391,715.55590820313,24.574180603027,0,0,0);
	CreateDynamicObject(983,-1663.2938232422,718.78302001953,24.581123352051,0,0,90);
	CreateDynamicObject(982,-1688.9167480469,718.76098632813,24.574180603027,0,0,90);
	CreateDynamicObject(984,-1669.7154541016,718.78387451172,24.534248352051,0,0,90);
	CreateDynamicObject(982,-1641.2508544922,659.2236328125,10.396292686462,0,0,0);
	CreateDynamicObject(982,-1628.4344482422,646.42803955078,10.396292686462,0,0,90);
	PoliceS[3] = CreateDynamicObject(968,-1572.1981201172,658.86138916016,6.903124332428,0,90,90);
	PoliceG[1] = CreateDynamicObject(10184,-1631.7344970703,688.26672363281,8.7092628479004,0,0,90);
	PoliceD[3] = CreateDynamicObject(5302,-1620.4948730469,688.12200927734,8.5112857818604,0,0,90);
	CreateDynamicObject(1649,-1618.6328125,685.38232421875,8.0905389785767,0,0,270);
	CreateDynamicObject(1649,-1616.0345458984,679.50933837891,7.8532423973083,0,0,0);
	CreateDynamicObject(1965,-1618.6420898438,680.92071533203,7.6879830360413,0,0,0);

	PoliceCP[10] = CreateDynamicCP(-1568,662.5,7.1875, 3, 0, 0, -1, 5.0);
	PoliceCP[11] = CreateDynamicCP(-1576.8337402344,662.5,7.1875, 3, 0, 0, -1, 5.0);
	PoliceCP[12] = CreateDynamicCP(-1705.6979980469,684,24.890625, 3, 0, 0, -1, 5.0);
	PoliceCP[13] = CreateDynamicCP(-1696.5472412109,684,23.836849212646, 3, 0, 0, -1, 5.0);
	PoliceCP[14] = CreateDynamicCP(-1631.5,683,7.1875, 3, 0, 0, -1, 5.0);
	PoliceCP[15] = CreateDynamicCP(-1631.5,697.19317626953,6.3981037139893, 3, 0, 0, -1, 5.0);
	PoliceCP[16] = CreateDynamicCP(-1620.4727783203,687.05487060547,7.1901206970215, 1, 0, 0, -1, 1.5);
	PoliceCP[17] = CreateDynamicCP(-1620.4022216797,689.33874511719,7.1875, 1, 0, 0, -1, 1.5);

	PoliceCP[18] = CreateDynamicCP(-2198.1511230469,304.95697021484,35.1171875, 3, 0, 0, -1, 5.0);
	PoliceCP[19] = CreateDynamicCP(-2198.8857421875,314.83190917969,35.3203125, 3, 0, 0, -1, 5.0);

////Полuцейскuй участок ЛВ

    PoliceS[4] = CreateDynamicObject(968,2238.1779785156,2450.4128417969,10.638172149658,0,90,90);
	PoliceG[2] = CreateDynamicObject(10184,2334.8742675781,2443.0551757813,7.1970891952515,0,0,330.07498168945);
	PoliceG[3] = CreateDynamicObject(3055,2293.9038085938,2498.8479003906,4.4465570449829,0,0,90);
	PoliceD[4] = CreateDynamicObject(1967,2293.8784179688,2494.3864746094,3.7715213298798,0,0,0);
	CreateDynamicObject(1967,2248.8259277344,2487.0158691406,11.48888874054,0,0,0);

	PoliceCP[20] = CreateDynamicCP(2234,2454,10.808401107788, 3, 0, 0, -1, 5.0);
	PoliceCP[21] = CreateDynamicCP(2242,2454,10.8203125, 3, 0, 0, -1, 5.0);
	PoliceCP[22] = CreateDynamicCP(2339.3095703125,2441.2978515625,6.7336463928223, 3, 0, 0, -1, 5.0);
	PoliceCP[23] = CreateDynamicCP(2328.9174804688,2446.0712890625,4.6278929710388, 3, 0, 0, -1, 5.0);
	PoliceCP[24] = CreateDynamicCP(2289.5,2498.5,4.0433254241943, 3, 0, 0, -1, 5.0);
	PoliceCP[25] = CreateDynamicCP(2299.2475585938,2498.5,3.2734375, 3, 0, 0, -1, 5.0);
	PoliceCP[26] = CreateDynamicCP(2292.8308105469,2493.7409667969,3.4393768310547, 1, 0, 0, -1, 1.5);
	PoliceCP[27] = CreateDynamicCP(2294.9445800781,2493.740234375,3.2734375, 1, 0, 0, -1, 1.5);

//FBI

    CreateDynamicObject(987,-1911.7687988281,593.20001220703,34.162925720215,0,0,180);
	CreateDynamicObject(987,-1923.7415771484,593.20001220703,34.166198730469,0,0,179.99450683594);
	CreateDynamicObject(987,-1935.7185058594,593.20001220703,34.166164398193,0,0,179.99450683594);
	CreateDynamicObject(987,-1947.6864013672,593.20001220703,34.166076660156,0,0,179.99450683594);
	CreateDynamicObject(987,-1959.6380615234,593.20001220703,34.166194915771,0,0,179.99450683594);
	CreateDynamicObject(987,-1971.6010742188,593.20001220703,34.172428131104,0,0,179.99450683594);
	CreateDynamicObject(987,-1979.4497070313,593.20001220703,34.171875,0,0,179.99450683594);
	CreateDynamicObject(987,-1991.5,593.35339355469,34.164779663086,0,0,270);
	CreateDynamicObject(987,-1991.5,581.3740234375,34.168411254883,0,0,270);
	CreateDynamicObject(987,-1991.5,569.44403076172,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,560.4072265625,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,538.28338623047,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,526.34545898438,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,514.39685058594,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,502.44692993164,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,490.48626708984,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,478.52670288086,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,466.57708740234,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,454.62365722656,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,442.66143798828,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5,430.67718505859,34.171875,0,0,270);
	CreateDynamicObject(987,-1991.5169677734,418.70855712891,34.171875,0,0,319.5);
	CreateDynamicObject(987,-1982.4138183594,410.93133544922,34.171875,0,0,319.49890136719);
	CreateDynamicObject(987,-1980.1163330078,408.9892578125,34.171875,0,0,319.49890136719);
	CreateDynamicObject(987,-1971.0837402344,401.20001220703,34.166126251221,0,0,0);
	CreateDynamicObject(987,-1959.1362304688,401.20001220703,34.166122436523,0,0,0);
	CreateDynamicObject(987,-1947.1873779297,401.20001220703,34.166126251221,0,0,0);
	CreateDynamicObject(987,-1935.2512207031,401.20001220703,34.166126251221,0,0,0);
	CreateDynamicObject(987,-1923.3201904297,401.20001220703,34.171875,0,0,0);
	CreateDynamicObject(987,-1911.3909912109,401.20001220703,34.171875,0,0,0);
	CreateDynamicObject(987,-1905.3768310547,401.20001220703,34.223262786865,0,0,0);
	CreateDynamicObject(987,-1893.4548339844,401.21731567383,34.171875,0,0,46.715026855469);
	CreateDynamicObject(987,-1885.2329101563,409.87979125977,34.171875,0,0,46.7138671875);
	CreateDynamicObject(987,-1877.0234375,418.57421875,34.171875,0,0,44.9638671875);
	CreateDynamicObject(987,-1868.5729980469,427.0378112793,34.171875,0,0,44.961547851563);
	CreateDynamicObject(987,-1860.0991210938,435.45904541016,34.171875,0,0,44.961547851563);
	CreateDynamicObject(987,-1851.5904541016,443.8987121582,34.171875,0,0,46.461547851563);
	CreateDynamicObject(987,-1843.2934570313,452.52569580078,34.171875,0,0,54.961181640625);
	CreateDynamicObject(987,-1836.4449462891,462.36074829102,34.171875,0,0,63.959136962891);
	CreateDynamicObject(987,-1831.1684570313,473.0969543457,34.171875,0,0,74.706909179688);
	CreateDynamicObject(987,-1827.9161376953,484.68170166016,34.171875,0,0,102.02151489258);
	CreateDynamicObject(987,-1830.3779296875,496.38998413086,34.171875,0,0,128.67904663086);
	CreateDynamicObject(987,-1837.8395996094,505.72659301758,34.171875,0,0,141.17730712891);
	CreateDynamicObject(987,-1847.1345214844,513.24505615234,34.171875,0,0,146.92431640625);
	CreateDynamicObject(987,-1857.1271972656,519.83453369141,34.171875,0,0,148.92016601563);
	CreateDynamicObject(987,-1867.3829345703,526.02789306641,34.171875,0,0,148.91967773438);
	CreateDynamicObject(987,-1877.6330566406,532.24664306641,34.171875,0,0,143.66967773438);
	CreateDynamicObject(987,-1887.2584228516,539.38018798828,34.171875,0,0,131.66821289063);
	CreateDynamicObject(987,-1895.2161865234,548.31427001953,34.171875,0,0,124.41564941406);
	CreateDynamicObject(987,-1902.0076904297,558.18286132813,34.131103515625,0,0,114.16467285156);
	CreateDynamicObject(987,-1906.9470214844,569.04425048828,34.067367553711,0,0,101.66448974609);
	CreateDynamicObject(987,-1909.2899169922,580.85693359375,34.109428405762,0,0,101.5);
	CreateDynamicObject(987,-1909.4306640625,581.60278320313,34.111923217773,0,0,101.50003051758);
	CreateDynamicObject(966,-1991.6696777344,545.88116455078,34.015625,0,0,90);
	FbiS = CreateDynamicObject(968,-1991.6520996094,545.98077392578,34.765609741211,0,270,90);
	CreateDynamicObject(8168,-1988.1875,548.96130371094,35.844833374023,0,0,16.75);
	CreateDynamicObject(9241,-1894.8708496094,438.48818969727,35.855751037598,0,0,270);

    FbiCP[0] = CreateDynamicCP(-1987.7751464844,542.60211181641,35.015625, 3, 0, 0, -1, 5.0);
	FbiCP[1] = CreateDynamicCP(-1995.8355712891,542.81774902344,35.023418426514, 3, 0, 0, -1, 5.0);

//Армия Los Santos

    ArmaG[0] = CreateDynamicObject(969,2719.9228515625,-2508.17578125,12.64688873291,0,0,90);//Ворота 1
	ArmaG[1] = CreateDynamicObject(969,2719.9111328125,-2409.51171875,12.610935211182,0,0,90);//Ворота 2
	ArmaG[2] = CreateDynamicObject(3037,2774.2646484375,-2417.7998046875,14.817487716675,0,0,0);//Ангар 1
	ArmaG[3] = CreateDynamicObject(3037,2774.3486328125,-2455.802734375,14.835450172424,0,0,0);//Ангар 2
	ArmaG[4] = CreateDynamicObject(3037,2774.244140625,-2493.9267578125,14.865319252014,0,0,0);//Ангар 3
	CreateDynamicObject(987,2685.169921875,-2330.21484375,12.6328125,0,0,270);
	CreateDynamicObject(987,2685.1970214844,-2336.2214355469,12.6328125,0,0,270);
	CreateDynamicObject(9241,2781.5830078125,-2349.5329589844,14.312882423401,0,0,0);
	CreateDynamicObject(2949,2754.8081054688,-2383.2563476563,12.407815933228,0,0,180);
	CreateDynamicObject(2886,2720.4814453125,-2499.1489257813,14.2,0,0,90);
	CreateDynamicObject(2886,2720.4814453125,-2400.7165527344,14.2,0,0,90);
	CreateDynamicObject(3279,2725,-2494.2973632813,12.6640625,0,0,0);
	CreateDynamicObject(3279,2725,-2413,12.6328125,0,0,0);

	ArmaCP[0] = CreateDynamicCP(2714.5,-2504,13.49, 4.0,-1,-1, -1, 10.0);//Ворота 1
    ArmaCP[1] = CreateDynamicCP(2725.5,-2504,13.48, 4.0,-1,-1, -1, 10.0);//Ворота 1
	ArmaCP[2] = CreateDynamicCP(2725.5,-2404.7,13.46, 4.0,-1,-1, -1, 10.0);//Ворота 2
    ArmaCP[3] = CreateDynamicCP(2714.5,-2404.7,13.47, 4.0,-1,-1, -1, 10.0);//Ворота 2
    ArmaCP[4] = CreateDynamicCP(2769.5,-2417.7,13.63, 4.0,-1,-1, -1, 10.0);//Ангар 1
    ArmaCP[5] = CreateDynamicCP(2781.5,-2417.7,13.63, 4.0,-1,-1, -1, 10.0);//Ангар 1
    ArmaCP[6] = CreateDynamicCP(2769.5,-2455.82,13.63, 4.0,-1,-1, -1, 10.0);//Ангар 2
    ArmaCP[7] = CreateDynamicCP(2781.5,-2455.82,13.63, 4.0,-1,-1, -1, 10.0);//Ангар 2
    ArmaCP[8] = CreateDynamicCP(2769.5,-2494.01,13.63, 4.0,-1,-1, -1, 10.0);//Ангар 3
    ArmaCP[9] = CreateDynamicCP(2781.5,-2494.01,13.63, 4.0,-1,-1, -1, 10.0);//Ангар 3

//Армия San Fierro

	ArmaS = CreateDynamicObject(968,-1547.9007568359,518.48699951172,6.9368948936462,0,270,85);
	CreateDynamicObject(966,-1547.9031982422,518.43188476563,6.1599998474121,0,0,85);
	CreateDynamicObject(987,-1548.4854736328,510.61871337891,6.1500000953674,0,0,265);
	CreateDynamicObject(987,-1549.5467529297,498.73974609375,6.1500000953674,0,0,280.42077636719);
	CreateDynamicObject(987,-1548.7410888672,494.32125854492,6.1500000953674,0,0,280.42053222656);
	CreateDynamicObject(987,-1546.4840087891,530.85632324219,6.1500000953674,0,0,263.42504882813);
	CreateDynamicObject(987,-1534.5397949219,530.65997314453,6.1500000953674,0,0,180);
	CreateDynamicObject(987,-1522.6185302734,530.65997314453,6.1500000953674,0,0,179.99450683594);
	CreateDynamicObject(987,-1517.9399414063,530.65997314453,6.1500000953674,0,0,179.99450683594);
	CreateDynamicObject(987,-1518,491.72616577148,6.1500000953674,0,0,90);
	CreateDynamicObject(987,-1518,503.68280029297,6.1500000953674,0,0,90);
	CreateDynamicObject(987,-1518.0747070313,515.62829589844,6.1500000953674,0,0,90);
	CreateDynamicObject(987,-1518.0780029297,518.64147949219,6.1500000953674,0,0,90);
	CreateDynamicObject(3279,-1522.2823486328,526.28967285156,6.1796875,0,0,270);
	CreateDynamicObject(3279,-1543.376953125,477.28430175781,6.1875,0,0,0);
	CreateDynamicObject(10829,-1541.6346435547,521.62066650391,6.1796875,0,0,83.355041503906);
	CreateDynamicObject(5130,-1329.6755371094,478.76052856445,8.2516784667969,0,0,225);

    ArmaCP[10] = CreateDynamicCP(-1551.3824,515.2607,7.0570, 4.0,-1,-1, -1, 10.0);//Шлагбаум
	ArmaCP[11] = CreateDynamicCP(-1543.3677,514.1612,7.1797, 4.0,-1,-1, -1, 10.0);//Шлагбаум

//Армия Las Venturas

	CreateObject(3707,338.0546875,1946.9814453125,24.432916641235,0,0,179.99450683594);
	CreateDynamicObject(5706,136.39221191406,1952.7983398438,23.627780914307,0,0,179.99450683594);
	CreateDynamicObject(6976,143.8140411377,1938.7445068359,18.658359527588,0,0,180);
	CreateDynamicObject(3095,184,1946,17.950000762939,0,0,0);
	CreateDynamicObject(3095,184,1955,17.950000762939,0,0,0);
	CreateDynamicObject(3095,184,1964,17.950000762939,0,0,0);
	CreateDynamicObject(3095,184,1973,17.950000762939,0,0,0);
	CreateDynamicObject(3095,184,1982,17.950000762939,0,0,0);
	CreateDynamicObject(3095,184,1991,17.950000762939,0,0,0);
	CreateDynamicObject(3095,184,2000,17.950000762939,0,0,0);
	CreateDynamicObject(3095,175,2000,17.950000762939,0,0,0);
	CreateDynamicObject(3095,166,2000,17.950000762939,0,0,0);
	CreateDynamicObject(3095,157,2000,17.950000762939,0,0,0);
	CreateDynamicObject(3095,148,2000,17.950000762939,0,0,0);
	CreateDynamicObject(3095,148,1991,17.950000762939,0,0,0);
	CreateDynamicObject(3095,148,1982,17.950000762939,0,0,0);
	CreateDynamicObject(3095,148,1973,17.950000762939,0,0,0);
	CreateDynamicObject(3095,157,1991,17.950000762939,0,0,0);
	CreateDynamicObject(3095,148,1964,17.950000762939,0,0,0);
	CreateDynamicObject(3095,175,1946,17.950000762939,0,0,0);
	CreateDynamicObject(3095,166,1946,17.950000762939,0,0,0);
	CreateDynamicObject(3095,157,1946,17.950000762939,0,0,0);
	CreateDynamicObject(3095,175,1955,17.950000762939,0,0,0);
	CreateDynamicObject(3095,166,1955,17.950000762939,0,0,0);
	CreateDynamicObject(3095,157,1955,17.950000762939,0,0,0);
	CreateDynamicObject(3095,157,1964,17.950000762939,0,0,0);
	CreateDynamicObject(3095,166,1964,17.950000762939,0,0,0);
	CreateDynamicObject(3095,175,1964,17.950000762939,0,0,0);
	CreateDynamicObject(3095,157,1973,17.950000762939,0,0,0);
	CreateDynamicObject(3095,157,1982,17.950000762939,0,0,0);
	CreateDynamicObject(3095,166,1982,17.950000762939,0,0,0);
	CreateDynamicObject(3095,175,1982,17.950000762939,0,0,0);
	CreateDynamicObject(3095,166,1991,17.950000762939,0,0,0);
	CreateDynamicObject(3095,175,1991,17.950000762939,0,0,0);
	CreateDynamicObject(3095,175,1973,17.950000762939,0,0,0);
	CreateDynamicObject(3095,166,1973,17.950000762939,0,0,0);
	CreateDynamicObject(5706,171.92320251465,1994.7736816406,14.347152709961,0,0,179.99450683594);
	CreateDynamicObject(5706,171.74732971191,1954.7607421875,14.347152709961,0,0,179.99450683594);
	CreateDynamicObject(5706,171.92193603516,1976.1871337891,14.347152709961,0,0,179.99450683594);
	CreateDynamicObject(987,188.68458557129,1953.3902587891,17.54061126709,0,0,270);
	CreateDynamicObject(987,188.68458557129,1965.2756347656,17.54061126709,0,0,270);
	CreateDynamicObject(987,188.69071960449,1977.1981201172,17.54061126709,0,0,270);
	CreateDynamicObject(987,188.68458557129,1989.0493164063,17.54061126709,0,0,270);
	CreateDynamicObject(987,188.68458557129,2000.9488525391,17.54061126709,0,0,270);
	CreateDynamicObject(987,188.78652954102,2006.9099121094,17.54061126709,0,0,270);
	CreateDynamicObject(982,175.66744995117,2004.4709472656,19.188919067383,0,0,90);
	CreateDynamicObject(984,156.47055053711,2004.5002441406,19.142044067383,0,0,90);
	CreateDynamicObject(983,146.87953186035,2004.4544677734,19.188919067383,0,0,90);
	CreateDynamicObject(984,143.60269165039,1998.0072021484,19.142044067383,0,0,0);
	CreateDynamicObject(983,143.607421875,1991.625,19.188919067383,0,0,0);
	CreateDynamicObject(8558,166.22392272949,1999.1273193359,20.026905059814,0,0,0);
	CreateDynamicObject(8558,184.14669799805,1963.6311035156,20.026905059814,0,0,270);
	CreateDynamicObject(8558,161.5386505127,1963.640625,20.026905059814,0,0,270);
	CreateDynamicObject(8558,166.6674041748,1963.6311035156,20.026905059814,0,0,90);
	CreateDynamicObject(3934,142.66307067871,1951.4100341797,27.448265075684,0,0,0);
	CreateDynamicObject(3095,268.75,1884.3897705078,16.023069381714,0,0,0);
	CreateDynamicObject(1499,152.50738525391,1943.9415283203,18.505365371704,0,0,90);
	CreateDynamicObject(1499,132.10968017578,1940.2478027344,18.304618835449,0,0,0);
	CreateDynamicObject(2886,152.45622253418,1945.6823730469,19.999565124512,0,0,90);
	CreateDynamicObject(2886,133.9034576416,1940.2357177734,19.933019638062,0,0,0);
	CreateDynamicObject(983,143.5245513916,1965.1596679688,19.188919067383,0,0,0);
	CreateDynamicObject(997,96.58975982666,1918.8088378906,17.315019607544,0,0,88.5);

//Медики

	CreateDynamicObject(966,1637.5710449219,1836.54296875,9.7234992980957,0,0,90);
	CreateDynamicObject(966,1577.2763671875,1836.8388671875,9.7800369262695,0,0,90);
	MedicS[0] = CreateDynamicObject(968,1637.5649414063,1836.6199951172,10.520301818848,0,270,90);
	MedicS[1] = CreateDynamicObject(968,1577.2600097656,1836.9532470703,10.505041122437,0,270,90);
	CreateDynamicObject(997,-2612,586.47796630859,13.45454788208,0,0,90);
	CreateDynamicObject(997,-2612,590.95043945313,13.45454788208,0,0,90);
	CreateDynamicObject(997,-2612,595.56243896484,13.454549789429,0,0,90);
	CreateDynamicObject(997,-2612,617.27233886719,13.453125,0,0,90);
	CreateDynamicObject(997,-2612,628.24987792969,13.454549789429,0,0,90);
	CreateDynamicObject(966,-2612,627.88409423828,13.454551696777,0,0,90);
	MedicS[2] = CreateDynamicObject(968,-2612,628,14.204555511475,0,270,90);
	CreateDynamicObject(966,-2663.5,578.09997558594,13.458456993103,0,0,0);
	MedicS[3] = CreateDynamicObject(968,-2663.5,578.09997558594,14.233460426331,0,270,0);
	CreateDynamicObject(995,-2675.5739746094,578.09997558594,14.050000190735,90,0,0);
	CreateDynamicObject(995,-2661.6479492188,578.09997558594,14.050000190735,90,0,0);

    CreateDynamicObject(972,1135.7257080078,-1358.8076171875,12.806257247925,0,0,270);
	CreateDynamicObject(7191,1089.5848388672,-1334.0560302734,14.689703941345,0,0,0);
	CreateDynamicObject(7191,1089.7485351563,-1332.6553955078,14.697303771973,0,0,180);
	CreateDynamicObject(997,1145.75,-1291.5,12.633324623108,0,0,0);
	CreateDynamicObject(997,1133.75,-1291.5,12.554061889648,0,0,0);
	CreateDynamicObject(966,1144.6995849609,-1291.5,12.618099212646,0,0,0);
	MedicS[4] = CreateDynamicObject(968,1144.6500244141,-1291.5,13.39999961853,0,270,0);

	MedicCP[0] = CreateDynamicCP(1641,1832.5,10.800094604492, 3, 0, 0, -1, 5.0);
	MedicCP[1] = CreateDynamicCP(1634.0008544922,1832.5,10.8203125, 3, 0, 0, -1, 5.0);
	MedicCP[2] = CreateDynamicCP(1581.9587402344,1833,10.8203125, 3, 0, 0, -1, 5.0);
	MedicCP[3] = CreateDynamicCP(1573.9798583984,1833,10.808565139771, 3, 0, 0, -1, 5.0);
	MedicCP[4] = CreateDynamicCP(-2608.5534667969,623.79998779297,14.453125, 3, 0, 0, -1, 5.0);
	MedicCP[5] = CreateDynamicCP(-2615.2687988281,623.79998779297,14.453125, 3, 0, 0, -1, 5.0);
	MedicCP[6] = CreateDynamicCP(-2667.3999023438,581.63464355469,14.454549789429, 3, 0, 0, -1, 5.0);
	MedicCP[7] = CreateDynamicCP(-2667.3999023438,574.62902832031,14.461342811584, 3, 0, 0, -1, 5.0);

	MedicCP[8] = CreateDynamicCP(1141,-1287.5999755859,13.561716079712, 3, 0, 0, -1, 5.0);
	MedicCP[9] = CreateDynamicCP(1141,-1296,13.589794158936, 3, 0, 0, -1, 5.0);

//Новости

	CreateDynamicObject(996,1645.5,-1316.5,17.459692001343,0,0,0);
	CreateDynamicObject(997,1653,-1322,16.434474945068,0,0,90);
	CreateDynamicObject(996,1637.4000244141,-1316.5,17.459692001343,0,0,0);
	CreateDynamicObject(996,1629.2546386719,-1316.5,17.441709518433,0,0,0);
	CreateDynamicObject(997,1653,-1341.5,16.4296875,0,0,90);
	CreateDynamicObject(997,1653,-1348.5,16.4296875,0,0,90);
	CreateDynamicObject(997,1653,-1368.5,16.442920684814,0,0,90);
	CreateDynamicObject(996,1621.2976074219,-1341.8782958984,17.530000686646,0,0,87);
	CreateDynamicObject(996,1620.8540039063,-1350.0432128906,17.534067153931,0,0,86.995239257813);
	CreateDynamicObject(996,1620.4561767578,-1358.1843261719,17.531982421875,0,0,86.995239257813);
	CreateDynamicObject(996,1620.0395507813,-1366.3267822266,17.530004501343,0,0,86.995239257813);
	CreateDynamicObject(996,1619.5968017578,-1374.4230957031,17.530004501343,0,0,86.995239257813);
//------------------------------------------------------------------------------
	CreateDynamicObject(966,-2016.5162353516,471.03012084961,34.171875,0,0,90);
	NewsS = CreateDynamicObject(968,-2016.5184326172,471.12432861328,34.996864318848,0,90,270);
	CreateDynamicObject(983,-2016.6606445313,460.63845825195,34.855430603027,0,0,0);
	CreateDynamicObject(983,-2016.6708984375,457.42880249023,34.855430603027,0,0,0);
	CreateDynamicObject(984,-2016.6771240234,487.83666992188,34.808555603027,0,0,0);
	CreateDynamicObject(984,-2016.6820068359,478.23519897461,34.808555603027,0,0,0);
	CreateDynamicObject(984,-2023.0858154297,494.22512817383,34.808555603027,0,0,90);
	CreateDynamicObject(984,-2034.2736816406,494.23135375977,34.808555603027,0,0,90);
	CreateDynamicObject(983,-2050.2529296875,494.21099853516,34.847667694092,0,0,90);
	CreateDynamicObject(983,-2053.4499511719,494.21099853516,34.847667694092,0,0,90);
	CreateDynamicObject(870,-2025.3822021484,482.13439941406,34.413997650146,0,0,0);
	CreateDynamicObject(870,-2028.7390136719,478.24984741211,34.413997650146,0,0,0);
	CreateDynamicObject(870,-2030.8388671875,485.08123779297,34.413997650146,0,0,0);
	CreateDynamicObject(870,-2024.2365722656,487.60733032227,34.413997650146,0,0,0);
	CreateDynamicObject(870,-2021.1024169922,477.88104248047,34.413997650146,0,0,0);
	CreateDynamicObject(870,-2022.0850830078,484.20468139648,34.413997650146,0,0,0);
	CreateDynamicObject(870,-2028.4929199219,490.25933837891,34.413997650146,0,0,0);
	CreateDynamicObject(870,-2032.4854736328,480.8512878418,34.413997650146,0,0,0);
	CreateDynamicObject(870,-2020.3103027344,489.77905273438,34.413997650146,0,0,0);
	CreateDynamicObject(869,-2024.5036621094,477.78619384766,34.621696472168,0,0,0);
	CreateDynamicObject(869,-2027.6173095703,485.92572021484,34.621696472168,0,0,0);
	CreateDynamicObject(869,-2032.8582763672,476.91180419922,34.621696472168,0,0,0);
	CreateDynamicObject(869,-2021.2272949219,482.01992797852,34.621696472168,0,0,0);
	CreateDynamicObject(869,-2032.7132568359,489.29107666016,34.621696472168,0,0,0);
	CreateDynamicObject(871,-2024.4522705078,485.13125610352,34.454936981201,0,0,0);
	CreateDynamicObject(871,-2028.1594238281,482.00872802734,34.454936981201,0,0,0);
	CreateDynamicObject(871,-2020.326171875,486.45965576172,34.454936981201,0,0,0);
	CreateDynamicObject(871,-2033.5847167969,483.88061523438,34.454936981201,0,0,0);
	CreateDynamicObject(871,-2024.5296630859,490.3645324707,34.454936981201,0,0,0);
	CreateDynamicObject(871,-2027.4349365234,476.59634399414,34.454936981201,0,0,0);
	CreateDynamicObject(866,-2034.0216064453,482.35882568359,34.171875,0,0,0);
	CreateDynamicObject(817,-2030.2993164063,480.33941650391,34.614429473877,0,0,0);
	CreateDynamicObject(817,-2022.3278808594,488.30258178711,34.614429473877,0,0,0);
	CreateDynamicObject(640,-2018.251953125,476.90289306641,34.868907928467,0,0,0);
	CreateDynamicObject(640,-2018.2403564453,482.03378295898,34.868907928467,0,0,0);
	CreateDynamicObject(640,-2018.2465820313,487.22848510742,34.868907928467,0,0,0);
	CreateDynamicObject(640,-2018.2307128906,490.29028320313,34.868907928467,0,0,0);
	CreateDynamicObject(640,-2020.6263427734,474.57043457031,34.868907928467,0,0,270);
	CreateDynamicObject(640,-2025.7760009766,474.56463623047,34.868907928467,0,0,270);
	CreateDynamicObject(640,-2030.5913085938,474.55078125,34.868907928467,0,0,270);
	CreateDynamicObject(640,-2033.9505615234,474.55718994141,34.868907928467,0,0,270);
	CreateDynamicObject(640,-2036.283203125,476.91748046875,34.868907928467,0,0,180);
	CreateDynamicObject(640,-2036.2906494141,481.74743652344,34.868907928467,0,0,179.99450683594);
	CreateDynamicObject(640,-2036.2904052734,486.02685546875,34.868907928467,0,0,179.99450683594);
	CreateDynamicObject(640,-2036.2843017578,490.30438232422,34.868907928467,0,0,179.99450683594);
	CreateDynamicObject(640,-2033.9289550781,492.64208984375,34.868907928467,0,0,90);
	CreateDynamicObject(640,-2029.4263916016,492.64813232422,34.868907928467,0,0,90);
	CreateDynamicObject(640,-2024.5274658203,492.65530395508,34.868907928467,0,0,90);
	CreateDynamicObject(640,-2020.5367431641,492.6569519043,34.868907928467,0,0,90);
	CreateDynamicObject(672,-2024.0720214844,483.60073852539,34.171875,0,0,0);
	CreateDynamicObject(792,-2033.6770019531,486.45486450195,34.171875,0,0,0);
	CreateDynamicObject(792,-2030.0141601563,476.41693115234,34.171875,0,0,0);
	CreateDynamicObject(836,-2030.4757080078,483.05191040039,35.453247070313,0,0,0);
	CreateDynamicObject(983,-2043.8796386719,494.22640991211,34.847667694092,0,0,90);
	NewsCP[0] = CreateDynamicCP(-2020.5667,467.5116,35.1723, 3, 0, 0, -1, 5.0);
	NewsCP[1] = CreateDynamicCP(-2012.3457,468.0513,35.1719, 3, 0, 0, -1, 5.0);

//La Cosa Nostra

	CreateDynamicObject(998,1243.8956298828,-2045.3204345703,59.390735626221,88.249877929688,90,268.49981689453);
	CreateDynamicObject(998,1242.7124023438,-2024.9708251953,59.380584716797,90,90,180);
	CreateDynamicObject(998,1242.7342529297,-2014.3059082031,59.381801605225,90,90,179.99450683594);
	CreateDynamicObject(998,1243.8483886719,-2007.1832275391,59.499969482422,88,90,270);
	CreateDynamicObject(998,1254.2521972656,-2007.1561279297,59.126937866211,87.999938964844,90,269.99996948242);
	CreateDynamicObject(998,1264.6451416016,-2007.1538085938,58.854923248291,88.249877929688,90,269.99996948242);
	CreateDynamicObject(998,1279.8809814453,-2008.1091308594,58.332660675049,90,90,179.99450683594);
	CreateDynamicObject(998,1279.9104003906,-2019.7552490234,58.376773834229,90,90,179.99450683594);
	CreateDynamicObject(998,1279.9366455078,-2030.8638916016,58.424205780029,90,90,179.99450683594);
	CreateDynamicObject(998,1270.4698486328,-2046.2575683594,58.651554107666,89.249816894531,90.000183105469,268.4892578125);
	CreateDynamicObject(995,1254.2563476563,-2045.6188964844,59.04797744751,88.499877929688,90,267.9997253418);
	CreateDynamicObject(995,1279.9838867188,-2045.4222412109,58.477649688721,90,0,90);
	CreateDynamicObject(995,1275.1486816406,-2007.1148681641,58.470352172852,90,179.99450683594,177.99499511719);
	CreateDynamicObject(995,1242.7551269531,-2012.3385009766,59.373573303223,90,0,90);
	CreateDynamicObject(995,1242.7459716797,-2043.7770996094,59.373062133789,90,0,90);
	CreateDynamicObject(979,1440.4659423828,-2002.2218017578,50.64697265625,0,4,95);
	CreateDynamicObject(979,1438.6610107422,-1993.1856689453,49.996349334717,0,3.9990234375,107.45120239258);
	CreateDynamicObject(979,1434.65625,-1984.9821777344,49.090847015381,0,7.5,124.25448608398);
	CreateDynamicObject(979,1429.2396240234,-1977.8100585938,47.488742828369,0,12.75,129.24926757813);
	CreateDynamicObject(979,1423.0051269531,-1971.5125732422,45.319118499756,0,14.996337890625,139.74865722656);
	CreateDynamicObject(979,1415.4825439453,-1966.5290527344,43.097896575928,0,12.490844726563,153.15612792969);
	CreateDynamicObject(979,1407.0948486328,-1963.1466064453,40.832641601563,0,15.735961914063,163.15490722656);
	CreateDynamicObject(979,1245.0030517578,-1909.0882568359,30.458633422852,0,357.732421875,229.3525390625);
	CreateDynamicObject(979,1251.9339599609,-1902.9742431641,29.85772895813,0,355.01135253906,213.47058105469);
	CreateDynamicObject(979,1260.2453613281,-1899.0665283203,29.055683135986,0,355.00671386719,196.86987304688);
	CreateDynamicObject(979,1269.2609863281,-1897.7711181641,28.254999160767,0,355.00122070313,179.11950683594);
	CreateDynamicObject(979,1278.5162353516,-1897.8367919922,27.266069412231,0,353.50122070313,179.11560058594);
	CreateDynamicObject(979,1287.8024902344,-1898.3696289063,26.215000152588,0,353.49609375,174.36560058594);
	CreateDynamicObject(979,1241.4923095703,-1916.943359375,30.808511734009,0,357.73132324219,261.87561035156);

//El Coronos

	CreateDynamicObject(7191,1807.4947509766,-1968.4976806641,14.521553039551,0,0,270);
	CreateDynamicObject(7191,1828.25,-1968.5,14.521553039551,0,0,270);
	CreateDynamicObject(7191,1827.560546875,-1968.5855712891,14.521553039551,0,0,90);
	CreateDynamicObject(7191,1807.1877441406,-1968.6081542969,14.521553039551,0,0,90);

//Стрит рейсеры

	CreateDynamicObject(1245,1710.9061279297,978.25012207031,11.307885169983,0,0,225);
	CreateDynamicObject(4517,1747.5679931641,973.82208251953,11.456727981567,0,0,270);
	CreateDynamicObject(1237,1753.0688476563,970.68060302734,9.5684356689453,0,0,0);
	CreateDynamicObject(1282,1755.4798583984,975.95037841797,10.432298660278,0,0,170);
	CreateDynamicObject(7191,1599.8044433594,943.45001220703,11.656273841858,0,0,270);
	CreateDynamicObject(7191,1635.3000488281,943.45001220703,11.794990539551,0,0,270);
	CreateDynamicObject(7657,1647.3631591797,923.35400390625,11.563714981079,0,0,180);

	StreetG = CreateDynamicObject(980,-2126.3918457031,-80.953262329102,37.093704223633,0,0,0);
    StreetCP[0] = CreateDynamicCP(-2127.0732,-85.8614,35.3203, 3, 0, 0, -1, 5.0);
	StreetCP[1] = CreateDynamicCP(-2127.2385,-75.0655,35.1797, 3, 0, 0, -1, 5.0);

//РАзное

	CreateDynamicObject(2949,1163.3533935547,-1330.4279785156,30.48353767395,0,0,270);
	CreateDynamicObject(2904,1612.6472167969,1784.4661865234,30.774913787842,0,0,90);
	CreateDynamicObject(2904,1614.1810302734,1784.4857177734,30.774913787842,0,0,90);
	CreateDynamicObject(2949,1614.1364746094,1785.7406005859,29.46875,0,0,270);
	CreateDynamicObject(2949,214.8356628418,127.06993103027,1002.21875,0,0,90);
	CreateDynamicObject(2949,207.37364196777,141.51405334473,1002.0234375,0,0,180);
	CreateDynamicObject(3089,371.28344726563,166.7105255127,1008.7117919922,0,0,0);
	//CreateDynamicObject(3089,368.88809204102,161.57844543457,1014.5069580078,0,0,90);
	CreateDynamicObject(2949,371.61508178711,159.80638122559,1024.7890625,0,0,270);
	CreateDynamicObject(3089,363.95388793945,186.86863708496,1020.3133544922,0,0,0);
	CreateDynamicObject(2395,367.76373291016,163.93252563477,1021.6583251953,0,0,270);
	CreateDynamicObject(2395,367.78411865234,163.02333068848,1018.9461669922,0,0,270);
	CreateDynamicObject(3089,367.81625366211,161.60906982422,1020.3133544922,0,0,90);
	CreateDynamicObject(2395,379.25848388672,159.06564758301,1024.7890625,0,0,180);
	CreateDynamicObject(2395,379.27801513672,159.06649780273,1027.5212402344,0,0,179.99450683594);
	CreateDynamicObject(3089,377.56105957031,159.12179160156,1026.1180419922,0,0,0);
	CreateDynamicObject(2949,2098.5209960938,2402.5654296875,59.816890716553,0,0,90);
	CreateDynamicObject(2949,1676.9176025391,-1334.1407470703,157.4765625,0,0,0);
	CreateDynamicObject(7922,1680,-1334.9000244141,158.87390136719,0,0,90);
	CreateDynamicObject(7922,1680,-1334.8499755859,158.87390136719,0,0,270);
	CreateDynamicObject(7922,1678,-1334.8499755859,158.87390136719,0,0,270);
	CreateDynamicObject(7922,1678,-1334.9000244141,158.87390136719,0,0,90);
	CreateDynamicObject(2949,-2171.0927734375,639.93450927734,1051.375,0,0,90);
    
//Такси

    CreateDynamicObject(982,2390.2028808594,1623.2731933594,10.478867530823,0,0,90);
	CreateDynamicObject(984,2409.3771972656,1623.2786865234,10.478867530823,0,0,90);
	CreateDynamicObject(983,2418.9675292969,1623.2738037109,10.478867530823,0,0,90);
	CreateDynamicObject(982,2445.2524414063,1623.2667236328,10.478867530823,0,0,90);
	CreateDynamicObject(982,2469.2175292969,1623.302734375,10.478867530823,0,0,90);
	CreateDynamicObject(966,2430.6298828125,1623.0999755859,9.678581237793,0,0,0);
	TAXIS[0] = CreateDynamicObject(968,2430.6103515625,1623.0999755859,10.42858505249,0,270,0);
	CreateDynamicObject(966,2490.6413574219,1623.0999755859,9.6702966690063,0,0,0);
	TAXIS[1] = CreateDynamicObject(968,2490.7287597656,1623.0999755859,10.420300483704,0,270,0);
	CreateDynamicObject(982,2445.2121582031,1703.1531982422,10.503867149353,0,0,90);
	CreateDynamicObject(982,2409.5686035156,1703.1390380859,10.503867149353,0,0,90);
	CreateDynamicObject(966,2430.7873535156,1703.4080810547,9.6810941696167,0,0,0);
	TAXIS[2] = CreateDynamicObject(968,2430.9084472656,1703.4080810547,10.456097602844,0,270,0);
	CreateDynamicObject(983,2495.6552734375,1623.2996826172,10.503867149353,0,0,90);
	TAXICP[0] = CreateDynamicCP(2487.349609375,1619.0329589844,10.837743759155, 3, 0, 0, -1, 5.0);
	TAXICP[1] = CreateDynamicCP(2487.3537597656,1627.7592773438,10.828121185303, 3, 0, 0, -1, 5.0);
	TAXICP[2] = CreateDynamicCP(2427.4533691406,1619.5559082031,10.862033843994, 3, 0, 0, -1, 5.0);
	TAXICP[3] = CreateDynamicCP(2427.6936035156,1627.1057128906,10.8203125, 3, 0, 0, -1, 5.0);
	TAXICP[4] = CreateDynamicCP(2427.6423339844,1707.1417236328,10.880615234375, 3, 0, 0, -1, 5.0);
	TAXICP[5] = CreateDynamicCP(2427.66796875,1699.7626953125,10.828119277954, 3, 0, 0, -1, 5.0);

	CreateDynamicObject(18452,-39.30415725708,-440.68121337891,3.4386854171753,0,0,329.25);
	CreateDynamicObject(16360,-46.344997406006,-428.88165283203,0.95440864562988,0,0,0);
	CreateDynamicObject(1686,-41.803535461426,-442.46704101563,0.68868541717529,0,0,60);
	CreateDynamicObject(1686,-39.839019775391,-443.54373168945,0.68868541717529,0,0,59.996337890625);
	CreateDynamicObject(1686,-36.932689666748,-438.86328125,0.68868541717529,0,0,59.996337890625);
	CreateDynamicObject(1686,-38.757179260254,-437.82473754883,0.68868541717529,0,0,59.996337890625);



	CreateDynamicObject(9339,-2156.8999023438,297.25,35.019390106201,0,0,0);
	CreateDynamicObject(9339,-2156.8999023438,297.25,36.423332214355,0,0,0);
	CreateDynamicObject(9339,-2156.8994140625,297.25,37.82727432251,0,0,0);
	CreateDynamicObject(9339,-2156.8999023438,297.25,39.231216430664,0,0,0);
	CreateDynamicObject(9339,-2156.8999023438,297.25,40.635158538818,0,0,0);
	CreateDynamicObject(9339,-2156.8999023438,297.25,42.039100646973,0,0,0);
	CreateDynamicObject(9339,-2156.8999023438,297.25,43.443042755127,0,0,0);
	CreateDynamicObject(9339,-2156.8999023438,297.25,44.846984863281,0,0,0);
	CreateDynamicObject(9339,-2156.8999023438,297.25,46.225116729736,0,0,0);
	CreateDynamicObject(9339,-2156.8999023438,297.25,47.629058837891,0,0,0);
	CreateDynamicObject(9339,-2156.8994140625,297.25,49.033000946045,0,0,0);
	CreateDynamicObject(9339,-2156.703125,297.48001098633,35,0,0,0);
	CreateDynamicObject(9339,-2156.703125,281.14001464844,35,0,0,0);
	CreateDynamicObject(9339,-2169.6201171875,310.40191650391,35,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.17401123047,36.403942108154,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.173828125,37.807884216309,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.173828125,39.211826324463,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.17401123047,40.615768432617,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.17401123047,42.019710540771,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.17401123047,43.423652648926,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.17401123047,44.82759475708,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.17401123047,46.231536865234,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.17401123047,47.635478973389,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,310.17401123047,49.039421081543,0,0,90);
	CreateDynamicObject(9339,-2180.5,310.4013671875,35,0,0,90);
	CreateDynamicObject(9339,-2180.5,310.173828125,36.403942108154,0,0,90);
	CreateDynamicObject(9339,-2180.5,310.173828125,37.807884216309,0,0,90);
	CreateDynamicObject(9339,-2180.5,310.173828125,39.211826324463,0,0,90);
	CreateDynamicObject(9339,-2180,310.173828125,40.615768432617,0,0,90);
	CreateDynamicObject(9339,-2175.8161621094,310.17401123047,42.019710540771,0,0,90);
	CreateDynamicObject(9339,-2175.8161621094,310.17401123047,43.423652648926,0,0,90);
	CreateDynamicObject(9339,-2175.8161621094,310.17401123047,44.82759475708,0,0,90);
	CreateDynamicObject(9339,-2175.8161621094,310.17401123047,46.231536865234,0,0,90);
	CreateDynamicObject(9339,-2175.8161621094,310.17401123047,47.635478973389,0,0,90);
	CreateDynamicObject(9339,-2175.8161621094,310.17401123047,49.039421081543,0,0,90);
	CreateDynamicObject(9339,-2216.5,310.4013671875,35,0,0,90);
	CreateDynamicObject(9339,-2216.5,310.173828125,36.403942108154,0,0,90);
	CreateDynamicObject(9339,-2216.5,310.173828125,37.807884216309,0,0,90);
	CreateDynamicObject(9339,-2216.5,310.173828125,39.211826324463,0,0,90);
	CreateDynamicObject(9339,-2220,310.17401123047,40.615768432617,0,0,90);
	CreateDynamicObject(9339,-2222.8400878906,310.17401123047,42.019710540771,0,0,90);
	CreateDynamicObject(9339,-2222.8400878906,310.17401123047,43.423652648926,0,0,90);
	CreateDynamicObject(9339,-2222.8400878906,310.17401123047,44.82759475708,0,0,90);
	CreateDynamicObject(9339,-2222.8400878906,310.17401123047,46.231536865234,0,0,90);
	CreateDynamicObject(9339,-2222.8400878906,310.17401123047,47.635478973389,0,0,90);
	CreateDynamicObject(9339,-2222.8400878906,310.17401123047,49.039421081543,0,0,90);
	CreateDynamicObject(9339,-2229.0200195313,310.40191650391,35,0,0,90);
	CreateDynamicObject(9339,-2241.9482421875,281.1794128418,35,0,0,180);
	CreateDynamicObject(9339,-2241.9453125,297.44067382813,35,0,0,179.99450683594);
	CreateDynamicObject(9339,-2228.8303222656,310.17401123047,36.403942108154,0,0,90);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,36.403942108154,0,0,179.99450683594);
	CreateDynamicObject(9339,-2228.8303222656,310.17633056641,37.807884216309,0,0,90);
	CreateDynamicObject(9339,-2228.8303222656,310.17401123047,39.211826324463,0,0,90);
	CreateDynamicObject(9339,-2228.8303222656,310.17401123047,40.615768432617,0,0,90);
	CreateDynamicObject(9339,-2228.8303222656,310.17401123047,42.019710540771,0,0,90);
	CreateDynamicObject(9339,-2228.8303222656,310.17401123047,43.423652648926,0,0,90);
	CreateDynamicObject(9339,-2228.8303222656,310.17401123047,44.82759475708,0,0,90);
	CreateDynamicObject(9339,-2228.8303222656,310.17401123047,46.231536865234,0,0,90);
	CreateDynamicObject(9339,-2228.8303222656,310.17401123047,47.635478973389,0,0,90);
	CreateDynamicObject(9339,-2228.8303222656,310.17401123047,49.039421081543,0,0,90);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,37.807884216309,0,0,179.99450683594);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,39.211826324463,0,0,179.99450683594);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,40.615768432617,0,0,179.99450683594);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,42.019710540771,0,0,179.99450683594);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,43.423652648926,0,0,179.99450683594);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,44.82759475708,0,0,179.99450683594);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,46.231536865234,0,0,179.99450683594);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,47.635478973389,0,0,179.99450683594);
	CreateDynamicObject(9339,-2241.7561035156,296.98001098633,49.039421081543,0,0,179.99450683594);
	CreateDynamicObject(9339,-2241.7561035156,297.44067382813,35.019390106201,0,0,179.99450683594);
	CreateDynamicObject(9339,-2199.5444335938,310.17401123047,46.231536865234,0,0,90);
	CreateDynamicObject(9339,-2197.1123046875,310.17401123047,43.423652648926,0,0,90);
	CreateDynamicObject(9339,-2196.75,310.173828125,42.019710540771,0,0,90);
	CreateDynamicObject(9339,-2197.40625,310.17401123047,47.635478973389,0,0,90);
	CreateDynamicObject(9339,-2196.7387695313,310.17401123047,44.82759475708,0,0,90);
	CreateDynamicObject(9339,-2197.0471191406,310.17401123047,49.039421081543,0,0,90);
	CreateDynamicObject(9339,-2216.5,310.173828125,35,0,0,90);
	CreateDynamicObject(9339,-2180.5,310.173828125,35,0,0,90);
	CreateDynamicObject(9339,-2180.5,310.173828125,34.816265106201,0,0,90);
	CreateDynamicObject(9339,-2216.5,310.173828125,34.816265106201,0,0,90);
	CreateDynamicObject(9339,-2199.7646484375,310.173828125,39.5,0,179.99450683594,90);
	CreateDynamicObject(9339,-2195.9108886719,310.173828125,40.615768432617,0,0,90);
	PoliceG[4] = CreateDynamicObject(16775,-2198.5,310.173828125,38.116401672363,0,180,180);
	CreateDynamicObject(16501,-2159,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2159,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2159,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2159,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2163.3999023438,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2167.8000488281,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2172.1999511719,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2176.6000976563,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2181,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2185.3999023438,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2163.3999023438,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2167.8000488281,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2167.8000488281,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2176.6000976563,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2181,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2189.8000488281,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2194.1999511719,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2198.6000976563,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2203,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2207.3999023438,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2211.8000488281,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2216.1999511719,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2220.6000976563,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2225,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2229.3999023438,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2233.6999511719,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2238.1000976563,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2239.6496582031,289,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2185.3999023438,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2189.8000488281,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2194.1999511719,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2198.6000976563,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2203,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2207.3999023438,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2211.8000488281,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2216.1999511719,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2220.6000976563,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2225,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2229.3999023438,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2233.6999511719,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2238.1000976563,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2239.6496582031,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2163.3999023438,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2172.1999511719,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2167.8000488281,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2176.6000976563,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2181,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2185.3999023438,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2189.8000488281,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2194.1999511719,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2198.6000976563,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2203,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2172.1999511719,295,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2207.3999023438,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2233.6999511719,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2229.3999023438,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2225,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2220.6000976563,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2216.1999511719,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2211.8000488281,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2238.1000976563,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2239.6496582031,301,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2163.3999023438,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2167.8000488281,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2172.1999511719,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2176.6000976563,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2181,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2185.3999023438,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2189.8000488281,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2194.1999511719,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2198.6000976563,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2203,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2207.3999023438,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2211.8000488281,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2216.1999511719,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2220.6000976563,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2225,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2229.3999023438,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2233.6999511719,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2238.1000976563,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(16501,-2239.6496582031,306.60000610352,49.650001525879,0,90,0);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,35.019390106201,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,36.423332214355,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,37.82727432251,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,39.231216430664,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,40.635158538818,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,42.039100646973,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,43.443042755127,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,44.846984863281,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,46.250926971436,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,47.65486907959,0,0,90);
	CreateDynamicObject(9339,-2169.9482421875,285.89999389648,49.033000946045,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,49.033000946045,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,49.033000946045,0,0,90);
	CreateDynamicObject(9339,-2228.7041015625,285.89999389648,49.033000946045,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,47.65486907959,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,46.250926971436,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,44.846984863281,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,43.443042755127,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,42.039100646973,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,40.635158538818,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,39.231216430664,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,37.82727432251,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,36.423332214355,0,0,90);
	CreateDynamicObject(9339,-2195.9411621094,285.89999389648,35.019390106201,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,47.65486907959,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,46.250926971436,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,44.846984863281,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,43.443042755127,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,42.039100646973,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,39.231216430664,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,40.635158538818,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,35.019390106201,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,36.423332214355,0,0,90);
	CreateDynamicObject(9339,-2222.0505371094,285.89999389648,37.82727432251,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,35.019390106201,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,36.423332214355,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,37.82727432251,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,39.231216430664,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,40.635158538818,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,42.039100646973,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,43.443042755127,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,44.846984863281,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,46.250926971436,0,0,90);
	CreateDynamicObject(9339,-2228.6174316406,285.89999389648,47.65486907959,0,0,90);

	CreateDynamicObject(970,1189.9199219,-1811.0996094,13.1300001,0.0000000,0.0000000,270.0549316); //convertffs(0)
	CreateDynamicObject(970,1189.9200000,-1815.2600000,13.1300000,0.0000000,0.0000000,-89.9400000); //convertffs(1)
	CreateDynamicObject(970,1189.9200000,-1819.4300000,13.1300000,0.0000000,0.0000000,-89.9400000); //convertffs(2)
	CreateDynamicObject(970,1189.9200000,-1823.5900000,13.1300000,0.0000000,0.0000000,-89.9400000); //convertffs(3)
	CreateDynamicObject(970,1189.9200000,-1827.7300000,13.1300000,0.0000000,0.0000000,-89.9400000); //convertffs(4)
	CreateDynamicObject(970,1189.9200000,-1831.8900000,13.1300000,0.0000000,0.0000000,-89.9400000); //convertffs(5)
	CreateDynamicObject(970,1189.9200000,-1836.0600000,13.1300000,0.0000000,0.0000000,-89.9400000); //convertffs(6)
	CreateDynamicObject(970,1189.9200000,-1840.1800000,13.1300000,0.0000000,0.0000000,-89.9400000); //convertffs(7)
	CreateDynamicObject(970,1192.0100000,-1842.3000000,13.1300000,0.0000000,0.0000000,-180.4800000); //convertffs(8)
	CreateDynamicObject(970,1196.1200000,-1842.3400000,13.1300000,0.0000000,0.0000000,-180.4800000); //convertffs(9)
	CreateDynamicObject(970,1200.2900000,-1842.3700000,13.1300000,0.0000000,0.0000000,-180.4800000); //convertffs(10)
	CreateDynamicObject(970,1201.6200000,-1842.3700000,13.1300000,0.0000000,0.0000000,-180.4800000); //convertffs(11)
	CreateDynamicObject(970,1203.7300000,-1840.3400000,13.1300000,0.0000000,0.0000000,-270.9000000); //convertffs(12)
	CreateDynamicObject(970,1203.7300000,-1839.3700000,13.1300000,0.0000000,0.0000000,-270.9000000); //convertffs(13)
	CreateDynamicObject(970,1201.6500000,-1837.2700000,13.1300000,0.0000000,0.0000000,-359.8800000); //convertffs(14)
	CreateDynamicObject(970,1197.4900000,-1837.2800000,13.1300000,0.0000000,0.0000000,-359.8800000); //convertffs(15)
	CreateDynamicObject(970,1194.9700000,-1835.1800000,13.1300000,0.0000000,0.0000000,-450.7800000); //convertffs(16)
	CreateDynamicObject(970,1197.0300000,-1837.2700000,13.1300000,0.0000000,0.0000000,-359.8800000); //convertffs(17)
	CreateDynamicObject(970,1195.0300000,-1831.0200000,13.1300000,0.0000000,0.0000000,-450.6000000); //convertffs(18)
	CreateDynamicObject(970,1195.0900000,-1827.4100000,13.1300000,0.0000000,0.0000000,-450.6000000); //convertffs(19)
	CreateDynamicObject(970,1197.1900000,-1825.3200000,13.1300000,0.0000000,0.0000000,-540.1800000); //convertffs(20)
	CreateDynamicObject(970,1201.3398438,-1825.3193359,13.1300001,0.0000000,0.0000000,179.8187256); //convertffs(21)
	CreateDynamicObject(970,1205.5000000,-1825.3200000,13.1300000,0.0000000,0.0000000,-540.1800000); //convertffs(22)
	CreateDynamicObject(970,1209.6400000,-1825.3200000,13.1300000,0.0000000,0.0000000,-540.1800000); //convertffs(23)
	CreateDynamicObject(970,1213.7800000,-1825.3200000,13.1300000,0.0000000,0.0000000,-540.1800000); //convertffs(24)
	CreateDynamicObject(970,1217.5000000,-1825.3200000,13.1300000,0.0000000,0.0000000,-540.1800000); //convertffs(25)
	CreateDynamicObject(970,1219.5500000,-1823.2600000,13.1300000,0.0000000,0.0000000,-449.7000000); //convertffs(26)
	CreateDynamicObject(647,1192.3600000,-1826.8000000,13.6500000,0.0000000,0.0000000,-112.1400000); //convertffs(27)
	CreateDynamicObject(3520,1190.5500000,-1827.5200000,12.6300000,0.0000000,0.0000000,0.0000000); //convertffs(28)
	CreateDynamicObject(3532,1190.7800000,-1831.8700000,13.2100000,0.0000000,0.0000000,-175.7400000); //convertffs(29)
	CreateDynamicObject(3520,1190.5200000,-1836.3600000,12.6300000,0.0000000,0.0000000,0.0000000); //convertffs(30)
	CreateDynamicObject(3532,1190.8900000,-1839.8600000,13.2100000,0.0000000,0.0000000,-175.7400000); //convertffs(31)
	CreateDynamicObject(3532,1194.0600000,-1841.4700000,13.2100000,0.0000000,0.0000000,-85.9800000); //convertffs(32)
	CreateDynamicObject(3520,1198.1298828,-1841.7695312,12.6300001,0.0000000,0.0000000,274.2572021); //convertffs(33)
	CreateDynamicObject(3520,1201.0000000,-1841.8000000,12.6300000,0.0000000,0.0000000,93.1800000); //convertffs(34)
	CreateDynamicObject(3532,1202.8200000,-1839.7300000,13.2100000,0.0000000,0.0000000,0.2400000); //convertffs(35)
	CreateDynamicObject(3520,1200.3000000,-1837.7300000,12.6300000,0.0000000,0.0000000,93.1800000); //convertffs(36)
	CreateDynamicObject(3520,1197.1700000,-1838.0900000,12.6300000,0.0000000,0.0000000,-85.7400000); //convertffs(37)
	CreateDynamicObject(3532,1194.2000000,-1835.3400000,13.2100000,0.0000000,0.0000000,-355.4400000); //convertffs(38)
	CreateDynamicObject(3520,1194.4300000,-1830.8100000,12.6300000,0.0000000,0.0000000,-175.5000000); //convertffs(39)
	CreateDynamicObject(3520,1194.3400000,-1828.3100000,12.6300000,0.0000000,0.0000000,-175.5000000); //convertffs(40)
	CreateDynamicObject(869,1192.5400000,-1829.8700000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(41)
	CreateDynamicObject(869,1192.9800000,-1832.5400000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(42)
	CreateDynamicObject(869,1192.5700000,-1834.7400000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(43)
	CreateDynamicObject(869,1192.7900000,-1836.8400000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(44)
	CreateDynamicObject(869,1226.9700000,-1839.8300000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(45)
	CreateDynamicObject(869,1196.3600000,-1839.5900000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(46)
	CreateDynamicObject(869,1199.8400000,-1839.9400000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(47)
	CreateDynamicObject(970,1225.6800000,-1842.3200000,13.1200000,0.0000000,0.0000000,-179.5800000); //convertffs(48)
	CreateDynamicObject(970,1223.7200000,-1840.2300000,13.1200000,0.0000000,0.0000000,-270.9600000); //convertffs(49)
	CreateDynamicObject(970,1223.7200000,-1839.5100000,13.1200000,0.0000000,0.0000000,-270.9600000); //convertffs(50)
	CreateDynamicObject(970,1225.8700000,-1837.4200000,13.1200000,0.0000000,0.0000000,-180.0000000); //convertffs(51)
	CreateDynamicObject(970,1229.7900391,-1842.2998047,13.1199999,0.0000000,0.0000000,179.8187256); //convertffs(52)
	CreateDynamicObject(970,1233.9600000,-1842.3000000,13.1200000,0.0000000,0.0000000,-179.5800000); //convertffs(53)
	CreateDynamicObject(970,1238.1300000,-1842.3000000,13.1200000,0.0000000,0.0000000,-180.0600000); //convertffs(54)
	CreateDynamicObject(970,1242.2400000,-1842.2900000,13.1200000,0.0000000,0.0000000,-179.6400000); //convertffs(55)
	CreateDynamicObject(970,1246.4100000,-1842.3000000,13.1200000,0.0000000,0.0000000,-180.4800000); //convertffs(56)
	CreateDynamicObject(970,1250.5700000,-1842.3400000,13.1200000,0.0000000,0.0000000,-180.4800000); //convertffs(57)
	CreateDynamicObject(970,1254.6700000,-1842.3600000,13.1200000,0.0000000,0.0000000,-180.1200000); //convertffs(58)
	CreateDynamicObject(970,1257.9100000,-1842.3600000,13.1200000,0.0000000,0.0000000,-180.3000000); //convertffs(59)
	CreateDynamicObject(970,1260.0300000,-1840.3300000,13.1200000,0.0000000,0.0000000,-90.6000000); //convertffs(60)
	CreateDynamicObject(970,1279.9900000,-1840.2200000,13.1200000,0.0000000,0.0000000,-90.0600000); //convertffs(61)
	CreateDynamicObject(970,1230.0100000,-1837.4200000,13.1200000,0.0000000,0.0000000,-180.2400000); //convertffs(62)
	CreateDynamicObject(970,1234.1500000,-1837.4400000,13.1200000,0.0000000,0.0000000,-180.4800000); //convertffs(63)
	CreateDynamicObject(970,1238.3193359,-1837.4599609,13.1199999,0.0000000,0.0000000,179.5166016); //convertffs(64)
	CreateDynamicObject(970,1242.4900000,-1837.4800000,13.1200000,0.0000000,0.0000000,-180.1200000); //convertffs(65)
	CreateDynamicObject(970,1246.6300000,-1837.4800000,13.1200000,0.0000000,0.0000000,-180.1200000); //convertffs(66)
	CreateDynamicObject(970,1250.7600000,-1837.4900000,13.1200000,0.0000000,0.0000000,-180.1200000); //convertffs(67)
	CreateDynamicObject(970,1254.9200000,-1837.5000000,13.1200000,0.0000000,0.0000000,-180.1200000); //convertffs(68)
	CreateDynamicObject(970,1257.9600000,-1837.4900000,13.1200000,0.0000000,0.0000000,-180.1200000); //convertffs(69)
	CreateDynamicObject(647,1225.6300000,-1839.9100000,12.6300000,0.0000000,0.0000000,0.0000000); //convertffs(70)
	CreateDynamicObject(647,1258.3200000,-1840.1200000,12.5600000,0.0000000,0.0000000,0.0000000); //convertffs(71)
	CreateDynamicObject(717,1225.5200000,-1840.7000000,12.4100000,0.0000000,0.0000000,0.0000000); //convertffs(72)
	CreateDynamicObject(717,1190.4600000,-1841.7500000,12.4100000,0.0000000,0.0000000,0.0000000); //convertffs(73)
	CreateDynamicObject(717,1243.1200000,-1840.4100000,12.4100000,0.0000000,0.0000000,0.0000000); //convertffs(74)
	CreateDynamicObject(717,1258.4892578,-1840.4394531,12.4099998,0.0000000,0.0000000,0.0000000); //convertffs(75)
	CreateDynamicObject(3520,1230.2800000,-1838.2600000,12.7100000,0.0000000,0.0000000,-86.2800000); //convertffs(76)
	CreateDynamicObject(3520,1234.6000000,-1838.2000000,12.7100000,0.0000000,0.0000000,-86.2800000); //convertffs(77)
	CreateDynamicObject(3532,1238.8500000,-1837.8600000,13.1500000,0.0000000,0.0000000,-92.8200000); //convertffs(78)
	CreateDynamicObject(3520,1243.7294922,-1838.2792969,12.7100000,0.0000000,0.0000000,273.7188721); //convertffs(79)
	CreateDynamicObject(3532,1248.1900000,-1837.8700000,13.1500000,0.0000000,0.0000000,-92.8200000); //convertffs(80)
	CreateDynamicObject(3520,1253.0700000,-1838.3100000,12.7100000,0.0000000,0.0000000,-86.2800000); //convertffs(81)
	CreateDynamicObject(3532,1257.6000000,-1837.9700000,13.1500000,0.0000000,0.0000000,-92.8200000); //convertffs(82)
	CreateDynamicObject(3520,1226.8400000,-1838.2000000,12.7100000,0.0000000,0.0000000,-86.2800000); //convertffs(83)
	CreateDynamicObject(3520,1225.7400000,-1841.6900000,12.7100000,0.0000000,0.0000000,90.6000000); //convertffs(84)
	CreateDynamicObject(3520,1229.7900000,-1841.7100000,12.7100000,0.0000000,0.0000000,90.9600000); //convertffs(85)
	CreateDynamicObject(3532,1234.0400000,-1841.4000000,13.1500000,0.0000000,0.0000000,-89.1600000); //convertffs(86)
	CreateDynamicObject(3532,1237.0200000,-1841.3600000,13.1500000,0.0000000,0.0000000,-91.2600000); //convertffs(87)
	CreateDynamicObject(3520,1241.0100000,-1841.4800000,12.7100000,0.0000000,0.0000000,93.1800000); //convertffs(88)
	CreateDynamicObject(3520,1245.7700000,-1841.4300000,12.7100000,0.0000000,0.0000000,93.1800000); //convertffs(89)
	CreateDynamicObject(3532,1249.9492188,-1841.3798828,13.1499996,0.0000000,0.0000000,267.7148438); //convertffs(90)
	CreateDynamicObject(3520,1254.2300000,-1841.6200000,12.7100000,0.0000000,0.0000000,92.0400000); //convertffs(91)
	CreateDynamicObject(3520,1253.0700000,-1838.3100000,12.7100000,0.0000000,0.0000000,-86.2800000); //convertffs(92)
	CreateDynamicObject(3532,1257.7000000,-1841.5900000,13.1500000,0.0000000,0.0000000,90.8400000); //convertffs(93)
	CreateDynamicObject(869,1196.3600000,-1839.5900000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(94)
	CreateDynamicObject(869,1229.6600000,-1839.6100000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(95)
	CreateDynamicObject(869,1233.7800000,-1839.6400000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(96)
	CreateDynamicObject(869,1237.2900000,-1839.5800000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(97)
	CreateDynamicObject(869,1240.9200000,-1839.5300000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(98)
	CreateDynamicObject(869,1244.6900000,-1839.9700000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(99)
	CreateDynamicObject(869,1248.2400000,-1839.5900000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(100)
	CreateDynamicObject(869,1248.2400000,-1839.5900000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(101)
	CreateDynamicObject(869,1251.4394531,-1839.4794922,13.1000004,0.0000000,0.0000000,0.0000000); //convertffs(102)
	CreateDynamicObject(869,1255.0600000,-1839.6200000,13.1000000,0.0000000,0.0000000,0.0000000); //convertffs(103)
	CreateDynamicObject(970,1260.0300000,-1840.3300000,13.1200000,0.0000000,0.0000000,-90.6000000); //convertffs(104)
	CreateDynamicObject(970,1282.0800000,-1842.3000000,13.1200000,0.0000000,0.0000000,0.0000000); //convertffs(105)
	CreateDynamicObject(970,1285.4000000,-1842.3000000,13.1200000,0.0000000,0.0000000,0.2400000); //convertffs(106)
	CreateDynamicObject(970,1287.5000000,-1840.2100000,13.1200000,0.0000000,0.0000000,89.2800000); //convertffs(107)
	CreateDynamicObject(970,1287.5300000,-1836.0700000,13.1200000,0.0000000,0.0000000,90.5400000); //convertffs(108)
	CreateDynamicObject(970,1287.5100000,-1831.9500000,13.1200000,0.0000000,0.0000000,90.6000000); //convertffs(109)
	CreateDynamicObject(970,1287.4600000,-1827.8400000,13.1200000,0.0000000,0.0000000,89.4000000); //convertffs(110)
	CreateDynamicObject(970,1287.5200000,-1823.6500000,13.1200000,0.0000000,0.0000000,90.0600000); //convertffs(111)
	CreateDynamicObject(970,1287.5100000,-1819.4700000,13.1200000,0.0000000,0.0000000,90.0600000); //convertffs(112)
	CreateDynamicObject(970,1287.5100000,-1815.3400000,13.1200000,0.0000000,0.0000000,90.0600000); //convertffs(113)
	CreateDynamicObject(970,1287.5100000,-1811.1900000,13.1200000,0.0000000,0.0000000,90.0600000); //convertffs(114)
	CreateDynamicObject(970,1287.5100000,-1807.0300000,13.1200000,0.0000000,0.0000000,90.0600000); //convertffs(115)
	CreateDynamicObject(970,1287.5200000,-1802.8600000,13.1200000,0.0000000,0.0000000,90.0600000); //convertffs(116)
	CreateDynamicObject(970,1287.5100000,-1798.7000000,13.1200000,0.0000000,0.0000000,90.0600000); //convertffs(117)
	CreateDynamicObject(970,1287.5100000,-1795.4000000,13.1200000,0.0000000,0.0000000,90.0600000); //convertffs(118)
	CreateDynamicObject(970,1285.4200000,-1793.3100000,13.1200000,0.0000000,0.0000000,180.0000000); //convertffs(119)
	CreateDynamicObject(970,1285.1100000,-1793.3200000,13.1200000,0.0000000,0.0000000,180.0000000); //convertffs(120)
	CreateDynamicObject(970,1283.0100000,-1795.3900000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(121)
	CreateDynamicObject(970,1283.0100000,-1799.4800000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(122)
	CreateDynamicObject(970,1282.9599609,-1803.6591797,13.1000004,0.0000000,0.0000000,89.3353271); //convertffs(123)
	CreateDynamicObject(970,1282.9300000,-1807.8100000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(124)
	CreateDynamicObject(970,1282.8900000,-1811.9600000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(125)
	CreateDynamicObject(970,1282.8500000,-1816.1100000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(126)
	CreateDynamicObject(970,1282.8600000,-1820.2400000,13.1000000,0.0000000,0.0000000,90.9000000); //convertffs(127)
	CreateDynamicObject(970,1282.9200000,-1824.4200000,13.1000000,0.0000000,0.0000000,91.1400000); //convertffs(128)
	CreateDynamicObject(970,1282.9200000,-1828.5400000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(129)
	CreateDynamicObject(970,1282.8800000,-1832.7000000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(130)
	CreateDynamicObject(970,1282.8400000,-1835.2400000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(131)
	CreateDynamicObject(970,1282.0800000,-1837.2800000,13.1200000,0.0000000,0.0000000,0.0000000); //convertffs(132)
	CreateDynamicObject(970,1279.9492188,-1839.3398438,13.1199999,0.0000000,0.0000000,269.9395752); //convertffs(133)
	CreateDynamicObject(3520,1281.1500000,-1839.4800000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(134)
	CreateDynamicObject(3532,1283.2100000,-1841.5300000,12.9900000,0.0000000,0.0000000,90.3000000); //convertffs(135)
	CreateDynamicObject(3520,1287.1000000,-1839.6700000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(136)
	CreateDynamicObject(3532,1282.7100000,-1838.1600000,13.1400000,0.0000000,0.0000000,90.3000000); //convertffs(137)
	CreateDynamicObject(3520,1287.2500000,-1835.4794922,12.6499996,0.0000000,0.0000000,2.5762939); //convertffs(138)
	CreateDynamicObject(970,1284.1500000,-1839.3300000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(139)
	CreateDynamicObject(970,1284.1200000,-1840.3100000,13.1000000,0.0000000,0.0000000,89.3400000); //convertffs(140)
	CreateDynamicObject(3520,1283.6500000,-1839.4300000,12.6500000,0.0000000,0.0000000,3.0600000); //convertffs(141)
	CreateDynamicObject(3532,1283.2100000,-1841.5300000,12.9900000,0.0000000,0.0000000,90.3000000); //convertffs(142)
	CreateDynamicObject(3520,1287.1000000,-1839.6700000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(143)
	CreateDynamicObject(3520,1285.0300000,-1839.0900000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(144)
	CreateDynamicObject(3520,1285.0300000,-1839.0900000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(145)
	CreateDynamicObject(3532,1283.7200000,-1835.2100000,13.1400000,0.0000000,0.0000000,182.1600000); //convertffs(146)
	CreateDynamicObject(3520,1287.2200000,-1831.4000000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(147)
	CreateDynamicObject(3520,1283.6200000,-1830.2600000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(148)
	CreateDynamicObject(3532,1286.5700000,-1827.7400000,13.1400000,0.0000000,0.0000000,182.1600000); //convertffs(149)
	CreateDynamicObject(3532,1283.8000000,-1825.9600000,13.1400000,0.0000000,0.0000000,182.1600000); //convertffs(150)
	CreateDynamicObject(3520,1287.0000000,-1823.1600000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(151)
	CreateDynamicObject(3520,1283.6200000,-1821.0600000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(152)
	CreateDynamicObject(3520,1287.0693359,-1819.1992188,12.6499996,0.0000000,0.0000000,2.5762939); //convertffs(153)
	CreateDynamicObject(3520,1287.0700000,-1819.2000000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(154)
	CreateDynamicObject(3520,1283.4400000,-1816.6200000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(155)
	CreateDynamicObject(3532,1286.5700000,-1815.2500000,13.1400000,0.0000000,0.0000000,182.1600000); //convertffs(156)
	CreateDynamicObject(3532,1283.7300000,-1817.0600000,13.1400000,0.0000000,0.0000000,182.1600000); //convertffs(157)
	CreateDynamicObject(3532,1286.5600000,-1821.9800000,13.1400000,0.0000000,0.0000000,182.1600000); //convertffs(158)
	CreateDynamicObject(3520,1283.5000000,-1812.1600000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(159)
	CreateDynamicObject(3520,1287.0996094,-1810.2597656,12.6499996,0.0000000,0.0000000,2.5762939); //convertffs(160)
	CreateDynamicObject(3520,1283.6200000,-1807.5500000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(161)
	CreateDynamicObject(3520,1287.3400000,-1805.9800000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(162)
	CreateDynamicObject(3520,1283.6700000,-1803.1500000,12.6500000,0.0000000,0.0000000,2.5800000); //convertffs(163)
	CreateDynamicObject(3532,1286.8400000,-1802.1700000,13.1400000,0.0000000,0.0000000,3.0000000); //convertffs(164)
	CreateDynamicObject(3532,1283.9600000,-1799.3000000,13.1400000,0.0000000,0.0000000,3.0000000); //convertffs(165)
	CreateDynamicObject(3532,1286.6600000,-1798.3200000,13.1400000,0.0000000,0.0000000,3.0000000); //convertffs(166)
	CreateDynamicObject(3532,1283.8400000,-1795.4500000,13.1400000,0.0000000,0.0000000,3.0000000); //convertffs(167)
	CreateDynamicObject(3532,1286.5500000,-1795.8200000,13.1400000,0.0000000,0.0000000,3.0000000); //convertffs(168)
	CreateDynamicObject(3532,1285.1900000,-1794.4400000,13.1400000,0.0000000,0.0000000,83.2200000); //convertffs(169)
	CreateDynamicObject(869,1282.4800000,-1839.8600000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(170)
	CreateDynamicObject(869,1285.3896484,-1840.3291016,13.1099997,0.0000000,0.0000000,0.0000000); //convertffs(171)
	CreateDynamicObject(3520,1285.5700000,-1841.8500000,12.6500000,0.0000000,0.0000000,-77.4600000); //convertffs(172)
	CreateDynamicObject(869,1285.3400000,-1837.5200000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(173)
	CreateDynamicObject(869,1285.1000000,-1834.6000000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(174)
	CreateDynamicObject(869,1284.8500000,-1831.4400000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(175)
	CreateDynamicObject(869,1284.9200000,-1828.7300000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(176)
	CreateDynamicObject(869,1285.4200000,-1826.4000000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(177)
	CreateDynamicObject(869,1285.0200000,-1820.6600000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(178)
	CreateDynamicObject(869,1285.1900000,-1823.3700000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(179)
	CreateDynamicObject(869,1285.1600000,-1817.7400000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(180)
	CreateDynamicObject(869,1285.2100000,-1815.0800000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(181)
	CreateDynamicObject(869,1285.2500000,-1812.1800000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(182)
	CreateDynamicObject(869,1285.2100000,-1809.2800000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(183)
	CreateDynamicObject(713,1305.4800000,-1798.5800000,12.4400000,0.0000000,0.0000000,0.0000000); //convertffs(184)
	CreateDynamicObject(869,1285.1800000,-1806.5500000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(185)
	CreateDynamicObject(869,1285.1700000,-1803.5300000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(186)
	CreateDynamicObject(869,1285.4599609,-1800.7392578,13.1099997,0.0000000,0.0000000,0.0000000); //convertffs(187)
	CreateDynamicObject(869,1285.2100000,-1798.1600000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(188)
	CreateDynamicObject(869,1285.3000000,-1796.2200000,13.1100000,0.0000000,0.0000000,0.0000000); //convertffs(189)
	CreateDynamicObject(970,1281.0300000,-1793.2400000,13.1200000,0.0000000,0.0000000,179.1000000); //convertffs(190)
	CreateDynamicObject(970,1276.8800000,-1793.2100000,13.1200000,0.0000000,0.0000000,180.0000000); //convertffs(191)
	CreateDynamicObject(970,1270.4599609,-1793.1699219,13.1199999,0.0000000,0.0000000,179.9945068); //convertffs(192)
	CreateDynamicObject(970,1266.2900000,-1793.1700000,13.1200000,0.0000000,0.0000000,180.0000000); //convertffs(193)
	CreateDynamicObject(970,1262.1300000,-1793.1700000,13.1200000,0.0000000,0.0000000,180.0000000); //convertffs(194)
	CreateDynamicObject(970,1258.9100000,-1794.9300000,13.1200000,0.0000000,0.0000000,237.1800000); //convertffs(195)
	CreateDynamicObject(970,1256.6800000,-1798.4100000,13.1200000,0.0000000,0.0000000,237.1800000); //convertffs(196)
	CreateDynamicObject(970,1253.2392578,-1802.2900391,13.1199999,0.0000000,0.0000000,216.4746094); //convertffs(197)
	CreateDynamicObject(970,1256.0700000,-1799.3300000,13.1200000,0.0000000,0.0000000,236.6400000); //convertffs(198)
	CreateDynamicObject(970,1249.8800000,-1804.7500000,13.1200000,0.0000000,0.0000000,215.7600000); //convertffs(199)
	CreateDynamicObject(970,1247.8100000,-1806.2500000,13.1200000,0.0000000,0.0000000,215.7600000); //convertffs(200)
	CreateDynamicObject(970,1244.2100000,-1808.2600000,13.1200000,0.0000000,0.0000000,202.5000000); //convertffs(201)
	CreateDynamicObject(970,1240.4000000,-1809.8200000,13.1200000,0.0000000,0.0000000,202.5000000); //convertffs(202)
	CreateDynamicObject(970,1236.4800000,-1811.0200000,13.1200000,0.0000000,0.0000000,191.9400000); //convertffs(203)
	CreateDynamicObject(970,1232.4091797,-1811.5400391,13.1199999,0.0000000,0.0000000,182.0379639); //convertffs(204)
	CreateDynamicObject(1215,1272.6621094,-1793.1699219,13.1400003,0.0000000,0.0000000,0.0000000); //convertffs(205)
	CreateDynamicObject(970,-1984.5300293,140.0000000,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(206)
	CreateDynamicObject(970,-1984.5300293,135.6499939,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(207)
	CreateDynamicObject(970,-1986.5999756,133.5500030,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(208)
	CreateDynamicObject(970,-1986.5999756,129.4100037,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(209)
	CreateDynamicObject(970,-1986.5999756,118.3679962,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(210)
	CreateDynamicObject(970,-1986.5999756,114.2509994,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(211)
	CreateDynamicObject(970,-1986.5999756,110.1289978,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(212)
	CreateDynamicObject(970,-1984.5300293,108.0469971,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(213)
	CreateDynamicObject(970,-1986.5999756,142.0850067,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(214)
	CreateDynamicObject(970,-1986.5999756,146.2200012,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(215)
	CreateDynamicObject(970,-1986.5999756,151.7200012,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(216)
	CreateDynamicObject(970,-1986.5999756,155.8600006,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(217)
	CreateDynamicObject(970,-1986.5996094,161.2597656,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(218)
	CreateDynamicObject(970,-1986.5999756,165.4010010,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(219)
	CreateDynamicObject(970,-1986.5970459,167.1600037,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(220)
	CreateDynamicObject(970,-1984.5159912,169.2400055,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(221)
	CreateDynamicObject(1557,-1980.1500244,136.3699951,26.6879997,0.0000000,0.0000000,170.0000000); //convertffs(222)
	CreateDynamicObject(1557,-1980.1500244,139.3999939,26.6879997,0.0000000,0.0000000,190.0000000); //convertffs(223)
	CreateDynamicObject(7922,-1980.1500244,135.1999970,27.7999992,0.0000000,0.0000000,270.0000000); //convertffs(224)
	CreateDynamicObject(7922,-1980.3000488,140.3999939,27.7999992,0.0000000,0.0000000,180.0000000); //convertffs(225)
	CreateDynamicObject(970,-1997.2500000,96.3050003,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(226)
	CreateDynamicObject(970,-1997.2500000,92.1894531,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(227)
	CreateDynamicObject(970,-1997.2500000,86.6900024,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(228)
	CreateDynamicObject(970,-1997.2500000,82.5559998,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(229)
	CreateDynamicObject(970,-1997.2500000,80.4599991,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(230)
	CreateDynamicObject(970,-1995.1800537,98.3700027,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(231)
	CreateDynamicObject(970,-1991.0550537,98.3700027,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(232)
	CreateDynamicObject(970,-1995.1800537,78.4499969,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(233)
	CreateDynamicObject(970,-1991.0460205,78.4499969,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(234)
	CreateDynamicObject(970,-1986.8840332,78.4499969,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(235)
	CreateDynamicObject(970,-1982.7409668,78.4499969,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(236)
	CreateDynamicObject(970,-1978.6130371,78.4499969,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(237)
	CreateDynamicObject(970,-1974.4799805,78.4499969,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(238)
	CreateDynamicObject(970,-1970.3409424,78.4499969,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(239)
	CreateDynamicObject(970,-1966.2239990,78.4499969,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(240)
	CreateDynamicObject(970,-1962.6500244,78.4499969,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(241)
	CreateDynamicObject(970,-1960.5500488,80.5260010,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(242)
	CreateDynamicObject(970,-1960.5500488,84.6819992,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(243)
	CreateDynamicObject(970,-1960.5500488,88.8369980,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(244)
	CreateDynamicObject(970,-1960.5500488,92.9759979,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(245)
	CreateDynamicObject(970,-1960.5500488,97.1090012,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(246)
	CreateDynamicObject(970,-1960.5500488,101.2470017,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(247)
	CreateDynamicObject(970,-1960.5500488,105.3990021,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(248)
	CreateDynamicObject(970,-1960.5500488,109.5199966,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(249)
	CreateDynamicObject(970,-1980.2500000,96.3046875,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(250)
	CreateDynamicObject(970,-1980.2500000,92.1900024,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(251)
	CreateDynamicObject(970,-1980.2500000,86.6900024,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(252)
	CreateDynamicObject(970,-1980.2500000,82.5559998,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(253)
	CreateDynamicObject(970,-1980.2500000,80.4599991,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(254)
	CreateDynamicObject(970,-1982.3380127,98.3700027,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(255)
	CreateDynamicObject(966,-1980.2500000,98.6999969,26.6800003,0.0000000,0.0000000,270.0000000); //convertffs(256)
	CreateDynamicObject(970,-1980.2299805,107.9069977,27.2390003,0.0000000,0.0000000,270.0000000); //convertffs(257)
	CreateDynamicObject(970,-1988.9659424,98.3700027,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(258)
	CreateDynamicObject(970,-1997.1500244,200.5249939,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(259)
	CreateDynamicObject(970,-1997.1500244,204.6280060,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(260)
	CreateDynamicObject(970,-1997.1500244,208.7489929,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(261)
	CreateDynamicObject(970,-1997.1500244,212.8849945,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(262)
	CreateDynamicObject(970,-1997.1494141,216.1191406,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(263)
	CreateDynamicObject(970,-1982.6500244,198.4499970,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(264)
	CreateDynamicObject(970,-1986.7829590,198.4499970,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(265)
	CreateDynamicObject(970,-1980.5959473,200.5249939,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(266)
	CreateDynamicObject(970,-1980.5959473,204.6479950,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(267)
	CreateDynamicObject(970,-1980.5959473,208.7910004,27.2320003,0.0000000,0.0000000,90.0000000); //convertffs(268)
	CreateDynamicObject(970,-1980.5959473,212.9400024,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(269)
	CreateDynamicObject(970,-1980.5957031,217.0244141,27.2320004,0.0000000,0.0000000,90.0000000); //convertffs(270)
	CreateDynamicObject(966,-1989.6280518,198.6459961,26.6879997,0.0000000,0.0000000,0.0000000); //convertffs(271)
	CreateDynamicObject(18981,-1973.0500488,181.4499970,26.1805000,0.0000000,90.0000000,0.0000000); //convertffs(272)
	CreateDynamicObject(18981,-1973.0498047,193.7695312,26.1800003,0.0000000,90.0000000,0.0000000); //convertffs(273)
	CreateDynamicObject(18981,-1973.0500488,193.7700043,25.1800003,0.0000000,90.0000000,0.0000000); //convertffs(274)
	CreateDynamicObject(970,-1978.5190430,206.2500000,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(275)
	CreateDynamicObject(970,-1974.3850098,206.2500000,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(276)
	CreateDynamicObject(970,-1970.2600098,206.2500000,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(277)
	CreateDynamicObject(970,-1966.1510010,206.2500000,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(278)
	CreateDynamicObject(970,-1962.7399902,206.2500000,27.2310009,0.0000000,0.0000000,0.0000000); //convertffs(279)
	CreateDynamicObject(970,-1960.6500244,204.1799927,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(280)
	CreateDynamicObject(970,-1960.6500244,200.0520020,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(281)
	CreateDynamicObject(970,-1960.6500244,195.9160004,27.2310009,0.0000000,0.0000000,90.0000000); //convertffs(282)
	CreateDynamicObject(970,-1960.6500244,191.7879944,27.2320003,0.0000000,0.0000000,90.0000000); //convertffs(283)
	CreateDynamicObject(970,-1960.6494141,187.6650391,27.2320004,0.0000000,0.0000000,90.0000000); //convertffs(284)
	CreateDynamicObject(970,-1960.6500244,183.5240021,27.2320003,0.0000000,0.0000000,90.0000000); //convertffs(285)
	CreateDynamicObject(970,-1960.6500244,179.4049988,27.2320003,0.0000000,0.0000000,90.0000000); //convertffs(286)
	CreateDynamicObject(970,-1960.6500244,175.2749939,27.2320003,0.0000000,0.0000000,90.0000000); //convertffs(287)
	CreateDynamicObject(970,-1960.6500244,171.1479950,27.2390003,0.0000000,0.0000000,90.0000000); //convertffs(288)
	CreateDynamicObject(5822,-1977.9670410,168.5000000,30.6299992,0.0000000,0.0000000,4.5000000); //convertffs(289)
	CreateDynamicObject(970,-1977.0179443,169.2660065,36.5139999,0.0000000,0.0000000,0.0000000); //convertffs(290)
	CreateDynamicObject(970,-1980.4499512,169.2400055,27.2390003,0.0000000,0.0000000,0.0000000); //convertffs(291)
	CreateDynamicObject(970,-1970.5209961,169.2660065,36.5139999,0.0000000,0.0000000,0.0000000); //convertffs(292)
	CreateDynamicObject(970,-1966.3959961,169.2660065,36.5139999,0.0000000,0.0000000,0.0000000); //convertffs(293)
	CreateDynamicObject(970,-1962.6500244,169.2660065,36.5139999,0.0000000,0.0000000,0.0000000); //convertffs(294)
	CreateDynamicObject(970,-1960.5500488,167.1849976,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(295)
	CreateDynamicObject(970,-1960.5500488,163.0500030,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(296)
	CreateDynamicObject(970,-1960.5500488,158.9360046,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(297)
	CreateDynamicObject(970,-1960.5500488,154.8119965,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(298)
	CreateDynamicObject(970,-1960.5500488,150.6849976,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(299)
	CreateDynamicObject(970,-1960.5498047,146.5615234,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(300)
	CreateDynamicObject(970,-1960.5500488,142.4479980,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(301)
	CreateDynamicObject(970,-1960.5500488,138.3090057,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(302)
	CreateDynamicObject(970,-1960.5500488,134.1920013,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(303)
	CreateDynamicObject(970,-1960.5500488,130.0509949,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(304)
	CreateDynamicObject(970,-1960.5500488,125.9069977,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(305)
	CreateDynamicObject(970,-1960.5500488,121.7639999,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(306)
	CreateDynamicObject(970,-1960.5500488,117.6320038,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(307)
	CreateDynamicObject(970,-1960.5500488,113.5110016,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(308)
	CreateDynamicObject(970,-1960.5500488,110.1029968,36.5139999,0.0000000,0.0000000,90.0000000); //convertffs(309)
	CreateDynamicObject(970,-1962.6199951,108.0250015,36.5139999,0.0000000,0.0000000,0.0000000); //convertffs(310)
	CreateDynamicObject(970,-1966.7412109,108.0244141,36.5139999,0.0000000,0.0000000,0.0000000); //convertffs(311)
	CreateDynamicObject(970,-1970.8769531,108.0250015,36.5139999,0.0000000,0.0000000,0.0000000); //convertffs(312)
	CreateDynamicObject(970,-1975.0159912,108.0250015,36.5139999,0.0000000,0.0000000,0.0000000); //convertffs(313)
	CreateDynamicObject(970,-1977.1099853,108.0250015,36.5139999,0.0000000,0.0000000,0.0000000); //convertffs(314)
	CreateDynamicObject(19425,-1980.2500000,103.7730026,26.6879997,0.0000000,0.0000000,90.0000000); //convertffs(315)
	CreateDynamicObject(19425,-1980.2500000,100.6025391,26.6879997,0.0000000,0.0000000,90.0000000); //convertffs(316)
	CreateDynamicObject(19425,-1991.5059815,198.6499939,26.6879997,0.0000000,0.0000000,0.0000000); //convertffs(317)
	CreateDynamicObject(19425,-1994.6949463,198.6499939,26.6800003,0.0000000,0.0000000,0.0000000); //convertffs(318)
	CreateDynamicObject(2423,-1976.7509766,114.9950027,35.9620018,0.0000000,0.0000000,0.0000000); //convertffs(319)
	CreateDynamicObject(2424,-1978.5999756,115.0000000,35.9620018,0.0000000,0.0000000,0.0000000); //convertffs(320)
	CreateDynamicObject(2424,-1977.6700440,115.0000000,35.9620018,0.0000000,0.0000000,0.0000000); //convertffs(321)
	CreateDynamicObject(2424,-1976.6800537,116.0350037,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(322)
	CreateDynamicObject(2424,-1976.6800537,116.9629974,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(323)
	CreateDynamicObject(2424,-1976.6800537,117.8899994,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(324)
	CreateDynamicObject(2424,-1976.6800537,118.8190002,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(325)
	CreateDynamicObject(2424,-1976.6800537,119.7480011,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(326)
	CreateDynamicObject(2424,-1976.6800537,120.6780014,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(327)
	CreateDynamicObject(2424,-1976.6800537,121.6060028,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(328)
	CreateDynamicObject(2424,-1976.6800537,122.5370026,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(329)
	CreateDynamicObject(2424,-1976.6800537,123.4680023,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(330)
	CreateDynamicObject(2423,-1976.6779785,124.3990021,35.9620018,0.0000000,0.0000000,90.0000000); //convertffs(331)
	CreateDynamicObject(2424,-1977.7159424,124.4759979,35.9620018,0.0000000,0.0000000,180.0000000); //convertffs(332)
	CreateDynamicObject(2424,-1978.6445312,124.4726562,35.9620018,0.0000000,0.0000000,179.9945068); //convertffs(333)
	CreateDynamicObject(2500,-1976.4189453,117.2860031,37.0180016,0.0000000,0.0000000,270.0000000); //convertffs(334)
	CreateDynamicObject(2500,-1976.4189453,117.8219986,37.0180016,0.0000000,0.0000000,270.0000000); //convertffs(335)
	CreateDynamicObject(1281,-1971.0000000,130.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(336)
	CreateDynamicObject(1281,-1964.0000000,130.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(337)
	CreateDynamicObject(1281,-1971.0000000,138.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(338)
	CreateDynamicObject(1281,-1964.0000000,138.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(339)
	CreateDynamicObject(1281,-1971.0000000,146.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(340)
	CreateDynamicObject(1281,-1964.0000000,146.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(341)
	CreateDynamicObject(1281,-1971.0000000,154.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(342)
	CreateDynamicObject(1281,-1964.0000000,154.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(343)
	CreateDynamicObject(1281,-1971.0000000,162.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(344)
	CreateDynamicObject(1281,-1964.0000000,162.5000000,36.7630005,0.0000000,0.0000000,0.0000000); //convertffs(345)
	CreateDynamicObject(2592,-1978.8750000,117.4000015,36.8680000,0.0000000,0.0000000,90.0000000); //convertffs(346)
	CreateDynamicObject(2592,-1978.8750000,122.0000000,36.8680000,0.0000000,0.0000000,90.0000000); //convertffs(347)
	CreateDynamicObject(1541,-1978.6419678,122.0159988,37.6769981,0.0000000,0.0000000,270.0000000); //convertffs(348)
	CreateDynamicObject(1542,-1978.6419678,117.4850006,37.3950005,0.0000000,0.0000000,90.0000000); //convertffs(349)
	CreateDynamicObject(2500,-1976.4169922,118.3570023,37.0180016,0.0000000,0.0000000,270.0000000); //convertffs(350)
	CreateDynamicObject(1256,-1980.5000000,127.0000000,27.3470001,0.0000000,0.0000000,0.0000000); //convertffs(351)
	CreateDynamicObject(1256,-1980.5000000,115.9739990,27.3390007,0.0000000,0.0000000,0.0000000); //convertffs(352)
	CreateDynamicObject(1256,-1980.5000000,148.6730041,27.3470001,0.0000000,0.0000000,0.0000000); //convertffs(353)
	CreateDynamicObject(19168,-1980.2500000,122.5000000,30.0000000,90.0000000,270.0000000,0.0000000); //convertffs(354)
	CreateDynamicObject(19169,-1980.2500000,121.0000000,30.0000000,90.0000000,270.0000000,0.0000000); //convertffs(355)
	CreateDynamicObject(19170,-1980.2500000,122.5000000,28.5000000,90.0000000,270.0000000,0.0000000); //convertffs(356)
	CreateDynamicObject(19171,-1980.2500000,121.0000000,28.5000000,90.0000000,270.0000000,0.0000000); //convertffs(357)
	CreateDynamicObject(1257,-1985.7619629,123.8929977,27.9669990,0.0000000,0.0000000,0.0000000); //convertffs(358)
	CreateDynamicObject(19456,-2033.5999756,183.0000000,28.2500000,0.0000000,0.0000000,90.0000000); //convertffs(359)
	CreateDynamicObject(19456,-2023.9820557,183.0000000,28.2500000,0.0000000,0.0000000,90.0000000); //convertffs(360)
	CreateDynamicObject(19456,-2060.5000000,161.2819977,28.2500000,0.0000000,0.0000000,0.0000000); //convertffs(361)
	CreateDynamicObject(19456,-2060.5000000,151.6490021,28.2500000,0.0000000,0.0000000,0.0000000); //convertffs(362)
	CreateDynamicObject(19456,-2060.5000000,142.0290070,28.2500000,0.0000000,0.0000000,0.0000000); //convertffs(363)
	CreateDynamicObject(19456,-2060.5000000,132.4230041,28.2500000,0.0000000,0.0000000,0.0000000); //convertffs(364)
	CreateDynamicObject(19456,-2060.5048828,124.0000000,28.2500000,0.0000000,0.0000000,0.0000000); //convertffs(365)
	CreateDynamicObject(19456,-2055.7170410,119.2699966,28.2500000,0.0000000,0.0000000,90.0000000); //convertffs(366)
	CreateDynamicObject(19456,-2048.8149414,119.2600021,28.2500000,0.0000000,0.0000000,90.0000000); //convertffs(367)
	CreateDynamicObject(1244,-2026.6999512,155.6999970,28.8390007,0.0000000,0.0000000,0.0000000); //convertffs(368)
	CreateDynamicObject(1244,-2026.6999512,157.8000030,28.8390007,0.0000000,0.0000000,0.0000000); //convertffs(369)
	CreateDynamicObject(9192,-2018.1982422,181.3515625,30.8260002,0.0000000,0.0000000,303.9971924); //convertffs(370)
	CreateDynamicObject(1229,-1986.4880371,120.9759979,28.2469997,0.0000000,0.0000000,270.0000000); //convertffs(371)

	//Автошкола
	CreateDynamicObject(966,-2043.8780518,-80.3000031,34.1718750,0.0000000,0.0000000,0.0000000); //convertffs(373)
	CreateDynamicObject(638,-2017.5947266,-81.6396484,35.1173210,0.0000000,0.0000000,0.0000000); //convertffs(374)
	CreateDynamicObject(638,-2017.5860596,-84.1999969,35.1170006,0.0000000,0.0000000,0.0000000); //convertffs(375)
	CreateDynamicObject(638,-2017.5860596,-86.4821396,35.1173210,0.0000000,0.0000000,0.0000000); //convertffs(376)
	CreateDynamicObject(638,-2019.2207031,-80.6552734,35.1173210,0.0000000,0.0000000,90.0000000); //convertffs(377)
	CreateDynamicObject(638,-2021.9238281,-80.6542969,35.1173210,0.0000000,0.0000000,90.0000000); //convertffs(378)
	CreateDynamicObject(638,-2024.5991211,-80.6549988,35.1173210,0.0000000,0.0000000,90.0000000); //convertffs(379)
	CreateDynamicObject(638,-2027.2756348,-80.6549988,35.1173210,0.0000000,0.0000000,90.0000000); //convertffs(380)
	CreateDynamicObject(638,-2029.9565430,-80.6549988,35.1173210,0.0000000,0.0000000,90.0000000); //convertffs(381)
	CreateDynamicObject(638,-2032.6364746,-80.6549988,35.1173210,0.0000000,0.0000000,90.0000000); //convertffs(382)
	CreateDynamicObject(638,-2035.3111572,-80.6549988,35.1173210,0.0000000,0.0000000,90.0000000); //convertffs(383)
	CreateDynamicObject(638,-2036.7900391,-81.6093750,35.1173210,0.0000000,0.0000000,179.9945068); //convertffs(384)
	CreateDynamicObject(638,-2036.7900391,-84.0810547,35.1170006,0.0000000,0.0000000,179.9945068); //convertffs(385)
	CreateDynamicObject(638,-2036.7900391,-86.4843750,35.1173210,0.0000000,0.0000000,179.9945068); //convertffs(386)
	CreateDynamicObject(638,-2035.1191406,-87.4394531,35.1173210,0.0000000,0.0000000,270.0000000); //convertffs(387)
	CreateDynamicObject(638,-2032.4426270,-87.4400024,35.1173210,0.0000000,0.0000000,270.0000000); //convertffs(388)
	CreateDynamicObject(638,-2029.7666016,-87.4400024,35.1173210,0.0000000,0.0000000,270.0000000); //convertffs(389)
	CreateDynamicObject(638,-2027.0863037,-87.4400024,35.1173210,0.0000000,0.0000000,270.0000000); //convertffs(390)
	CreateDynamicObject(638,-2024.4068604,-87.4400024,35.1173210,0.0000000,0.0000000,270.0000000); //convertffs(391)
	CreateDynamicObject(638,-2021.7309570,-87.4400024,35.1173210,0.0000000,0.0000000,270.0000000); //convertffs(392)
	CreateDynamicObject(638,-2019.0502930,-87.4400024,35.1170006,0.0000000,0.0000000,270.0000000); //convertffs(393)
	CreateDynamicObject(869,-2020.2260742,-85.3227921,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(394)
	CreateDynamicObject(869,-2020.2180176,-82.6032791,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(395)
	CreateDynamicObject(869,-2023.9910889,-85.3056412,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(396)
	CreateDynamicObject(869,-2024.0827637,-82.5609665,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(397)
	CreateDynamicObject(869,-2027.7565918,-85.4174805,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(398)
	CreateDynamicObject(869,-2027.8840332,-82.7294617,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(399)
	CreateDynamicObject(869,-2031.5400391,-85.5166016,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(400)
	CreateDynamicObject(869,-2031.7982178,-82.6523209,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(401)
	CreateDynamicObject(869,-2034.7521973,-85.5318069,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(402)
	CreateDynamicObject(869,-2034.7854004,-82.5395279,34.9654465,0.0000000,0.0000000,0.0000000); //convertffs(403)
	CreateDynamicObject(870,-2018.9913330,-86.0962677,34.7577477,0.0000000,0.0000000,0.0000000); //convertffs(404)
	CreateDynamicObject(870,-2019.0585938,-82.1379700,34.7577477,0.0000000,0.0000000,0.0000000); //convertffs(405)
	CreateDynamicObject(870,-2030.3789062,-82.4287109,34.7577477,0.0000000,0.0000000,0.0000000); //convertffs(406)
	CreateDynamicObject(870,-2031.5494385,-84.8624420,34.7577477,0.0000000,0.0000000,0.0000000); //convertffs(407)
	CreateDynamicObject(870,-2025.9553223,-82.5880280,34.7577477,0.0000000,0.0000000,0.0000000); //convertffs(408)
	CreateDynamicObject(870,-2022.9443359,-85.4350586,34.7577477,0.0000000,0.0000000,0.0000000); //convertffs(409)
	CreateDynamicObject(870,-2026.2724609,-85.4853516,34.7577477,0.0000000,0.0000000,0.0000000); //convertffs(410)
	CreateDynamicObject(870,-2028.8813477,-84.1216736,34.7577477,0.0000000,0.0000000,0.0000000); //convertffs(411)
	CreateDynamicObject(836,-2024.5670166,-83.3961945,35.7969971,0.0000000,0.0000000,59.5500183); //convertffs(412)
	CreateDynamicObject(833,-2029.4570312,-83.7402344,35.4032402,0.0000000,0.0000000,306.1230469); //convertffs(413)
	CreateDynamicObject(672,-2021.4584961,-84.6934280,34.5156250,0.0000000,0.0000000,0.0000000); //convertffs(414)
	CreateDynamicObject(672,-2032.8515625,-83.6494141,34.5156250,0.0000000,358.0114746,67.4890137); //convertffs(415)
	CreateDynamicObject(1364,-2020.5000000,-88.5000000,35.1044350,0.0000000,0.0000000,0.0000000); //convertffs(416)
	CreateDynamicObject(1364,-2027.0000000,-88.5000000,35.1044350,0.0000000,0.0000000,0.0000000); //convertffs(417)
	CreateDynamicObject(1364,-2033.5000000,-88.5000000,35.1044350,0.0000000,0.0000000,0.0000000); //convertffs(418)
	CreateDynamicObject(1257,-2034.7949219,-79.0664062,35.5995026,0.0000000,0.0000000,270.0000000); //convertffs(419)
	
	//Грузчик
	CreateDynamicObject(2669,2194.8723145,-2286.1057129,16.1584072,0.0000000,0.0000000,225.0000000); //convertffs(420)
	CreateDynamicObject(2669,2184.2783203,-2302.3430176,13.8871479,0.0000000,0.0000000,225.0000000); //convertffs(421)
	CreateDynamicObject(2669,2188.3972168,-2298.2297363,13.8871479,0.0000000,0.0000000,225.0000000); //convertffs(422)
	CreateDynamicObject(922,2187.9282227,-2298.9711914,13.5222530,0.0000000,0.0000000,316.5710449); //convertffs(423)
	CreateDynamicObject(922,2194.2539062,-2286.8085938,15.8262997,0.0000000,0.0000000,135.0000000); //convertffs(424)
	CreateDynamicObject(923,2185.0556641,-2303.8972168,13.5163994,0.0000000,0.0000000,0.0000000); //convertffs(425)
	CreateDynamicObject(923,2185.0263672,-2302.0224609,13.5163994,0.0000000,0.0000000,135.4888916); //convertffs(426)
	CreateDynamicObject(1271,2189.6660156,-2299.0122070,13.7026825,0.0000000,0.0000000,0.0000000); //convertffs(427)
	CreateDynamicObject(1271,2189.7260742,-2298.7497559,13.0367117,0.0000000,0.0000000,0.0000000); //convertffs(428)
	CreateDynamicObject(1271,2189.8906250,-2299.5061035,13.0617113,0.0000000,0.0000000,0.0000000); //convertffs(429)
	CreateDynamicObject(2912,2195.0744629,-2285.3210449,15.6407595,0.0000000,0.0000000,0.0000000); //convertffs(430)
	CreateDynamicObject(2912,2195.2431641,-2286.2470703,14.9407597,0.0000000,0.0000000,0.0000000); //convertffs(431)
	CreateDynamicObject(2912,2195.8789062,-2286.4379883,15.6094351,0.0000000,0.0000000,0.0000000); //convertffs(432)
	CreateDynamicObject(2912,2196.2250977,-2286.7014160,14.9407597,0.0000000,0.0000000,0.0000000); //convertffs(433)
	CreateDynamicObject(2912,2194.9589844,-2285.0864258,14.9407597,0.0000000,0.0000000,0.0000000); //convertffs(434)
	CreateDynamicObject(2912,2183.3591309,-2302.4985352,12.6867113,0.0000000,0.0000000,0.0000000); //convertffs(435)
	CreateDynamicObject(2912,2183.4387207,-2302.4423828,13.3867111,0.0000000,0.0000000,0.0000000); //convertffs(436)
	CreateDynamicObject(2912,2174.7021484,-2248.3388672,12.3040590,0.0000000,0.0000000,0.0000000); //convertffs(437)
	CreateDynamicObject(2912,2173.8850098,-2248.6350098,12.3036747,0.0000000,0.0000000,0.0000000); //convertffs(438)
	CreateDynamicObject(2912,2174.7299805,-2249.2592773,12.3037510,0.0000000,0.0000000,0.0000000); //convertffs(439)
	CreateDynamicObject(2912,2173.8525391,-2249.5712891,12.3033400,0.0000000,0.0000000,0.0000000); //convertffs(440)
	CreateDynamicObject(2912,2172.8854980,-2249.5666504,12.3030071,0.0000000,0.0000000,0.0000000); //convertffs(441)
	CreateDynamicObject(2912,2174.6782227,-2248.6174316,13.0040588,0.0000000,0.0000000,0.0000000); //convertffs(442)
	CreateDynamicObject(2912,2174.1975098,-2249.3811035,13.0033398,0.0000000,0.0000000,0.0000000); //convertffs(443)
	CreateDynamicObject(11401,2178.7685547,-2307.2792969,24.1133862,0.0000000,0.0000000,0.0000000); //convertffs(444)
	CreateDynamicObject(2934,2178.7500000,-2307.2534180,20.4986954,0.0000000,0.0000000,0.0000000); //convertffs(445)
	CreateDynamicObject(3585,2217.5205078,-2304.1689453,14.1767635,0.0000000,0.0000000,44.9945068); //convertffs(447)
	CreateDynamicObject(3585,2210.3620605,-2305.5471191,14.1767635,0.0000000,0.0000000,44.9945068); //convertffs(448)
	CreateDynamicObject(5153,2185.4213867,-2288.6469727,13.2612391,0.0000000,0.0000000,45.0000000); //convertffs(449)
	CreateDynamicObject(5153,2186.3427734,-2287.7373047,13.7950544,0.0000000,0.0000000,44.9945068); //convertffs(450)
	CreateDynamicObject(944,2212.4458008,-2284.3002930,14.6494560,0.0000000,0.0000000,45.9800110); //convertffs(452)
	CreateDynamicObject(923,2212.5939941,-2284.3984375,16.0902386,0.0000000,0.0000000,27.5000000); //convertffs(453)
	CreateDynamicObject(2912,2214.1999512,-2286.1679688,13.7646694,0.0000000,0.0000000,0.0000000); //convertffs(454)
	CreateDynamicObject(970,2188.6579590,-2259.1179199,13.0279999,0.0000000,0.0000000,135.0000000); //convertffs(455)
	CreateDynamicObject(970,2191.5869141,-2262.0419922,13.0270004,0.0000000,0.0000000,135.0000000); //convertffs(456)
	CreateDynamicObject(970,2194.5009766,-2264.9619141,13.0270004,0.0000000,0.0000000,135.0000000); //convertffs(457)
	CreateDynamicObject(970,2197.4318848,-2267.8750000,13.0270004,0.0000000,0.0000000,135.0000000); //convertffs(458)
	CreateDynamicObject(3578,2208.0148926,-2256.6311035,13.2200003,0.0000000,0.0000000,135.0000000); //convertffs(459)
	CreateDynamicObject(966,2198.4741211,-2246.8920898,12.5469999,0.0000000,0.0000000,135.0000000); //convertffs(460)
	CreateDynamicObject(3578,2207.2229004,-2255.8479004,13.2250004,0.0000000,0.0000000,135.0000000); //convertffs(461)
	CreateDynamicObject(970,2187.3603516,-2249.0019531,12.9750004,0.0000000,0.0000000,44.9945068); //convertffs(462)
	
	
	CreateDynamicObject(13435,-1971.8700000,-2372.2800000,32.9270000,0.0000000,0.0000000,314.0000000); //convertffs(463)
	CreateDynamicObject(13435,-1975.2300000,-2368.0900000,32.9270000,0.0000000,0.0000000,313.9890000); //convertffs(464)
	CreateDynamicObject(846,-1939.6600000,-2380.5200000,30.3700000,0.0000000,0.0000000,0.0000000); //convertffs(465)
	CreateDynamicObject(846,-1943.9500000,-2401.8200000,30.2960000,0.0000000,0.0000000,59.9963000); //convertffs(466)
	CreateDynamicObject(1463,-1995.9700000,-2384.7000000,29.9470000,0.0000000,0.0000000,314.0000000); //convertffs(467)
	CreateDynamicObject(1463,-1996.8900000,-2383.7400000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(468)
	CreateDynamicObject(1463,-1997.7900000,-2382.8000000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(469)
	CreateDynamicObject(1463,-1998.6700000,-2381.9100000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(470)
	CreateDynamicObject(14872,-2001.1900000,-2378.6700000,30.0760000,0.0000000,0.0000000,0.0000000); //convertffs(471)
	CreateDynamicObject(2669,-2000.5600000,-2368.0600000,30.9650000,0.0000000,0.0000000,45.9993000); //convertffs(472)
	CreateDynamicObject(1463,-1997.1400000,-2380.5400000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(473)
	CreateDynamicObject(1463,-1996.2200000,-2381.5300000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(474)
	CreateDynamicObject(1463,-1995.2600000,-2382.5500000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(475)
	CreateDynamicObject(1463,-1994.6600000,-2383.1800000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(476)
	CreateDynamicObject(1463,-1993.4200000,-2382.0100000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(477)
	CreateDynamicObject(1463,-1994.3600000,-2381.0100000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(478)
	CreateDynamicObject(1463,-1995.2400000,-2380.0900000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(479)
	CreateDynamicObject(1463,-1996.1800000,-2379.0900000,29.9470000,0.0000000,0.0000000,313.9950000); //convertffs(480)
	CreateDynamicObject(1431,-1989.8000000,-2390.6600000,30.1730000,0.0000000,0.0000000,318.0000000); //convertffs(481)
	CreateDynamicObject(19157,-1982.0100000,-2391.4300000,29.8750000,0.0000000,0.0000000,313.9950000); //convertffs(482)
	CreateDynamicObject(19157,-1978.7800000,-2388.3100000,29.8750000,0.0000000,0.0000000,313.9890000); //convertffs(483)
	CreateDynamicObject(2957,-1977.2200000,-2386.7400000,30.8200000,0.0000000,0.0000000,313.9890000); //convertffs(484)
	CreateDynamicObject(2957,-1977.2900000,-2389.9000000,30.8200000,0.0000000,0.0000000,223.9950000); //convertffs(485)
	CreateDynamicObject(2957,-1980.4700000,-2393.0200000,30.8200000,0.0000000,0.0000000,43.9948000); //convertffs(486)
	CreateDynamicObject(2957,-1983.6500000,-2392.9900000,30.8200000,0.0000000,0.0000000,313.9890000); //convertffs(487)
	CreateDynamicObject(2957,-1978.3700000,-2387.9600000,32.4450000,90.0000000,180.0000000,133.9890000); //convertffs(488)
	CreateDynamicObject(2957,-1980.7100000,-2390.2200000,32.4450000,90.0000000,179.9950000,133.9890000); //convertffs(489)
	CreateDynamicObject(2957,-1982.4100000,-2391.8600000,32.4450000,90.0000000,180.0050000,133.9780000); //convertffs(490)
	CreateDynamicObject(1463,-1991.9900000,-2380.5600000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(491)
	CreateDynamicObject(1463,-1992.9700000,-2379.5400000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(492)
	CreateDynamicObject(1463,-1993.8400000,-2378.6600000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(493)
	CreateDynamicObject(1463,-1994.7600000,-2377.7000000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(494)
	CreateDynamicObject(1347,-1988.5996094,-2391.6591797,30.1910000,0.0000000,0.0000000,0.0000000); //convertffs(495)
	CreateDynamicObject(13435,-1975.2300000,-2368.0900000,34.2520000,0.0000000,0.0000000,313.9890000); //convertffs(496)
	CreateDynamicObject(1463,-1990.6500000,-2379.1900000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(497)
	CreateDynamicObject(1463,-1991.6100000,-2378.1700000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(498)
	CreateDynamicObject(1463,-1992.6100000,-2377.1300000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(499)
	CreateDynamicObject(1463,-1993.5600000,-2376.1400000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(500)
	CreateDynamicObject(16337,-1983.2100000,-2365.3500000,29.6320000,0.0000000,0.0000000,48.0000000); //convertffs(501)
	CreateDynamicObject(1463,-1974.1300000,-2391.8400000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(502)
	CreateDynamicObject(1463,-1973.1699219,-2392.8300781,29.9470005,0.0000000,0.0000000,313.9837646); //convertffs(503)
	CreateDynamicObject(1463,-1972.2400000,-2393.7700000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(504)
	CreateDynamicObject(1463,-1971.2500000,-2394.7900000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(505)
	CreateDynamicObject(1463,-1970.2800000,-2395.7900000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(506)
	CreateDynamicObject(1463,-1972.8300000,-2390.6500000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(507)
	CreateDynamicObject(1463,-1971.8500000,-2391.6800000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(508)
	CreateDynamicObject(1463,-1970.9000000,-2392.6500000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(509)
	CreateDynamicObject(1463,-1969.9100000,-2393.6900000,29.9470000,0.0000000,0.0000000,313.9890000); //convertffs(510)
	CreateDynamicObject(2117,-1978.9800000,-2388.6800000,29.6250000,0.0000000,0.0000000,44.0000000); //convertffs(511)
	CreateDynamicObject(2117,-1980.4100000,-2390.0500000,29.6250000,0.0000000,0.0000000,43.9948000); //convertffs(512)
	CreateDynamicObject(2117,-1981.8300000,-2391.4300000,29.6250000,0.0000000,0.0000000,43.9948000); //convertffs(513)
	CreateDynamicObject(2117,-1983.2300000,-2389.9800000,29.6250000,0.0000000,0.0000000,313.9950000); //convertffs(514)
	CreateDynamicObject(2830,-1978.3900000,-2388.0000000,30.4320000,0.0000000,0.0000000,0.0000000); //convertffs(515)
	CreateDynamicObject(2850,-1978.9800000,-2388.7300000,30.4320000,0.0000000,0.0000000,0.0000000); //convertffs(516)
	CreateDynamicObject(2851,-1983.3300000,-2390.0700000,30.4320000,0.0000000,0.0000000,0.0000000); //convertffs(517)
	CreateDynamicObject(2851,-1982.5791016,-2390.7792969,30.4319992,0.0000000,0.0000000,0.0000000); //convertffs(518)
	CreateDynamicObject(2689,-1999.8900000,-2366.8300000,31.0620000,0.0000000,0.0000000,316.0000000); //convertffs(519)
	CreateDynamicObject(2689,-1999.2600000,-2367.4500000,31.0620000,0.0000000,0.0000000,316.0000000); //convertffs(520)
	CreateDynamicObject(2689,-1998.5700000,-2368.1100000,31.0620000,0.0000000,0.0000000,316.0000000); //convertffs(521)
	CreateDynamicObject(2706,-2000.6900000,-2369.7800000,31.4740000,0.0000000,0.0000000,140.0000000); //convertffs(522)
	CreateDynamicObject(2706,-2001.1000000,-2369.4200000,31.4750000,0.0000000,0.0000000,139.9990000); //convertffs(523)
	CreateDynamicObject(1417,-2001.6100000,-2365.8200000,29.9220000,0.0000000,0.0000000,46.0000000); //convertffs(524)
	CreateDynamicObject(1417,-2002.2800000,-2366.5400000,29.9220000,0.0000000,0.0000000,45.9998000); //convertffs(525)
	CreateDynamicObject(1417,-2002.8900000,-2367.1200000,29.9220000,0.0000000,0.0000000,45.9998000); //convertffs(526)
	CreateDynamicObject(1389,-1868.8001709,-1616.5948486,20.8330288,0.0000000,0.0000000,0.0000000); //convertffs(527)
	CreateDynamicObject(1389,-1868.8001709,-1616.5948486,20.8330288,0.0000000,0.0000000,0.0000000); //convertffs(528)
	CreateDynamicObject(925,-1863.0115967,-1625.9002686,21.9979649,0.0000000,0.0000000,180.0000000); //convertffs(529)
	CreateDynamicObject(925,-1865.3526611,-1625.8879395,21.9659500,0.0000000,0.0000000,179.9945068); //convertffs(530)
	CreateDynamicObject(1348,-1863.0368652,-1611.9832764,21.4603386,0.0000000,0.0000000,0.0000000); //convertffs(531)
	CreateDynamicObject(1348,-1863.0434570,-1612.8706055,21.4603386,0.0000000,0.0000000,0.0000000); //convertffs(532)
	CreateDynamicObject(929,-1858.3988037,-1607.8247070,21.7252312,0.0000000,0.0000000,180.0000000); //convertffs(533)
	CreateDynamicObject(929,-1859.5244141,-1607.8281250,21.7252312,0.0000000,0.0000000,179.9945068); //convertffs(534)
	CreateDynamicObject(2649,-1856.1978760,-1608.9125977,21.2400360,0.0000000,0.0000000,0.0000000); //convertffs(535)
	CreateDynamicObject(12986,-1853.3654785,-1612.3363037,22.2804432,0.0000000,0.0000000,180.0000000); //convertffs(536)
	CreateDynamicObject(3525,-1853.3115234,-1611.9282227,21.2775822,0.0000000,0.0000000,0.0000000); //convertffs(537)
	CreateDynamicObject(3525,-1852.6115723,-1611.9277344,21.2775822,0.0000000,0.0000000,0.0000000); //convertffs(538)
	CreateDynamicObject(3525,-1853.3115234,-1612.5273438,21.2775822,0.0000000,0.0000000,0.0000000); //convertffs(539)
	CreateDynamicObject(3525,-1852.6113281,-1612.5273438,21.2775822,0.0000000,0.0000000,0.0000000); //convertffs(540)
	CreateDynamicObject(929,-1860.6483154,-1607.8260498,21.7188950,0.0000000,0.0000000,179.9945068); //convertffs(541)
	CreateDynamicObject(929,-1862.8763428,-1607.8281250,21.7188950,0.0000000,0.0000000,179.9945068); //convertffs(542)
	CreateDynamicObject(1691,-1860.6512451,-1607.6511230,22.4755898,0.0000000,0.0000000,92.0000000); //convertffs(543)
	CreateDynamicObject(929,-1861.7695312,-1607.8281250,21.7188950,0.0000000,0.0000000,179.9945068); //convertffs(544)
	CreateDynamicObject(5262,-1848.5516357,-1622.1699219,23.8564987,0.0000000,0.0000000,0.0000000); //convertffs(545)
	CreateDynamicObject(1215,-1870.2061768,-1605.8126221,21.3284721,0.0000000,0.0000000,0.0000000); //convertffs(546)
	CreateDynamicObject(1215,-1870.6844482,-1625.8459473,21.3894749,0.0000000,0.0000000,0.0000000); //convertffs(547)
	CreateDynamicObject(1215,-1879.6301270,-1655.5008545,22.5460205,0.0000000,0.0000000,0.0000000); //convertffs(548)
	CreateDynamicObject(1215,-1887.1475830,-1696.5369873,23.6813736,0.0000000,0.0000000,0.0000000); //convertffs(549)
	CreateDynamicObject(1215,-1934.3482666,-1783.6663818,31.9462509,0.0000000,0.0000000,0.0000000); //convertffs(550)
	CreateDynamicObject(1215,-1947.2868652,-1795.4406738,33.0752563,0.0000000,0.0000000,0.0000000); //convertffs(551)
	CreateDynamicObject(854,-1868.4149170,-1619.2216797,21.0334339,0.0000000,0.0000000,0.0000000); //convertffs(552)
	CreateDynamicObject(854,-1867.4361572,-1618.7552490,21.0379219,0.0000000,0.0000000,0.0000000); //convertffs(553)
	CreateDynamicObject(854,-1867.2322998,-1619.7938232,21.0657654,0.0000000,0.0000000,0.0000000); //convertffs(554)
	CreateDynamicObject(3258,-1864.4362793,-1607.5972900,31.3550797,0.0000000,0.0000000,0.0000000); //convertffs(555)
	CreateDynamicObject(2649,-1863.8304443,-1607.7598877,23.1400356,0.0000000,90.0000000,180.0000000); //convertffs(556)
	CreateDynamicObject(2653,-1864.0067139,-1607.7022705,28.5303917,90.0000000,0.0000000,180.0000000); //convertffs(557)
	CreateDynamicObject(2653,-1863.9863281,-1607.7822266,28.5248756,90.0000000,0.0000000,0.0000000); //convertffs(558)
	CreateDynamicObject(3864,-1876.0854492,-1654.4835205,26.8470268,0.0000000,0.0000000,182.0000000); //convertffs(559)
	CreateDynamicObject(3864,-1843.2653809,-1647.6824951,26.8470268,0.0000000,0.0000000,2.0000000); //convertffs(560)
	CreateDynamicObject(1215,1274.6540527,-1793.1699219,13.1370001,0.0000000,0.0000000,0.0000000); //convertffs(561)
	CreateDynamicObject(1215,-1986.5959473,159.1430054,27.2520008,0.0000000,0.0000000,0.0000000); //convertffs(562)
	CreateDynamicObject(1215,-1986.5899658,157.9510040,27.2520008,0.0000000,0.0000000,0.0000000); //convertffs(563)
	CreateDynamicObject(1215,-1986.5996094,149.6410065,27.2520008,0.0000000,0.0000000,0.0000000); //convertffs(564)
	CreateDynamicObject(1215,-1986.5996094,148.2630005,27.2520008,0.0000000,0.0000000,0.0000000); //convertffs(565)
	CreateDynamicObject(1215,-1986.5996094,127.2750015,27.2520008,0.0000000,0.0000000,0.0000000); //convertffs(566)
	CreateDynamicObject(1215,-1986.5996094,120.3730011,27.3939991,0.0000000,0.0000000,0.0000000); //convertffs(567)
	CreateDynamicObject(1215,-1982.4000244,108.0739975,27.2439995,0.0000000,0.0000000,0.0000000); //convertffs(568)
	CreateDynamicObject(1215,-1972.6169434,169.1920013,36.5270004,0.0000000,0.0000000,0.0000000); //convertffs(569)
	CreateDynamicObject(1215,-1974.9260254,169.2480011,36.5270004,0.0000000,0.0000000,0.0000000); //convertffs(570)
	CreateDynamicObject(1215,-1997.2500000,90.1380005,27.2439995,0.0000000,0.0000000,0.0000000); //convertffs(571)
	CreateDynamicObject(1215,-1997.2500000,88.7409973,27.2439995,0.0000000,0.0000000,0.0000000); //convertffs(572)
	CreateDynamicObject(1215,-1980.2879639,88.7789993,27.2520008,0.0000000,0.0000000,0.0000000); //convertffs(573)
	CreateDynamicObject(1215,-1980.2860107,90.1009979,27.2520008,0.0000000,0.0000000,0.0000000); //convertffs(574)
	
	
	CreateDynamicObject(970,-2054.2709961,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(575)
	CreateDynamicObject(970,-2058.4299316,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(576)
	CreateDynamicObject(970,-2062.5820312,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(577)
	CreateDynamicObject(970,-2066.6831055,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(578)
	CreateDynamicObject(970,-2070.8129883,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(579)
	CreateDynamicObject(970,-2074.9289551,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(580)
	CreateDynamicObject(970,-2079.0759277,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(581)
	CreateDynamicObject(970,-2083.1940918,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(582)
	CreateDynamicObject(970,-2087.3269043,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(583)
	CreateDynamicObject(970,-2091.4379883,-80.2500000,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(584)
	CreateDynamicObject(970,-2095.5429688,-80.2959976,34.8720016,0.0000000,0.0000000,1.5000000); //convertffs(585)
	CreateDynamicObject(970,-2042.1500244,-82.3700027,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(586)
	CreateDynamicObject(970,-2042.1500244,-85.7699966,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(587)
	CreateDynamicObject(970,-2039.5500488,-82.3700027,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(588)
	CreateDynamicObject(970,-2039.5500488,-85.7699966,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(589)
	CreateDynamicObject(970,-2037.1500244,-82.3700027,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(590)
	CreateDynamicObject(970,-2037.1500244,-85.7699966,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(591)
	CreateDynamicObject(970,-2017.2500000,-82.3700027,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(592)
	CreateDynamicObject(970,-2017.2500000,-85.7699966,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(593)
	CreateDynamicObject(970,-2017.1999512,-89.8949966,34.8720016,0.0000000,0.0000000,91.5000000); //convertffs(594)
	CreateDynamicObject(970,-2017.1500244,-93.9840012,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(595)
	CreateDynamicObject(970,-2017.1500244,-99.5699997,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(596)
	CreateDynamicObject(970,-2017.1500244,-101.6650009,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(597)
	CreateDynamicObject(970,-2016.7089844,-87.8150024,33.3349991,0.0000000,90.0000000,0.0000000); //convertffs(598)
	CreateDynamicObject(970,-2015.6219482,-87.8150024,33.3349991,0.0000000,90.0000000,0.0000000); //convertffs(599)
	CreateDynamicObject(970,-2014.5450439,-87.8150024,33.3349991,0.0000000,90.0000000,0.0000000); //convertffs(600)
	CreateDynamicObject(970,-2016.6059570,-96.0559998,33.3349991,0.0000000,90.0000000,0.0000000); //convertffs(601)
	CreateDynamicObject(970,-2015.5350342,-96.0559998,33.3349991,0.0000000,90.0000000,0.0000000); //convertffs(602)
	CreateDynamicObject(970,-2014.4429932,-96.0559998,33.3349991,0.0000000,90.0000000,0.0000000); //convertffs(603)
	CreateDynamicObject(970,-2016.5860596,-97.5000000,33.3349991,0.0000000,90.0000000,0.0000000); //convertffs(604)
	CreateDynamicObject(970,-2015.5129395,-97.5000000,33.3349991,0.0000000,90.0000000,0.0000000); //convertffs(605)
	CreateDynamicObject(970,-2014.4350586,-97.5000000,33.3349991,0.0000000,90.0000000,0.0000000); //convertffs(606)
	CreateDynamicObject(1215,-2013.9150391,-97.5279999,35.0270004,0.0000000,0.0000000,0.0000000); //convertffs(607)
	CreateDynamicObject(1215,-2013.9150391,-96.0589981,35.0270004,0.0000000,0.0000000,0.0000000); //convertffs(608)
	CreateDynamicObject(970,-2042.0389404,-88.3690033,33.3409996,0.0000000,90.0000000,282.0000000); //convertffs(609)
	CreateDynamicObject(970,-2041.8680420,-89.1819992,33.3409996,0.0000000,90.0000000,282.0000000); //convertffs(610)
	CreateDynamicObject(970,-2037.1500244,-94.9000015,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(611)
	CreateDynamicObject(970,-2037.1500244,-100.3000031,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(612)
	CreateDynamicObject(1215,-2037.1500244,-98.2490005,34.7280006,0.0000000,0.0000000,0.0000000); //convertffs(613)
	CreateDynamicObject(1215,-2037.1500244,-96.9919968,34.7280006,0.0000000,0.0000000,0.0000000); //convertffs(614)
	CreateDynamicObject(970,-2041.4549561,-90.1600037,33.3409996,0.0000000,90.0000000,304.5000000); //convertffs(615)
	CreateDynamicObject(970,-2040.9589844,-90.8710022,33.3409996,0.0000000,90.0000000,304.5000000); //convertffs(616)
	CreateDynamicObject(970,-2040.1999512,-91.6299973,33.3409996,0.0000000,90.0000000,325.7456055); //convertffs(617)
	CreateDynamicObject(970,-2039.5000000,-92.1100006,33.3409996,0.0000000,90.0000000,325.7446289); //convertffs(618)
	CreateDynamicObject(970,-2038.5300293,-92.5199966,33.3409996,0.0000000,90.2502136,348.2432861); //convertffs(619)
	CreateDynamicObject(970,-2037.6999512,-92.6999969,33.3409996,0.0000000,90.2471924,348.2391357); //convertffs(620)
	CreateDynamicObject(970,-2037.1500244,-94.9000015,34.7000008,0.0000000,0.0000000,90.0000000); //convertffs(621)
	CreateDynamicObject(970,-2037.1500244,-100.3000031,34.7000008,0.0000000,0.0000000,90.0000000); //convertffs(622)
	CreateDynamicObject(638,-2037.5000000,-94.1999969,34.9000015,0.0000000,0.0000000,0.0000000); //convertffs(623)
	CreateDynamicObject(638,-2037.5019531,-95.5000000,34.8989983,0.0000000,0.0000000,0.0000000); //convertffs(624)
	CreateDynamicObject(638,-2037.5019531,-99.6999969,34.8989983,0.0000000,0.0000000,0.0000000); //convertffs(625)
	CreateDynamicObject(638,-2037.5000000,-100.8000031,34.9000015,0.0000000,0.0000000,0.0000000); //convertffs(626)
	CreateDynamicObject(638,-2036.8000488,-100.8000031,34.8989983,0.0000000,0.0000000,180.0000000); //convertffs(627)
	CreateDynamicObject(638,-2036.8020020,-99.6999969,34.9000015,0.0000000,0.0000000,179.9945068); //convertffs(628)
	CreateDynamicObject(638,-2036.8000488,-94.1999969,34.8989983,0.0000000,0.0000000,179.9945068); //convertffs(629)
	CreateDynamicObject(638,-2036.8020020,-95.5000000,34.9000015,0.0000000,0.0000000,179.9945068); //convertffs(630)
	CreateDynamicObject(1215,-2039.5699463,-80.3000031,34.9000015,0.0000000,0.0000000,0.0000000); //convertffs(631)
	CreateDynamicObject(970,-2052.1999512,-82.3700027,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(632)
	CreateDynamicObject(970,-2052.1999512,-85.7699966,34.8720016,0.0000000,0.0000000,90.0000000); //convertffs(633)
	CreateDynamicObject(970,-2062.1799316,-82.3700027,34.9000015,0.0000000,0.0000000,90.0000000); //convertffs(634)
	CreateDynamicObject(970,-2062.1799316,-85.7699966,34.9000015,0.0000000,0.0000000,90.0000000); //convertffs(635)
	CreateDynamicObject(970,-2035.0000000,-80.3000031,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(636)
	CreateDynamicObject(970,-2030.9000244,-80.3000031,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(637)
	CreateDynamicObject(970,-2026.8000488,-80.3000031,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(638)
	CreateDynamicObject(970,-2022.6999512,-80.3000031,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(639)
	CreateDynamicObject(970,-2019.3000488,-80.3000031,34.8720016,0.0000000,0.0000000,0.0000000); //convertffs(640)
	CreateDynamicObject(1215,-2042.9000244,-80.4000015,34.7000008,0.0000000,0.0000000,0.0000000); //convertffs(641)
	CreateDynamicObject(1215,-2051.6000977,-80.4000015,34.7000008,0.0000000,0.0000000,0.0000000); //convertffs(642)
	
	
	CreateDynamicObject(970,1177.3000488,1365.3000488,10.3999996,0.0000000,0.0000000,90.0000000); //convertffs(643)
	CreateDynamicObject(970,1177.3000488,1369.4000244,10.3999996,0.0000000,0.0000000,90.0000000); //convertffs(644)
	CreateDynamicObject(970,1177.3000488,1373.5000000,10.3999996,0.0000000,0.0000000,90.0000000); //convertffs(645)
	CreateDynamicObject(970,1177.3000488,1377.5999756,10.3999996,0.0000000,0.0000000,90.0000000); //convertffs(646)
	CreateDynamicObject(970,1177.3000488,1381.6999512,10.3999996,0.0000000,0.0000000,90.0000000); //convertffs(647)
	CreateDynamicObject(970,1175.1999512,1377.5999756,10.3999996,0.0000000,0.0000000,0.0000000); //convertffs(648)
	
	
	CreateDynamicObject(970,416.3999939,2534.5000000,16.1000004,0.0000000,0.0000000,90.0000000); //convertffs(649)
	CreateDynamicObject(970,422.7000122,2534.5000000,16.1000004,0.0000000,0.0000000,90.0000000); //convertffs(650)
	
	
	CreateDynamicObject(970,-2296.1000977,2431.3000488,4.6999998,0.0000000,0.0000000,43.0000000); //convertffs(651)
	CreateDynamicObject(970,-2293.1000977,2431.3000488,4.6999998,0.0000000,0.0000000,135.0000000); //convertffs(652)
	CreateDynamicObject(970,-2290.1999512,2428.3999023,4.6999998,0.0000000,0.0000000,135.0000000); //convertffs(653)
	CreateDynamicObject(970,-2287.3000488,2425.5000000,4.6999998,0.0000000,0.0000000,135.0000000); //convertffs(654)
	CreateDynamicObject(970,-2284.3999023,2422.6000977,4.6999998,0.0000000,0.0000000,135.0000000); //convertffs(655)
	CreateDynamicObject(970,-2281.5000000,2419.6599121,4.6999998,0.0000000,0.0000000,134.5000000); //convertffs(656)
	CreateDynamicObject(970,-2278.6000977,2416.6999512,4.6999998,0.0000000,0.0000000,134.0000000); //convertffs(657)
	CreateDynamicObject(970,-2275.6999512,2413.6999512,4.6999998,0.0000000,0.0000000,133.9947510); //convertffs(658)
	CreateDynamicObject(970,-2272.8000488,2410.6999512,4.6999998,0.0000000,0.0000000,133.9947510); //convertffs(659)
	CreateDynamicObject(970,-2269.8999023,2407.6999512,4.6999998,0.0000000,0.0000000,133.9947510); //convertffs(660)
	CreateDynamicObject(970,-2267.0000000,2404.6999512,4.6999998,0.0000000,0.0000000,133.9947510); //convertffs(661)
	CreateDynamicObject(970,-2264.1201172,2401.6799316,4.6999998,0.0000000,0.0000000,133.5000000); //convertffs(662)
	CreateDynamicObject(970,-2261.3000488,2398.6999512,4.6999998,0.0000000,0.0000000,133.4948730); //convertffs(663)
	CreateDynamicObject(970,-2258.5000000,2395.6999512,4.6999998,0.0000000,0.0000000,133.0000000); //convertffs(664)
	CreateDynamicObject(970,-2255.6999512,2392.6999512,4.6999998,0.0000000,0.0000000,132.9949951); //convertffs(665)
	CreateDynamicObject(970,-2252.8999023,2389.6999512,4.6999998,0.0000000,0.0000000,132.9949951); //convertffs(666)
	CreateDynamicObject(970,-2251.3000488,2386.1000977,4.6999998,0.0000000,0.0000000,94.9949951); //convertffs(667)
	CreateDynamicObject(966,-2298.3999023,2428.8999023,3.9000001,0.0000000,0.0000000,45.0000000); //convertffs(668)
	CreateDynamicObject(966,-2260.8999023,2379.3999023,4.0999999,0.0000000,0.0000000,44.9945068); //convertffs(669)
	CreateDynamicObject(1215,-2260.0000000,2380.0000000,4.5999999,0.0000000,0.0000000,0.0000000); //convertffs(670)
	CreateDynamicObject(1215,-2266.3000488,2374.1000977,4.6999998,0.0000000,0.0000000,0.0000000); //convertffs(671)
	CreateDynamicObject(1215,-2297.8999023,2429.5000000,4.5000000,0.0000000,0.0000000,0.0000000); //convertffs(672)
	CreateDynamicObject(1215,-2303.6000977,2423.8000488,4.5000000,0.0000000,0.0000000,0.0000000); //convertffs(673)
	CreateDynamicObject(19425,-2262.1999512,2378.1000977,4.0999999,0.0000000,0.0000000,45.0000000); //convertffs(674)
	CreateDynamicObject(19425,-2264.3999023,2375.8999023,4.0999999,0.0000000,0.0000000,44.9945068); //convertffs(675)
	CreateDynamicObject(19425,-2301.8999023,2425.3999023,3.9000001,0.0000000,0.0000000,45.0000000); //convertffs(676)
	CreateDynamicObject(19425,-2299.6999512,2427.6000977,3.9000001,0.0000000,0.0000000,44.9945068); //convertffs(677)
	CreateDynamicObject(968,-2260.8999023,2379.3999023,4.9000001,0.0000000,270.0000000,44.9945068); //convertffs(678)
	CreateDynamicObject(968,-2298.3999023,2428.8999023,4.6500001,0.0000000,270.0000000,44.9890137); //convertffs(679)
	
	CreateDynamicObject(970,2191.8000488,-2250.3000488,13.1000004,0.0000000,0.0000000,135.0000000); //convertffs(462)
	
	CreateDynamicObject(970,1061.4000244,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1065.5000000,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1069.5999756,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1073.6999512,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1079.1999512,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,1083.3000488,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (6)
	CreateDynamicObject(970,1087.4000244,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,1091.5000000,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (8)
	CreateDynamicObject(970,1095.5999756,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (9)
	CreateDynamicObject(970,1099.6999512,-1777.0999756,13.1000004,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (10)
	CreateDynamicObject(970,1059.3000488,-1775.0000000,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (11)
	CreateDynamicObject(970,1059.3000488,-1770.9000244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (12)
	CreateDynamicObject(970,1059.3000488,-1766.7750244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (13)
	CreateDynamicObject(970,1059.3000488,-1762.6500244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (14)
	CreateDynamicObject(970,1059.3000488,-1758.5250244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (15)
	CreateDynamicObject(970,1059.3000488,-1754.4000244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (16)
	CreateDynamicObject(970,1059.3000488,-1750.2750244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (17)
	CreateDynamicObject(970,1059.3000488,-1746.1500244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (18)
	CreateDynamicObject(970,1059.3000488,-1742.0250244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (19)
	CreateDynamicObject(970,1059.3000488,-1737.9000244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (20)
	CreateDynamicObject(970,1061.4000244,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (21)
	CreateDynamicObject(970,1065.5000000,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (22)
	CreateDynamicObject(970,1069.5999756,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (23)
	CreateDynamicObject(970,1073.6999512,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (24)
	CreateDynamicObject(970,1077.8000488,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (25)
	CreateDynamicObject(970,1081.9000244,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (26)
	CreateDynamicObject(970,1087.4000244,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (27)
	CreateDynamicObject(970,1091.5000000,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (28)
	CreateDynamicObject(970,1095.5999756,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (29)
	CreateDynamicObject(970,1099.6999512,-1735.8000488,13.1999998,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (30)
	CreateDynamicObject(970,1101.8000488,-1775.0000000,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (31)
	CreateDynamicObject(970,1101.8000488,-1770.9000244,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (32)
	CreateDynamicObject(970,1101.8000488,-1766.8000488,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (33)
	CreateDynamicObject(970,1101.8000488,-1762.6999512,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (34)
	CreateDynamicObject(970,1101.8000488,-1758.5999756,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (35)
	CreateDynamicObject(970,1101.8000488,-1754.5000000,13.1000004,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (36)
	
	
	CreateDynamicObject(970,-1967.0000000,-2397.6000977,30.2000008,0.0000000,0.0000000,45.0000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,-1959.8000488,-2404.6999512,30.2000008,0.0000000,0.0000000,44.9945068); //object(fencesmallb) (3)
	CreateDynamicObject(970,-1891.9000244,-1699.3000488,21.2999992,0.0000000,0.0000000,92.5000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,-1901.6999512,-1699.8000488,21.2999992,0.0000000,0.0000000,92.4993896); //object(fencesmallb) (5)

//Дома на воде

	CreateDynamicObject(17068,276.5200000,-1904.9800000,0.0600000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(17068,281.0800000,-1912.7300000,0.0600000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(17068,271.8500000,-1912.7100000,0.0600000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(3095,256.5400000,-1912.7700000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateObject(11431,258.2400000,-1911.9400000,1.5200000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,261.0400000,-1915.4400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,254.1600000,-1917.2500000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,258.7100000,-1917.2500000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,254.4700000,-1908.2600000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,252.1000000,-1914.8700000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,252.1000000,-1910.3300000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,258.6800000,-1908.2600000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,261.0400000,-1910.0800000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3095,296.5300000,-1912.7700000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateObject(11431,294.7700000,-1913.5700000,1.5200000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(3850,292.0800000,-1915.4400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,292.0800000,-1910.1800000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,294.5400000,-1908.2600000,0.7000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3850,299.0200000,-1908.2600000,0.7000000,0.0000000,0.0000000,90.0000000); //
	CreateDynamicObject(3850,301.0600000,-1910.2900000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,301.0600000,-1914.9200000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,294.5500000,-1917.2500000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,298.9700000,-1917.2500000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(17068,276.5200000,-1926.9600000,0.0600000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(17068,272.0000000,-1934.7100000,0.0600000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(17068,281.0800000,-1934.7300000,0.0600000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(3095,256.5400000,-1934.7100000,0.2700000,-0.4800000,180.0000000,-90.0000000); //
	CreateObject(11431,258.2800000,-1933.9400000,1.5200000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,254.1600000,-1939.2000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,258.7100000,-1939.2000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,252.1000000,-1932.3400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,252.1000000,-1936.7800000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,261.0400000,-1937.4200000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,261.0400000,-1932.1100000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,254.4800000,-1930.2300000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,258.9200000,-1930.2300000,0.7000000,0.0000000,0.0000000,-89.5800000); //
	CreateDynamicObject(3095,296.5300000,-1934.7300000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateObject(11431,294.7700000,-1935.5700000,1.5200000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(3850,294.5500000,-1930.2500000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,298.9700000,-1930.2500000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,292.0800000,-1932.1100000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,292.0800000,-1937.4400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,301.0200000,-1937.1400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,301.0200000,-1932.2900000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,298.5600000,-1939.2000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,294.0900000,-1939.2000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(17068,276.5200000,-1948.9600000,0.0600000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(17068,271.9100000,-1957.7700000,0.0600000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(17068,281.0800000,-1957.7900000,0.0600000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(3095,296.5300000,-1957.7300000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateDynamicObject(3095,256.5400000,-1957.7700000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateObject(11431,294.7700000,-1958.5700000,1.5200000,0.0000000,0.0000000,-270.0000000); //
	CreateObject(11431,258.2800000,-1956.9400000,1.5200000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,298.9700000,-1953.2500000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,294.5500000,-1953.2500000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,292.0800000,-1955.1100000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,292.0800000,-1960.4400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,301.0200000,-1955.2900000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,301.0200000,-1960.1400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,298.4200000,-1962.2000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,294.0900000,-1962.2000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,254.1600000,-1962.2000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,258.7100000,-1962.2000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,252.1000000,-1959.7800000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,252.1000000,-1955.2100000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,254.4800000,-1953.2800000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,258.9200000,-1953.2800000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,261.0400000,-1960.4200000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,261.0400000,-1955.1100000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(17068,276.5200000,-1970.9700000,0.0600000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(17068,271.9100000,-1979.7700000,0.0600000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(17068,281.0800000,-1979.7900000,0.0600000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(3095,296.5300000,-1979.7900000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateObject(11431,294.7700000,-1980.5700000,1.5200000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(3095,256.5400000,-1979.9100000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateObject(11431,258.2800000,-1979.0000000,1.5200000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,298.9700000,-1975.3200000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,298.4200000,-1984.2400000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,301.0200000,-1977.2900000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,301.0200000,-1981.8400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,294.0900000,-1984.2400000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,294.5500000,-1975.3200000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,292.0800000,-1977.1100000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,292.0800000,-1982.4400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,254.4800000,-1975.3900000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,254.1600000,-1984.3000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,258.7100000,-1984.3600000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,261.0400000,-1977.1100000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,261.0400000,-1982.4200000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,258.9200000,-1975.4000000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,252.1000000,-1977.8300000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,252.1000000,-1982.0600000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(17068,276.5200000,-1992.8700000,0.0600000,0.0000000,0.0000000,-180.0000000); //
	CreateDynamicObject(17068,271.9100000,-1998.0100000,0.0600000,0.0000000,0.0000000,270.0000000); //
	CreateDynamicObject(17068,281.0800000,-1998.0500000,0.0600000,0.0000000,0.0000000,-270.0000000); //
	CreateDynamicObject(3095,296.5300000,-1998.0700000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateDynamicObject(3095,276.5200000,-2008.3700000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateDynamicObject(3095,256.5400000,-1998.0100000,0.2700000,0.0000000,180.0000000,-90.0000000); //
	CreateObject(11431,294.8100000,-1998.8300000,1.5200000,0.0000000,0.0000000,-270.0000000); //
	CreateObject(11431,258.2800000,-1997.2000000,1.5200000,0.0000000,0.0000000,-90.0000000); //
	CreateObject(11431,275.7100000,-2006.6000000,1.5200000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,298.9700000,-1993.6400000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,294.5500000,-1993.6100000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,292.1000000,-1995.3700000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,292.0900000,-2000.7100000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,301.0000000,-1996.0500000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,301.0000000,-2000.3400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,298.4200000,-2002.5100000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,294.0900000,-2002.5100000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,279.1900000,-2003.8900000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,273.8100000,-2003.8900000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,281.0100000,-2006.2000000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,281.0100000,-2010.4400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,278.7700000,-2012.8100000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,274.1100000,-2012.8100000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,272.1100000,-2010.4400000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,272.1400000,-2006.2000000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,252.1000000,-1995.5000000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,254.1600000,-2002.4600000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,258.7100000,-2002.4600000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,252.1000000,-1999.9600000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,260.9700000,-2000.7000000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,261.0200000,-1995.3700000,0.7000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(3850,258.5700000,-1993.5300000,0.7000000,0.0000000,0.0000000,-90.0000000); //
	CreateDynamicObject(3850,254.4900000,-1993.5300000,0.7000000,0.0000000,0.0000000,-91.0800000); //
	CreateDynamicObject(1432,253.5600000,-1913.8300000,0.2600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,252.6600000,-1908.8400000,2.3000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,260.8100000,-1916.7200000,2.3000000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,299.1300000,-1911.5600000,0.4500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,300.8400000,-1916.6800000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,292.7300000,-1908.7100000,2.2600000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,260.8100000,-1938.9400000,2.2800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,252.6600000,-1930.6800000,2.2800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,253.5400000,-1936.7100000,0.3900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,292.7300000,-1930.7000000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,300.8400000,-1938.9100000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,299.1300000,-1932.9800000,0.4500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,260.8100000,-1961.8800000,2.2800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,253.5600000,-1959.2200000,0.3900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,252.6600000,-1953.7500000,2.2800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,300.8400000,-1961.9000000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,292.7300000,-1953.5600000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,299.1300000,-1957.6100000,0.4500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,260.8100000,-1984.1400000,2.2800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,252.6600000,-1975.7700000,2.2800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,253.5600000,-1981.2300000,0.3900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,300.8400000,-1983.8900000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,292.7300000,-1975.9300000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,299.1300000,-1979.2500000,0.4500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,260.8100000,-2002.2000000,2.2800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,252.6600000,-1993.7800000,2.2800000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,253.5600000,-1998.7200000,0.3900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,300.8400000,-2002.1800000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,292.7300000,-1993.9200000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,299.1300000,-1997.5700000,0.4500000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(1432,277.0500000,-2011.2800000,0.3900000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,280.8100000,-2004.2800000,2.3300000,0.0000000,0.0000000,0.0000000); //
	CreateDynamicObject(626,272.7000000,-2012.3800000,2.3300000,0.0000000,0.0000000,0.0000000); //	
	
	
//Стоянка около АШ

	CreateDynamicObject(8041,-1996,-40,39.77498626709,0,0,179.99450683594);
	CreateDynamicObject(18284,-1986,-28,37.258499145508,0,0,90);
	CreateDynamicObject(18284,-1986,-52,37.265151977539,0,0,90);
	CreateDynamicObject(983,-1997.25,-53,35.003868103027,0,0,0);
	CreateDynamicObject(983,-1997.25,-26.89999961853,34.895183563232,0,0,0);
	CreateDynamicObject(983,-1977,-26.89999961853,35.003868103027,0,0,0);
	CreateDynamicObject(983,-1977,-53,35.003868103027,0,0,0);
	CreateDynamicObject(982,-1977,-40.189453125,35.003868103027,0,0,0);
	CreateDynamicObject(984,-1990.8499755859,-56.200000762939,34.950351715088,0,0,90);
	CreateDynamicObject(984,-1990.8499755859,-23.700000762939,34.884822845459,0,0,90);
	CreateDynamicObject(984,-1983.3505859375,-23.700397491455,34.881988525391,0,0,90);
	CreateDynamicObject(984,-1983.4626464844,-56.190189361572,34.956993103027,0,0,90);

//Респа нубов СФ

	CreateObject(14859,-2020.8493652344,-21.560005187988,7.950347900391,0,0,270);
	CreateDynamicObject(14860,-2021.1369628906,-23.75576210022,7.679584503174,0,0,0);
	CreateDynamicObject(14861,-2022.8288574219,-23.501550674438,6.307540893555,0,0,0);
	CreateDynamicObject(14862,-2023.0021972656,-24.487312316895,6.651634216309,0,0,0);
	CreateDynamicObject(14863,-2021.9935302734,-20.599285125732,6.581192016602,0,0.75,178.50994873047);
	CreateDynamicObject(970,-2017.7058105469,-47.879180908203,34.874267578125,0,0,92.499389648438);
	CreateDynamicObject(970,-2017.5238037109,-52.010433197021,34.872978210449,0,0,92.499389648438);
	CreateDynamicObject(970,-2017.8804931641,-43.744186401367,34.875503540039,0,0,92.499389648438);
	CreateDynamicObject(970,-2017.2921142578,-58.189094543457,34.871337890625,0,0,92.499389648438);
	CreateDynamicObject(970,-2019.2608642578,-60.178184509277,34.868995666504,0,0,357.75);
	CreateDynamicObject(970,-2023.3779296875,-60.019393920898,34.869075775146,0,0,357.74780273438);
	CreateDynamicObject(970,-2027.5065917969,-59.863021850586,34.869136810303,0,0,357.74780273438);
	CreateDynamicObject(970,-2031.6351318359,-59.722305297852,34.869091033936,0,0,357.74780273438);
	CreateDynamicObject(970,-2018.0568847656,-39.626239776611,34.872882843018,0,0,92.499389648438);
	CreateDynamicObject(970,-2033.5,-44.900001525879,34.950000762939,0,0,90);
	CreateDynamicObject(970,-2033.5,-40.75,34.950000762939,0,0,90);
	CreateDynamicObject(638,-2032.1376953125,-59.219745635986,35.040000915527,0,0,267.74780273438);
	CreateDynamicObject(638,-2029.4545898438,-59.323581695557,35.040000915527,0,0,267.74780273438);
	CreateDynamicObject(638,-2026.7858886719,-59.428691864014,35.040000915527,0,0,267.74780273438);
	CreateDynamicObject(638,-2024.1072998047,-59.5276222229,35.040000915527,0,0,267.74780273438);
	CreateDynamicObject(638,-2021.4564208984,-59.630256652832,35.040000915527,0,0,267.74780273438);
	CreateDynamicObject(638,-2018.7780761719,-59.734703063965,35.040000915527,0,0,267.74780273438);
	CreateDynamicObject(638,-2017.7186279297,-58.797298431396,35.040000915527,0,0,2.75);
	CreateDynamicObject(638,-2018.015625,-51.644500732422,35.040000915527,0,0,2.74658203125);
	CreateDynamicObject(638,-2018.1413574219,-48.975158691406,35.040000915527,0,0,2.74658203125);
	CreateDynamicObject(638,-2018.2681884766,-46.303382873535,35.040000915527,0,0,2.74658203125);
	CreateDynamicObject(638,-2018.3944091797,-43.628211975098,35.040000915527,0,0,2.74658203125);
	CreateDynamicObject(638,-2018.529296875,-40.962554931641,35.040000915527,0,0,2.74658203125);
	CreateDynamicObject(638,-2033.0645751953,-57.505317687988,35.040000915527,0,0,180);
	CreateDynamicObject(638,-2033.0645751953,-54.827304840088,35.040000915527,0,0,179.99450683594);
	CreateDynamicObject(638,-2033.0645751953,-52.148387908936,35.040000915527,0,0,179.99450683594);
	CreateDynamicObject(638,-2033.0645751953,-49.481288909912,35.040000915527,0,0,179.99450683594);
	CreateDynamicObject(638,-2033.0645751953,-46.811878204346,35.040000915527,0,0,179.99450683594);
	CreateDynamicObject(638,-2033.0645751953,-44.142524719238,35.040000915527,0,0,179.99450683594);
	CreateDynamicObject(638,-2033.0645751953,-41.471038818359,35.040000915527,0,0,179.99450683594);
	CreateDynamicObject(630,-2026,-41,38.829845428467,0,0,0);
	CreateDynamicObject(630,-2029,-41,38.829845428467,0,0,0);
	CreateDynamicObject(1346,-2031.6256103516,-42.097049713135,35.772373199463,0,0,0);
	CreateDynamicObject(1291,-2018.0906982422,-53.591850280762,34.839916229248,0,0,0);
	CreateDynamicObject(3522,-2026.5155029297,-55.487903594971,34.42622756958,0,0,0);
	CreateDynamicObject(3522,-2028.6444091797,-53.388889312744,34.425998687744,0,0,90);
	CreateDynamicObject(3522,-2028.7998046875,-57.590114593506,34.425998687744,0,0,270);
	CreateDynamicObject(3522,-2030.9508056641,-55.493049621582,34.42622756958,0,0,180);
	CreateDynamicObject(642,-2028.8109130859,-55.581256866455,35.544830322266,0,0,0);

//Респа нубов ЛС

	CreateObject(14859,969.32427978516,-1605.1096191406,15.594968795776,0,0,180.13507080078);
	CreateDynamicObject(14860,967.12591552734,-1604.9033203125,15.16032409668,0,0,271.64495849609);
	CreateDynamicObject(14861,967.52429199219,-1603.021484375,14.041999816895,0,0,270);
	CreateDynamicObject(14862,966.51983642578,-1602.8740234375,14.343015670776,0,0,270);
	CreateDynamicObject(14863,969.60504150391,-1604.3131103516,14.190549850464,0,0,62.240020751953);

//Стоянка ЛС

	CreateDynamicObject(8041,928.82366943359,-1685.5631103516,18.363725662231,0,0,180);
	CreateDynamicObject(18284,947.5009765625,-1680,15.488618850708,0,0,0);
	CreateDynamicObject(982,940.2607421875,-1695.1260986328,13.226445198059,0,0,90);
	CreateDynamicObject(982,940.30187988281,-1669.4327392578,13.234250068665,0,0,90);
	CreateDynamicObject(982,953.07171630859,-1682.2733154297,13.221527099609,0,0,0);
	CreateDynamicObject(983,927.47106933594,-1672.6253662109,13.229276657104,0,0,0);
	CreateDynamicObject(18284,947.5,-1685.5100097656,15.487999916077,0,0,0);

//Починки

	for(new i; i<sizeof(PayPos); i++) PayCP[i] = CreateDynamicCP(PayPos[i][0],PayPos[i][1],PayPos[i][2], 6.0,0,0, -1, 6.0);
	
	
	CarShopCP[0] = CreateDynamicCP(-1664.0131,1207.7834,7.2546, 1.0,0,0, -1, 3.0);
	Create3DTextLabel("{00CC00}Автосалон\n{33CCFF}Класс: {FFD700}Элитный",COLOR_WHITE,-1664.0131,1207.7834,7.2546+0.7,15.0,0,1);
	CreatePickup(1239,23,-1664.0131,1207.7834,7.2546);
	
	CarShopCP[1] = CreateDynamicCP(-1967.8540,296.3083,35.1719, 1.0,0,0, -1, 3.0);
	Create3DTextLabel("{00CC00}Автосалон\n{33CCFF}Класс: {FFD700}Спортивный",COLOR_WHITE,-1967.8540,296.3083,35.1719+0.7,15.0,0,1);
	CreatePickup(1239,23,-1967.8540,296.3083,35.1719);
	
	CarShopCP[2] = CreateDynamicCP(563.6541,-1293.1981,17.2482, 1.0,0,0, -1, 3.0);
	Create3DTextLabel("{00CC00}Автосалон\n{33CCFF}Класс: {FFD700}Премиум",COLOR_WHITE,563.6541,-1293.1981,17.2482+0.7,15.0,0,1);
	CreatePickup(1239,23,563.6541,-1293.1981,17.2482);
	
	CarShopCP[3] = CreateDynamicCP(2200.8901,1394.2567,11.0625, 1.0,0,0, -1, 3.0);
	Create3DTextLabel("{00CC00}Автосалон\n{33CCFF}Класс: {FFD700}Классика",COLOR_WHITE,2200.8901,1394.2567,11.0625+0.7,15.0,0,1);
	CreatePickup(1239,23,2200.8901,1394.2567,11.0625);
	
	CarShopCP[4] = CreateDynamicCP(2131.7759,-1150.9517,24.1005, 1.0,0,0, -1, 3.0);
	Create3DTextLabel("{00CC00}Автосалон\n{33CCFF}Класс: {FFD700}Эконом",COLOR_WHITE,2131.7759,-1150.9517,24.1005+0.7,15.0,0,1);
	CreatePickup(1239,23,2131.7759,-1150.9517,24.1005);
	
//Маппинг Между ЛС и СФ (Заправка, трейлеры, деревья)
	
	CreateDynamicObject(11417,-110.33771514893,-1177.9483642578,6.7644720077515,0,0,0);
	CreateDynamicObject(698,-162.37545776367,-1290.4094238281,8.4547920227051,0,0,0);
	CreateDynamicObject(698,-115.50942993164,-1219.5223388672,7.5207080841064,0,0,0);
	CreateDynamicObject(689,-127.25869750977,-1154.7021484375,2.0035018920898,0,0,0);
	CreateDynamicObject(689,-167.71311950684,-1218.4654541016,4.4445466995239,0,0,0);
	CreateDynamicObject(689,-64.512451171875,-1082.4069824219,6.4158163070679,0,0,0);
	CreateDynamicObject(690,-327.1884765625,-880.32928466797,45.875137329102,0,0,0);
	CreateDynamicObject(690,-79.877746582031,-1274.2147216797,0.99733352661133,0,0,0);
	CreateDynamicObject(689,-223.43240356445,-1234.7406005859,5.9312286376953,0,0,0);
	CreateDynamicObject(690,-173.52352905273,-1172,3.1685671806335,0,0,0);
	CreateDynamicObject(694,-501.81265258789,-831.37689208984,45.687576293945,0,0,272.65997314453);
	CreateDynamicObject(3168,-128.10307312012,-1140.5357666016,1.4204692840576,0,0,262.73498535156);
	CreateDynamicObject(3168,-144.84178161621,-1141.0493164063,1.6659362316132,354.25198364258,1.507568359375,229.13856506348);
	CreateDynamicObject(3171,-142.78869628906,-1127.2379150391,2.7921695709229,0,0,196.51507568359);
	CreateDynamicObject(3171,-133.53659057617,-1104.5457763672,3.517068862915,0,0,212.39245605469);
	CreateDynamicObject(3168,-132.50210571289,-1087.5723876953,4.4452729225159,352.75,0,144.90505981445);
	CreateDynamicObject(3168,-113.32083892822,-1106.2802734375,1.8256607055664,0,2.5,334.19409179688);
	CreateDynamicObject(3171,-115.9400177002,-1090.2026367188,4.516761302948,0,351,46.917724609375);
	CreateDynamicObject(689,-151.99967956543,-1097.4168701172,3.8213720321655,0,0,0);
	CreateDynamicObject(690,-194.85830688477,-1130.8012695313,1.6205940246582,0,0,0);
	CreateDynamicObject(690,-119.19244384766,-1516.9543457031,1.9221801757813,0,0,0);
	CreateDynamicObject(690,-100.59352111816,-983.31866455078,23.143444061279,0,0,0);
	CreateDynamicObject(973,-129.43382263184,-973.83197021484,25.972080230713,0.24981689453125,357.75,137.22485351563);
	CreateDynamicObject(973,-112.96254730225,-989.80902099609,24.703672409058,0.24661254882813,355.49780273438,130.73449707031);
	CreateDynamicObject(973,-106.88068389893,-996.88006591797,23.979396820068,0.24169921875,355.49560546875,130.73181152344);
	CreateDynamicObject(973,-114.266456604,-982.11212158203,24.817510604858,0.24212646484375,2.9956359863281,68.575103759766);
	CreateDynamicObject(973,-136.49255371094,-967.69738769531,26.340759277344,0.2471923828125,357.74780273438,140.72467041016);
	CreateDynamicObject(973,-110.24080657959,-973.73992919922,24.141298294067,0.24102783203125,5.2438049316406,59.811614990234);
	CreateDynamicObject(973,-124.1441116333,-972.86791992188,25.454425811768,0.2467041015625,355.74780273438,241.67333984375);
	CreateDynamicObject(973,-119.74083709717,-964.68811035156,24.608966827393,359.74377441406,353.99279785156,241.62683105469);
	CreateDynamicObject(973,-81.347099304199,-1035.8773193359,23.05767250061,358.03344726563,349.49365234375,116.32534790039);
	CreateDynamicObject(973,-77.880653381348,-1044.2252197266,21.095027923584,357.81201171875,345.98583984375,107.53973388672);
	CreateDynamicObject(973,-76.735763549805,-1047.7452392578,20.163440704346,358.05474853516,345.73602294922,107.59051513672);
	CreateDynamicObject(973,-73.49877166748,-1065.5109863281,14.929340362549,359.52380371094,342.24932861328,94.792419433594);
	CreateDynamicObject(973,-73.186401367188,-1074.3271484375,12.041550636292,359.52416992188,341.49609375,88.783782958984);
	CreateDynamicObject(973,-73.804077148438,-1082.9584960938,9.2550745010376,359.51873779297,342.74353027344,82.790985107422);
	CreateDynamicObject(973,-75.391593933105,-1091.5968017578,6.610634803772,359.51403808594,343.74047851563,76.546020507813);
	CreateDynamicObject(973,-78.034408569336,-1100.2265625,4.7521848678589,358.99829101563,352.98974609375,69.311187744141);
	CreateDynamicObject(973,-69.57341003418,-1062.4367675781,16.107891082764,15.989990234375,2.0805358886719,345.92666625977);
	CreateDynamicObject(973,-70.898223876953,-1052.5974121094,18.318643569946,350.11254882813,350.85577392578,170.02160644531);
	CreateDynamicObject(973,-397.45852661133,-823.50598144531,47.149990081787,0,356.75,172.44506835938);
	CreateDynamicObject(973,-406.71911621094,-822.28381347656,47.681713104248,0,356.748046875,172.44140625);
	CreateDynamicObject(973,-415.77963256836,-822.66241455078,48.148948669434,0,357.498046875,192.51141357422);
	CreateDynamicObject(973,-424.90649414063,-824.67053222656,48.466487884521,0,358.4951171875,192.50793457031);
	CreateDynamicObject(973,-433.98043823242,-826.99548339844,48.714870452881,0,358.49487304688,196.25244140625);
	CreateDynamicObject(973,-442.69088745117,-830.33966064453,48.962352752686,0,358.49487304688,205.74877929688);
	CreateDynamicObject(973,-451.41787719727,-833.37933349609,49.216167449951,0,358.49487304688,192.49644470215);
	CreateDynamicObject(689,-770.55218505859,-1079.9788818359,82.602897644043,0,0,0);
	CreateDynamicObject(689,-862.88848876953,-1223.3616943359,108.39875030518,0,0,0);
	CreateDynamicObject(727,-857.89178466797,-1198.1558837891,106.08177185059,0,0,0);
	CreateDynamicObject(727,-869.46276855469,-1177.5164794922,104.22909545898,0,0,0);
	CreateDynamicObject(727,-824.59814453125,-1052.9827880859,88.482604980469,0,0,0);
	CreateDynamicObject(727,-1251.8305664063,-768.95446777344,64.515167236328,0,0,0);
	CreateDynamicObject(727,-1270.8874511719,-778.66094970703,67.184051513672,0,0,0);
	CreateDynamicObject(727,-1292.2209472656,-790.38690185547,69.435150146484,0,0,0);
	CreateDynamicObject(727,-1310.6140136719,-796.65148925781,71.90950012207,0,0,0);
	CreateDynamicObject(727,-1330.482421875,-799.17700195313,74.200889587402,0,0,0);
	CreateDynamicObject(727,-1352.2457275391,-804.14819335938,76.991241455078,0,0,0);
	CreateDynamicObject(727,-1370.8991699219,-803.93041992188,79.375274658203,0,0,0);
	CreateDynamicObject(727,-1389.5822753906,-803.52880859375,81.924011230469,0,0,0);
	CreateDynamicObject(727,-1408.1254882813,-804.07409667969,82.228988647461,0,0,0);
	CreateDynamicObject(727,-1427.6348876953,-805.15747070313,80.055732727051,0,0,0);
	CreateDynamicObject(727,-1445.0797119141,-806.14971923828,76.687850952148,0,0,0);
	CreateDynamicObject(727,-1462.1414794922,-808.53619384766,71.965942382813,0,0,0);
	CreateDynamicObject(727,-1481.1750488281,-807.70147705078,66.438674926758,0,0,0);
	CreateDynamicObject(727,-1497.7136230469,-807.30908203125,62.167213439941,0,0,0);
	CreateDynamicObject(731,-1803.3178710938,-605.30249023438,15.092781066895,0,0,0);
	CreateDynamicObject(731,-1779.0433349609,-629.82623291016,17.98789024353,0,0,0);
	CreateDynamicObject(731,-1796.0943603516,-654.68286132813,21.44261932373,0,0,0);
	CreateDynamicObject(731,-1780.234375,-673.90301513672,24.006135940552,0,0,0);
	CreateDynamicObject(731,-1796.01953125,-702.65216064453,26.605529785156,0,0,0);
	CreateDynamicObject(689,-1771.2559814453,-720.15740966797,30.159725189209,0,0,0);
	
//Шлагбаумы между городами

	CreateDynamicObject(9623, 1750.00, 525.96, 29.27,   -3.00, 0.00, 340.70);
	CreateDynamicObject(966, 1760.12, 532.66, 25.82,   0.00, 0.00, 341.49);
	PostS[0] = CreateDynamicObject(968, 1760.20, 532.65, 26.6000,   0.00, 270.00, 340.00);
	CreateDynamicObject(966, 1751.23, 535.72, 25.82,   0.00, 0.00, 341.49);
	PostS[1] = CreateDynamicObject(968, 1751.22, 535.72, 26.6000,   0.00, 270.00, 340.00);
	CreateDynamicObject(966, 1736.55, 520.67, 26.84,   0.00, 0.00, 341.49);
	PostS[2] = CreateDynamicObject(968, 1736.67, 520.61, 27.5300,   0.00, 270.00, 340.00);
	CreateDynamicObject(966, 1727.79, 523.81, 26.84,   0.00, 0.00, 341.49);
	PostS[3] = CreateDynamicObject(968, 1727.87, 523.76, 27.5300,   0.00, 270.00, 340.00);
	CreateDynamicObject(1237, 1736.66, 542.29, 25.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1735.45, 542.69, 25.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1736.37, 543.41, 25.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1728.63, 545.07, 25.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1727.31, 545.54, 25.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1728.43, 546.30, 25.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1745.31, 516.13, 27.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1746.58, 515.72, 27.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1745.61, 514.96, 27.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1754.13, 513.19, 27.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1755.26, 512.75, 27.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1237, 1754.24, 511.92, 27.02,   0.00, 0.00, 0.00);
	CreateDynamicObject(1290, 1733.79, 508.75, 31.79,   0.00, 0.00, 341.48);
	CreateDynamicObject(1290, 1729.86, 523.89, 31.79,   0.00, 0.00, 341.48);
	CreateDynamicObject(1290, 1746.77, 518.29, 31.79,   0.00, 0.00, 341.48);
	CreateDynamicObject(1290, 1735.48, 540.65, 31.79,   0.00, 0.00, 341.48);
	CreateDynamicObject(1290, 1752.57, 534.54, 31.79,   0.00, 0.00, 341.48);
	CreateDynamicObject(1622, 1749.40, 529.94, 30.61,   0.00, 0.00, 355.64);
	CreateDynamicObject(1622, 1758.26, 526.55, 30.61,   0.00, 0.00, 355.64);
	CreateDynamicObject(1622, 1732.47, 528.74, 31.15,   0.00, 0.00, 183.24);
	CreateDynamicObject(9623, 1732.97, 531.89, 29.27,   -3.00, 0.00, 340.70);
	CreateDynamicObject(1622, 1724.62, 532.13, 31.15,   0.00, 0.00, 183.24);
	CreateDynamicObject(2775, 1732.74, 536.36, 30.80,   -215.00, 0.00, 337.00);
	CreateDynamicObject(2775, 1740.92, 525.32, 30.80,   -3.00, 0.00, 341.00);
	CreateDynamicObject(2775, 1749.00, 522.34, 30.80,   -3.00, 0.00, 341.00);
	CreateDynamicObject(2775, 1741.89, 533.22, 30.80,   -215.00, 0.00, 337.00);

	PostCP[0] = CreateDynamicCP(1755.4865,529.8637,26.9670, 4, -1, -1, -1, 7.5); // 1
	PostCP[1] = CreateDynamicCP(1746.9406,531.7758,27.0220, 4, -1, -1, -1, 7.5); // 2
	PostCP[2] = CreateDynamicCP(1735.0326,526.8887,27.5122, 4, -1, -1, -1, 7.5); // 3
	PostCP[3] = CreateDynamicCP(1727.1885,529.6896,27.5017, 4, -1, -1, -1, 7.5); // 4
	PostCP[4] = CreateDynamicCP(46.2052,-1537.5712,4.9019, 4, -1, -1, -1, 7.5); // 3
	PostCP[5] = CreateDynamicCP(59.6429,-1525.3892,4.6861, 4, -1, -1, -1, 7.5); // 4
	PostCP[6] = CreateDynamicCP(612.3333,-1205.1943,17.8328, 4, -1, -1, -1, 7.5); // 3
	PostCP[7] = CreateDynamicCP(633.0243,-1196.2802,17.8383, 4, -1, -1, -1, 7.5); // 4
	PostCP[8] = CreateDynamicCP(607.6208,-1195.5548,18.6201, 4, -1, -1, -1, 7.5); // 3
	PostCP[9] = CreateDynamicCP(628.1243,-1187.6829,18.3993, 4, -1, -1, -1, 7.5); // 4
	
	CreateDynamicObject(966,52.3427734375,-1534.8974609375,4.0763363838196,0,0,82.7490234375);
	CreateDynamicObject(966,53.388671875,-1528.515625,4.0535798072815,0,0,261.74377441406);
	PostS[4] = CreateDynamicObject(968,52.3515625,-1534.7744140625,4.7959,0,270,82.7490234375);
	PostS[5] = CreateDynamicObject(968,53.375,-1528.6474609375,4.7856,0,270,261.74926757813);
	CreateDynamicObject(8168,51.7705078125,-1531.583984375,6.2322678565979,0,0,6.998291015625);
	CreateDynamicObject(1237,51.3681640625,-1542.47265625,4.0999999046326,0,0,0);
	CreateDynamicObject(1237,51.237056732178,-1543.5124511719,4.0999999046326,0,0,0);
	CreateDynamicObject(1237,54.521484375,-1520.857421875,4.0999999046326,0,0,0);

	CreateDynamicObject(966,614.05908203125,-1199.6832275391,17.12654876709,0,0,19);
	CreateDynamicObject(966,628.07952880859,-1194.0314941406,17.116924285889,0,0,204);
	PostS[6] = CreateDynamicObject(968,614.07104492188,-1199.6805419922,17.7843,0,270,19);
	PostS[7] = CreateDynamicObject(968,628.03521728516,-1194.0726318359,17.8919,0,270,204);
	CreateDynamicObject(983,624.66821289063,-1195.67578125,17.739810943604,0,0,296.24084472656);
	CreateDynamicObject(983,637.54321289063,-1189.6591796875,17.769971847534,0,0,296.2353515625);
	CreateDynamicObject(983,617.67260742188,-1198.578125,17.729053497314,0,0,288.48999023438);
	CreateDynamicObject(983,604.06298828125,-1203.0654296875,17.729852676392,0,0,289.98413085938);
	CreateDynamicObject(967,626.70178222656,-1193.8952636719,17.090410232544,0,0,295.60998535156);
	CreateDynamicObject(967,606.15710449219,-1201.5684814453,17.119953155518,0,0,289.35913085938);
	
	return 1;
} //CreateResp
stock CreateTeleports()
{ 
//------------------------------------------------------------------------------Выходы
    ExitCP[0] = CreateDynamicCP(246.7943,62.3267,1003.6406, 1, -1, -1, -1, 5.0);//LSPD
	ExitCP[1] = CreateDynamicCP(246.3386,107.2998,1003.2188, 1, -1, -1, -1, 5.0);//SFPD
	ExitCP[2] = CreateDynamicCP(238.6516,138.7939,1003.0234, 1, -1, -1, -1, 5.0);//LVPD
	ExitCP[3] = CreateDynamicCP(350.0739,178.5809,1019.9844, 1, -1, -1, -1, 7.0);//SAMD
	ExitCP[4] = CreateDynamicCP(378.1498,159.5918,1025.78911, 1, -1, -1, -1, 5.0);//News
	ExitCP[5] = CreateDynamicCP(-2026.9052,-103.6019,1035.1835, 1, -1, -1, -1, 5.0);//АШ на улuцу
	ExitCP[6] = CreateDynamicCP(-2029.7480,-119.6215,1035.1719, 1, -1, -1, -1, 5.0);//АШ к площадке
	ExitCP[7] = CreateDynamicCP(390.7688,173.8054,1008.3828, 1, -1, -1, -1, 5.0);//Мэрия
	ExitCP[8] = CreateDynamicCP(1212.0763,-25.8747,1000.9531, 1, -1, -1, -1, 5.0);//Хитманы
	ExitCP[9] = CreateDynamicCP(501.9842,-67.5633,998.7578, 1, HUN, -1, -1, 5.0);//Головорезы
	ExitCP[10] = CreateDynamicCP(2548.7993,-1294.7288,1060.9844, 1, -1, -1, -1, 5.0);//Мафuu
	ExitCP[11] = CreateDynamicCP(2495.9653,-1692.0845,1014.7422, 1, -1, -1, -1, 5.0);//Банды
	ExitCP[12] = CreateDynamicCP(-2170.3542,639.3329,1052.3750, 1, -1, -1, -1, 5.0);//Якудза
	ExitCP[13] = CreateDynamicCP(132.92687988281,1939.4051513672,19.297430038452, 1, SFPD, -1, -1, 5.0);//С зоны 51
	ExitCP[14] = CreateDynamicCP(246.3837,88.0005,1003.6406, 1, -1, -1, -1, 5.0);//На парковку lspd
	//Create3DTextLabel("[Парковка LSPD]",COLOR_WHITE,246.3837,88.0005,1004.6406,15.0,LSPD,1);
	ExitCP[15] = CreateDynamicCP(215.5430,126.7069,1003.2188, 1, -1, -1, -1, 5.0);//На парковку sfpd
	//Create3DTextLabel("[Парковка SFPD]",COLOR_WHITE,215.5430,126.7069,1004.2188,15.0,SFPD,1);
	ExitCP[16] = CreateDynamicCP(207.6658,142.4018,1003.0234, 1, -1, -1, -1, 5.0);//На парковку lvpd
	//Create3DTextLabel("[Парковка LVPD]",COLOR_WHITE,207.6658,142.4018,1004.0234,15.0,LVPD,1);
	ExitCP[17] = CreateDynamicCP(367.0717,162.2261,1019.9844, 1, -1, -1, -1, 5.0);//На крышу samd
	ExitCP[18] = CreateDynamicCP(370.8449,160.2109,1025.7891, 1, -1, -1, -1, 5.0);//На крышу san
	ExitCP[19] = CreateDynamicCP(318.6534,1114.4840,1083.8828, 1, -1, -1, -1, 5.0);//Наркопритон
	ExitCP[20] = CreateDynamicCP(2305.0595703125,-16.145057678223,26.7421875, 1, -1, -1, -1, 5.0);//Банк
	ExitCP[21] = CreateDynamicCP(772.36785888672,-5.3907527923584,1000.7286987305, 1, -1, -1, -1, 5.0);//Gym
	ExitCP[22] = CreateDynamicCP(774.14373779297,-50.429077148438,1000.5859375, 1, -1, -1, -1, 5.0);//Gym
	ExitCP[23] = CreateDynamicCP(2215.185546875,-1150.5368652344,1025.796875, 1, -1, -1, -1, 5.0);//Общага
	ExitCP[24] = CreateDynamicCP(344.7814,178.4520,1019.9844, 1, -1, -1, -1, 7.0);//News

    ExitCP[25] = CreateDynamicCP(1964.0221,-350.0398,1092.0, 1.0,-1,-1, -1, 4.0);
    
    ExitCP[26] = CreateDynamicCP(-2019.7532,-18.6168,6.0,1.0,0,0, -1, 4.0);
	ExitCP[27] = CreateDynamicCP(972.0911,-1606.2769,13.7,1.0,0,0, -1, 4.0);
    ExitCP[28] = CreateDynamicCP(316.4094,-170.2961,1000.0,1.0,-1,-1, -1, 4.0);
    
    ExitCP[29] = CreateDynamicCP(1133.1105,-15.8301,1000.6797,1.0,-1,-1, -1, 4.0);
    ExitCP[30] = CreateDynamicCP(242.2600,66.3403,1003.6406,1.0,-1,-1, -1, 4.0);

    ExitCP[31] = CreateDynamicCP(372.0491,165.2425,1008.3828,1.0,-1,-1, -1, 4.0);
//------------------------------------------------------------------------------Входы
    EnterCP[0] = CreateDynamicCP(1555.1815,-1675.5671,16.1953, 1, -1, -1, -1, 5.0);//LSPD
    EnterCP[1] = CreateDynamicCP(-1605.5594,710.6655,13.8672, 1, -1, -1, -1, 5.0);//SFPD
    EnterCP[2] = CreateDynamicCP(2337.1792,2459.2419,14.9742, 1, -1, -1, -1, 5.0);//LVPD
    EnterCP[5] = CreateDynamicCP(-2026.6395,-101.9330,35.1641, 1, -1, -1, -1, 5.0);//АШ на улuцу
    EnterCP[6] = CreateDynamicCP(-2029.7643,-120.7421,35.1718, 1, -1, -1, -1, 5.0);//АШ к площадке
    EnterCP[7] = CreateDynamicCP(-2766.2231445313,375.58441162109,6.3346824645996, 1, -1, -1, -1, 5.0);//Мэрия
    EnterCP[8] = CreateDynamicCP(1073.1573,-345.5894,73.9922, 1, -1, -1, -1, 5.0);//Хитманы
    EnterCP[9] = CreateDynamicCP(870.4536,-24.9450,63.9815, 1, -1, -1, -1, 5.0);//Головорезы
    EnterCP[10] = CreateDynamicCP(1172.0768,-1321.4958,15.3989, 1, -1, -1, -1, 5.0);//SAMD
    EnterCP[11] = CreateDynamicCP(-2655.0627,640.1640,14.4545, 1, -1, -1, -1, 5.0);//SAMD
    EnterCP[12] = CreateDynamicCP(1607.3701,1815.2408,10.8203, 1, -1, -1, -1, 5.0);//SAMD
    EnterCP[13] = CreateDynamicCP(1658.5770,-1343.3867,17.4382, 1, -1, -1, -1, 5.0);//NEWS
    EnterCP[14] = CreateDynamicCP(-2056.6057,454.9281,35.1719, 1, -1, -1, -1, 5.0);//NEWS
    EnterCP[15] = CreateDynamicCP(2124.3252,2380.3167,10.8203, 1, -1, -1, -1, 5.0);//NEWS

    EnterCP[16] = CreateDynamicCP(1456.1324,2773.4507,10.8203, 1, -1, -1, -1, 5.0);//LCN
    EnterCP[17] = CreateDynamicCP(2634.7605,1824.1888,11.0161, 1, -1, -1, -1, 5.0);//YA
    EnterCP[18] = CreateDynamicCP(937.0786,1733.2498,8.8516, 1, -1, -1, -1, 5.0);//RM

    EnterCP[19] = CreateDynamicCP(2495.3665,-1691.1370,14.7656, 1, -1, -1, -1, 5.0);//Groove
    EnterCP[20] = CreateDynamicCP(2000.0259,-1114.0546,27.1250, 1, -1, -1, -1, 5.0);//Ballas
    EnterCP[21] = CreateDynamicCP(2808.0747,-1176.1071,25.3793, 1, -1, -1, -1, 5.0);//Vagos
    EnterCP[22] = CreateDynamicCP(1852.2900,-1990.2065,13.546, 1, -1, -1, -1, 5.0);//El Coronos
    EnterCP[23] = CreateDynamicCP(2145.0156,-1801.7720,16.1406, 1, -1, -1, -1, 5.0);//Rifa
    EnterCP[24] = CreateDynamicCP(-2129.1255,-188.2981,35.3203, 1, -1, -1, -1, 5.0);//Street
	EnterCP[25] = CreateDynamicCP(153.41116333008,1944.796875,19.505365371704, 1, -1, -1, -1, 5.0);//На зону 51
	EnterCP[26] = CreateDynamicCP(1568.6620,-1689.9703,6.2188, 1, -1, -1, -1, 5.0);//С парковки lspd
	EnterCP[27] = CreateDynamicCP(-1594.2043,716.2861,-4.9063, 1, -1, -1, -1, 5.0);//С парковки sfpd
	EnterCP[28] = CreateDynamicCP(2282.1770,2423.2983,3.4766, 1, -1, -1, -1, 5.0);//С парковки lvpd
	EnterCP[29] = CreateDynamicCP(1162.5721,-1329.8956,31.4890, 1, -1, -1, -1, 5.0);//С крыши SAMD
	EnterCP[30] = CreateDynamicCP(1613.3912,1786.2497,30.4688, 1, -1, -1, -1, 5.0);//С крыши SAMD
	EnterCP[31] = CreateDynamicCP(2099.3760,2402.1597,60.8169, 1, -1, -1, -1, 5.0);//С крыши NEWS
	EnterCP[32] = CreateDynamicCP(1676.2619628906,-1334.96875,158.4765625, 1, -1, -1, -1, 5.0);//С крыши NEWS
	EnterCP[33] = CreateDynamicCP(2165.9792,-1671.2396,15.0732, 1, -1, -1, -1, 5.0);//аркопритон
	EnterCP[34] = CreateDynamicCP(1459.3409,-1010.6541,26.8438, 1, -1, -1, -1, 5.0);//банк
	CreateDynamicMapIcon(1459.3409,-1010.6541,26.8438, 52, 0, 0, 0, -1, 300.0);
	EnterCP[35] = CreateDynamicCP(-2455.6724,503.8921,30.0781, 1, -1, -1, -1, 5.0);//банк
	CreateDynamicMapIcon(-2648.8909,375.9803,6.1593, 52, 0, 0, 0, -1, 300.0);
	EnterCP[36] = CreateDynamicCP(2229.7856445313,-1721.5083007813,13.563534736633, 1, -1, -1, -1, 5.0);//Gym
	CreateDynamicMapIcon(2229.7856445313,-1721.5083007813,13.563534736633, 54, 0, 0, 0, -1, 300.0);
	EnterCP[37] = CreateDynamicCP(-2270.2600097656,-155.96618652344,35.3203125, 1, -1, -1, -1, 5.0);//Gym
	CreateDynamicMapIcon(-2270.2600097656,-155.96618652344,35.3203125, 54, 0, 0, 0, -1, 300.0);

	EnterCP[38] = CreateDynamicCP(2232.5024414063,-1159.8671875,25.890625, 1, -1, -1, -1, 5.0);//Общага
	EnterCP[39] = CreateDynamicCP(-2717.7808,-317.5675,7.8438, 1, -1, -1, -1, 5.0);//Общага
	EnterCP[40] = CreateDynamicCP(2637.3083,2352.0249,10.8203, 1, -1, -1, -1, 5.0);//Общага
	EnterCP[41] = CreateDynamicCP(-2226.3108,251.9674,35.3203, 1, -1, -1, -1, 5.0);//SFPD
	EnterCP[42] = CreateDynamicCP(-1961.4680,533.3085,35.1719, 1, -1, -1, -1, 5.0);//SFPD
	CreateDynamicMapIcon(-1961.4680,533.3085,35.1719, 30, 0, 0, 0, -1, 300.0);
	
	EnterCP[43] = CreateDynamicCP(-1989.7310,1117.9515,54.4688, 1.0,-1,-1, -1, 5.0);
	EnterCP[44] = CreateDynamicCP(-2027.7841,-40.6048,38.8047,1.0,0,0, -1, 4.0);
    EnterCP[45] = CreateDynamicCP(987.4988,-1624.5237,14.9297,1.0,0,0, -1, 4.0);
    EnterCP[46] = CreateDynamicCP(2019.3201,1007.7758,10.8203,1.0,0,0, -1, 4.0);
    EnterCP[47] = CreateDynamicCP(324.8669,1945.8831,21.8235,1.0,0,0, -1, 4.0);
    
    EnterCP[48] = CreateDynamicCP(1658.5918,2250.0391,11.5701,1.0,0,0, -1, 4.0);
    CreateDynamicMapIcon(1658.5918,2250.0391,11.5701, 25, 0, 0, 0, -1, 200.0);

    EnterCP[49] = CreateDynamicCP(1564.9747,-1667.0013,28.3956,1.0,0,0, -1, 10.0);

    EnterCP[50] = CreateDynamicCP(371.9040,167.9287,1008.3828,1.0,-1,-1, -1, 4.0); // Мэрия вход
	return 1;
} 
stock CreateIcons()
{ 
    //CreateDynamicMapIcon(Float:x, Float:y, Float:z, type, color, worldid = -1, interiorid = -1, playerid = -1, Float:distance = 100.0);
    CreateDynamicMapIcon(1555.1815,-1675.5671,16.1953, 30, 0, 0, 0, -1, 300.0);//LSPD
    CreateDynamicMapIcon(-1605.5594,710.6655,13.8672, 30, 0, 0, 0, -1, 300.0);//SFPD
    CreateDynamicMapIcon(2337.1792,2459.2419,14.9742, 30, 0, 0, 0, -1, 300.0);//LVPD

    //CreateDynamicMapIcon(-2026.6395,-101.9330,35.1641, 20, 0, 0, 0, -1, 300.0);//Мэрия
    //CreateDynamicMapIcon(-2026.6395,-101.9330,35.1641, 36, 0, 0, 0, -1, 300.0);//Хитманы
    //CreateDynamicMapIcon(-2026.6395,-101.9330,35.1641, 36, 0, 0, 0, -1, 300.0);//Головорезы
    CreateDynamicMapIcon(1172.0768,-1321.4958,15.3989, 22, 0, 0, 0, -1, 300.0);//SAMD
    CreateDynamicMapIcon(-2655.0627,640.1640,14.4545, 22, 0, 0, 0, -1, 300.0);//SAMD
    CreateDynamicMapIcon(1607.3701,1815.2408,10.8203, 22, 0, 0, 0, -1, 300.0);//SAMD
    CreateDynamicMapIcon(1658.5770,-1343.3867,17.4382, 48, 0, 0, 0, -1, 300.0);//NEWS
    CreateDynamicMapIcon(-2056.6057,454.9281,35.1719, 48, 0, 0, 0, -1, 300.0);//NEWS
    CreateDynamicMapIcon(2124.3252,2380.3167,10.8203, 48, 0, 0, 0, -1, 300.0);//NEWS
    CreateDynamicMapIcon(1456.1324,2773.4507,10.8203, 23, 0, 0, 0, -1, 300.0);//LCN
    CreateDynamicMapIcon(2634.7605,1824.1888,11.0161, 44, 0, 0, 0, -1, 300.0);//YA
    CreateDynamicMapIcon(937.0786,1733.2498,8.8516, 34, 0, 0, 0, -1, 300.0);//RM
    CreateDynamicMapIcon(2495.3665,-1691.1370,14.7656, 62, 0, 0, 0, -1, 300.0);//Groove
    CreateDynamicMapIcon(2000.0259,-1114.0546,27.1250, 59, 0, 0, 0, -1, 300.0);//Ballas
    CreateDynamicMapIcon(2808.0747,-1176.1071,25.3793, 60, 0, 0, 0, -1, 300.0);//Vagos
    CreateDynamicMapIcon(1852.2900,-1990.2065,13.546, 58, 0, 0, 0, -1, 300.0);//El Coronos
    CreateDynamicMapIcon(2145.0156,-1801.7720,16.1406, 61, 0, 0, 0, -1, 300.0);//Rifa
    CreateDynamicMapIcon(-2129.1255,-188.2981,35.3203, 53, 0, 0, 0, -1, 300.0);//Street
    

    CreateDynamicMapIcon(1001.9088,-940.5200,41.8828, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(-2029.1836,157.4326,28.5630, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(-2407.3716,978.1340,45.0239, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(-1675.2107,417.0712,6.9068, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(2639.2871,1104.6802,10.5459, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(2119.9551,922.1698,10.8203, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(1943.5933,-1769.2810,13.3906, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(-90.6062,-1171.9680,2.3329, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(-38.8737,-440.2667,1.4909, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(2203.1375,2475.3303,10.8203, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(-1605.9341,-2713.6794,48.5335, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(-2243.6943,-2559.7363,31.9219, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(654.4543,-560.5062,16.3359, 55, 0, 0, 0, -1, 200.0);
	CreateDynamicMapIcon(1385.1614,460.6060,20.1109, 55, 0, 0, 0, -1, 200.0);

	return 1;
}
stock CreatePickups()
{


    JobCP[BDG] = CreateDynamicCP(2225.4370,-1717.1016,13.5041,1,0,0,-1,1.5);
    CreatePickup(1239,23,2225.4370,-1717.1016,13.5041);
	Create3DTextLabel("Работа: Телохранитель",COLOR_WHITE,2225.4370,-1717.1016,13.5041+0.7,50.0,0,1);

	JobCP[STR] = CreateDynamicCP(725.6328,-1440.1075,13.5318,1,0,0,-1,1.5);
	CreatePickup(1239,23,725.6328,-1440.1075,13.5318);
	Create3DTextLabel("Работа: Страховщик",COLOR_WHITE,725.6328,-1440.1075,13.5318+0.7,50.0,0,1);

	JobCP[MECH] = CreateDynamicCP(-1924.1092529297,303.55697631836,41.046875,1,0,0,-1,1.5);
	CreatePickup(1239,23,-1924.1092529297,303.55697631836,41.046875);
	Create3DTextLabel("Работа: Механик",COLOR_WHITE,-1924.1092529297,303.55697631836,41.946875,50.0,0,1);

	JobCP[TRUCK] = CreateDynamicCP(-49.8812,-269.3650,6.6332,1,0,0,-1,1.5);
	CreatePickup(1239,23,-49.8812,-269.3650,6.6332,-1);
	Create3DTextLabel("Работа: Дальнобойщик",COLOR_WHITE,-49.8812,-269.3650,7.3332,50.0,0,1);

	JobCP[J_LOADER] = CreateDynamicCP(2137.9661,-2282.2017,20.6719,1,0,0,-1,1.5);
	CreatePickup(1275, 23, 2137.9661,-2282.2017,20.6719, -1);
	Create3DTextLabel("Грузчик",COLOR_WHITE,2137.9661,-2282.2017,20.6719+0.7,20.0,0,1);
	
	JobCP[J_FOREST] = CreateDynamicCP(-2000.1516,-2368.3611,30.7474,1,0,0,-1,1.5);
	CreatePickup(1275, 23, -2000.1516,-2368.3611,30.7474, -1);
	Create3DTextLabel("Лесоруб",COLOR_WHITE,-2000.1516,-2368.3611,30.7474+0.7,20.0,0,1);

	JobCP[J_STEEL] = CreateDynamicCP(-1854.7560,-1561.2656,21.7500,1,0,0,-1,1.5);
	CreatePickup(1275, 23, -1854.7560,-1561.2656,21.7500, -1);
	Create3DTextLabel("Шахтер",COLOR_WHITE,-1854.7560,-1561.2656,21.7500+0.7,20.0,0,1);
	
	JobCP[GUNNER] = CreateDynamicCP(1516.8506,-1464.3885,9.5000,1,0,0,-1,1.5);
	CreatePickup(1239,23,1516.8506,-1464.3885,9.5000);
	Create3DTextLabel("Работа: Продавец оружия",COLOR_WHITE,1516.8506,-1464.3885,10.4000,40.0,0,1);

	JobCP[GUNNER_GET] = CreateDynamicCP(2719.1379,-2517.8215,17.3672,1,0,0,-1,1.5);
	CreatePickup(1239,23,2719.1379,-2517.8215,17.3672);
	Create3DTextLabel("Закупка пакетов",COLOR_WHITE,2719.1379,-2517.8215,17.3672+0.7,30.0,0,1);

	JobCP[GUNNER_DELIVER] = CreateDynamicCP(-535.8046,-506.2124,25.5234,1,0,0,-1,1.5);
	CreatePickup(1239,23,-535.8046,-506.2124,25.5234);
	Create3DTextLabel("Фабрика",COLOR_WHITE,-535.8046,-506.2124,25.5234+0.7,30.0,0,1);

	JobCP[DRUGER] = CreateDynamicCP(321.8630,1127.0040,1083.8828,1,-1,5,-1,1.5);
	CreatePickup(1239,23,321.8630,1127.0040,1083.8828,-1);
	Create3DTextLabel("Работа: Продавец наркотиков",COLOR_WHITE,321.8630,1127.0040,1083.8828+0.7,30.0,-1,1);

	JobCP[DRUGER_GET] = CreateDynamicCP(331.5209,1120.7213,1083.8903,1,-1,5,-1,1.5);
	CreatePickup(1239,23,331.5209,1120.7213,1083.8903,-1);
	Create3DTextLabel("Закупка наркотиков",COLOR_WHITE,331.5209,1120.7213,1083.8903+0.7,30.0,-1,1);

	JobCP[JACK] = CreateDynamicCP(-1687.6511,-18.3468,3.5547,1,0,0,-1,1.5);
	CreatePickup(1239, 23, -1687.6511,-18.3468,3.5547, -1);
	Create3DTextLabel("Работа: Автоугонщик",COLOR_WHITE,-1687.6511,-18.3468,3.5547+0.7,20.0,0,1);

	JobCP[DET] = CreateDynamicCP(360.2845,207.1142,1008.8828,1,-1,-1,-1,1.5);
	CreatePickup(1239, 23, 360.2845,207.1142,1008.3828, -1);
	Create3DTextLabel("Работа: Детектив",COLOR_WHITE,360.2845,207.1142,1008.3828+0.7,20.0,0,1);

	SmenaCP[0] = CreateDynamicCP(204.3725,-160.1485,1000.5234,1,-1,-1,-1,1.5);
	CreatePickup(1275,23,204.3725,-160.1485,1000.5234,-1); // didiers
	Create3DTextLabel("Сменuть скин",COLOR_LIGHTBLUE,204.3725,-160.1485,1000.5234+0.7,15.0,67);

    SmenaCP[1] = CreateDynamicCP(207.7262,-100.8296,1005.2578,1,-1,-1,-1,1.5);
	CreatePickup(1275,23,207.7262,-100.8296,1005.2578,-1); // binco

    SmenaCP[2] = CreateDynamicCP(207.0710,-129.8188,1003.5078,1,-1,-1,-1,1.5);
	CreatePickup(1275,23,207.0710,-129.8188,1003.5078,-1); // prolaps

    SmenaCP[3] = CreateDynamicCP(210.5546,-8.1565,1001.2109,1,-1,-1,-1,1.5);
	CreatePickup(1275,23,210.5546,-8.1565,1001.2109,-1); // victim

    SmenaCP[4] = CreateDynamicCP(203.7762,-43.5953,1001.8047,1,-1,-1,-1,1.5);
	CreatePickup(1275,23,203.7762,-43.5953,1001.8047,-1); // urban

    SmenaCP[5] = CreateDynamicCP(161.4861,-83.8573,1001.8047,1,-1,-1,-1,1.5);
	CreatePickup(1275,23,161.4861,-83.8573,1001.8047,-1);// zip

	KfcCP[0] = CreateDynamicCP(375.56207275391,-68.250854492188,1001.5151367188,1,-1,-1,-1,1.5);
	CreatePickup(2663,23,375.56207275391,-68.250854492188,1001.5151367188,-1);
	KfcCP[1] = CreateDynamicCP(369.65023803711,-6.6333422660828,1001.8588867188,1,-1,-1,-1,1.5);
	CreatePickup(2663,23,369.65023803711,-6.6333422660828,1001.8588867188,-1);
	KfcCP[2] = CreateDynamicCP(373.71627807617,-119.16047668457,1001.4921875,1,-1,-1,-1,1.5);
	CreatePickup(2663,23,373.71627807617,-119.16047668457,1001.4921875,-1);
	KfcCP[3] = CreateDynamicCP(1213.9703,-902.9539,42.9217,4,-1,-1,-1,5);
	CreatePickup(1582,23,1213.9703,-902.9539,42.9217,-1);
	KfcCP[4] = CreateDynamicCP(800.9086,-1629.5806,13.3828,4,-1,-1,-1,5);
	CreatePickup(1582,23,800.9086,-1629.5806,13.3828,-1);
	KfcCP[5] = CreateDynamicCP(2375.4255,-1906.9900,13.3828,4,-1,-1,-1,5);
	CreatePickup(1582,23,2375.4255,-1906.9900,13.3828,-1);
	KfcCP[6] = CreateDynamicCP(-2352.3340,-153.1266,35.3203,4,-1,-1,-1,5);
	CreatePickup(1582,23,-2352.3340,-153.1266,35.3203,-1);
	KfcCP[7] = CreateDynamicCP(-2344.7297,1023.3249,50.6953,4,-1,-1,-1,5);
	CreatePickup(1582,23,-2344.7297,1023.3249,50.6953,-1);
	KfcCP[8] = CreateDynamicCP(1856.8789,2082.7317,10.8186,4,-1,-1,-1,5);
	CreatePickup(1582,23,1856.8789,2082.7317,10.8186,-1);

	CreatePickup(1242,23,255.0312,77.7762,1003.6406,-1);
	DutyCP[0] = CreateDynamicCP(255.0312,77.7762,1003.6406,1,-1,-1,-1,1.5);
	CreatePickup(1242,23,-1341.6299,496.1087,11.1953,-1);
	DutyCP[1] = CreateDynamicCP(-1341.6299,496.1087,11.1953,1,-1,-1,-1,1.5);
	CreatePickup(1242,23,264.6581,109.6190,1004.6172,-1);
	DutyCP[2] = CreateDynamicCP(264.6581,109.6190,1004.6172,1,-1,-1,-1,1.5);
	CreatePickup(1242,23,264.6581,109.6190,1004.6172,-1);
	DutyCP[3] = CreateDynamicCP(264.6581,109.6190,1004.6172,1,-1,-1,-1,1.5);
	CreatePickup(1242,23,241.9293,1861.7128,14.0840,-1);
	DutyCP[4] = CreateDynamicCP(241.9293,1861.7128,14.0840,1,-1,-1,-1,1.5);
    CreatePickup(1242,23,2731.5229,-2417.2366,13.6279,-1);
	DutyCP[5] = CreateDynamicCP(2731.5229,-2417.2366,13.6279,1,-1,-1,-1,1.5);
    
	CreatePickup(2061,23,295.81689453125,-37.850776672363,1001.515625,-1);
	AmmoCP[0] = CreateDynamicCP(295.81689453125,-37.850776672363,1001.515625,1,-1,-1,-1,1.5);
	CreatePickup(2061,23,295.68829345703,-80.309463500977,1001.515625,-1);
	AmmoCP[1] = CreateDynamicCP(295.68829345703,-80.309463500977,1001.515625,1,-1,-1,-1,1.5);
	CreatePickup(2061,23,290.30410766602,-109.22429656982,1001.515625,-1);
	AmmoCP[2] = CreateDynamicCP(290.30410766602,-109.22429656982,1001.515625,1,-1,-1,-1,1.5);
	CreatePickup(2061,23,311.7144,-166.0032,999.6010,-1);
	AmmoCP[3] = CreateDynamicCP(311.7144,-166.0032,999.6010,1,-1,-1,-1,1.5);
    CreatePickup(2061,23,1207.5992,-41.0020,1000.9531,-1);
	AmmoCP[4] = CreateDynamicCP(1207.5992,-41.0020,1000.9531,1,-1,-1,-1,1.5);

	CreatePickup(1239,23,-103.8383,-22.1433,1000.7188,-1);
	SexCP = CreateDynamicCP(-103.8383,-22.1433,1000.7188,1,-1,-1,-1,1.5);

	CreateDynamicMapIcon(1174.3180,1350.9290,10.9219, 36, 0, 0, 0, -1, 300.0);//Автошкола
	CreatePickup(1239,23,1174.3180,1350.9290,10.9219,-1);
	TestCP[0] = CreateDynamicCP(1174.3180,1350.9290,10.9219,1,-1,-1,-1,1.5);
	
	CreateDynamicMapIcon(-2026.7644,-114.7632,1035.1719, 36, 0, 0, 0, -1, 300.0);//Автошкола
    CreatePickup(1239,23,-2026.7644,-114.7632,1035.1719,-1);
	TestCP[1] = CreateDynamicCP(-2026.7644,-114.7632,1035.1719,1,-1,-1,-1,1.5);
	
	CreateDynamicMapIcon(-2187.2974,2416.4805,5.1657, 36, 0, 0, 0, -1, 300.0);//Автошкола
	CreatePickup(1239,23,-2187.2974,2416.4805,5.1657,-1);
	TestCP[2] = CreateDynamicCP(-2187.2974,2416.4805,5.1657,1,-1,-1,-1,1.5);
	
	CreateDynamicMapIcon(415.6437,2533.6814,19.1484, 36, 0, 0, 0, -1, 300.0);//Автошкола
	CreatePickup(1239,23,415.6437,2533.6814,19.1484,-1);
	TestCP[3] = CreateDynamicCP(415.6437,2533.6814,19.1484,1,-1,-1,-1,1.5);
	
	CreatePickup(1239,23,252.3684,68.9543,1003.6406,-1);
	TestCP[4] = CreateDynamicCP(252.3684,68.9543,1003.6406,1,-1,-1,-1,1.5);

	FightCP[0] = CreateDynamicCP(766.0958,12.9342,1000.7035,1,-1,-1,-1,1.5);
	CreatePickup(1239,23,766.0958,12.9342,1000.7035,-1);
	Create3DTextLabel("Школа боевых искусств",COLOR_WHITE,766.0958,12.9342,1001.2035,15.0,1,1);
    FightCP[1] = CreateDynamicCP(768.2092,-37.1113,1000.6865,1,-1,-1,-1,1.5);
	CreatePickup(1239,23,768.2092,-37.1113,1000.6865,-1);
	Create3DTextLabel("Школа боевых искусств",COLOR_WHITE,768.2092,-37.1113,1001.1865,15.0,2,1);

	CreatePickup(1239,23,2217.40234375,-1146.6451416016,1025.796875,-1);
	ObshagaCP = CreateDynamicCP(2217.40234375,-1146.6451416016,1025.796875,1,-1,-1,-1,1.5);

	ShopCP[0] = CreateDynamicCP(-28.294021606445,-89.640701293945,1003.546875,1,-1,-1,-1,1.5);
	CreatePickup(1239,23,-28.294021606445,-89.640701293945,1003.546875,-1);
	Create3DTextLabel("Магазин",COLOR_GREEN,-28.294021606445,-89.640701293945,1004.046875,15.0,44);
	Create3DTextLabel("Магазин",COLOR_GREEN,-28.294021606445,-89.640701293945,1004.046875,15.0,46);
	Create3DTextLabel("Магазин",COLOR_GREEN,-28.294021606445,-89.640701293945,1004.046875,15.0,47);
	Create3DTextLabel("Магазин",COLOR_GREEN,-28.294021606445,-89.640701293945,1004.046875,15.0,77);

    ShopCP[1] = CreateDynamicCP(-23.460796356201,-55.543060302734,1003.546875,1,-1,-1,-1,1.5);
	CreatePickup(1239,23,-23.460796356201,-55.543060302734,1003.546875,-1);
	Create3DTextLabel("Магазин",COLOR_GREEN,-23.460796356201,-55.543060302734,1004.046875,15.0,42);
	Create3DTextLabel("Магазин",COLOR_GREEN,-23.460796356201,-55.543060302734,1004.046875,15.0,43);
	Create3DTextLabel("Магазин",COLOR_GREEN,-23.460796356201,-55.543060302734,1004.046875,15.0,45);
	Create3DTextLabel("Магазин",COLOR_GREEN,-23.460796356201,-55.543060302734,1004.046875,15.0,48);
	Create3DTextLabel("Магазин",COLOR_GREEN,-23.460796356201,-55.543060302734,1004.046875,15.0,49);
	Create3DTextLabel("Магазин",COLOR_GREEN,-23.460796356201,-55.543060302734,1004.046875,15.0,50);

	Mats[0] = CreatePickup(1239,23,-1402.9105,497.2134,11.1953,-1);
	Mats[1] = CreatePickup(1239,23,153.6663,1844.7870,17.6406,-1);
	Mats[2] = CreatePickup(1239,23,2729.3271,-2451.4531,17.5937,-1);
	

	ArrestCP[0] = CreateDynamicCP(1528.6064,-1678.0408,5.8906,3,-1,-1,-1,3);
	ArrestCP[1] = CreateDynamicCP(-1606.1711,676.4993,-5.2422,3,-1,-1,-1,3);
	ArrestCP[2] = CreateDynamicCP(2281.6086,2430.8950,3.2734,3,-1,-1,-1,3);
	ArrestCP[3] = CreateDynamicCP(-1978.8339,486.1208,29.0156,3,-1,-1,-1,3);

	CreatePickup(1274,23,2547.5444,-1281.7073,1060.9844,-1);
	CreatePickup(1274,23,2498.2788,-1711.3271,1014.7422,-1);
	CreatePickup(1274,23,-2164.8682,646.1217,1057.5938,-1);
	CreatePickup(1274,23,330.9640,1128.5199,1083.8828,-1);
	
	ObshakCP[0] = CreateDynamicCP(2547.5444,-1281.7073,1060.9844,1,-1,-1,-1,1.5);
	ObshakCP[1] = CreateDynamicCP(2498.2788,-1711.3271,1014.7422,1,-1,-1,-1,1.5);
	ObshakCP[2] = CreateDynamicCP(-2164.8682,646.1217,1057.5938,1,-1,-1,-1,1.5);
	ObshakCP[3] = CreateDynamicCP(330.9640,1128.5199,1083.8828,1,-1,-1,-1,1.5);

    CasinoCP = CreateDynamicCP(1118.8141,-4.4118,1000.6797,1,-1,-1,-1,5);
	return 1;
}
stock Teleport(playerid)
{ 
    new i = GetPVarInt(playerid,"Teleport");
    PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
    if(GetPVarInt(playerid,"TeleportCheck") == 1)//Выходы
    {
		if(GetPVarInt(playerid,"Teleport") == 0)SetPos(playerid,1555.1815,-1675.5671,16.1953,87.5658,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 1)
		{
			if(PlayerInfo[playerid][pWorld] == FBI) SetPos(playerid,-1961.4680,533.3085,35.1719,90.0,0,0);
			if(PlayerInfo[playerid][pWorld] == SFPD) SetPos(playerid,-1605.5594,710.6655,13.8672,360.0,0,0);
		}
		else if(GetPVarInt(playerid,"Teleport") == 2)SetPos(playerid,2337.1792,2459.2419,14.9742,180.0,0,0);
		else if((GetPVarInt(playerid,"Teleport") == 3 || GetPVarInt(playerid,"Teleport") == 24) && PlayerInfo[playerid][pWorld] == 1)SetPos(playerid,1172.0768,-1321.4958,15.3989,280.0,0,0);
		else if((GetPVarInt(playerid,"Teleport") == 3 || GetPVarInt(playerid,"Teleport") == 24) && PlayerInfo[playerid][pWorld] == 2)SetPos(playerid,-2655.0627,640.1640,14.4545,180.0,0,0);
		else if((GetPVarInt(playerid,"Teleport") == 3 || GetPVarInt(playerid,"Teleport") == 24) && PlayerInfo[playerid][pWorld] == 3)SetPos(playerid,1607.3701,1815.2408,10.8203,0.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 4 && PlayerInfo[playerid][pWorld] == 1)SetPos(playerid,1658.5770,-1343.3867,17.4382,89.4481,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 4 && PlayerInfo[playerid][pWorld] == 2)SetPos(playerid,-2056.6057,454.9281,35.1719,308.1801,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 4 && PlayerInfo[playerid][pWorld] == 3)SetPos(playerid,2124.3252,2380.3167,10.8203,180.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 5)SetPos(playerid,-2026.6395,-101.9330,35.1641,0.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 6)SetPos(playerid,-2029.7643,-120.7421,35.1718,180.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 7)SetPos(playerid,-2766.2231445313,375.58441162109,6.3346824645996,0.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 8)SetPos(playerid,1073.1573,-345.5894,73.9922,0.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 9 && PlayerInfo[playerid][pWorld] == HUN)SetPos(playerid,870.4536,-24.9450,63.9815,160.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 10 && PlayerInfo[playerid][pWorld] == LCN)SetPos(playerid,1456.1324,2773.4507,10.8203,270.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 10 && PlayerInfo[playerid][pWorld] == RM)SetPos(playerid,937.0786,1733.2498,8.8516,280.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 10 && PlayerInfo[playerid][pWorld] == RIFA)SetPos(playerid,2145.0156,-1801.7720,16.1406,180.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 10 && PlayerInfo[playerid][pWorld] == SRACE)SetPos(playerid,-2129.1255,-188.2981,35.3203,90.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 11 && PlayerInfo[playerid][pWorld] == GROOVE)SetPos(playerid,2495.3665,-1691.1370,14.7656,0.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 12 && PlayerInfo[playerid][pWorld] == BALLAS)SetPos(playerid,2000.0259,-1114.0546,27.1250,180.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 10 && PlayerInfo[playerid][pWorld] == VAGOS)SetPos(playerid,2808.0747,-1176.1071,25.3793,180.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 12 && PlayerInfo[playerid][pWorld] == ECOR)SetPos(playerid,1852.2900,-1990.2065,13.546,270.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 12 && PlayerInfo[playerid][pWorld] == YA)SetPos(playerid,2634.7605,1824.1888,11.0161,90.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 12 && PlayerInfo[playerid][pWorld] == TRIADA)SetPos(playerid,2019.3201,1007.7758,10.8203,270.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 13) SetPos(playerid,153.41116333008,1944.796875,19.505365371704,270.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 14)
		{
			if(!IsACop(playerid))return CloseMes(playerid);
			SetPos(playerid,1568.6620,-1689.9703,6.2188,180.0,0,0);
		}
        else if(GetPVarInt(playerid,"Teleport") == 15)
		{
		    if(PlayerInfo[playerid][pWorld] == SFPD)
			{
				if(!IsACop(playerid))return CloseMes(playerid);
				SetPos(playerid,-1594.2043,716.2861,-4.9063,270.0,0,0);
			}
		    if(PlayerInfo[playerid][pWorld] == FBI)
			{
				if(TeamInfo[playerid][tID] != FBI)return CloseMes(playerid);
				SetPos(playerid,-1961.4680,533.3085,35.1719,90.0,0,0);
			}
		}
        else if(GetPVarInt(playerid,"Teleport") == 16)
		{
			if(!IsACop(playerid))return CloseMes(playerid);
			SetPos(playerid,2282.1770,2423.2983,3.4766,0.0,0,0);
		}
        else if(GetPVarInt(playerid,"Teleport") == 17)
		{
			if(TeamInfo[playerid][tID] == MEDIC && PlayerInfo[playerid][pWorld] == 1) SetPos(playerid,1162.5721,-1329.8956,31.4890,0.0,0,0);
			else if(TeamInfo[playerid][tID] == MEDIC && PlayerInfo[playerid][pWorld] == 3) SetPos(playerid,1613.3912,1786.2497,30.4688,0.0,0,0);
			else return CloseMes(playerid);
		}
		else if(GetPVarInt(playerid,"Teleport") == 18)
		{
		    if(TeamInfo[playerid][tID] == NEWS && PlayerInfo[playerid][pWorld] == 1) SetPos(playerid,1676.2619628906,-1334.96875,158.4765625,90.0,0,0);
			else if(TeamInfo[playerid][tID] == NEWS && PlayerInfo[playerid][pWorld] == 3) SetPos(playerid,2099.3760,2402.1597,60.8169,180.0,0,0);
			else return CloseMes(playerid);
		}
        else if(GetPVarInt(playerid,"Teleport") == 19)SetPos(playerid,2165.9792,-1671.2396,15.0732,135.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 20)
		{
			if(PlayerInfo[playerid][pWorld] == 1)SetPos(playerid,1459.3409,-1010.6541,26.8438,0.0,0,0);
			else if(PlayerInfo[playerid][pWorld] == 2)SetPos(playerid,-2455.6724,503.8921,30.0781,270.0,0,0);
			FP_GivePlayerMoney(playerid,GetPVarInt(playerid,"RobMoney"));
            DeletePVar(playerid,"RobMoney");
		}
		else if(GetPVarInt(playerid,"Teleport") == 21)SetPos(playerid,2229.7856445313,-1721.5083007813,13.563534736633,0.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 22)SetPos(playerid,-2270.2600097656,-155.96618652344,35.3203125,0.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 23)
		{
			if(PlayerInfo[playerid][pWorld] == 1)SetPos(playerid,2232.5024414063,-1159.8671875,25.890625,0.0,0,0);
			else if(PlayerInfo[playerid][pWorld] == 2)SetPos(playerid,-2717.7808,-317.5675,7.8438,0.0,0,0);
			else if(PlayerInfo[playerid][pWorld] == 3)SetPos(playerid,2637.3083,2352.0249,10.8203,0.0,0,0);
		}
		else if(GetPVarInt(playerid,"Teleport") == 24) SetPos(playerid,-1989.7310,1117.9515,54.4688,-90.0,0,0);
		
		else if(GetPVarInt(playerid,"Teleport") == 26) SetPos(playerid,-2027.7841,-40.6048,38.8047,180.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 27) SetPos(playerid,987.4988,-1624.5237,14.9297,90.0,0,0);
		else if(GetPVarInt(playerid,"Teleport") == 28) SetPos(playerid,324.8669,1945.8831,22.0,90.0,0,0);
		
		else if(GetPVarInt(playerid,"Teleport") == 29)
		{
			SetPos(playerid,1658.5918,2250.0391,11.0701,0.0,0,0);
			DeletePVar(playerid,"Dice");
		}
		
		else if(GetPVarInt(playerid,"Teleport") == 30) { if(!IsACop(playerid))return CloseMes(playerid); SetPos(playerid,1564.9747,-1667.0013,28.3956,0.0,0,0);}

		else if(GetPVarInt(playerid,"Teleport") == 31) SetPos(playerid,371.9040,167.9287,1008.3828,0.0,3,MER);

    }
    else if(GetPVarInt(playerid,"TeleportCheck") == 2)//Входы
    {
		if(GetPVarInt(playerid,"Teleport") == 0)SetPos(playerid,246.7943,62.3267,1003.6406,0.0,6,LSPD);
		else if(GetPVarInt(playerid,"Teleport") == 1)SetPos(playerid,246.3386,107.2998,1003.2188,0.0,10,SFPD);
		else if(GetPVarInt(playerid,"Teleport") == 2)SetPos(playerid,238.6516,138.7939,1003.0234,0.0,3,LVPD);
		else if(GetPVarInt(playerid,"Teleport") == 41)SetPos(playerid,246.3386,107.2998,1003.2188,0.0,10,SFPD);
		else if(GetPVarInt(playerid,"Teleport") == 5)SetPos(playerid,-2026.9052,-103.6019,1035.1835,180.0,3,1);
		else if(GetPVarInt(playerid,"Teleport") == 6)SetPos(playerid,-2029.7480,-119.6215,1035.1719,0.0,3,1);
		else if(GetPVarInt(playerid,"Teleport") == 7)SetPos(playerid,390.7688,173.8054,1008.3828,90.0,3,MER);

		else if(GetPVarInt(playerid,"Teleport") == 8) { if(TeamInfo[playerid][tID] != HA)return CloseMes(playerid); SetPos(playerid,1212.1315,-25.8759,1000.9531,180.0,3,HA); }
		else if(GetPVarInt(playerid,"Teleport") == 9) { if(TeamInfo[playerid][tID] != HUN)return CloseMes(playerid); SetPos(playerid,501.9842,-67.5633,998.7578,180.0,11,HUN); }
		else if(GetPVarInt(playerid,"Teleport") == 10) SetPos(playerid,350.0739,178.5809,1019.9844,0.0,3,1);
		else if(GetPVarInt(playerid,"Teleport") == 11) SetPos(playerid,350.0739,178.5809,1019.9844,0.0,3,2);
		else if(GetPVarInt(playerid,"Teleport") == 12) SetPos(playerid,350.0739,178.5809,1019.9844,0.0,3,3);
		else if(GetPVarInt(playerid,"Teleport") == 13) { if(TeamInfo[playerid][tID] != NEWS)return CloseMes(playerid); SetPos(playerid,378.1498,159.5918,1025.7891,0.0,3,1); }
		else if(GetPVarInt(playerid,"Teleport") == 14) { if(TeamInfo[playerid][tID] != NEWS)return CloseMes(playerid); SetPos(playerid,378.1498,159.5918,1025.7891,0.0,3,2); }
		else if(GetPVarInt(playerid,"Teleport") == 15) { if(TeamInfo[playerid][tID] != NEWS)return CloseMes(playerid); SetPos(playerid,378.1498,159.5918,1025.7891,0.0,3,3); }
        else if(GetPVarInt(playerid,"Teleport") == 16) { if(TeamInfo[playerid][tID] != LCN)return CloseMes(playerid); SetPos(playerid,2548.7993,-1294.7288,1060.9844,0.0,2,LCN); }
		else if(GetPVarInt(playerid,"Teleport") == 17) { if(TeamInfo[playerid][tID] != YA)return CloseMes(playerid); SetPos(playerid,-2170.3542,639.3329,1052.3750,180.0,1,YA); }
		else if(GetPVarInt(playerid,"Teleport") == 18) { if(TeamInfo[playerid][tID] != RM)return CloseMes(playerid); SetPos(playerid,2548.7993,-1294.7288,1060.9844,0.0,2,RM); }
		else if(GetPVarInt(playerid,"Teleport") == 19) { if(TeamInfo[playerid][tID] != GROOVE)return CloseMes(playerid); SetPos(playerid,2495.9653,-1692.0845,1014.7422,180.0,3,GROOVE); }
		else if(GetPVarInt(playerid,"Teleport") == 20) { if(TeamInfo[playerid][tID] != BALLAS)return CloseMes(playerid); SetPos(playerid,-2170.3542,639.3329,1052.3750,180.0,1,BALLAS); }
		else if(GetPVarInt(playerid,"Teleport") == 21) { if(TeamInfo[playerid][tID] != VAGOS)return CloseMes(playerid); SetPos(playerid,2548.7993,-1294.7288,1060.9844,0.0,2,VAGOS); }
		else if(GetPVarInt(playerid,"Teleport") == 22) { if(TeamInfo[playerid][tID] != ECOR)return CloseMes(playerid); SetPos(playerid,-2170.3542,639.3329,1052.3750,180.0,1,ECOR); }
		else if(GetPVarInt(playerid,"Teleport") == 23) { if(TeamInfo[playerid][tID] != RIFA)return CloseMes(playerid); SetPos(playerid,2548.7993,-1294.7288,1060.9844,0.0,2,RIFA); }
		else if(GetPVarInt(playerid,"Teleport") == 24) { if(TeamInfo[playerid][tID] != SRACE)return CloseMes(playerid); SetPos(playerid,2548.7993,-1294.7288,1060.9844,0.0,2,SRACE); }
		else if(GetPVarInt(playerid,"Teleport") == 25) { if(TeamInfo[playerid][tID] != ZONE51 && TeamInfo[playerid][tID] != EBASE && TeamInfo[playerid][tID] != DOKI)return CloseMes(playerid);
														 SetPos(playerid,132.92687988281,1939.4051513672,19.297430038452,180.0,0,0); }
		else if(GetPVarInt(playerid,"Teleport") == 26) { if(!IsACop(playerid))return CloseMes(playerid); SetPos(playerid,246.3837,88.0005,1003.6406,180.0,6,LSPD); }
		else if(GetPVarInt(playerid,"Teleport") == 27) { if(!IsACop(playerid))return CloseMes(playerid); SetPos(playerid,215.5430,126.7069,1003.2188,180.0,10,SFPD); }
		else if(GetPVarInt(playerid,"Teleport") == 28) { if(!IsACop(playerid))return CloseMes(playerid); SetPos(playerid,207.6658,142.4018,1003.0234,280.0,3,LVPD); }
		else if(GetPVarInt(playerid,"Teleport") == 29) SetPos(playerid,367.0717,162.2261,1019.9844,90.0,3,1);
		else if(GetPVarInt(playerid,"Teleport") == 30) SetPos(playerid,367.0717,162.2261,1019.9844,90.0,3,3);
		else if(GetPVarInt(playerid,"Teleport") == 31) { if(TeamInfo[playerid][tID] != NEWS)return CloseMes(playerid); SetPos(playerid,370.8449,160.2109,1025.7891,0.0,3,3); }
		else if(GetPVarInt(playerid,"Teleport") == 32) { if(TeamInfo[playerid][tID] != NEWS)return CloseMes(playerid); SetPos(playerid,370.8449,160.2109,1025.7891,0.0,3,1); }
		else if(GetPVarInt(playerid,"Teleport") == 33) { if(TeamInfo[playerid][tID] != RAST)return CloseMes(playerid); SetPos(playerid,318.6534,1114.4840,1083.8828,0.0,5,RAST); }
		else if(GetPVarInt(playerid,"Teleport") == 34) SetPos(playerid,2305.0595703125,-16.145057678223,26.7421875,0.0,0,1);
		else if(GetPVarInt(playerid,"Teleport") == 35) SetPos(playerid,2305.0595703125,-16.145057678223,26.7421875,0.0,0,2);
		else if(GetPVarInt(playerid,"Teleport") == 36) SetPos(playerid,772.36785888672,-5.3907527923584,1000.7286987305,0.0,5,1);
		else if(GetPVarInt(playerid,"Teleport") == 37) SetPos(playerid,774.14373779297,-50.429077148438,1000.5859375,0.0,6,2);
		else if(GetPVarInt(playerid,"Teleport") == 38) SetPos(playerid,2215.185546875,-1150.5368652344,1025.796875,0.0,15,1);
		else if(GetPVarInt(playerid,"Teleport") == 39) SetPos(playerid,2215.185546875,-1150.5368652344,1025.796875,0.0,15,2);
		else if(GetPVarInt(playerid,"Teleport") == 40) SetPos(playerid,2215.185546875,-1150.5368652344,1025.796875,0.0,15,3);
		else if(GetPVarInt(playerid,"Teleport") == 42) { if(TeamInfo[playerid][tID] != FBI)return CloseMes(playerid);
														 SetPos(playerid,246.3386,107.2998,1003.2188,0.0,10,FBI); }
        else if(GetPVarInt(playerid,"Teleport") == 43) SetPos(playerid,1964.0221,-350.0398,1093.2,180.0,1,1);
        
        else if(GetPVarInt(playerid,"Teleport") == 44) SetPos(playerid,-2019.7532,-18.6168,7.0,180.0,0,0);
        else if(GetPVarInt(playerid,"Teleport") == 45) SetPos(playerid,972.0911,-1606.2769,14.7,180.0,0,0);

        else if(GetPVarInt(playerid,"Teleport") == 46) { if(TeamInfo[playerid][tID] != TRIADA)return CloseMes(playerid); SetPos(playerid,-2170.3542,639.3329,1052.3750,180.0,1,TRIADA); }
        else if(GetPVarInt(playerid,"Teleport") == 47) SetPos(playerid,316.4094,-170.2961,999.5938,0.0,6,1);
        
        else if(GetPVarInt(playerid,"Teleport") == 48) SetPos(playerid,1133.1105,-15.8301,1000.6797,0.0,12,1);
        else if(GetPVarInt(playerid,"Teleport") == 49) SetPos(playerid,242.2600,66.3403,1003.6406,270.0,6,1);

        else if(GetPVarInt(playerid,"Teleport") == 50) { if(TeamInfo[playerid][tID] != MER)return CloseMes(playerid); SetPos(playerid,372.0491,165.2425,1008.3828,180.0,3,MER); }
    }
    if(GetPVarInt(playerid,"TeleportCheck") == 3)
    {
		if(!BiznesInfo[i][bInt])return 1;
        if(PlayerInfo[playerid][pMoney] < 0)return ErrorMes(playerid,"У тебя нет денег, куда собрался?");
		SetPos(playerid,BiznesInfo[i][bExitX],BiznesInfo[i][bExitY],BiznesInfo[i][bExitZ],0.0,BiznesInfo[i][bInt],BiznesInfo[i][bID]);
	}
    else if(GetPVarInt(playerid,"TeleportCheck") == 4)SetPos(playerid,BiznesInfo[i][bEnterX],BiznesInfo[i][bEnterY],BiznesInfo[i][bEnterZ],0.0,0,0);
    else if(GetPVarInt(playerid,"TeleportCheck") == 5)
	{
		if(PlayerInfo[playerid][pHouseKey] != i && HouseInfo[i][hLock])return CloseMes(playerid);
		SetPos(playerid,HouseInfo[i][hExitX],HouseInfo[i][hExitY],HouseInfo[i][hExitZ],0.0,HouseInfo[i][hInt],HouseInfo[i][hID]);
	}
    else if(GetPVarInt(playerid,"TeleportCheck") == 6)SetPos(playerid,HouseInfo[i][hEnterX],HouseInfo[i][hEnterY],HouseInfo[i][hEnterZ],0.0,0,0);
    DeletePVar(playerid,"TeleportCheck");
    DeletePVar(playerid,"Teleport");
	return 1;
}

stock SetPlayerCriminal(playerid,victimid,reason[],wanted)
{
	new string[128];
	if(!IsPlayerConnected(victimid)) strmid(CrimeInfo[playerid][pVictim], "Аноним", 0, MAX_PLAYER_NAME, MAX_PLAYER_NAME);
	else strmid(CrimeInfo[playerid][pVictim], PlayerInfo[victimid][pName], 0, MAX_PLAYER_NAME, MAX_PLAYER_NAME);
	strmid(CrimeInfo[playerid][pAccused], PlayerInfo[playerid][pName], 0, MAX_PLAYER_NAME, MAX_PLAYER_NAME);
	strmid(CrimeInfo[playerid][pCrime], reason, 0, strlen(reason), 32);
	PlayerInfo[playerid][pWanted] += wanted;
	if(PlayerInfo[playerid][pWanted] > 5) 
		PlayerInfo[playerid][pWanted] = 5;

	UpdateWanted(playerid,PlayerInfo[playerid][pWanted]);
	
	format(string,sizeof(string),"Уровень розыска повысился на %d (Всего: %d). Причина: %s. Стукач: %s.",wanted,PlayerInfo[playerid][pWanted],reason,CrimeInfo[playerid][pVictim]);
	SendClientMessage(playerid,0xFFFF00FF,string);
	format(string, sizeof(string), "%s[%d] совершuл(а) преступление ( %s ). Стукач: %s.",PlayerInfo[playerid][pName],playerid,reason,CrimeInfo[playerid][pVictim]);
	SendCrimeMessage(string);
    
	PlayerInfo[playerid][pHunterValue] += random(250);
	if(PlayerInfo[playerid][pHunterValue] > 10000) PlayerInfo[playerid][pHunterValue] = 10000;
	
	format(string,sizeof(string),"UPDATE `samp_users` SET `HunterValue`='%d' WHERE `Name`='%s'",
		PlayerInfo[playerid][pHunterValue],PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	format(string,sizeof(string),"UPDATE `samp_users` SET `Wanted`='%d' WHERE `Name`='%s'",
		PlayerInfo[playerid][pWanted],PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	return 1;
}
stock SendCrimeMessage(string[])
{
	ForEachPlayer(i)
	{
	    if(IsACop(i)) SendClientMessage(i,COLOR_LIGHTRED,string);
	}
	return 1;
}
stock SendDepartamentMessage(string[])
{
	ForEachPlayer(i)
	{
	    if(GetPVarInt(i,"FamilyChat"))continue;
	    if(TeamInfo[i][tID] >= LSPD && TeamInfo[i][tID] <= MEDIC || TeamInfo[i][tID] == MER || TeamInfo[i][tID] == NEWS)
	    SendClientMessage(i,0xFF8282FF,string);
	}
	return 1;
}
stock SendRadioMessage(team,color,string[])
{
	ForEachPlayer(i)
	{
	    if(TeamInfo[i][tID] != team || GetPVarInt(i,"FamilyChat"))continue;
	    SendClientMessage(i,color,string);
	}
	return 1;
}
stock SendJobMessage(team,color,string[])
{
	ForEachPlayer(i)
	{
	    if(PlayerInfo[i][pJob] != team || GetPVarInt(i,"JobChat"))continue;
	    SendClientMessage(i,color,string);
	}
	return 1;
}

stock SetSkin(playerid)
{
	switch(TeamInfo[playerid][tID])
	{
		case LSPD..LVPD://SAPD
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 76;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 281;
			        case 2:TeamInfo[playerid][tSkin] = 284;
			        case 3..4:TeamInfo[playerid][tSkin] = 280;
			        case 5..7:TeamInfo[playerid][tSkin] = 282;
			        case 8:TeamInfo[playerid][tSkin] = 288;
			        case 9:TeamInfo[playerid][tSkin] = 283;
			        case 10:TeamInfo[playerid][tSkin] = 266;
			        case 11:TeamInfo[playerid][tSkin] = 265;
			    }
			}
		}
		case FBI://FBI
		{
		    if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 211;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 285;
			        case 2..5:TeamInfo[playerid][tSkin] = 286;
			        case 6:TeamInfo[playerid][tSkin] = 163;
			        case 7:TeamInfo[playerid][tSkin] = 164;
			    }
			}
		}
		case DOKI..ZONE51://ARMA
		{
		    if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 191;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1..10:TeamInfo[playerid][tSkin] = 287;
			        case 11:TeamInfo[playerid][tSkin] = 179;

			    }
			}
		}
		case MEDIC://Medic
		{
		    if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 219;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 276;
			        case 2:TeamInfo[playerid][tSkin] = 275;
			        case 3:TeamInfo[playerid][tSkin] = 274;
			        case 4:TeamInfo[playerid][tSkin] = 70;
			    }
			}
		}
		case NEWS://News
		{
		    if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 150;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1,2:TeamInfo[playerid][tSkin] = 188;
			        case 3,4:TeamInfo[playerid][tSkin] = 17;
			        case 5,6:TeamInfo[playerid][tSkin] = 187;
			    }
			}
		}
		case TAXI://News
		{
		    if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 190;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 182;
			        case 2:TeamInfo[playerid][tSkin] = 183;
			        case 3:TeamInfo[playerid][tSkin] = 262;
			        case 4:TeamInfo[playerid][tSkin] = 261;
			        case 5:TeamInfo[playerid][tSkin] = 253;
			        case 6:TeamInfo[playerid][tSkin] = 255;
			    }
			}
		}
		case LIC://Licensers
		{
			if(PlayerInfo[playerid][pSex] == 2)
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1..4:TeamInfo[playerid][tSkin] = 11;
			        case 5..7:TeamInfo[playerid][tSkin] = 172;
				}
			}
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 59;
			        case 2:TeamInfo[playerid][tSkin] = 20;
			        case 3..5:TeamInfo[playerid][tSkin] = 60;
			        case 6,7:TeamInfo[playerid][tSkin] = 171;
			    }
			}
		}
		case MER://Meria
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 141;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1,2:TeamInfo[playerid][tSkin] = 17;
			        case 3..5:TeamInfo[playerid][tSkin] = 187;
			        case 6:TeamInfo[playerid][tSkin] = 147;
			    }
			}
		}
		case HA://Кuллеры
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 93;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1..3:TeamInfo[playerid][tSkin] = 165;
			        case 4..7:TeamInfo[playerid][tSkin] = 166;
			        case 8,9:TeamInfo[playerid][tSkin] = 294;
			    }
			}
		}
		case HUN://Головорезы
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 90;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1,2:TeamInfo[playerid][tSkin] = 181;
			        case 3:TeamInfo[playerid][tSkin] = 100;
			        case 4,5:TeamInfo[playerid][tSkin] = 248;
			        case 6..8:TeamInfo[playerid][tSkin] = 133;
			        case 9:TeamInfo[playerid][tSkin] = 202;
			        case 10:TeamInfo[playerid][tSkin] = 34;
			    }
			}
		}
		case LCN://Лкн
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 214;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 127;
			        case 2:TeamInfo[playerid][tSkin] = 98;
			        case 3:TeamInfo[playerid][tSkin] = 46;
			        case 4:TeamInfo[playerid][tSkin] = 126;
			        case 5:TeamInfo[playerid][tSkin] = 124;
			        case 6:TeamInfo[playerid][tSkin] = 113;
			    }
			}
		}
		case YA://Якудза
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 169;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1,2:TeamInfo[playerid][tSkin] = 121;
			        case 3,4:TeamInfo[playerid][tSkin] = 122;
			        case 5:TeamInfo[playerid][tSkin] = 123;
			        case 6:TeamInfo[playerid][tSkin] = 120;
			    }
			}
		}
		case RM: //Русская мафия
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 216;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1,2:TeamInfo[playerid][tSkin] = 112;
			        case 3:TeamInfo[playerid][tSkin] = 223;
			        case 4:TeamInfo[playerid][tSkin] = 111;
			        case 5:TeamInfo[playerid][tSkin] = 125;
			        case 6:TeamInfo[playerid][tSkin] = 272;
			    }
			}
		}
		case TRIADA://Якудза
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 169;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1,2:TeamInfo[playerid][tSkin] = 170;
			        case 3,4:TeamInfo[playerid][tSkin] = 118;
			        case 5:TeamInfo[playerid][tSkin] = 117;
			        case 6:TeamInfo[playerid][tSkin] = 49;
			    }
			}
		}
		case GROOVE://Грув
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 195;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 105;
			        case 2:TeamInfo[playerid][tSkin] = 106;
			        case 3:TeamInfo[playerid][tSkin] = 107;
			        case 4:TeamInfo[playerid][tSkin] = 269;
			        case 5:TeamInfo[playerid][tSkin] = 271;
			        case 6:TeamInfo[playerid][tSkin] = 270;
			    }
			}
		}
		case BALLAS://Баллас
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 13;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1,2:TeamInfo[playerid][tSkin] = 28;
			        case 3,4:TeamInfo[playerid][tSkin] = 103;
			        case 5:TeamInfo[playerid][tSkin] = 102;
			        case 6:TeamInfo[playerid][tSkin] = 104;
			    }
			}
		}
		case VAGOS://Вагос
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 12;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1,2:TeamInfo[playerid][tSkin] = 108;
			        case 3,4:TeamInfo[playerid][tSkin] = 109;
			        case 5,6:TeamInfo[playerid][tSkin] = 110;
			    }
			}
		}
		case ECOR://Ацтеки
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 193;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1..2:TeamInfo[playerid][tSkin] = 47;
			        case 3:TeamInfo[playerid][tSkin] = 114;
			        case 4:TeamInfo[playerid][tSkin] = 116;
			        case 5:TeamInfo[playerid][tSkin] = 115;
			        case 6:TeamInfo[playerid][tSkin] = 292;
			    }
			}
		}
		case RIFA://Рифа
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 233;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1..2:TeamInfo[playerid][tSkin] = 174;
			        case 3..4:TeamInfo[playerid][tSkin] = 175;
			        case 5..6:TeamInfo[playerid][tSkin] = 173;
			    }
			}
		}
		case SRACE: //Стрит Рейсеры
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 90;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 22;
			        case 2:TeamInfo[playerid][tSkin] = 50;
			        case 3,4:TeamInfo[playerid][tSkin] = 184;
			        case 5..7:TeamInfo[playerid][tSkin] = 48;
			        case 8,9:TeamInfo[playerid][tSkin] = 299;
			    }
			}
		}
		case RAST: 
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 298;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 78;
			        case 2:TeamInfo[playerid][tSkin] = 79;
			        case 3:TeamInfo[playerid][tSkin] = 136;
			        case 4:TeamInfo[playerid][tSkin] = 142;
			        case 5:TeamInfo[playerid][tSkin] = 242;
			        case 6:TeamInfo[playerid][tSkin] = 296;
			    }
			}
		}
        case CASINO: 
		{
			if(PlayerInfo[playerid][pSex] == 2)TeamInfo[playerid][tSkin] = 194;
			else
			{
			    switch(TeamInfo[playerid][tRank])
			    {
			        case 1:TeamInfo[playerid][tSkin] = 185;
                    case 2,3:TeamInfo[playerid][tSkin] = 189;
                    case 4:TeamInfo[playerid][tSkin] = 163;
			        case 5,6:TeamInfo[playerid][tSkin] = 228;
                    case 7:TeamInfo[playerid][tSkin] = 295;
			    }
			}
		}
		default: return 1;
	}
	SetPlayerSkin(playerid, TeamInfo[playerid][tSkin]);

	return 1;
}

stock OOCNews(color,const string[])
{
	ForEachPlayer(i)
	{
		if(GetPVarInt(i,"NewsChat"))continue;
		SendClientMessage(i, color, string);
	}
}
stock OOCOff(color,const string[])
{
	ForEachPlayer(i)
	{
		if(GetPVarInt(i,"OChat"))continue;
		SendClientMessage(i, color, string);
	}
}

stock ABroadCast(color,const string[],level)
{
	ForEachPlayer(i)
	{
		if(PlayerInfo[i][pAdmin] < level)continue;
		SendClientMessage(i, color, string);
	}
	return 1;
}

stock ShowStats(playerid,targetid)
{
	new string[2048],str[100];
	
	strcat(string,"{00CC00}~~~~~~~~~~~~~~~~~~~~~~~ Основная информация ~~~~~~~~~~~~~~~~~~~~~~~{F5DEB3}\n\n");
	
	if(!PremiumInfo[targetid][Level]) strcat(string,"VIP:\t\t\t\t\t{FF0000}Нет{F5DEB3}\n");
	else
	{
		format(str,sizeof(str),"VIP:\t\t\t\t\t{00CC00}%d уровень{F5DEB3}\n",PremiumInfo[targetid][Level]);
		strcat(string,str);
	}	

	if(!WarnInfo[targetid][wWarns]) strcat(string,"Предупреждения:\t\t\t{00CC00}Нет{F5DEB3}");
	else
	{
		format(str,sizeof(str),"Предупреждения:\t\t\t{FF0000}%d{F5DEB3} из {FF0000}3{F5DEB3}",WarnInfo[targetid][wWarns]);
		strcat(string,str);
		format(str,sizeof(str),"\n - Дата:\t\t{FF0000}%s{F5DEB3}\n",WarnInfo[targetid][wDate1]);
		strcat(string,str);
		format(str,sizeof(str)," - Выдал(а):\t{FF0000}%s{F5DEB3}\n",WarnInfo[targetid][wAdmin1]);
		strcat(string,str);
		format(str,sizeof(str)," - Причина:\t{FF0000}%s{F5DEB3}",WarnInfo[targetid][wReason1]);
		strcat(string,str);
		if(WarnInfo[targetid][wWarns] > 1)
		{
			format(str,sizeof(str),"\n - Дата:\t\t{FF0000}%s{F5DEB3}\n",WarnInfo[targetid][wDate2]);
			strcat(string,str);
			format(str,sizeof(str)," - Выдал(а):\t{FF0000}%s{F5DEB3}\n",WarnInfo[targetid][wAdmin2]);
			strcat(string,str);
			format(str,sizeof(str)," - Причина:\t{FF0000}%s{F5DEB3}",WarnInfo[targetid][wReason2]);
			strcat(string,str);
		}
	}
	
	if(!MuteInfo[targetid][mTime]) strcat(string,"\nБан чата:\t\t\t\t{00CC00}Нет{F5DEB3}");
	else
	{
		if(MuteInfo[targetid][mTime] < 3600) format(str,sizeof(str),"\nБан чата:\t\t\t\t{FF0000}%02d:%02d{F5DEB3}",floatround(MuteInfo[targetid][mTime]/60),MuteInfo[targetid][mTime]%60);
		else format(str,sizeof(str),"\nБан чата:\t\t\t\t{FF0000}%d:%02d:%02d{F5DEB3}",floatround(MuteInfo[targetid][mTime]/3600),floatround(MuteInfo[targetid][mTime]/60)%60,MuteInfo[targetid][mTime]%3600%60);
		strcat(string,str);
		format(str,sizeof(str),"\n - Дата:\t\t{FF0000}%s{F5DEB3}\n",MuteInfo[targetid][mDate]);
		strcat(string,str);
		format(str,sizeof(str)," - Выдал(а):\t{FF0000}%s{F5DEB3}\n",MuteInfo[targetid][mAdmin]);
		strcat(string,str);
		format(str,sizeof(str)," - Причина:\t{FF0000}%s{F5DEB3}",MuteInfo[targetid][mReason]);
		strcat(string,str);
	}
	if(!JailInfo[targetid][jTime]) strcat(string,"\nВремя заключения:\t\t\t{00CC00}Нет{F5DEB3}");
	else
	{
		if(JailInfo[targetid][jTime] < 3600) format(str,sizeof(str),"\nВремя заключения:\t\t\t{FF0000}%02d:%02d{F5DEB3}",floatround(JailInfo[targetid][jTime]/60),JailInfo[targetid][jTime]%60);
		else format(str,sizeof(str),"\nВремя заключения:\t\t\t{FF0000}%d:%02d:%02d{F5DEB3}",floatround(JailInfo[targetid][jTime]/3600),floatround(JailInfo[targetid][jTime]/60)%60,JailInfo[targetid][jTime]%3600%60);
		strcat(string,str);
		format(str,sizeof(str),"\n - Дата:\t\t{FF0000}%s{F5DEB3}\n",JailInfo[targetid][jDate]);
		strcat(string,str);
		format(str,sizeof(str)," - Посадил(а):\t{FF0000}%s{F5DEB3}\n",JailInfo[targetid][jCop]);
		strcat(string,str);
		format(str,sizeof(str)," - Причина:\t{FF0000}%s{F5DEB3}",JailInfo[targetid][jReason]);
		strcat(string,str);
	}
	strcat(string,"\n\n{00CC00}~~~~~~~~~~~~~~~~~~~~ Дополнительная информация ~~~~~~~~~~~~~~~~~~~~{F5DEB3}\n\n");
	
	if(!PlayerInfo[targetid][pSpawn]) strcat(string,"Место респауна:\t\t\t{FFD700}Фракция{F5DEB3}\n");
	else strcat(string,"Место респауна:\t\t\t{FFD700}Дом{F5DEB3}\n");
	
	if(!PlayerInfo[targetid][pJob]) strcat(string,"Работа:\t\t\t\t{FF0000}Нет{F5DEB3}\n");
	else if(PlayerInfo[targetid][pJob] == BDG) strcat(string,"Работа:\t\t\t\t{FFD700}Телохранитель{F5DEB3}\n");
	else if(PlayerInfo[targetid][pJob] == STR) strcat(string,"Работа:\t\t\t\t{FFD700}Страховщик{F5DEB3}\n");
	else if(PlayerInfo[targetid][pJob] == MECH) strcat(string,"Работа:\t\t\t\t{FFD700}Механик{F5DEB3}\n");
	else if(PlayerInfo[targetid][pJob] == TRUCK) strcat(string,"Работа:\t\t\t\t{FFD700}Дальнобойщик{F5DEB3}\n");
	else if(PlayerInfo[targetid][pJob] == GUNNER) strcat(string,"Работа:\t\t\t\t{FFD700}Продавец оружия{F5DEB3}\n");
	else if(PlayerInfo[targetid][pJob] == DRUGER) strcat(string,"Работа:\t\t\t\t{FFD700}Продавец наркотиков{F5DEB3}\n");
	else if(PlayerInfo[targetid][pJob] == JACK) strcat(string,"Работа:\t\t\t\t{FFD700}Автоугонщик{F5DEB3}\n");
	
	if(!TeamInfo[targetid][tID]) strcat(string,"Фракция:\t\t\t\t{FF0000}Нет{F5DEB3}");
	else
	{
		format(str,sizeof(str),"Фракция:\t\t\t\t{FFD700}%s{F5DEB3}\n",GetTeamName(TeamInfo[targetid][tID]));
		strcat(string,str);
		format(str,sizeof(str),"Ранг:\t\t\t\t\t{FFD700}%s{F5DEB3}\n",GetRankName(targetid));
		strcat(string,str);
		if(!TWarnInfo[targetid][wWarns]) strcat(string,"Выговоры:\t\t\t\t{00CC00}Нет{F5DEB3}");
		else
		{
			format(str,sizeof(str),"Выговоры:\t\t\t\t{FF0000}%d{F5DEB3} из {FF0000}3{F5DEB3}",TWarnInfo[targetid][wWarns]);
			strcat(string,str);
			format(str,sizeof(str),"\n - Дата:\t\t{FF0000}%s{F5DEB3}\n",TWarnInfo[targetid][wDate1]);
			strcat(string,str);
			format(str,sizeof(str)," - Выдал(а):\t{FF0000}%s{F5DEB3}\n",TWarnInfo[targetid][wAdmin1]);
			strcat(string,str);
			format(str,sizeof(str)," - Причина:\t{FF0000}%s{F5DEB3}",TWarnInfo[targetid][wReason1]);
			strcat(string,str);
			if(TWarnInfo[targetid][wWarns] > 1)
			{
				format(str,sizeof(str),"\n - Дата:\t\t{FF0000}%s{F5DEB3}\n",TWarnInfo[targetid][wDate2]);
				strcat(string,str);
				format(str,sizeof(str)," - Выдал(а):\t{FF0000}%s{F5DEB3}\n",TWarnInfo[targetid][wAdmin2]);
				strcat(string,str);
				format(str,sizeof(str)," - Причина:\t{FF0000}%s{F5DEB3}",TWarnInfo[targetid][wReason2]);
				strcat(string,str);
			}
		}
	}

	strcat(string,"\n\n{00CC00}~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Имущество ~~~~~~~~~~~~~~~~~~~~~~~~~~~~{F5DEB3}\n\n");

	if(!PlayerInfo[targetid][pHouseKey]) strcat(string,"Дом:\t\t\t\t\t{FF0000}Нет{F5DEB3}\n");
	else
	{
		format(str,sizeof(str),"Дом:\t\t\t\t\t{FFD700}%s (ID: %d){F5DEB3}\n",HIInfo[HouseInfo[PlayerInfo[targetid][pHouseKey]][hType]][HouseName],PlayerInfo[targetid][pHouseKey]);
		strcat(string,str);
	}
	
	if(!PlayerInfo[targetid][pBizKey]) strcat(string,"Бизнес:\t\t\t\t{FF0000}Нет{F5DEB3}\n");
	else
	{
		format(str,sizeof(str),"Бизнес:\t\t\t\t{FFD700}%s{F5DEB3}\n",BiznesInfo[PlayerInfo[targetid][pBizKey]][bMessage]);
		strcat(string,str);
	}	
	
	if(!PlayerInfo[targetid][pCars]) strcat(string,"Транспорт:\t\t\t\t{FF0000}Нет{F5DEB3}\n");
	else
	{
		strcat(string,"Транспорт:\t\t\t\t{00CC00}Есть{FFD700}\n");
		for(new i = 1; i <= MAX_VEHICLES; i++)
		{
			if(IsValidVehicle(i) && strlen(VehInfo[i][vOwner]) && !strcmp(VehInfo[i][vOwner],PlayerInfo[targetid][pName],true))
			{
				format(str,sizeof(str),"\t\t\t\t\t%s (ID:%d)\n", VehMInfo[GetVehicleModel(i)-400][mName], VehInfo[i][vID]);
				strcat(string,str);
			}
		}
	}
	
	format(str, sizeof(str),""FPHEAD"Статистика %s",PlayerInfo[targetid][pName]);
	
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,str,string,"OK","");
	return 1;
}

stock DeleteHouse(playerid)
{
	new query[128];
    format(query,sizeof(query), "DELETE FROM `samp_houses` WHERE `Owner` = '%s'", PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
	return 1;
}
stock DeleteTune(carid)
{
    if(VehInfo[carid][vSpoiler])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vSpoiler]);
		VehInfo[carid][vSpoiler] = 0;
	}	
    if(VehInfo[carid][vHood])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vHood]);
		VehInfo[carid][vHood] = 0;
	}	
    if(VehInfo[carid][vSideskirt])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vSideskirt]);
		VehInfo[carid][vSideskirt] = 0;
	}	
    if(VehInfo[carid][vNitro])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vNitro]);
		VehInfo[carid][vNitro] = 0;
	}	
    if(VehInfo[carid][vLamps])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vLamps]);
		VehInfo[carid][vLamps] = 0;
	}	
    if(VehInfo[carid][vExhaust])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vExhaust]);
		VehInfo[carid][vExhaust] = 0;
	}	
    if(VehInfo[carid][vWheels])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vWheels]);
		VehInfo[carid][vWheels] = 0;
	}	
    if(VehInfo[carid][vRoof])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vRoof]);
		VehInfo[carid][vRoof] = 0;
	}	
    if(VehInfo[carid][vStereo])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vStereo]);
		VehInfo[carid][vStereo] = 0;
	}	
    if(VehInfo[carid][vHydraulics])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vHydraulics]);
		VehInfo[carid][vHydraulics] = 0;
	}	
    if(VehInfo[carid][vBullbar])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vBullbar]);
		VehInfo[carid][vBullbar] = 0;
	}	
    if(VehInfo[carid][vRearBullbars])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vRearBullbars]);
		VehInfo[carid][vRearBullbars] = 0;
	}	
    if(VehInfo[carid][vFrontSign])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vFrontSign]);
		VehInfo[carid][vFrontSign] = 0;
	}	
    if(VehInfo[carid][vFrontBullbars])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vFrontBullbars]);
		VehInfo[carid][vFrontBullbars] = 0;
	}	
    if(VehInfo[carid][vRearBumper])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vRearBumper]);
		VehInfo[carid][vRearBumper] = 0;
	}	
    if(VehInfo[carid][vVents])
	{
		RemoveVehicleComponent(carid,VehInfo[carid][vVents]);
		VehInfo[carid][vVents] = 0;
	}	
    if(VehInfo[carid][vNeon])
	{
		VehInfo[carid][vNeon] = 0;
		DestroyObject(VehInfo[carid][vLeftNeon]);
		DestroyObject(VehInfo[carid][vRightNeon]);
	}	
    if(VehInfo[carid][vPaintJob] != -1)
	{
		ChangeVehiclePaintjob(carid, -1);
		VehInfo[carid][vPaintJob] = -1;
	}	
	new string[340];
	format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Spoiler`='0',`Hood`='0',`Sideskirt`='0',`Nitro`='0',`Lamps`='0',`Exhaust`='0',`Wheels`='0',`Roof`='0',`Stereo`='0',`Hydraulics`='0',`Bullbar`='0',`RearBullbars`='0',`FrontSign`='0',`FrontBullbars`='0',`FrontBumper`='0',`RearBumper`='0',`Vents`='0',`PaintJob`='-1',`Neon`='0' WHERE `ID`='%d'",VehInfo[carid][vID]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	return 1;
}

stock RemovePlayerWeapon(playerid, weaponid)
{
	SetSyncTime(playerid, SYNC_TYPE_WEAPONS);
	PlayerInfo[playerid][pGun][oData[weaponid][imType]] = -1;
	ResetPlayerWeapons(playerid);
	for(new i = 0; i < 13; i ++)
	{
		if(PlayerInfo[playerid][pGun][i] == -1) continue;
		GivePlayerWeapon(playerid, iData[playerid][inItems][PlayerInfo[playerid][pGun][i]], iData[playerid][inValue][PlayerInfo[playerid][pGun][i]]);
	}
}

stock IsNumeric(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)if ((string[i] > '9' || string[i] < '0') || (string[i]=='-' && i!=0))return 0;
	return 1;
}
stock IsPlayerInValidState(playerid)
{
	switch(GetPlayerState(playerid))
	{
		case 1..6: return true;
		default: return false;
	}
	return false;
}
stock CheckText(playerid,text[])
{
	if (strfind(text, SERVER_SITE, true) != -1 || strfind(text, SERVER_IP, true) != -1) {
		return 0;
	}
	if(FindIP(text))
	{
		new string[184];
		format(string,sizeof(string),"(IP:%s) подозрение на рекламу: %s.",PlayerInfo[playerid][pLastIP],text);
	    Report(playerid,string);
	    ErrorMes(playerid,"Ссылки на сторонние ресурсы запрещены.");
		return 1;
	}
	for(new i; i<sizeof(WebSites); i++)
	{
		if(strfind(text,WebSites[i],true) != -1)
		{
			Warnings[playerid][ADVERTISE]++;
			if(Warnings[playerid][ADVERTISE] < MAX_CHECKS)
			{
				new string[184];
				format(string,sizeof(string),"(IP:%s) подозрение на рекламу: %s.",PlayerInfo[playerid][pLastIP],text);
				Report(playerid,string);
				ErrorMes(playerid,"Ссылки на сторонние ресурсы запрещены.");
				return 1;
			}
			else return FP_Kick(playerid,"Реклама");
		}
	}
	return 0;
}
stock IsAtBar(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,15.0,495.7801,-76.0305,998.7578))return 1;
	else if(IsPlayerInRangeOfPoint(playerid,15.0,499.9654,-20.2515,1000.6797))return 1;
	else if(IsPlayerInRangeOfPoint(playerid,15.0,1256.8362,-791.0281,1084.0078))return 1;
	else if(IsPlayerInRangeOfPoint(playerid,15.0,1215.9480,-13.3519,1000.9219))return 1;
	else if(IsPlayerInRangeOfPoint(playerid,15.0,-2658.9749,1407.4136,906.2734))return 1;
	else if(IsPlayerInRangeOfPoint(playerid,10.0,-1977.3470,139.9505,37.8927))return 1;
	return 0;
}

stock IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(IsPlayerInRangeOfPoint(playerid, 5.0,204.3725,-160.1485,1000.5234) || IsPlayerInRangeOfPoint(playerid, 5.0,207.7262,-100.8296,1005.2578))
		{//Binco & Suburban
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0,207.0710,-129.8188,1003.5078) || IsPlayerInRangeOfPoint(playerid, 5.0,210.5546,-8.1565,1001.2109))
		{//Zip & Victim
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0,203.7762,-43.5953,1001.8047) || IsPlayerInRangeOfPoint(playerid, 5.0,161.4861,-83.8573,1001.8047))
		{//Didier Sash
		    return 1;
		}
	}
	return 0;
}

stock UpdateLevelText(playerid)
{
    new exp = 3;
	if(PlayerInfo[playerid][pLevel]) exp = PlayerInfo[playerid][pLevel]*5;
	SetPlayerScore(playerid,PlayerInfo[playerid][pLevel]);

	new string[64];
	format(string,sizeof(string),"LvL: %d   Exp: %d / %d",
	PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pExp],exp);

	PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_LVL], string);

	format(string,sizeof(string),"~w~LvL~y~:~w~ %d   Exp~y~:~w~ %d~y~/~w~%d",
		PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pExp],exp);
	PlayerTextDrawSetString(playerid, LvL[playerid], string);

	if(TextDrawInfo[playerid][LevelTD]) 
		PlayerTextDrawShow(playerid, LvL[playerid]);
}

stock EngineOn(playerid,vehicle)
{
	if(playerid == -1)
	{
		VehInfo[vehicle][vEngine] = 1;
		SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
	}
	else
	{
		if(GetPVarInt(playerid,"Cuffed")) return ErrorMes(playerid,"Ты не можешь завести транспорт в наручниках.");
		if(EventOpen > GetTime && GetPVarInt(playerid,"EventStart") > GetTime) return ErrorMes(playerid,"Ты не можешь завести транспорт до старта.");
		TogglePlayerControllable(playerid,false);
		SetTimerEx("EngineStart",2000,false,"ii",playerid,vehicle);
		GameTextForPlayer(playerid,FixText("~w~заводим..."),3000,4);
	}
	return 1;
}
Public:EngineStart(playerid,vehicle)
{
    TogglePlayerControllable(playerid,true);
	if(PlayerInfo[playerid][pVehID] != vehicle) return 1;
	
	if(VehInfo[vehicle][vGas] < 0.01)
	{
	   	EngineOff(-1,vehicle);
	   	GameTextForPlayer(playerid,FixText("~r~закончилось топливо"),5000,4);
	    SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/call 555\" , чтобы вызвать механика.");
		return 1;
	}
	if(VehInfo[vehicle][vHealth] <= 350)
	{
		EngineOff(-1,vehicle);
		GameTextForPlayer(playerid,FixText("~r~перегрев двигателя"),5000,4);
		SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/call 555\" , чтобы вызвать механика.");
		SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/fixcar\" , чтобы самостоятельно починить двигатель.");
		return 1;
	}
	
	new Float:Procent = floatabs(VehInfo[vehicle][vPercent] - VehMInfo[GetVehicleModel(vehicle)-400][mPercent]);
    if(Procent >= 0.25)
    {
		EngineOff(-1,vehicle);
        SetVehicleHealth(vehicle,500.0);
		VehInfo[vehicle][vPercent] = 0.1;
        GameTextForPlayer(playerid,FixText("~r~неподходящее топливо"),5000,4);
		SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/call 555\" , чтобы вызвать механика.");
		return 1;
    }
	if(Procent > 0.05 && random(21) < floatround((Procent-0.05)*100))
	{
		EngineOff(-1,vehicle);
        SetVehicleHealth(vehicle,500.0);
		VehInfo[vehicle][vPercent] = 0.1;
        GameTextForPlayer(playerid,FixText("~r~неподходящее топливо"),5000,4);
		SendClientMessage(playerid, COLOR_YELLOW2, "Используй \"/call 555\" , чтобы вызвать механика.");
		return 1;
	}
	
	new string[64];
	VehInfo[vehicle][vEngine] = 1;
	VehInfo[vehicle][vLights] = 1;
	SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
	if(GetPVarInt(playerid,"Mask") ) format(string,sizeof(string),"Неuзвестный успешно завел двигатель.");
	else format(string,sizeof(string),"* %s успешно завел(а) двигатель.",PlayerInfo[playerid][pName]);
	ProxDetector(30.0, playerid,string,COLOR_PURPLE);
	GameTextForPlayer(playerid,FixText("~w~двигатель~g~ заведен"),3000,4);
	PlayerTextDrawHide(playerid, Helper[playerid]);
	MarksUpdate(playerid);
	return 1;
}
stock EngineOff(playerid,vehicle)
{
    
    VehInfo[vehicle][vEngine] = 0;
    SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
	if(playerid != -1)
	{
		new string[64];
		GameTextForPlayer(playerid,FixText("~w~двигатель~r~ заглушен"),3000,4);
		if(GetPVarInt(playerid,"Mask") ) format(string,sizeof(string),"Неuзвестный заглушил двигатель.");
		else format(string,sizeof(string),"* %s заглушил(а) двигатель.",PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid,string,COLOR_PURPLE);
		MarksUpdate(playerid);
		
		PlayerTextDrawShow(playerid, Helper[playerid]);
		PlayerTextDrawSetString(playerid, Helper[playerid], FixText("~w~ИСПОЛЬЗУЙ ~y~~k~~VEHICLE_HANDBRAKE~~w~ ЧТОБЫ ЗАВЕСТИ ДВИГАТЕЛЬ"));
	}	
	return 1;
}
stock LightOn(playerid,vehicle)
{
    VehInfo[vehicle][vLights] = 1;
    SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
    if(playerid != -1) 
    {
    	GameTextForPlayer(playerid,FixText("~w~фары~g~ включены"),3000,4);
    	MarksUpdate(playerid);
    }	
}
stock LightOff(playerid,vehicle)
{
    VehInfo[vehicle][vLights] = 0;
    SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
    if(playerid != -1) 
    {
    	GameTextForPlayer(playerid,FixText("~w~фары~r~ выключены"),3000,4);
    	MarksUpdate(playerid);
    }	
}
stock BonnetOn(playerid,vehicle)
{
    VehInfo[vehicle][vBonnet] = 1;
    SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
    if(playerid != -1) GameTextForPlayer(playerid,FixText("~w~капот~g~ открыт"),3000,4);
}
stock BonnetOff(playerid,vehicle)
{
    VehInfo[vehicle][vBonnet] = 0;
    SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
    if(playerid != -1) GameTextForPlayer(playerid,FixText("~w~капот~r~ закрыт"), 5000, 4);
}
stock BootOn(playerid,vehicle)
{
    VehInfo[vehicle][vBoot] = 1;
    SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
    if(playerid != -1) 
    {
    	GameTextForPlayer(playerid,FixText("~w~багажник~g~ открыт"),3000,4);
    	MarksUpdate(playerid);
    }	
}
stock BootOff(playerid,vehicle)
{
    VehInfo[vehicle][vBoot] = 0;
    SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
    if(playerid != -1) 
    {
    	GameTextForPlayer(playerid,FixText("~w~багажник~r~ закрыт"),3000,4);
    	MarksUpdate(playerid);
    }	
}
stock LockCar(playerid,vehicle)
{
    VehInfo[vehicle][vLock] = 1;
    SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
    if(playerid != -1) 
	{
		GameTextForPlayer(playerid,FixText("~w~транспорт~r~ закрыт"),3000,4);
		PlayerTextDrawSetString(playerid, pSpeedTXD[playerid][4], "~r~€AKP‘Џ");
	}	
}
stock UnLockCar(playerid,vehicle)
{
    VehInfo[vehicle][vLock] = 0;
    SetVehicleParamsEx(vehicle, VehInfo[vehicle][vEngine], VehInfo[vehicle][vLights], VehInfo[vehicle][vAlarm], VehInfo[vehicle][vLock], VehInfo[vehicle][vBonnet], VehInfo[vehicle][vBoot], 0);
    if(playerid != -1) 
	{
		GameTextForPlayer(playerid,FixText("~w~транспорт~g~ открыт"),3000,4);
		PlayerTextDrawSetString(playerid, pSpeedTXD[playerid][4], "~g~OЏKP‘Џ");
	}	
}

stock IsAtTuning(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid))return 0;
	for(new i=0; i < sizeof(Tuning); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid,15.0,Tuning[i][0],Tuning[i][1],Tuning[i][2]))return 1;
	}
	return 0;
}
stock FP_RemovePlayerFromVehicle(playerid)
{
    //SetTimerEx("CheckRemove",2800,false,"i",playerid);
	return RemovePlayerFromVehicle(playerid);
}
Public:CheckRemove(playerid)
{
	if(IsPlayerInAnyVehicle(playerid)) FP_Kick(playerid,"s0beit (NOP RPFV)");
	return 1;
}
Public:CheckPut(playerid)
{
	if(!IsPlayerInAnyVehicle(playerid)) FP_Kick(playerid,"s0beit (NOP PPIV)");
	return 1;
}
stock CheckCar(playerid,vehicleid)
{

	return 1;
}
stock IsAtCandySprunk(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 5, -2420.219, 984.578, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -16.1550,-90.4361,1003.5469)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -19.2321,-56.8815,1003.5469)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -36.0825,-57.1131,1003.5469)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2420.180, 985.945, 44.297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2225.203, -1153.422, 1025.906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2576.703, -1284.430, 1061.094)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2155.906, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2209.906, 1607.195, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2222.203, 1606.773, 1000.055)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 495.969, -24.320, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 501.828, -1.430, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 373.828, -178.141, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 330.680, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 331.922, 178.500, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 350.906, 206.086, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 361.563, 158.617, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 371.594, 178.453, 1020.070)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 374.891, 188.977, 1008.477)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2155.844, 1607.875, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2202.453, 1617.008, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2209.242, 1621.211, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2222.367, 1602.641, 1000.063)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 500.563, -1.367, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 379.039, -178.883, 1000.734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2480.86,-1959.27,12.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 1634.11,-2237.53,12.8906)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2139.52,-1161.48,23.3594)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2153.23,-1016.15,62.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -1350.12,493.859,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2229.19,286.414,34.7031)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 1659.46,1722.86,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2647.7,1129.66,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2845.73,1295.05,10.7891)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 1398.84,2222.61,10.4219)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -1455.12,2591.66,55.2344)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -76.0312,1227.99,19.125)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 662.43,-552.164,15.7109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -253.742,2599.76,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2271.73,-76.4609,25.9609)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 1789.21,-1369.27,15.1641)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 1729.79,-1943.05,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2060.12,-1897.64,12.9297)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 1928.73,-1772.45,12.9453)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2325.98,-1645.13,14.2109)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2352.18,-1357.16,23.7734)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 1154.73,-1460.89,15.1562)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -1350.12,492.289,10.5859)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2118.97,-423.648,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2118.62,-422.414,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2097.27,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2092.09,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2063.27,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2005.65,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2034.46,-490.055,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2068.56,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2039.85,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -2011.14,-398.336,34.7266)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -1980.79,142.664,27.0703)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2319.99,2532.85,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 1520.15,1055.27,10.00)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2503.14,1243.7,10.2188)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 2085.77,2071.36,10.4531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -862.828,1536.61,21.9844)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -14.7031,1175.36,18.9531)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, -253.742,2597.95,62.2422)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 201.016,-107.617,0.898438)) return 1;
	else if(IsPlayerInRangeOfPoint(playerid, 5, 1277.84,372.516,18.9531)) return 1;
	else return 0;
}

stock OnPlayerSave(playerid)
{
    if(GetPVarInt(playerid,"Login"))
	{
		new string[256];
		if(!GetPVarInt(playerid, "Recon"))
		{
			format(string, sizeof string, "UPDATE `samp_bag` SET `20` = '%d|%d|%.1f',`21` = '%d|%d|%.1f',`22` = '%d|%d|%.1f',`23` = '%d|%d|%.1f',`24` = '%d|%d|%.1f' WHERE `name` = '%s'",
				iData[playerid][inItems][20],iData[playerid][inValue][20],iData[playerid][inState][20],
				iData[playerid][inItems][21],iData[playerid][inValue][21],iData[playerid][inState][21], 
				iData[playerid][inItems][22],iData[playerid][inValue][22],iData[playerid][inState][22], 
				iData[playerid][inItems][23],iData[playerid][inValue][23],iData[playerid][inState][23], 
				iData[playerid][inItems][24],iData[playerid][inValue][24],iData[playerid][inState][24], 
				PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
		format(string,sizeof(string),"UPDATE `samp_users` SET `MatsTime`='%d',`PayDay`='%d',`MySelfTime`='%d',`JobTime`='%d',`RobTime`='%d' WHERE `Name`='%s'",
			PlayerInfo[playerid][pMatsTime],PlayerInfo[playerid][pPayDay],PlayerInfo[playerid][pMySelfTime],PlayerInfo[playerid][pJobTime],PlayerInfo[playerid][pRobTime],PlayerInfo[playerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		if(JailInfo[playerid][jTime])
		{
			format(string,sizeof(string),"UPDATE `samp_jail` SET `Time`='%d' WHERE `Name`='%s'", JailInfo[playerid][jTime],PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
		if(MuteInfo[playerid][mTime])
		{
			format(string,sizeof(string),"UPDATE `samp_mute` SET `Time`='%d' WHERE `Name`='%s'", MuteInfo[playerid][mTime],PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}	
	}	
	return 1;
}

stock GetRankName(playerid)
{
	new name[32];
	if(TeamInfo[playerid][tID] == LSPD || TeamInfo[playerid][tID] == SFPD || TeamInfo[playerid][tID] == LVPD)
	{
		if(TeamInfo[playerid][tRank] == 11)  name = "Шеф";
		else if(TeamInfo[playerid][tRank] == 10)  name = "Зам.Шефа";
		else if(TeamInfo[playerid][tRank] == 9)  name = "Комиссар";
		else if(TeamInfo[playerid][tRank] == 8)  name = "Капитан";
		else if(TeamInfo[playerid][tRank] == 7)  name = "Лейтенант";
		else if(TeamInfo[playerid][tRank] == 6)  name = "Сержант";
        else if(TeamInfo[playerid][tRank] == 5)  name = "Старший офицер";
		else if(TeamInfo[playerid][tRank] == 4)  name = "Офицер";
		else if(TeamInfo[playerid][tRank] == 3)  name = "Младший офицер";
		else if(TeamInfo[playerid][tRank] == 2)  name = "Патрульный";
		else  name = "Кадет";
	}
	else if(TeamInfo[playerid][tID] == FBI)
	{
	    if(TeamInfo[playerid][tRank] == 7)  name = "Директор";
		else if(TeamInfo[playerid][tRank] == 6)  name = "Зам. директора";
		else if(TeamInfo[playerid][tRank] == 5)  name = "Агент Национальной Безопасности";
        else if(TeamInfo[playerid][tRank] == 4)  name = "Спец. Агент";
        else if(TeamInfo[playerid][tRank] == 3)  name = "Федеральный Агент";
		else if(TeamInfo[playerid][tRank] == 2)  name = "Младший Агент";
		else  name = "Стажёр";
	}
	else if(TeamInfo[playerid][tID] >= DOKI && TeamInfo[playerid][tID] <= ZONE51)
	{
	    if(TeamInfo[playerid][tRank] == 11) name = "Генерал";
		else if(TeamInfo[playerid][tRank] == 10) name = "Полковник";
		else if(TeamInfo[playerid][tRank] == 9)  name = "Подполковник";
		else if(TeamInfo[playerid][tRank] == 8)  name = "Майор";
		else if(TeamInfo[playerid][tRank] == 7)  name = "Капитан";
		else if(TeamInfo[playerid][tRank] == 6)  name = "Ст. лейтенант";
		else if(TeamInfo[playerid][tRank] == 5)  name = "Лейтенант";
		else if(TeamInfo[playerid][tRank] == 4)  name = "Мл. лейтенант";
		else if(TeamInfo[playerid][tRank] == 3)  name = "Сержант";
		else if(TeamInfo[playerid][tRank] == 2)  name = "Ефрейтор";
		else  name = "Рядовой";
	}
	else if(TeamInfo[playerid][tID] == MEDIC)
	{
	    if(TeamInfo[playerid][tRank] == 4) name = "Глав. врач";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Зав. отделением";
	    else if(TeamInfo[playerid][tRank] == 2) name = "Врач";
		else name = "Интерн";
	}
	else if(TeamInfo[playerid][tID] == NEWS)
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Ген. директор";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Гл. редактор";
	    else if(TeamInfo[playerid][tRank] == 4) name = "Редактор";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Ведущuй";
	    else if(TeamInfo[playerid][tRank] == 2) name = "Репортёр";
		else name = "Стажёр";
	}
	else if(TeamInfo[playerid][tID] == LIC)
	{
	    if(TeamInfo[playerid][tRank] == 7) name = "Директор";
	    else if(TeamInfo[playerid][tRank] == 6) name = "Менеджер";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Инструктор";
	    else if(TeamInfo[playerid][tRank] == 4) name = "Экзаменатор";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Консультант";
	    else if(TeamInfo[playerid][tRank] == 2) name = "Охранник Авто-школы";
		else name = "Стажёр";
	}
	else if(TeamInfo[playerid][tID] == MER)
	{
	    if(TeamInfo[playerid][tRank] == 7) name = "Мэр";
	    else if(TeamInfo[playerid][tRank] == 6) name = "Министр экономики";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Министр правоохранения";
	    else if(TeamInfo[playerid][tRank] == 4) name = "Министр обороны";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Министр внутренних дел";
        else if(TeamInfo[playerid][tRank] == 2) name = "Министр культуры";
		else name = "Охрана";
	}
	else if(TeamInfo[playerid][tID] == TAXI)
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Начальник";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Зам. Начальника";
	    else if(TeamInfo[playerid][tRank] == 4) name = "Vip водитель";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Водитель";
	    else if(TeamInfo[playerid][tRank] == 2) name = "Стажер";
		else name = "Ученик";
	}
	else if(TeamInfo[playerid][tID] == HA)
	{
	    if(TeamInfo[playerid][tRank] == 9) name = "Директор";
	    else if(TeamInfo[playerid][tRank] == 8) name = "Зам. директора";
	    else if(TeamInfo[playerid][tRank] == 7) name = "Руководитель";
	    else if(TeamInfo[playerid][tRank] == 6) name = "Проф. убuйца";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Меткuй стрелок";
        else if(TeamInfo[playerid][tRank] == 4) name = "Убийца";
        else if(TeamInfo[playerid][tRank] == 3) name = "Стрелок";
        else if(TeamInfo[playerid][tRank] == 2) name = "Начинающий убийца";
		else name = "Новобранец";
	}
	else if(TeamInfo[playerid][tID] == HUN)
	{
	    if(TeamInfo[playerid][tRank] == 10) name = "Главарь";
	    else if(TeamInfo[playerid][tRank] == 9) name = "Советчик";
	    else if(TeamInfo[playerid][tRank] == 8) name = "Руководитель";
	    else if(TeamInfo[playerid][tRank] == 7) name = "Глава отрядов";
	    else if(TeamInfo[playerid][tRank] == 6) name = "Солдат";
        else if(TeamInfo[playerid][tRank] == 5) name = "Член группировки";
        else if(TeamInfo[playerid][tRank] == 4) name = "Охотник";
        else if(TeamInfo[playerid][tRank] == 3) name = "Байкер";
        else if(TeamInfo[playerid][tRank] == 2) name = "Проверенный";
		else name = "Новичёк";
	}
	else if(TeamInfo[playerid][tID] == LCN)
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Padrino";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Capo";
        else if(TeamInfo[playerid][tRank] == 4) name = "Experto";
        else if(TeamInfo[playerid][tRank] == 3) name = "Soldato";
        else if(TeamInfo[playerid][tRank] == 2) name = "Combattente";
		else name = "Novizio";
	}
	else if(TeamInfo[playerid][tID] == YA)
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Кумитё";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Оябун-Кобун";
        else if(TeamInfo[playerid][tRank] == 4) name = "Вакагасира";
        else if(TeamInfo[playerid][tRank] == 3) name = "Кёдай";
        else if(TeamInfo[playerid][tRank] == 2) name = "Вакасю";
		else name = "Гакусэй";
	}
	else if(TeamInfo[playerid][tID] == TRIADA)
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Тай Лу";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Хэй Шот";
	    else if(TeamInfo[playerid][tRank] == 4) name = "Синг Фунг";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Шо Хай";
	    else if(TeamInfo[playerid][tRank] == 2) name = "Ти Вэй";
		else name = "Сей Кой Джай";
	}
	else if(TeamInfo[playerid][tID] == RM)
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Вор в законе";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Авторитет";
	    else if(TeamInfo[playerid][tRank] == 4) name = "Блатной";
        else if(TeamInfo[playerid][tRank] == 3) name = "Смотрящий";
        else if(TeamInfo[playerid][tRank] == 2) name = "Бандит";
		else name = "Молодой";
	}
	else if(TeamInfo[playerid][tID] == GROOVE)
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Pacer";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Old Gangsta";
        else if(TeamInfo[playerid][tRank] == 4) name = "Gangsta";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Killa";
        else if(TeamInfo[playerid][tRank] == 2) name = "Hustler";
        else name = "Homie";
	}
	else if(TeamInfo[playerid][tID] == BALLAS)
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Daddy";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Old Gangster";
	    else if(TeamInfo[playerid][tRank] == 4) name = "Mad Thug";
        else if(TeamInfo[playerid][tRank] == 3) name = "Killa";
	    else if(TeamInfo[playerid][tRank] == 2) name = "Gangsta";
		else name = "New Blood";
	}
	else if(TeamInfo[playerid][tID] == VAGOS || TeamInfo[playerid][tID] == ECOR ||TeamInfo[playerid][tID] == RIFA )
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Padre";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Veterano";
        else if(TeamInfo[playerid][tRank] == 4) name = "Soldado";
	    else if(TeamInfo[playerid][tRank] == 5) name = "Hermano";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Amigo";
	    else if(TeamInfo[playerid][tRank] == 2) name = "Verificado";
		else name = "Novato";
	}
	else if(TeamInfo[playerid][tID] == SRACE)
	{
	    if(TeamInfo[playerid][tRank] == 9) name = "Король улuц";
	    else if(TeamInfo[playerid][tRank] == 8) name = "Стритрейсер";
	    else if(TeamInfo[playerid][tRank] == 7) name = "Профи";
	    else if(TeamInfo[playerid][tRank] == 6) name = "Гонщик";
        else if(TeamInfo[playerid][tRank] == 5) name = "Опытный водила";
	    else if(TeamInfo[playerid][tRank] == 4) name = "Водила";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Начинающий";
	    else if(TeamInfo[playerid][tRank] == 2) name = "Механик";
		else name = "Новичёк";
	}
	else if(TeamInfo[playerid][tID] == RAST)
	{
	    if(TeamInfo[playerid][tRank] == 6) name = "Наркобарон";
        else if(TeamInfo[playerid][tRank] == 5) name = "Босс";
	    else if(TeamInfo[playerid][tRank] == 4) name = "Правая рука";
	    else if(TeamInfo[playerid][tRank] == 3) name = "Растаман";
	    else if(TeamInfo[playerid][tRank] == 2) name = "Помошник";
		else name = "Нарик";
	}
	else if(TeamInfo[playerid][tID] == CASINO)
	{
	    if(TeamInfo[playerid][tRank] == 7)  name = "Директор";
		else if(TeamInfo[playerid][tRank] == 6)  name = "Зам. директора";
		else if(TeamInfo[playerid][tRank] == 5)  name = "Менеджер Казино";
        else if(TeamInfo[playerid][tRank] == 4)  name = "Начальник безопасности Казино";
        else if(TeamInfo[playerid][tRank] == 3)  name = "Дилер";
		else if(TeamInfo[playerid][tRank] == 2)  name = "Кассир";
		else  name = "Охранник";
	}
	else name = "Нет";
	return name;
}
stock MembersOnline(team)
{
	new members;
	ForEachPlayer(i)
	{
	    if(TeamInfo[playerid][tID] == team) members ++;
	}
	return members;
}

stock IsACop(playerid)
{
	if(TeamInfo[playerid][tID] >= LSPD && TeamInfo[playerid][tID] <= FBI)return 1;
	return 0;
}

stock GetWord(value,one[15],before_five[15],after_five[15])
{
	value %= 100;
	if(10 < value < 20) return after_five;
	switch(value%10)
	{
		case 1: return one;
		case 2..4: return before_five;
		default: return after_five;
	}	
	return after_five;
}
stock CreateWarnText(i)
{
	WarnText[i] = TextDrawCreate(300.000000, 390.000000, "~p~10:00");
	TextDrawAlignment(WarnText[i], 2);
	TextDrawBackgroundColor(WarnText[i], 255);
	TextDrawFont(WarnText[i], 1);
	TextDrawLetterSize(WarnText[i], 0.500000, 2.000000);
	TextDrawColor(WarnText[i], -1);
	TextDrawSetOutline(WarnText[i], 0);
	TextDrawSetProportional(WarnText[i], 1);
	TextDrawSetShadow(WarnText[i], 1);
	UpdateWarnText(i);
}
stock UpdateWarnText(zone)
{
	new string[128];
    format(string, sizeof(string), FixText("~p~%02d:%02d~n~~g~%s : %d~n~~r~%s : %d"),
	floatround(ZoneTimer[zone]/60),ZoneTimer[zone]%60,GetTeamName(GZInfo[zone][gFrakVlad]),GZInfo[zone][gFrakVladKills],GetTeamName(GZInfo[zone][gNapad]),GZInfo[zone][gNapadKills]);
    TextDrawSetString(WarnText[zone], string);
    ForEachPlayer(i)
	{
	    if(TeamInfo[i][tID] != GZInfo[zone][gNapad] && TeamInfo[i][tID] != GZInfo[zone][gFrakVlad])continue;
		TextDrawShowForPlayer(i,WarnText[zone]);
	}
    return 1;
}

stock UpdateDMText()
{
	switch(EventType)
	{
		case 0:
		{
			new string[128];
			if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
			else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
			TextDrawSetString(DMText, string);
			if(EventPlayers == 1 && EventOpen <= GetTime)
			{
				format(string,sizeof(string),"{A020F0}%s стал(а) победителем \"DeathMatch\".",PlayerInfo[EventPlayerList[0]][pName],EventFinish);
				SendClientMessageToAll(-1,string);
				FP_GivePlayerMoney(EventPlayerList[0], VIPMoney(PremiumInfo[EventPlayerList[0]][Level],5000)); //Вип-Деньги
				cmd_kill(EventPlayerList[0],"");
				ForEachPlayer(i) DeletePVar(i,"EventStart");
				TextDrawDestroy(DMText);
				EventPlayers = 0;
			}
		}
		case 1:
		{
			new Cop,Ter;
			ForEachEvent(i)
			{
				if(!GetPVarInt(i,"CSTeam")) Cop ++;
				else Ter ++;
			}
			if(!Cop && EventOpen <= GetTime)
			{
				SendClientMessageToAll(-1,"{A020F0}Команда террористов стала победителем \"Counter Strike\".");
				ForEachEvent(i)
				{
					if(GetPVarInt(i,"CSTeam")) FP_GivePlayerMoney(i, VIPMoney(PremiumInfo[i][Level],5000)); //Вип-Деньги
					DeletePVar(i,"CSTeam");
					FP_ResetPlayerWeapons(i);
					if(GetPVarInt(i,"EventCar")) 
					{
						DestroyVehicle(GetPVarInt(i,"EventCar"));
						DeletePVar(i,"EventCar");
					}
					SpawnPlayer(i);
				}
				ForEachPlayer(i) DeletePVar(i,"EventStart");
				TextDrawDestroy(DMText);
				EventPlayers = 0;
			}
			else if(!Ter && EventOpen <= GetTime)
			{
				SendClientMessageToAll(-1,"{A020F0}Команда полицейских стала победителем \"Counter Strike\".");
				ForEachEvent(i)
				{
					if(!GetPVarInt(i,"CSTeam")) FP_GivePlayerMoney(i, VIPMoney(PremiumInfo[i][Level],5000)); //Вип-Деньги
					DeletePVar(i,"CSTeam");
					FP_ResetPlayerWeapons(i);
					if(GetPVarInt(i,"EventCar")) 
					{
						DestroyVehicle(GetPVarInt(i,"EventCar"));
						DeletePVar(i,"EventCar");
					}
					SpawnPlayer(i);
				}
				ForEachPlayer(i) DeletePVar(i,"EventStart");
				TextDrawDestroy(DMText);
				EventPlayers = 0;
			}
			else
			{
				new string[64];
				if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Полиция: %d~n~~r~Террористы: %d"),EventOpen - GetTime,Cop,Ter);
				else format(string, sizeof(string), FixText("~g~Полиция: %d~n~~r~Террористы: %d"),Cop,Ter);
				TextDrawSetString(DMText, string);
			}
		}
		case 2:
		{
			new string[64];
			if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
			else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
			TextDrawSetString(DMText, string);

		}
		case 3:
		{
			new string[64];
			if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
			else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
			TextDrawSetString(DMText, string);
		}
		case 4:
		{
			new string[64];
			if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
			else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
			TextDrawSetString(DMText, string);
			if(EventPlayers == 1 && EventOpen <= GetTime)
			{
				SetPlayerPos(EventPlayerList[0],PlayerInfo[EventPlayerList[0]][pPos][0],PlayerInfo[EventPlayerList[0]][pPos][1],PlayerInfo[EventPlayerList[0]][pPos][2]);
				format(string,sizeof(string),"{A020F0}%s стал(а) победителем \"Monster Derby\".",PlayerInfo[EventPlayerList[0]][pName],EventFinish);
				SendClientMessageToAll(-1,string);
				FP_GivePlayerMoney(EventPlayerList[0], VIPMoney(PremiumInfo[EventPlayerList[0]][Level],5000)); //Вип-Деньги
				cmd_kill(EventPlayerList[0],"");
				ForEachPlayer(i) DeletePVar(i,"EventStart");
				TextDrawDestroy(DMText);
				EventPlayers = 0;
			}
		}
		default:
		{
			new string[64];
			if(EventOpen > GetTime) format(string, sizeof(string), FixText("~p~До старта: %d~n~~g~Участники :~r~ %d"),EventOpen - GetTime,EventPlayers);
			else format(string, sizeof(string), FixText("~g~Участники :~r~ %d"),EventPlayers);
			TextDrawSetString(DMText, string);
			if(EventPlayers == 1 && EventOpen <= GetTime)
			{
				SetPlayerPos(EventPlayerList[0],PlayerInfo[EventPlayerList[0]][pPos][0],PlayerInfo[EventPlayerList[0]][pPos][1],PlayerInfo[EventPlayerList[0]][pPos][2]);
				format(string,sizeof(string),"{A020F0}%s стал(а) победителем \"Bloods Derby\".",PlayerInfo[EventPlayerList[0]][pName],EventFinish);
				SendClientMessageToAll(-1,string);
				FP_GivePlayerMoney(EventPlayerList[0], VIPMoney(PremiumInfo[EventPlayerList[0]][Level],5000)); //Вип-Деньги
				cmd_kill(EventPlayerList[0],"");
				ForEachPlayer(i) DeletePVar(i,"EventStart");
				TextDrawDestroy(DMText);
				EventPlayers = 0;
			}
		}
	}	
    return 1;
}


//******************************************************************************
//===================================[Команды]==================================
//******************************************************************************

//******************************************************************************
//===============================[Админские команды]============================
//******************************************************************************
COMMAND:aduty(playerid,params[])
{
	if(!AdminInfo[playerid][aLevel]) return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	if(!strlen(AdminInfo[playerid][aPassword])) return ShowDialog(playerid,D_ADUTY_PASS);
	if(!PlayerInfo[playerid][pAdmin]) return ShowDialog(playerid,D_ADUTY);
	
	new string[192];
	TeamInfo[playerid][tType] = AdminInfo[playerid][aLeader];
	TeamInfo[playerid][tID] = AdminInfo[playerid][aMember];
	TeamInfo[playerid][tRank] = AdminInfo[playerid][aTRank];
	if(TeamInfo[playerid][tID]) SetPlayerSkin(playerid,TeamInfo[playerid][tSkin]);
	else SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	GiveTeamGun(playerid);
	
	format(string,sizeof(string),"%s %s[%d] завершил(а) дежурство.",AdminInfo[playerid][aRank],PlayerInfo[playerid][pName],playerid);
	ABroadCast(COLOR_YELLOW,string, 1);
	
	format(string,sizeof(string),"UPDATE `logs_admin_online` SET `Online`='0',`Time`=`Time`+%d WHERE `Date` = '%02d.%02d.%d' AND `Name`='%s'",AdminInfo[playerid][aTime],Day,Month,Year,PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	AdminInfo[playerid][aTime] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	return 1;
}
COMMAND:admins(playerid, params[])
{
    new string[1024],str[52],adminname[24],count;
	ForEachPlayer(i)
	{
		switch(PlayerInfo[i][pAdmin])
		{
		    case 1:adminname = "Помощник";
		    case 2:adminname = "Ст.Помощник";
		    case 3:adminname = "Мл.Администратор";
		    case 4:adminname = "Администратор";
		    case 5:adminname = "Ст.Администратор";
			case 6:adminname = "Администратор фракций";
		    case 7:adminname = "Администратор банов";
			case 8:adminname = "Администратор ивентов";
			case 9:adminname = "Зам.Гл.Администратора";
			default: continue;
		}
		format(str,sizeof(str),"%s: %s[%d]\n",adminname,PlayerInfo[i][pName],i);
		strcat(string,str);
		count ++;
	}
	if(!count)return ErrorMes(playerid,"В данный момент на сервере нет администрации.");
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_LIST,""FPHEAD"Администрация онлайн:",string,"OK","");
	return 1;
}
COMMAND:ah(playerid, params[])
{
    if(!PlayerInfo[playerid][pAdmin])return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	if (PlayerInfo[playerid][pAdmin] >= 1) SendClientMessage(playerid, COLOR_WHITE, " /goto /veh /vehd /fixveh /slap /(un)mute /recon /uncon /cnn /a(dmin) chat");
	if (PlayerInfo[playerid][pAdmin] >= 2) SendClientMessage(playerid, COLOR_WHITE," /(s)ban /(s)kick /warn /entercar /(un)freeze /bigears /skydive");
	if (PlayerInfo[playerid][pAdmin] >= 3) SendClientMessage(playerid, COLOR_WHITE," /noooc /gethere /getcar /getgun");
	if (PlayerInfo[playerid][pAdmin] >= 4) SendClientMessage(playerid, COLOR_WHITE," /fuelcars /sethp /setarmor /givegun");
	if (PlayerInfo[playerid][pAdmin] >= 1500) SendClientMessage(playerid, COLOR_WHITE," /weather /weatherall /makeadmin /makeleader /givemoney /money /fourdive");
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
 	return 1;
}
COMMAND:apm(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	if (!GetPVarInt(playerid,"APM"))
	{
	    SetPVarInt(playerid,"APM",1);
		SendClientMessage(playerid, COLOR_WHITE, "Теперь ты можешь читать личные сообщения.");
	}
	else
	{
		DeletePVar(playerid,"APM");
		SendClientMessage(playerid, COLOR_WHITE, "Теперь ты не можешь читать личные сообщения.");
	}
	return 1;
}
COMMAND:rename(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
    
	new name[MAX_PLAYER_NAME],giveplayerid,string[128];
    if(sscanf(params,"us[24]",giveplayerid,name))return ComMes(playerid,"/rename [id игрока] [новый ник]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!IsValidName(playerid, name)) return 1;

	format(string,sizeof(string), "SELECT `name` FROM `samp_users` WHERE `name` = '%s'", name);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dds",playerid,DB_CHECK_NAME,params);
	
	return 1;
}

COMMAND:repass(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9) return ErrorMes(playerid,"Недостаточно прав для использования команды.");
			
	new name[24],password[32],string[128];
    if(sscanf(params,"s[24]s[32]",name, password))return ComMes(playerid,"/repass [Ник игрока] [Новый пароль]");
	if(strlen(password) < 6 || strlen(password) > 32) return ErrorMes(playerid, "Длина пароля от 6 до 32 символов.");
	for(new i;i<strlen(password);i++)
	{
	    switch(password[i])
		{
			case 'a'..'z','A'..'Z','0'..'9': continue;
			default: return ErrorMes(playerid,"Доступные для пароля символы: a-z,A-Z,0-9.");
		}
	}
	format(string,sizeof(string), "SELECT `name` FROM `samp_users` WHERE `name` = '%s'", name);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dds",playerid,DB_CHECK_PASS,params);
	return 1;
}
COMMAND:asellhouse(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	for(new house = 1; house <= HOUSE; house++)
	{
        if(!IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[house][hEnterX], HouseInfo[house][hEnterY], HouseInfo[house][hEnterZ]))continue;
		HouseInfo[house][hHel] = 0;
		HouseInfo[house][hArm] = 0;
		HouseInfo[house][hSafe] = 0;
		HouseInfo[house][hLock] = 0;
		HouseInfo[house][hMoney] = 0;
		HouseInfo[house][hMats] = 0;
		HouseInfo[house][hDrugs] = 0;

		for(new i = 0; i < 20; i ++)
		{
			HouseInfo[house][hItems][i] = 0;
			HouseInfo[house][hValue][i] = 0;
			HouseInfo[house][hState][i] = 0.0;
		}

		strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 64);
		
		DestroyDynamicMapIcon(HouseInfo[house][hMapIcon]);
		DestroyDynamicPickup(HousePickUps[house]);
		
		new string[180];
		HousePickUps[house] = CreateDynamicPickup(1273, 23, HouseInfo[house][hEnterX], HouseInfo[house][hEnterY], HouseInfo[house][hEnterZ],0,0,-1,100.0);
		HouseInfo[house][hMapIcon] = CreateDynamicMapIcon(HouseInfo[house][hEnterX],HouseInfo[house][hEnterY],HouseInfo[house][hEnterZ],31,COLOR_LIGHTRED,0,0,-1,150.0);
		format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Уровень: {FFD700}%d\n{33CCFF}Цена: {FFD700}$%d", HouseInfo[house][hID],HIInfo[HouseInfo[house][hType]][HouseName],HouseInfo[house][hLevel],HouseInfo[house][hPrice]);
		Update3DTextLabelText(HouseInfo[house][hText],0xFFFFFFFF, string);
		
		format(string,sizeof(string),"UPDATE `samp_houses` SET `Owner` = 'The State',`Lock` = '0',`Money` = '0',`Safe` = '0',`Hel` = '0',`Arm` = '0' WHERE `ID` = '%d'",HouseInfo[house][hID]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		ForEachPlayer(i)
		{
			if(PlayerInfo[i][pHouseKey] == house)
			{
				new message[64];
				format(message,sizeof(message),"Администратор %s снял(а) твой дом №%d.",PlayerInfo[playerid][pName],house);
				SendClientMessage(playerid,-1,message);
				PlayerInfo[i][pHouseKey] = 0;
				break;
			}
		}
		break;
	}
	return 1;
}
COMMAND:asellbiz(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	for(new house=1;house<=BIZNES;house++)
	{
        if(!IsPlayerInRangeOfPoint(playerid, 2.0, BiznesInfo[house][bEnterX], BiznesInfo[house][bEnterY], BiznesInfo[house][bEnterZ]))continue;
		BiznesInfo[house][bMoney] = 0;
        BiznesInfo[house][bMafia] = 0;

		strmid(BiznesInfo[house][bOwner], "The State", 0, strlen("The State"), 64);
		
		new string[256];
		format(string,sizeof(string),"UPDATE `samp_biznes` SET `Owner`='The State',`Money`='0',`Mafia`='0' WHERE `ID` = %d",house);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		format(string, sizeof(string), "{00CC00}%s{33CCFF}\nЦена: {FFD700}$%d{33CCFF}\nУровень: {FFD700}%d", BiznesInfo[house][bMessage],BiznesInfo[house][bPrice],BiznesInfo[house][bLevel]);
		Update3DTextLabelText(BiznesInfo[house][bText], 0xFFFFFFFF, string);
		
		ForEachPlayer(i)
		{
			if(PlayerInfo[i][pBizKey] == house)
			{
				format(string,sizeof(string),"Администратор %s снял(а) твой бизнес %s.",PlayerInfo[playerid][pName],BiznesInfo[house][bMessage]);
				SendClientMessage(playerid,-1,string);
				PlayerInfo[i][pBizKey] = 0;
				break;
			}
		}
		break;
	}
	return 1;
}

COMMAND:tohouse(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	if(sscanf(params,"i",params[0]))return ComMes(playerid, "/tohouse [номер дома].");
	SetPos(playerid, HouseInfo[params[0]][hEnterX],HouseInfo[params[0]][hEnterY],HouseInfo[params[0]][hEnterZ],0,0,0);
	return 1;
}
COMMAND:cc(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
    
	ForEachPlayer(i) if(!PlayerInfo[i][pAdmin]) 
	{
		EmptyMessages(i, 100);
		SendClientMessage(i,-1,"Общий чат был очищен администрацией.");
	}	
	new string[64];
	format(string, sizeof(string), "[ACMD] %s очистил(а) чат.",PlayerInfo[playerid][pName]);
	ABroadCast(COLOR_ACMD,string,1);
	return 1;
}

COMMAND:check(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	if(sscanf(params,"u",params[0]))return ComMes(playerid, "/check [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	ShowStats(playerid,params[0]);
	return 1;
}
COMMAND:noooc(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	if(!noooc)
	{
		new string[128];
		if(!strval(params)) return ComMes(playerid, "/noooc [Время в минутах]");
		noooc = strval(params) * 60;
		format(string, sizeof(string), "[ACMD] %s отключил(а) общий чат.",PlayerInfo[playerid][pName]);
		ABroadCast(COLOR_ACMD,string,1);
		SendClientMessageToAll(COLOR_WHITE, "Общuй чат отключен администратором.");
	}
	else
	{
		noooc = 0;
		new string[128];
		format(string, sizeof(string), "[ACMD] %s включил(а) общий чат.",PlayerInfo[playerid][pName]);
		ABroadCast(COLOR_ACMD,string,1);
		SendClientMessageToAll(COLOR_WHITE, "Общuй чат включен администратором.");
	}
	return 1;
}
COMMAND:gmx(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Недостаточно прав для использования команды.");

	new string[128];
	format(string, sizeof(string), "[ACMD] %s сделал(а) рестарт сервера.",PlayerInfo[playerid][pName]);
	ABroadCast(COLOR_ACMD,string,1);
	
	GameTextForAll(FixText("~w~SERVER~n~~b~IS~n~~r~RESTARTING~n~"),10000,6);
	ForEachPlayer(i) OnPlayerSave(i);
	//zmap_Exit();
	
	format(string, sizeof(string), "TRUNCATE TABLE `samp_online`");
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	SendRconCommand("exit");
	return 1;
}
COMMAND:makeadmin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
    
	new giveplayerid,level,string[128];
	if(sscanf(params,"ui",giveplayerid,level))return ComMes(playerid,"/makeadmin [id игрока] [уровень]");
	if(level < 1 || level > 8)return ErrorMes(playerid, "Доступные уровни от 1 до 8.");
	
	if(!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid,"Этот игрок не в сети.");
	//PlayerInfo[giveplayerid][pAdmin] = level;
	format(string, sizeof(string), "Ты получuл(а) %d уровень админки от Гл. Администратора %s", level, PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "Ты дал(а) игроку %s %d уровень админки.", PlayerInfo[giveplayerid][pName],level);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	
	if(!AdminInfo[giveplayerid][aLevel])
	{
		format(string,sizeof(string),"INSERT INTO `samp_admins` (`Name`,`Level`) VALUES ('%s','%d')",PlayerInfo[giveplayerid][pName],level);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	}
	else
	{
		format(string,sizeof(string),"UPDATE `samp_admins` SET `Level`='%d' WHERE `Name`='%s'",level,PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		if(PlayerInfo[giveplayerid][pAdmin]) PlayerInfo[giveplayerid][pAdmin] = level;
	}
	AdminInfo[giveplayerid][aLevel] = level;

	switch(AdminInfo[giveplayerid][aLevel])
	{
		case 1: strmid(AdminInfo[giveplayerid][aRank], "Помощник", 0, 24, 24);
		case 2: strmid(AdminInfo[giveplayerid][aRank], "Ст.Помощник", 0, 24, 24);
		case 3: strmid(AdminInfo[giveplayerid][aRank], "Мл.Администратор", 0, 24, 24);
		case 4: strmid(AdminInfo[giveplayerid][aRank], "Администратор", 0, 24, 24);
		case 5: strmid(AdminInfo[giveplayerid][aRank], "Ст.Администратор", 0, 24, 24);
		case 6: strmid(AdminInfo[giveplayerid][aRank], "Администратор фракций", 0, 24, 24);
		case 7: strmid(AdminInfo[giveplayerid][aRank], "Администратор банов", 0, 24, 24);
		case 8: strmid(AdminInfo[giveplayerid][aRank], "Администратор ивентов", 0, 24, 24);
		case 9: strmid(AdminInfo[giveplayerid][aRank], "Зам.Гл.Администратора", 0, 24, 24);
		case 10:strmid(AdminInfo[giveplayerid][aRank], "Гл.Администратор", 0, 24, 24);
		default: return 1;
	}
		
	format(string, sizeof(string), "[ACMD] %s выдал(а) %s %d уровень админки.",PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName],level);
	ABroadCast(COLOR_ACMD,string,1);
	return 1;
}
COMMAND:unmakeadmin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
    new giveplayerid,string[128];
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/unmakeadmin [id игрока]");
	
	if(PlayerInfo[playerid][pAdmin] < 10 && PlayerInfo[giveplayerid][pAdmin] > 2)return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	
	if(!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!PlayerInfo[giveplayerid][pAdmin])return ErrorMes(playerid,"Игрок не является администратором.");
	
	PlayerInfo[giveplayerid][pAdmin] = 0;
	AdminInfo[giveplayerid][aLevel] = 0;
	format(string, sizeof(string), "Ты был(а) снят(а) с поста администратора Гл. Администратором %s",  PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "Ты снял с поста администратора игрока %s.", PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	
	format(string,sizeof(string),"DELETE FROM `samp_admins` WHERE `Name`='%s'",PlayerInfo[giveplayerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

	format(string, sizeof(string), "[ACMD] %s снял(а) админку с %s.",PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName]);
	ABroadCast(COLOR_ACMD,string,1);
	return 1;
}
COMMAND:makeleader(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] != 6 && PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	if(sscanf(params,"ui",params[0],params[1]))return ComMes(playerid, "/makeleader [id игрока] [Номер фракции(1-26)]");
	if(params[1] > 26 || params[1] < 1)return ErrorMes(playerid, "Доступные номера фракцuй от 1 до 26.");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(TeamInfo[params[0]][tID])return ErrorMes(playerid, "Этот игрок уже состоит во фракцuu.");
	if(AdminInfo[params[0]][aLevel])return ErrorMes(playerid, "Администратора нельзя назначить лидером.");
	
	ForEachPlayer(i)
	{
		if(TeamInfo[i][tID] != TeamInfo[playerid][tID] || TeamInfo[i][tType] != 2) continue;
		TeamInfo[i][tID] = 0;
		TeamInfo[i][tType] = 0;
		SendClientMessage(i, COLOR_LIGHTBLUE, "* Ты был(а) убран(а) с поста лидера.");
	}
	
	new string[128], skin = 0;
	format(string,sizeof(string),"DELETE FROM `samp_team` WHERE `Team` = '%d' AND `Type` = '2'",
		params[1]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

	switch(params[1])
	{
	    case LSPD..LVPD,DOKI..ZONE51: skin = 11;
        case FBI,LIC,CASINO,MER: skin = 7;
		case HA,SRACE: skin = 9;
		case HUN: skin = 10;
	    case MEDIC: skin = 4;
		default: skin = 6;
	}

	AddPlayerToTeam(params[0], params[1], 2, skin);

	format(string, sizeof(string), "* Ты был(а) назначен(а) лидером фракцuu \"%s\" администратором %s.", GetTeamName(params[1]),PlayerInfo[playerid][pName]);
	SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Ты назначuл(а) %s лидером фракцuu \"%s\".", PlayerInfo[params[0]][pName],GetTeamName(params[1]));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	
	format(string, sizeof(string), "[ACMD] %s назначил(а) %s лидером \"%s\".",PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],GetTeamName(params[1]));
	ABroadCast(COLOR_ACMD,string,1);
	return 1;
}
COMMAND:unmakeleader(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] != 6 && PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	
	if(sscanf(params,"u",params[0]))return ComMes(playerid, "/unmakeleader [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(TeamInfo[params[0]][tType] != 2)return ErrorMes(playerid, "Этот игрок не возглавляет эту фракцию.");

	new string[128];
	format(string, sizeof(string), "* Ты был(а) убран(а) с поста лидера администратором %s.",PlayerInfo[playerid][pName]);
	SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Ты убрал(а) с поста лидера игрока %s.", PlayerInfo[params[0]][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	
	format(string, sizeof(string), "[ACMD] %s снял(а) %s с поста лидера \"%s\".",PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],GetTeamName(TeamInfo[params[0]][tID]));
	ABroadCast(COLOR_ACMD,string,1);

	DeletePlayerFromTeam(params[0]);
	return 1;
}
COMMAND:makezam(playerid, params[])
{
	if(sscanf(params,"u",params[0]))return ComMes(playerid, "/makezam [id игрока]");
	if(!IsPlayerConnected(params[0]))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(TeamInfo[playerid][tType] != 2)return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(params[0] == playerid)return ErrorMes(playerid,"Ты не можешь назначить себя заместителем.");
	if(TeamInfo[params[0]][tID] != TeamInfo[playerid][tID])return ErrorMes(playerid, "Этот игрок не состоит во твоей фракцuu.");
	
	ForEachPlayer(i)
	{
		if(TeamInfo[i][tID] != TeamInfo[playerid][tID] || TeamInfo[i][tType] != 1) continue;
		TeamInfo[i][tType] = 0;
		SendClientMessage(i, COLOR_LIGHTBLUE, "* Ты был(а) убран(а) с поста заместителя.");
	}

	new string[128];
	format(string,sizeof(string),"UPDATE `samp_team` SET `Type` = '0' WHERE `Team` = '%d' AND `Type` = '1'",
		TeamInfo[playerid][tID]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	UpdatePlayerTeam(params[0], 1, TeamInfo[playerid][tRank]);

	format(string, sizeof(string), "* Ты был(а) назначен(а) заместителем лидера фракцuu \"%s\" лидером %s.", GetTeamName(TeamInfo[playerid][tID]),PlayerInfo[playerid][pName]);
	SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Ты назначuл(а) %s заместителем лидера фракцuu \"%s\".", PlayerInfo[params[0]][pName],GetTeamName(TeamInfo[playerid][tID]));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}
COMMAND:unmakezam(playerid, params[])
{
	if(TeamInfo[playerid][tType] != 2 && PlayerInfo[playerid][pAdmin] != 6 && PlayerInfo[playerid][pAdmin] != 10)
		return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	if(sscanf(params,"u",params[0]))return ComMes(playerid, "/unmakezam [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
    if(TeamInfo[params[0]][tType] != 1)return ErrorMes(playerid, "Этот игрок не является заместителем фракции.");
	if(TeamInfo[params[0]][tID] != TeamInfo[playerid][tID] && PlayerInfo[playerid][pAdmin] != 6 && PlayerInfo[playerid][pAdmin] != 10)
		return ErrorMes(playerid, "Этот игрок не состоит во твоей фракцuu.");

	UpdatePlayerTeam(params[0], 0, TeamInfo[playerid][tRank]);

	new string[80];
	format(string, sizeof(string), "* Ты был(а) убран(а) с поста заместителя лидером %s.",PlayerInfo[playerid][pName]);
	SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Ты убрал(а) с поста заместителя игрока %s.", PlayerInfo[params[0]][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

	return 1;
}


COMMAND:ban(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
    new giveplayerid,days,reason[64],string[144];
    if(sscanf(params,"uis[64]",giveplayerid,days,reason)) return ComMes(playerid,"/ban [id игрока] [время в днях] [причина]");
	if(days < 0 || days > 365) return ErrorMes(playerid,"Срок бана от 1 до 365 дней.");
    if(!IsPlayerConnected(giveplayerid))
	{
		new PlayerName[24];
		if(sscanf(params,"s[24]is[64]",PlayerName,days,reason)) return ComMes(playerid,"/ban [id игрока] [время в днях] [причина]");
		if(IsNumeric(PlayerName)) return ErrorMes(playerid,"Этот игрок не в сети.");
		format(string,sizeof(string),"SELECT `Level` FROM `samp_admins` WHERE `Name` = '%s'",PlayerName);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dds",playerid,DB_BAN_ADMIN,params);
		return 1;
	}	
    if(PlayerInfo[giveplayerid][pAdmin] && PlayerInfo[playerid][pAdmin] != 10)return ErrorMes(playerid, "Админа нельзя забанuть.");

	format(string, sizeof(string), "Администратор %s забанил(а) %s на %d %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], days, GetWord(days,"день","дня","дней"), reason);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	
	TempBan(PlayerInfo[giveplayerid][pName],PlayerInfo[giveplayerid][pLastIP],PlayerInfo[playerid][pName],days,reason);
	SetTimerEx("KickTimer",1000,false,"d",giveplayerid);
	if(GetPVarInt(playerid,"LastBan") > GetTime)
	{
		AddPVarInt(playerid,"CountBan",1);
		if(GetPVarInt(playerid,"CountBan") >= 5)
		{
			PlayerInfo[playerid][pAdmin] = 0;
			AdminInfo[playerid][aLevel] = 0;		
			format(string,sizeof(string),"DELETE FROM `samp_admins` WHERE `Name`='%s'",PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			format(string, sizeof(string), "%s[%d] (%s) был(а) снят(а) с поста администратора. Причина: Массовый бан.",PlayerInfo[playerid][pName],playerid,PlayerInfo[playerid][pLastIP]);
			ABroadCast(0xBFC0C2FF,string, 1);
		}
	}
	SetPVarInt(playerid,"LastBan",GetTime + 3);
	return 1;
}
COMMAND:unban(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] != 7 && PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
    if(isnull(params)) return ComMes(playerid,"/unban [Имя игрока]");
	
	new query[80];
	format(query,sizeof(query),"SELECT `Name` FROM `samp_bans` WHERE `Name` = '%s'",params);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dds",playerid,DB_UNBAN,params);
	return 1;
}

COMMAND:banip(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
    if(isnull(params))return ComMes(playerid,"/banip [ip] [Причина]");
	new IP[4],BanIP[16],string[128],reason[64];
    if(strfind(params,".*",true) != -1)
	{
		if(PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Ты не можешь забанить подсеть.");
		new count;
		for(new i;i<strlen(params);i++) if(params[i] == '*')
		{
			params[i-1] = 0x20;
			params[i] = 0x20;
			count ++;
		}	
		if(!count)
		{
			if(sscanf(params,"p<.>iiiis[64]",IP[0],IP[1],IP[2],IP[3],reason)) return ComMes(playerid,"/banip [ip] [Причина]");
			format(BanIP,sizeof(BanIP),"%d.%d.%d.%d",IP[0],IP[1],IP[2],IP[3]);
		}	
		else if(count == 1) 
		{
			if(sscanf(params,"p<.>iiis[64]",IP[0],IP[1],IP[2],reason)) return ComMes(playerid,"/banip [ip] [Причина]");
			format(BanIP,sizeof(BanIP),"%d.%d.%d.*",IP[0],IP[1],IP[2]);
		}		
		else if(count == 2) 
		{
			if(sscanf(params,"p<.>iis[64]",IP[0],IP[1],reason)) return ComMes(playerid,"/banip [ip] [Причина]");
			format(BanIP,sizeof(BanIP),"%d.%d.*.*",IP[0],IP[1]);
		}	
		else return ErrorMes(playerid,"Ты не можешь забанить этот IP.");
	}
	else 
	{
		if(sscanf(params,"p<.>iiiis[64]",IP[0],IP[1],IP[2],IP[3],reason)) return ComMes(playerid,"/banip [ip] [Причина]");
		format(BanIP,sizeof(BanIP),"%d.%d.%d.%d",IP[0],IP[1],IP[2],IP[3]);
	}
	for(new i; i<4; i++) if(IP[i] < 0 || IP[i] > 255) return ComMes(playerid,"/unbanip [ip]");
	
    format(string,sizeof(string),"banip %s",BanIP);
	SendRconCommand(string); 
	SendRconCommand("reloadbans");
	format(string, sizeof(string), "[ACMD] %s забанил(а) IP: %s . Причина: %s",PlayerInfo[playerid][pName], BanIP, reason);
	ABroadCast(COLOR_ACMD,string,1);
	printf(string);
	
	return 1;
}

COMMAND:unbanip(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] != 7 && PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
    if(isnull(params))return ComMes(playerid,"/unbanip [ip]");
	new IP[4],BanIP[16],string[64];
    if(strfind(params,".*",true) != -1)
	{
		if(PlayerInfo[playerid][pAdmin] < 9)return ErrorMes(playerid,"Ты не можешь забанить подсеть.");
		new count;
		for(new i;i<strlen(params);i++) if(params[i] == '*') count ++;

		if(!count)
		{
			if(sscanf(params,"p<.>iiii",IP[0],IP[1],IP[2],IP[3])) return ComMes(playerid,"/unbanip [ip]");
			format(BanIP,sizeof(BanIP),"%d.%d.%d.%d",IP[0],IP[1],IP[2],IP[3]);
		}	
		else if(count == 1) 
		{
			if(sscanf(params,"p<.>iii",IP[0],IP[1],IP[2])) return ComMes(playerid,"/unbanip [ip]");
			format(BanIP,sizeof(BanIP),"%d.%d.%d.*",IP[0],IP[1],IP[2]);
		}		
		else if(count == 2) 
		{
			if(sscanf(params,"p<.>ii",IP[0],IP[1])) return ComMes(playerid,"/unbanip [ip]");
			format(BanIP,sizeof(BanIP),"%d.%d.*.*",IP[0],IP[1]);
		}	
		else return ErrorMes(playerid,"Ты не можешь забанить этот IP.");
	}
	else 
	{
		if(sscanf(params,"p<.>iiii",IP[0],IP[1],IP[2],IP[3])) return ComMes(playerid,"/unbanip [ip]");
		format(BanIP,sizeof(BanIP),"%d.%d.%d.%d",IP[0],IP[1],IP[2],IP[3]);
	}
    for(new i; i<4; i++) if(IP[i] < 0 || IP[i] > 255) return ComMes(playerid,"/unbanip [ip]");
	format(string,sizeof(string),"unbanip %s",BanIP);
	SendRconCommand(string);
	SendRconCommand("reloadbans");
	format(string, sizeof(string), "[ACMD] %s разбанил(а) IP: %s.",PlayerInfo[playerid][pName], BanIP);
	ABroadCast(COLOR_ACMD,string,1);
	printf(string);
	return 1;
}


COMMAND:warn(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	new giveplayerid,string[220],result[64];
	if(sscanf(params,"us[64]",giveplayerid,result))return ComMes(playerid,"/warn [id игрока] [причина]");
	if(PlayerInfo[giveplayerid][pAdmin] && PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid, "Админу нельзя дать предупреждение.");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid,"Этот игрок не в сети.");
	
	if(GetPVarInt(giveplayerid,"WarnFlood") > GetTime) return ErrorMes(playerid,"Этот игрок уже получил предупреждение.");
	SetPVarInt(giveplayerid,"WarnFlood",GetTime+1);
	
	if(WarnInfo[giveplayerid][wWarns] == 0) format(string, sizeof(string), "Администратор %s выдал(а) первое предупреждение %s. Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName], result);
	else if(WarnInfo[giveplayerid][wWarns] == 1) format(string, sizeof(string), "Администратор %s выдал(а) второе предупреждение %s. Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName], result);
	else if(WarnInfo[giveplayerid][wWarns] == 2) format(string, sizeof(string), "Администратор %s выдал(а) последнее предупреждение %s. Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName], result);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	

	format(string,sizeof(string),"INSERT INTO `samp_warns` (Name,Date,Admin,Reason) VALUES ('%s','%02d.%02d.%d %02d:%02d:%02d','%s','%s')",PlayerInfo[giveplayerid][pName],Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],result);

	if(WarnInfo[giveplayerid][wWarns] >= 2)
	{
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string); 
		TempBan(PlayerInfo[giveplayerid][pName],PlayerInfo[giveplayerid][pLastIP],PlayerInfo[playerid][pName],5,"3 предупреждения");
		SetTimerEx("KickTimer",1000,false,"d",giveplayerid);
		if(GetPVarInt(playerid,"LastBan") > GetTime)
		{
			AddPVarInt(playerid,"CountBan",1);
			if(GetPVarInt(playerid,"CountBan") >= 5)
			{
				PlayerInfo[playerid][pAdmin] = 0;
				AdminInfo[playerid][aLevel] = 0;		
				format(string,sizeof(string),"DELETE FROM `samp_admins` WHERE `Name`='%s'",PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				format(string, sizeof(string), "%s[%d] (%s) был(а) снят(а) с поста администратора. Причина: Массовый бан.",PlayerInfo[playerid][pName],playerid,PlayerInfo[playerid][pLastIP]);
				ABroadCast(0xBFC0C2FF,string, 1);
			}
		}
		SetPVarInt(playerid,"LastBan", GetTime + 3);
	}
	else 
	{
		SetPVarInt(playerid,"AddWarnID",giveplayerid);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",playerid,DB_ADD_WARN);
		if(!WarnInfo[giveplayerid][wWarns])
		{
			format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
			strmid(WarnInfo[giveplayerid][wDate1],string,0,20,20);
			strmid(WarnInfo[giveplayerid][wAdmin1],PlayerInfo[playerid][pName],0,24,24);
			strmid(WarnInfo[giveplayerid][wReason1],result,0,64,64);
		}
		else
		{
			format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
			strmid(WarnInfo[giveplayerid][wDate2],string,0,20,20);
			strmid(WarnInfo[giveplayerid][wAdmin2],PlayerInfo[playerid][pName],0,24,24);
			strmid(WarnInfo[giveplayerid][wReason2],result,0,64,64);
		}
	}	
	return 1;
}
COMMAND:unwarn(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/unwarn [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!WarnInfo[params[0]][wWarns])return ErrorMes(playerid, "У этого игрока нет предупрежденuй.");
	
	SetPVarInt(playerid,"WarnRemove",params[0]);
	
	new string[256];			
	format(string,sizeof(string),"[%s] Выдал: %s. Причина: %s\n",WarnInfo[params[0]][wDate1],WarnInfo[params[0]][wAdmin1],WarnInfo[params[0]][wReason1]);
	if(WarnInfo[params[0]][wWarns] == 2) format(string,sizeof(string),"%s[%s] Выдал: %s. Причина: %s",string,WarnInfo[params[0]][wDate2],WarnInfo[params[0]][wAdmin2],WarnInfo[params[0]][wReason2]);
					
	new _str[64];
	format(_str,sizeof(_str),""FPHEAD"Предупреждения %s",PlayerInfo[params[0]][pName]);
	ShowPlayerDialog(playerid,D_ADMIN_WARN,DIALOG_STYLE_LIST,_str,string,"Снять","Выйти");

	return 1;
}

COMMAND:kick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new giveplayerid,string[144],result[64];
	if(sscanf(params,"us[64]",giveplayerid,result))return ComMes(playerid,"/kick [id игрока] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(PlayerInfo[giveplayerid][pAdmin] > 0 && PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid, "Админа нельзя кикнуть.");

	format(string, sizeof(string), "Администратор %s кикнул(а) %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], result);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	SetTimerEx("KickTimer",1000,false,"d",giveplayerid);
	return 1;
}
COMMAND:jail(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new giveplayerid,money,result[64],string[320];
	if(sscanf(params,"uis[64]",giveplayerid,money,result))return ComMes(playerid,"/jail [id игрока] [время] [причина]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!money)
	{
		
		SetPlayerPos(giveplayerid,PlayerInfo[giveplayerid][pPos][0],PlayerInfo[giveplayerid][pPos][1],PlayerInfo[giveplayerid][pPos][2]+5);
		SpawnPlayer(giveplayerid);
		SendClientMessage(playerid, COLOR_WHITE, "Ты телепортировал(а) игрока на место появления.");
		SendClientMessage(giveplayerid, COLOR_WHITE, "Ты был(а) телепортирован(а) на место появления администратором.");
		return 1;
	}
	if(!JailInfo[giveplayerid][jTime]) 
	{
		format(string, sizeof(string), "Администратор %s посадил(а) %s в тюрьму на %d %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], money, GetWord(money,"минуту","минуты","минут"), result);
		SendClientMessageToAll(COLOR_LIGHTRED,string);
	
		PlayerInfo[giveplayerid][pWanted] = 0;
		UpdateWanted(giveplayerid,0);
		JailInfo[giveplayerid][jID] = 1;
		JailInfo[giveplayerid][jTime] = money*60;
		JailInfo[giveplayerid][jPrice] = 0;
		format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
		strmid(JailInfo[giveplayerid][jDate],string,0,20,20);
		strmid(JailInfo[giveplayerid][jCop],PlayerInfo[playerid][pName],0,24,24);
		strmid(JailInfo[giveplayerid][jReason],result,0,64,64);
		
		format(string,sizeof(string),"UPDATE `samp_users` SET `Wanted`='0' WHERE `Name`='%s'",
			PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		format(string,sizeof(string),"INSERT INTO `samp_jail` (Name,Date,Jail,Cop,Time,Reason) VALUES ('%s','%s','%d','%s','%d','%s')",
			PlayerInfo[giveplayerid][pName],JailInfo[giveplayerid][jDate],JailInfo[giveplayerid][jID],JailInfo[giveplayerid][jCop],JailInfo[giveplayerid][jTime],JailInfo[giveplayerid][jReason]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	}
	else 
	{
		format(string, sizeof(string), "Администратор %s пересадил(а) %s с %d на %d %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], floatround(JailInfo[giveplayerid][jTime]/60),money, GetWord(money,"минуту","минуты","минут"), result);
		SendClientMessageToAll(COLOR_LIGHTRED,string);
	
		PlayerInfo[giveplayerid][pWanted] = 0;
		UpdateWanted(giveplayerid,0);
		JailInfo[giveplayerid][jID] = 1;
		JailInfo[giveplayerid][jTime] = money*60;
		JailInfo[giveplayerid][jPrice] = 0;
		format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
		strmid(JailInfo[giveplayerid][jDate],string,0,20,20);
		strmid(JailInfo[giveplayerid][jCop],PlayerInfo[playerid][pName],0,24,24);
		strmid(JailInfo[giveplayerid][jReason],result,0,64,64);
		
		format(string,sizeof(string),"UPDATE `samp_users` SET `Wanted`='0' WHERE `Name`='%s'",
			PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		format(string,sizeof(string),"UPDATE `samp_jail` SET `Date`='%s',`Jail`='%d',`Cop`='%s',`Time`='%d',`Price`='0',`Reason`='%s' WHERE `Name`='%s'",
		JailInfo[giveplayerid][jDate],JailInfo[giveplayerid][jID],JailInfo[giveplayerid][jCop],JailInfo[giveplayerid][jTime],JailInfo[giveplayerid][jReason],PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	}
	
	SetPlayerPos(giveplayerid,PlayerInfo[giveplayerid][pPos][0],PlayerInfo[giveplayerid][pPos][1],PlayerInfo[giveplayerid][pPos][2]+5);
	SpawnPlayer(giveplayerid);

	format(string, sizeof(string), "Тебя посадuлu на %d %s. Залог: Невозможен", money, GetWord(money,"минуту","минуты","минут"));
	return SendClientMessage(giveplayerid, COLOR_WHITE, string);
}
COMMAND:unjail(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");

	new giveplayerid,string[128];
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/unjail [id игрока]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!JailInfo[giveplayerid][jTime])return ErrorMes(playerid,"Этот игрок не в тюрьме.");
	JailInfo[giveplayerid][jTime] = 1;

	format(string, sizeof(string), "Администратор %s освободил(а) из тюрьмы %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName],JailInfo[giveplayerid][jReason]);
	return SendClientMessageToAll(COLOR_LIGHTRED,string);
}
COMMAND:gotols(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	SetPos(playerid, 1529.6,-1691.2,13.3,0.0,0,0);
	return SendClientMessage(playerid, COLOR_WHITE, "Ты был(а) телепортирован(а) в Los Santos.");
}
COMMAND:gotosf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	SetPos(playerid, -1417.0,-295.8,14.1,0.0,0,0);
	return SendClientMessage(playerid, COLOR_WHITE, "Ты был(а) телепортирован(а) в San Fierro.");
}
COMMAND:gotolv(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	SetPos(playerid, 1699.2, 1435.1, 10.7,0.0,0,0);
	return SendClientMessage(playerid, COLOR_WHITE, "Ты был(а) телепортирован(а) в Las Venturas.");
}

COMMAND:donate(playerid,params[])
{
    if (PlayerInfo[playerid][pLevel] < 1) return ErrorMes(playerid, "Команда доступна с 1 уровня.");
	new query[128];
	format(query,sizeof(query),"SELECT `SSM` FROM `samp_users` WHERE `name` = '%s'", PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dd",playerid,DB_CHECK_BONUS);
	return 1;
}

COMMAND:entercar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	if(sscanf(params,"i",params[0]))return ComMes(playerid,"/entercar [id транспорта]");
	if(!IsValidVehicle(params[0])) return ErrorMes(playerid,"Транспорт с таким ID не найден.");
	FP_PutPlayerInVehicle(playerid, params[0], 1);
	
	new message[64];
	format(message,sizeof(message), "Ты был(а) телепортирован(а) в %s(ID:%d).",VehMInfo[GetVehicleModel(params[0])-400][mName],params[0]);
	return SendClientMessage(playerid, COLOR_WHITE,message);
}
COMMAND:gotocar(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	new Float:Pos[3];
	if(sscanf(params,"i",params[0]))return ComMes(playerid,"/gotocar [id транспорта]");
	if(!IsValidVehicle(params[0])) return ErrorMes(playerid,"Транспорт с таким ID не найден.");
	GetVehiclePos(params[0], Pos[0], Pos[1], Pos[2]);
	SetPos(playerid, Pos[0], Pos[1], Pos[2]+2, 0.0,0 , 0);
	
	new message[64];
	format(message,sizeof(message), "Ты был(а) телепортирован(а) к %s(ID:%d).",VehMInfo[GetVehicleModel(params[0])-400][mName],params[0]);
	return SendClientMessage(playerid, COLOR_WHITE,message);
}

COMMAND:goto(playerid, params[])
{
	if (!PlayerInfo[playerid][pAdmin])return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	new Float:Pos[3];
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/goto [id игрока]");
	if (!IsPlayerConnected(params[0]))return ErrorMes(playerid,"Этот игрок не в сети.");
	if (PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin])return ErrorMes(playerid, "Ты не можешь телепортироваться к этому администратору.");
	GetPlayerPos(params[0], Pos[0], Pos[1], Pos[2]);
	SetPos(playerid,Pos[0], Pos[1], Pos[2],0.0, PlayerInfo[params[0]][pInt], PlayerInfo[params[0]][pWorld]);

	new message[64];
	format(message,sizeof(message), "Ты был(а) телепортирован(а) к %s(ID:%d).",PlayerInfo[params[0]][pName],params[0]);
	return SendClientMessage(playerid, COLOR_WHITE,message);
}
COMMAND:gethere(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	new Float:Pos[3];
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/gethere [id игрока]");
	if(!IsPlayerConnected(params[0]))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin])return ErrorMes(playerid, "Ты не можешь телепортировать этого администратора.");
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	SetPos(params[0],Pos[0], Pos[1], Pos[2],0.0,PlayerInfo[playerid][pInt],PlayerInfo[playerid][pWorld]);
	
	new message[72];
	format(message,sizeof(message), "Ты был(а) телепортирован(а) к администратору %s.", PlayerInfo[playerid][pName]);
	return SendClientMessage(params[0], COLOR_WHITE,message);
}
COMMAND:getcar(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	new Float:Pos[3];
	if(sscanf(params,"i",params[0]))return ComMes(playerid,"/getcar [carid]");
	if(!IsValidVehicle(params[0])) return ErrorMes(playerid,"Транспорт с таким ID не найден.");
	GetPlayerPos(playerid, Pos[0], Pos[1], Pos[2]);
	FP_SetVehiclePos(params[0], Pos[0], Pos[1]+4, Pos[2]);

	new message[64];
	format(message,sizeof(message), "Ты телепортировал(а) к себе %s(ID:%d).",VehMInfo[GetVehicleModel(params[0])-400][mName],params[0]);
	return SendClientMessage(playerid, COLOR_WHITE,message);
}

COMMAND:towcars(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new used[MAX_VEHICLES+1];
	ForEachPlayer(i) if(IsPlayerInAnyVehicle(i)) used[PlayerInfo[i][pVehID]] = 1;
	for(new i = 1; i<=MAX_VEHICLES; i++)
	{
		if(used[i] == 1 || VehInfo[i][vType] == -1)continue;
		SetVehicleToRespawn(i);
	}
	SendClientMessageToAll(COLOR_WHITE, "Весь транспорт был расставлен по местам.");
	new string[128];
	format(string, sizeof(string), "[ACMD] %s расставил(а) весь транспорт по местам.",PlayerInfo[playerid][pName]);
	ABroadCast(COLOR_ACMD,string,1);
	return 1;
}
COMMAND:getgun(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	if(sscanf(params,"ii",params[0],params[1]) || params[0] < 0 || params[0] > 46)
	{
		ComMes(playerid,"/getgun [id оружия] [количество патронов]");
		SendClientMessage(playerid, COLOR_WHITE, "1. Кастет			|2. Клюшка		|3. Дубинка	|4. Нож				| 5. Бита			| 6.Лопата");
		SendClientMessage(playerid, COLOR_WHITE, "7. Кий			|8. Катана		|9. Бензопил|10.Фиол.дилдо		| 11.Дилдо			| 12.Вибратор");
		SendClientMessage(playerid, COLOR_WHITE, "13.Сер.вибратор	|14.Цветы		|15.Трость	|16.Гранаты			| 18. Кокт.Молотова	| 22.Пистолет");
		SendClientMessage(playerid, COLOR_WHITE, "23.Пист. с глуш.	|24.Desert Eagle|25.Дробовик|27.Боев.дробовик	| 28.Микро SMG		| 29.MP5");
		SendClientMessage(playerid, COLOR_WHITE, "30.AK-47			|31.M4			|32.Tec-9	|33.Винтовка		| 34.Снайп.винтовка	| 41.Краска ");
		SendClientMessage(playerid, COLOR_WHITE, "42.Огнетушитель	|43.Камера		|46.Парашют");
		return 1;
	}
	switch(params[0])
	{
		case 17,19..21,26,35..40,44,45: return ErrorMes(playerid,"Данный вид оружия недоступен на сервере.");
		default: AddItem(playerid, params[0], params[1]);
	}
	return 1;
}
COMMAND:givegun(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	if(sscanf(params,"uii",params[0],params[1],params[2]) || params[1] < 0 || params[1] > 46)
	{
		ComMes(playerid,"/givegun [id игрока] [id оружия] [количество патронов]");
		SendClientMessage(playerid, COLOR_WHITE, "1. Кастет 	  |2. Клюшка 	  |3. Дубинка  |4. Нож  	    | 5. Бита  		   | 6.Лопата");
		SendClientMessage(playerid, COLOR_WHITE, "7. Кий		  |8. Катана  	  |9. Бензопила|10.Фиол.дилдо   | 11.Дилдо 		   | 12.Вибратор");
		SendClientMessage(playerid, COLOR_WHITE, "13.Сер.вибратор |14.Цветы 	  |15.Трость   |16.Гранаты	    | 18. Кокт.Молотова| 22.Пистолет");
		SendClientMessage(playerid, COLOR_WHITE, "23.Пист. с глуш.|24.Desert Eagle|25.Дробовик |27.Боев.дробовик| 28.Микро SMG 	   | 29.MP5");
		SendClientMessage(playerid, COLOR_WHITE, "30.AK-47 		  |31.M4 		  |32.Tec-9    |33.Винтовка     | 34.Снайп.винтовка| 41.Краска ");
		SendClientMessage(playerid, COLOR_WHITE, "42.Огнетушитель |43.Камера 	  |46.Парашют");
		return 1;
	}
	if(!IsPlayerConnected(params[0]))return ErrorMes(playerid,"Этот игрок не в сети.");

	switch(params[1])
	{
		case 17,19..21,26,35..40,44,45: return ErrorMes(playerid,"Данный вид оружия недоступен на сервере.");
		default: AddItem(params[0], params[1], params[2]);
	}
	return 1;
}
COMMAND:sethp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
    new giveplayerid, health;
	if(sscanf(params,"ui",giveplayerid,health))return ComMes(playerid,"/sethp [id игрока] [здоровье]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	FP_SetPlayerHealth(giveplayerid, health);

	return 1;
}
COMMAND:setarmor(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
    new giveplayerid, health;
	if(sscanf(params,"ui",giveplayerid,health))return ComMes(playerid,"/setarmor [id игрока] [броня]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	AddItem(giveplayerid, 19, 1, health);

	return 1;
}
COMMAND:veh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	if(sscanf(params,"i",params[0]))return ComMes(playerid,"/veh [carid]");
	if(params[0] < 400 || params[0] > 611)return ErrorMes(playerid, "Номер модели авто может быть только от 400 до 611.");
	SetPlayerPos(playerid, PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2]+2.5);
	if(GetPVarInt(playerid,"CreateCar")) DestroyVehicle(GetPVarInt(playerid,"CreateCar"));
	new vehicleid = AddStaticVehicleEx(params[0], PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2], 0.0, -1, -1, 1800000);
	SetPVarInt(playerid,"CreateCar",vehicleid);
	VehInfo[vehicleid][vType] = VT_EVENT;
	VehInfo[vehicleid][vEngine] = 1;
	VehInfo[vehicleid][vLights] = 1;
	VehInfo[vehicleid][vGas] = VehMInfo[GetVehicleModel(vehicleid)-400][mTank];
	VehInfo[vehicleid][vPercent] = VehMInfo[GetVehicleModel(vehicleid)-400][mPercent];
	VehInfo[vehicleid][vPos][0] = PlayerInfo[playerid][pPos][0];
	VehInfo[vehicleid][vPos][1] = PlayerInfo[playerid][pPos][1];
	VehInfo[vehicleid][vPos][2] = PlayerInfo[playerid][pPos][2];
	SetVehicleParamsEx(vehicleid, VehInfo[vehicleid][vEngine], VehInfo[vehicleid][vLights], VehInfo[vehicleid][vAlarm], VehInfo[vehicleid][vLock], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vBoot], 0);			
	FP_SetVehicleHealth(vehicleid,1000);
	PutPlayerInVehicle(playerid,vehicleid,0);
	new message[72];
	format(message,sizeof(message),"Ты создал(а) %s (ID:%d). Удалить транспорт: /vehd.", VehMInfo[GetVehicleModel(vehicleid)-400][mName],vehicleid);
	return SendClientMessage(playerid, COLOR_WHITE, message);
}
COMMAND:vehd(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 2)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	if(!GetPVarInt(playerid,"CreateCar")) return ErrorMes(playerid,"Ты уже удалuл(а) uлu не создавал(а) машину.");
	if(GetVehicleModel(GetPVarInt(playerid,"CreateCar")))
	{
		new message[64];
		format(message,sizeof(message),"Ты удалuл(а) созданный ранее %s (ID:%d).",VehMInfo[GetVehicleModel(GetPVarInt(playerid,"CreateCar"))-400][mName],GetPVarInt(playerid,"CreateCar"));
		SendClientMessage(playerid, COLOR_WHITE, message);
		DestroyVehicle(GetPVarInt(playerid,"CreateCar"));
		DeletePVar(playerid,"CreateCar");
	}	
	return 1;
}
COMMAND:fixveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	if(sscanf(params,"i",params[0]))
	{
		if(!IsPlayerInAnyVehicle(playerid)) return ComMes(playerid,"/fixveh [id транспорта]");
		params[0] = PlayerInfo[playerid][pVehID];
	}	
	else if(!IsValidVehicle(params[0]))	return ErrorMes(playerid,"Транспорт с данным ID отсутствует.");
	FP_SetVehicleHealth(params[0], 1000.0); RepairVehicle(params[0]);
	
	new message[64];
	format(message,sizeof(message), "%s(ID:%d) успешно починен.",VehMInfo[GetVehicleModel(params[0])-400][mName],params[0]);
	return SendClientMessage(playerid, COLOR_WHITE, message);
}

COMMAND:slap(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new Float:Pos[3],string[128];
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/slap [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	SaveStats(params[0]);
	GetPlayerPos(params[0],Pos[0], Pos[1], Pos[2]);
	SetPlayerPos(params[0],Pos[0], Pos[1], Pos[2]+10);
	CreateExplosion(Pos[0],Pos[1],Pos[2]+10.0, 12, 5.0);
	
	format(string, sizeof(string), "[ACMD] %s подкинул(а) %s",PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName]);
	ABroadCast(COLOR_ACMD,string,1);
	return 1;
}
COMMAND:mute(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new result[64],string[320];
	if(sscanf(params,"uis[64]",params[0],params[1],result))return ComMes(playerid,"/mute [id игрока] [Время(минуты)] [причина]");
	if (!IsPlayerConnected(params[0]))return ErrorMes(playerid,"Этот игрок не в сети.");

	if(!params[1]) return ErrorMes(playerid, "Минимальный срок мута - 1 минута.");
	if(!MuteInfo[params[0]][mTime])
	{
		format(string, sizeof(string), "Администратор %s заткнул(а) игрока %s на %d %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName], params[1], GetWord(params[1],"минуту","минуты","минут"), result);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		
		MuteInfo[params[0]][mTime] = params[1]*60;
		format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
		strmid(MuteInfo[params[0]][mDate],string,0,20,20);
		strmid(MuteInfo[params[0]][mAdmin],PlayerInfo[playerid][pName],0,24,24);
		strmid(MuteInfo[params[0]][mReason],result,0,64,64);
		
		format(string,sizeof(string),"INSERT INTO `samp_mute` (Name,Date,Admin,Time,Reason) VALUES ('%s','%s','%s','%d','%s')",
		PlayerInfo[params[0]][pName],MuteInfo[params[0]][mDate],MuteInfo[params[0]][mAdmin],MuteInfo[params[0]][mTime],MuteInfo[params[0]][mReason]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	}
	else
	{
		format(string, sizeof(string), "Администратор %s заткнул(а) игрока %s на %d %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName], params[1], GetWord(params[1],"минуту","минуты","минут"), result);
		SendClientMessageToAll(COLOR_LIGHTRED, string);
		
		MuteInfo[params[0]][mTime] = params[1]*60;
		format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
		strmid(MuteInfo[params[0]][mDate],string,0,20,20);
		strmid(MuteInfo[params[0]][mAdmin],PlayerInfo[playerid][pName],0,24,24);
		strmid(MuteInfo[params[0]][mReason],result,0,64,64);
		
		format(string,sizeof(string),"UPDATE `samp_mute` SET `Date`='%s',`Admin`='%s',`Time`='%d',`Reason`='%s' WHERE `Name`='%s'",
		MuteInfo[params[0]][mDate],MuteInfo[params[0]][mAdmin],MuteInfo[params[0]][mTime],MuteInfo[params[0]][mReason],PlayerInfo[params[0]][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	}
	return 1;
}
COMMAND:unmute(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new string[128];
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/unmute [id игрока]");
	if (!IsPlayerConnected(params[0]))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!MuteInfo[params[0]][mTime]) return ErrorMes(playerid,"Этот игрок не заткнут.");

	format(string,sizeof(string),"DELETE FROM `samp_mute` WHERE `Name` = '%s'",PlayerInfo[params[0]][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	format(string, sizeof(string), "Администратор %s снял(а) бан чата %s. Причина: %s", PlayerInfo[playerid][pName], PlayerInfo[params[0]][pName],MuteInfo[params[0]][mReason]);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	
	MuteInfo[params[0]][mTime] = 0;
	MuteInfo[params[0]][mDate] = EOS;
	MuteInfo[params[0]][mAdmin] = EOS;
	MuteInfo[params[0]][mReason] = EOS;
	return 1;
}
COMMAND:sban(playerid, params[])
{	
	if (PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new reason[64],string[144];
    if(sscanf(params,"uis[64]",params[0],params[1],reason)) return ComMes(playerid,"/sban [id игрока] [время в днях] [причина]");
	if(params[1] < 0 || params[1] > 365) return ErrorMes(playerid,"Срок бана от 1 до 365 дней.");
    if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
    if(PlayerInfo[params[0]][pAdmin] && PlayerInfo[playerid][pAdmin] != 10)return ErrorMes(playerid, "Админа нельзя забанuть.");

	format(string, sizeof(string), "[ACMD] %s забанил(а) %s на %d дней. Причина: %s",PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],params[1],reason);
	ABroadCast(COLOR_ACMD,string,1);
	
	TempBan(PlayerInfo[params[0]][pName],PlayerInfo[params[0]][pLastIP],PlayerInfo[playerid][pName],params[1],reason);
	SetTimerEx("KickTimer",1000,false,"d",params[0]);
	
	if(GetPVarInt(playerid,"LastBan") > GetTime)
	{
		AddPVarInt(playerid,"CountBan",1);
		if(GetPVarInt(playerid,"CountBan") >= 5)
		{
			PlayerInfo[playerid][pAdmin] = 0;
			AdminInfo[playerid][aLevel] = 0;		
			format(string,sizeof(string),"DELETE FROM `samp_admins` WHERE `Name`='%s'",PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			format(string, sizeof(string), "%s[%d] (%s) был(а) снят(а) с поста администратора. Причина: Массовый бан.",PlayerInfo[playerid][pName],playerid,PlayerInfo[playerid][pLastIP]);
			ABroadCast(0xBFC0C2FF,string, 1);
		}
	}
	SetPVarInt(playerid,"LastBan",GetTime + 3);
	return 1;
}
COMMAND:skick(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new result[64],string[144];
	if(sscanf(params,"us[64]",params[0],result))return ComMes(playerid,"/skick [id игрока] [причина]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin])return ErrorMes(playerid, "Админа нельзя кикнуть.");
	format(string, sizeof(string), "[ACMD] %s кикнул(а) %s. Причина: %s",PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],result);
	ABroadCast(COLOR_ACMD,string,1);
	SetTimerEx("KickTimer",1000,false,"d",params[0]);
	return 1;
}
COMMAND:freeze(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new string[128];
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/freeze [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(PlayerInfo[params[0]][pAdmin] && PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Ты не можешь заморозuть админа.");
	TogglePlayerControllable(params[0], 0);
	SendClientMessage(params[0],COLOR_WHITE,"Ты был заморожен администатором.");
	format(string, sizeof(string), "[ACMD] %s заморозил(а) %s.",PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName]);
	ABroadCast(COLOR_ACMD,string,1);
	return 1;
}
COMMAND:unfreeze(playerid, params[])
{
	if (PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new string[128];
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/unfreeze [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(PlayerInfo[params[0]][pAdmin] && PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Ты не можешь разморозuть админа.");
	TogglePlayerControllable(params[0], 1);
	SendClientMessage(params[0],COLOR_WHITE,"Ты был разморожен администатором.");
	format(string, sizeof(string), "[ACMD] %s разморозил(а) %s.",PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName]);
	ABroadCast(COLOR_ACMD,string,1);
	return 1;
}
COMMAND:spec(playerid, params[])return cmd_recon(playerid, params);
COMMAND:recon(playerid, params[])
{
	new giveplayerid;
    if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
    if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/recon [id игрока]");
    if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!GetPVarInt(giveplayerid,"Login"))return ErrorMes(playerid,"Этот игрок еще не авторизовался.");
    if(giveplayerid == playerid)return ErrorMes(playerid,"Ты не можешь наблюдать за собой.");
    if(PlayerInfo[playerid][pAdmin] < PlayerInfo[giveplayerid][pAdmin])return ErrorMes(playerid,"Ты не можешь следuть за этим игроком.");
    if(Spectate[playerid] == -1) 
	{
		SaveStats(playerid);
		TogglePlayerSpectating(playerid, true);
		for(new i; i<8; i++) TextDrawShowForPlayer(playerid,SpecTD[i]);
		
		SpecTDEx[playerid] = CreatePlayerTextDraw(playerid, 450.000000, 220.000000, "_");
		PlayerTextDrawBackgroundColor(playerid,SpecTDEx[playerid], 255);
		PlayerTextDrawFont(playerid,SpecTDEx[playerid], 2);
		PlayerTextDrawLetterSize(playerid,SpecTDEx[playerid], 0.309998, 1.299999);
		PlayerTextDrawColor(playerid,SpecTDEx[playerid], -1);
		PlayerTextDrawSetOutline(playerid,SpecTDEx[playerid], 0);
		PlayerTextDrawSetProportional(playerid,SpecTDEx[playerid], 1);
		PlayerTextDrawSetShadow(playerid,SpecTDEx[playerid], 1);
		PlayerTextDrawUseBox(playerid,SpecTDEx[playerid], 1);
		PlayerTextDrawBoxColor(playerid,SpecTDEx[playerid], 80);
		PlayerTextDrawTextSize(playerid,SpecTDEx[playerid], 638.000000, 0.000000);
		PlayerTextDrawShow(playerid,SpecTDEx[playerid]);
		SelectTextDraw(playerid, 0x008000FF);

		SetPVarInt(playerid, "TypeTextDraw", 3);
	}	

	Spectate[playerid] = giveplayerid;

	SpectateTextDrawUpdate(playerid);

	if(!PlayerInfo[Spectate[playerid]][pVehID]) PlayerSpectatePlayer(playerid,Spectate[playerid]);
	else PlayerSpectateVehicle(playerid,PlayerInfo[Spectate[playerid]][pVehID]);
	FP_SetPlayerInterior(playerid,PlayerInfo[Spectate[playerid]][pInt]);
	FP_SetPlayerVirtualWorld(playerid,PlayerInfo[Spectate[playerid]][pWorld]);
	
	SendClientMessage(playerid,COLOR_YELLOW,"Для вращения камерой, сверни панель: \"HIDE\". \"SPACE\" - Вернуть панель наблюдения, \"SHIFT\" - Обновить налюдение.");
	return 1;
}



COMMAND:specoff(playerid, params[])return cmd_uncon(playerid, params);
COMMAND:uncon(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
    if(Spectate[playerid] == -1)return ErrorMes(playerid,"Ты не ведешь наблюдение за игроком.");
	SpectateTextDrawHide(playerid);
	return 1;
}
COMMAND:bigears(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	if (GetPVarInt(playerid,"BigEar") == 0)
	{
	    SetPVarInt(playerid,"BigEar",1);
		SendClientMessage(playerid, COLOR_WHITE, "Теперь ты слышишь всё.");
	}
	else if (GetPVarInt(playerid,"BigEar") == 1)
	{
		DeletePVar(playerid,"BigEar");
		SendClientMessage(playerid, COLOR_WHITE, "Теперь ты слышишь как обычно.");
	}
	return 1;
}
COMMAND:alic(playerid, params[])
{
	new giveplayerid,string[140];
	if(PlayerInfo[playerid][pAdmin] < 4)return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
    if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/alic [id игрока]");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid,"Этот игрок не в сети.");
    LicInfo[giveplayerid][MotoLic] = 1;
    LicInfo[giveplayerid][AutoLic] = 1;
    LicInfo[giveplayerid][FlyLic] = 1;
    LicInfo[giveplayerid][BoatLic] = 1;
    LicInfo[giveplayerid][GunLic] = 1;

	format(string,sizeof(string),"UPDATE `samp_licenses` SET `MotoLic`='1',`AutoLic`='1',`FlyLic`='1',`BoatLic`='1',`GunLic`='1' WHERE `Name`='%s'",PlayerInfo[giveplayerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	format(string,sizeof(string),"%s выдал тебе все лицензии.",PlayerInfo[playerid][pName]);
    SendClientMessage(giveplayerid,COLOR_YELLOW2,string);
	format(string,sizeof(string),"Ты выдал все лицензии %s.",PlayerInfo[giveplayerid][pName]);
    return SendClientMessage(playerid,COLOR_YELLOW2,string);
}

COMMAND:weather(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	if(sscanf(params,"i",params[0]))return ComMes(playerid,"/weather [id погоды]");
	if(params[0] < 0||params[0] > 45)return ErrorMes(playerid, "Номер погоды может быть от 0 до 45.");
	SetPlayerWeather(playerid, params[0]);
	SendClientMessage(playerid, COLOR_WHITE, "Погода установлена.");
	return 1;
}
COMMAND:weatherall(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Недостаточно прав для использования команды.");

	if(sscanf(params,"i",params[0]))return ComMes(playerid,"/weatherall [weatherid]");
	if(params[0] < 0||params[0] > 45)return ErrorMes(playerid, "Номер погоды может быть от 0 до 45.");
	SetWeather(params[0]);
	SendClientMessage(playerid, COLOR_WHITE, "Погода установлена.");
	return 1;
}

COMMAND:delealltune(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10) return 1;
	for(new i=1; i<=MAX_VEHICLES; i++)
    {
        if(VehInfo[i][vType] == VT_OWNED || VehInfo[i][vType] == VT_RENT) DeleteTune(i);
        else SetVehicleToRespawn(i);
    }
    SendClientMessage(playerid,COLOR_YELLOW2,"Весь тюнинг снят.");
    return 1;
}
COMMAND:hint(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new num = PlayerInfo[playerid][pWorld],i;
	if(sscanf(params,"i",i))return ErrorMes(playerid, "/hint [id интерьера].");
	if(i < 0 || i > 27)return ErrorMes(playerid,"Номера интерьеров от 0 до 27.");
	HouseInfo[num][hExitX] = HIInfo[i][Exit_X];
	HouseInfo[num][hExitY] = HIInfo[i][Exit_Y];
	HouseInfo[num][hExitZ] = HIInfo[i][Exit_Z];
	HouseInfo[num][hInt] = HIInfo[i][Int];
	HouseInfo[num][hPrice] = HIInfo[i][Price];
	HouseInfo[num][hLevel] = HIInfo[i][Level];
	HouseInfo[num][hType] = i;
	SetPos(playerid,HIInfo[i][Exit_X],HIInfo[i][Exit_Y],HIInfo[i][Exit_Z],0.0,HIInfo[i][Int],num);
	
	new string[196];
    if(!strcmp(HouseInfo[num][hOwner],"The State",true)) format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Уровень: {FFD700}%d\n{33CCFF}Цена: {FFD700}$%d", HouseInfo[num][hID],HIInfo[HouseInfo[num][hType]][HouseName],HouseInfo[num][hLevel],HouseInfo[num][hPrice]);
	else format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Владелец: {00CC00}%s", HouseInfo[num][hID],HIInfo[HouseInfo[num][hType]][HouseName],HouseInfo[num][hOwner]);
	Update3DTextLabelText(HouseInfo[num][hText],0xFFFFFFFF, string);
	
	format(string,sizeof(string),"UPDATE `samp_houses` SET `Type` = '%d' WHERE `ID` = '%d'",	i,HouseInfo[num][hID]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	return 1;
}
COMMAND:bint(playerid,params[])
{
	
	if(PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new i,string[144];
	if(sscanf(params,"i",i))return ErrorMes(playerid, "/bint [id интерьера].");
	if(i < 0 || i > 30) return ErrorMes(playerid,"Номера интрерьеров от 0 до 30.");
	
	strmid(BiznesInfo[PlayerInfo[playerid][pWorld]][bMessage], BIInfo[i][BizName], 0, 32, 32);
	BiznesInfo[PlayerInfo[playerid][pWorld]][bExitX] = BIInfo[i][Exit_X];
	BiznesInfo[PlayerInfo[playerid][pWorld]][bExitY] = BIInfo[i][Exit_Y];
	BiznesInfo[PlayerInfo[playerid][pWorld]][bExitZ] = BIInfo[i][Exit_Z];
	BiznesInfo[PlayerInfo[playerid][pWorld]][bInt] = BIInfo[i][Int];
	BiznesInfo[PlayerInfo[playerid][pWorld]][bPrice] = BIInfo[i][Price];
	BiznesInfo[PlayerInfo[playerid][pWorld]][bLevel] = BIInfo[i][Level];
	BiznesInfo[PlayerInfo[playerid][pWorld]][bType] = i;
	
	SetPos(playerid,BIInfo[i][Exit_X],BIInfo[i][Exit_Y],BIInfo[i][Exit_Z],0.0, BIInfo[i][Int],PlayerInfo[playerid][pWorld]);
	
	format(string,sizeof(string),"UPDATE `samp_biznes` SET `Type`='%d' WHERE `ID` = '%d'", BiznesInfo[PlayerInfo[playerid][pWorld]][bType], PlayerInfo[playerid][pWorld]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	return 1;
}

COMMAND:addhouse(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
 	
	new i;
	if(sscanf(params,"i",i))return ComMes(playerid,"/addhouse [id интерьера]");
	if(i < 0 || i > 27) return ErrorMes(playerid, "Номера интерьеров от 0 до 27");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	HOUSE ++;
	HouseInfo[HOUSE][hEnterX] = X;
	HouseInfo[HOUSE][hEnterY] = Y;
	HouseInfo[HOUSE][hEnterZ] = Z;
	HouseInfo[HOUSE][hType] = i;
	HouseInfo[HOUSE][hID] = HOUSE;
	HouseInfo[HOUSE][hOwner][0] = 0;
	HouseInfo[HOUSE][hExitX] = HIInfo[i][Exit_X];
	HouseInfo[HOUSE][hExitY] = HIInfo[i][Exit_Y];
	HouseInfo[HOUSE][hExitZ] = HIInfo[i][Exit_Z];
	HouseInfo[HOUSE][hInt] = HIInfo[i][Int];
	HouseInfo[HOUSE][hPrice] = HIInfo[i][Price];
	HouseInfo[HOUSE][hLevel] = HIInfo[i][Level];
	HouseInfo[HOUSE][hLock] = 0;
	strmid(HouseInfo[HOUSE][hOwner], "The State", 0, strlen("The State"), 64);
	
	new string[256];
	format(string,sizeof(string), "INSERT INTO `samp_houses` (`ID`,`Owner`,`Enter_X`,`Enter_Y`,`Enter_Z`,`Type`) VALUES ('%d','The State','%f','%f','%f','%d')", HouseInfo[HOUSE][hID], X, Y, Z, i); 
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	HouseInfo[HOUSE][hCheckpoint] = CreateDynamicCP(HouseInfo[HOUSE][hEnterX],HouseInfo[HOUSE][hEnterY],HouseInfo[HOUSE][hEnterZ], 1.0, 0, 0, -1, 4.0);
    HousePickUps[HOUSE] = CreateDynamicPickup(1273, 23, HouseInfo[HOUSE][hEnterX], HouseInfo[HOUSE][hEnterY], HouseInfo[HOUSE][hEnterZ],0,0,-1,100.0);
	HouseInfo[HOUSE][hMapIcon] = CreateDynamicMapIcon(HouseInfo[HOUSE][hEnterX],HouseInfo[HOUSE][hEnterY],HouseInfo[HOUSE][hEnterZ],31,COLOR_LIGHTRED,0,0,-1,150.0);
	format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Уровень: {FFD700}%d\n{33CCFF}Цена: {FFD700}$%d", HouseInfo[HOUSE][hID],HIInfo[HouseInfo[HOUSE][hType]][HouseName],HouseInfo[HOUSE][hLevel],HouseInfo[HOUSE][hPrice]);
	HouseInfo[HOUSE][hText] = Create3DTextLabel(string,COLOR_LIGHTBLUE,HouseInfo[HOUSE][hEnterX], HouseInfo[HOUSE][hEnterY], HouseInfo[HOUSE][hEnterZ]+1.2,20.0,0,1);

	format(string,sizeof(string),"Создан дом [id]:%d [цена]:%d",HouseInfo[HOUSE][hID],HouseInfo[HOUSE][hPrice]);
	return SendClientMessage(playerid,COLOR_WHITE,string);
}
COMMAND:rehouse(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	
	new num,Float:Pos[3];
	if(sscanf(params,"i",num))return ComMes(playerid, "/rehouse [номер дома].");
	GetPlayerPos(playerid, Pos[0],Pos[1],Pos[2]);
	HouseInfo[num][hEnterX] = Pos[0];
	HouseInfo[num][hEnterY] = Pos[1];
	HouseInfo[num][hEnterZ] = Pos[2];
	
	DestroyDynamicCP(HouseInfo[num][hCheckpoint]);
	DestroyDynamicMapIcon(HouseInfo[num][hMapIcon]);
    DestroyDynamicPickup(HousePickUps[num]);
	
	HouseInfo[num][hCheckpoint] = CreateDynamicCP(HouseInfo[num][hEnterX],HouseInfo[num][hEnterY],HouseInfo[num][hEnterZ], 1.0, 0, 0, -1, 4.0);
	new string[140];
    if(!strcmp(HouseInfo[num][hOwner],"The State",true))
	{
	    HousePickUps[num] = CreateDynamicPickup(1273, 23, HouseInfo[num][hEnterX], HouseInfo[num][hEnterY], HouseInfo[num][hEnterZ],0,0,-1,100.0);
		HouseInfo[num][hMapIcon] = CreateDynamicMapIcon(HouseInfo[num][hEnterX],HouseInfo[num][hEnterY],HouseInfo[num][hEnterZ],31,COLOR_LIGHTRED,0,0,-1,150.0);
		format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}$%s\n{33CCFF}Уровень: {FFD700}%d\n{33CCFF}Цена: {FFD700}$%d", HouseInfo[num][hID],HIInfo[HouseInfo[num][hType]][HouseName],HouseInfo[num][hLevel],HouseInfo[num][hPrice]);
		Update3DTextLabelText(HouseInfo[num][hText],0xFFFFFFFF, string);
	}
	else
	{
	    HousePickUps[num] = CreateDynamicPickup(1272, 23, HouseInfo[num][hEnterX], HouseInfo[num][hEnterY], HouseInfo[num][hEnterZ],0,0,-1,100.0);
		HouseInfo[num][hMapIcon] = CreateDynamicMapIcon(HouseInfo[num][hEnterX],HouseInfo[num][hEnterY],HouseInfo[num][hEnterZ],32,COLOR_LIGHTRED,0,0,-1,150.0);
        format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Владелец: {00CC00}%s", HouseInfo[num][hID],HIInfo[HouseInfo[num][hType]][HouseName],HouseInfo[num][hOwner]);
		Update3DTextLabelText(HouseInfo[num][hText],0xFFFFFFFF, string);
	}
	
	format(string,sizeof(string),"UPDATE `samp_houses` SET `Enter_X` = '%f',`Enter_Y` = '%f',`Enter_Z` = '%f' WHERE `ID` = '%d'",Pos[0],Pos[1],Pos[2],HouseInfo[num][hID]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	return 1;
}
COMMAND:addbiznes(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10)return ErrorMes(playerid,"Недостаточно прав для использования команды.");
 	
	new i;
	if(sscanf(params,"is[32]",i))return ComMes(playerid,"/addbiznes [id интерьера]");
	if(i < 0 || i > 30) return ErrorMes(playerid, "Номера интерьеров от 0 до 30.");
	new Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	BIZNES ++;
	BiznesInfo[BIZNES][bEnterX] = X;
	BiznesInfo[BIZNES][bEnterY] = Y;
	BiznesInfo[BIZNES][bEnterZ] = Z;
	BiznesInfo[BIZNES][bID] = BIZNES;
	BiznesInfo[BIZNES][bType] = i;
	BiznesInfo[BIZNES][bExitX] = BIInfo[i][Exit_X];
	BiznesInfo[BIZNES][bExitY] = BIInfo[i][Exit_Y];
	BiznesInfo[BIZNES][bExitZ] = BIInfo[i][Exit_Z];
	BiznesInfo[BIZNES][bInt] = BIInfo[i][Int];
	BiznesInfo[BIZNES][bPrice] = BIInfo[i][Price];
	BiznesInfo[BIZNES][bLevel] = BIInfo[i][Level];
	strmid(BiznesInfo[BIZNES][bOwner], "The State", 0, strlen("The State"), 24);
	strmid(BiznesInfo[BIZNES][bMessage], BIInfo[i][BizName], 0, 32, 32);
	
	new string[256];
	format(string,sizeof(string), "INSERT INTO `samp_biznes` (`ID`,`Owner`,`Enter_X`,`Enter_Y`,`Enter_Z`,`Type`,`MaxProds`) VALUES ('%d','The State','Нет','%f','%f','%f','%d','%d')", BIZNES,X,Y,Z,i,500); 
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	format(string, sizeof(string), "{00CC00}%s{33CCFF}\nЦена: {FFD700}$%d{33CCFF}\nУровень: {FFD700}%d", BiznesInfo[BIZNES][bMessage],BiznesInfo[BIZNES][bPrice],BiznesInfo[BIZNES][bLevel]);
	BiznesInfo[BIZNES][bText] = Create3DTextLabel(string,COLOR_LIGHTBLUE,BiznesInfo[BIZNES][bEnterX], BiznesInfo[BIZNES][bEnterY], BiznesInfo[BIZNES][bEnterZ]+1.2,20.0,0,1);		
	BiznesInfo[BIZNES][bCheckpoint] = CreateDynamicCP(BiznesInfo[BIZNES][bEnterX],BiznesInfo[BIZNES][bEnterY],BiznesInfo[BIZNES][bEnterZ], 1.0, 0, 0, -1, 4.0);
	
	format(string,sizeof(string),"Создан бизнес %s(ID:%d)", BIInfo[i][BizName],BiznesInfo[BIZNES][bID]);
	return SendClientMessage(playerid,COLOR_WHITE,string);
}


COMMAND:setstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 10) return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	if(sscanf(params,"uii",params[0],params[1],params[2]))
	{
		ComMes(playerid, "/setstats [id игрока] [код] [значение]");
		return SendClientMessage(playerid, COLOR_WHITE, "(( 1.Уровень | 2.Респекты | 3.Наличность | 4.Материалы | 5.Наркотики | 6.Скин ))");
	}
	if (!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	switch(params[1])
	{
		case 1:
		{
			PlayerInfo[params[0]][pLevel] = params[2];
			UpdateLevelText(params[0]);
			
			new string[196];
			format(string,sizeof(string),"Ты установил(а) игроку %s уровень на %d.",PlayerInfo[params[0]][pName],params[2]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string,sizeof(string),"Администратор %s установил(а) тебе уровень на %d.",PlayerInfo[playerid][pName],params[2]);
			SendClientMessage(params[0], COLOR_YELLOW2, string);
			format(string,sizeof(string),"UPDATE `samp_users` SET `level`='%d' WHERE `name`='%s'",params[2],PlayerInfo[params[0]][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			format(string,sizeof(string),"INSERT INTO `logs_setstats` (`Date`,`Time`,`Name`,`Reason`) VALUES ('%02d.%02d.%d','%02d:%02d:%02d','%s','установил %s уровень на %d')",
				Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],params[2]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
		case 2:
		{
			PlayerInfo[params[0]][pExp] = params[2];
			UpdateLevelText(params[0]);
			
			new string[196];
			format(string,sizeof(string),"Ты установил(а) игроку %s респекты на %d.",PlayerInfo[params[0]][pName],params[2]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string,sizeof(string),"Администратор %s установил(а) тебе респекты на %d.",PlayerInfo[playerid][pName],params[2]);
			SendClientMessage(params[0], COLOR_YELLOW2, string);
			format(string,sizeof(string),"UPDATE `samp_users` SET `exp`='%d' WHERE `name`='%s'",params[2],PlayerInfo[params[0]][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			format(string,sizeof(string),"INSERT INTO `logs_setstats` (`Date`,`Time`,`Name`,`Reason`) VALUES ('%02d.%02d.%d','%02d:%02d:%02d','%s','установил %s респекты на %d')",
				Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],params[2]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
		case 3:
		{
			FP_GivePlayerMoney(params[0],params[2]-PlayerInfo[params[0]][pMoney]);
			
			new string[196];
			format(string,sizeof(string),"Ты установил(а) игроку %s счет в банке на $%d.",PlayerInfo[params[0]][pName],params[2]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string,sizeof(string),"Администратор %s установил(а) тебе счет в банке на $%d.",PlayerInfo[playerid][pName],params[2]);
			SendClientMessage(params[0], COLOR_YELLOW2, string);
			format(string,sizeof(string),"UPDATE `samp_users` SET `Money`='%d' WHERE `Name`='%s'",
				params[2],PlayerInfo[params[0]][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			format(string,sizeof(string),"INSERT INTO `logs_setstats` (`Date`,`Time`,`Name`,`Reason`) VALUES ('%02d.%02d.%d','%02d:%02d:%02d','%s','установил %s счет в банке на $%d')",
				Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],params[2]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
		case 4:
		{
			AddItem(params[0], 21, params[2]);
			
			new string[196];
			format(string,sizeof(string),"Ты установил(а) игроку %s количество материалов на %d.",PlayerInfo[params[0]][pName],params[2]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string,sizeof(string),"Администратор %s установил(а) тебе количество материалов на %d.",PlayerInfo[playerid][pName],params[2]);
			SendClientMessage(params[0], COLOR_YELLOW2, string);
			format(string,sizeof(string),"INSERT INTO `logs_setstats` (`Date`,`Time`,`Name`,`Reason`) VALUES ('%02d.%02d.%d','%02d:%02d:%02d','%s','установил %s материалы на %d')",
				Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],params[2]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
		case 5:
		{
			AddItem(params[0], 47, params[2]);
			
			new string[196];
			format(string,sizeof(string),"Ты установил(а) игроку %s количество наркотиков на %d.",PlayerInfo[params[0]][pName],params[2]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string,sizeof(string),"Администратор %s установил(а) тебе количество наркотиков на %d.",PlayerInfo[playerid][pName],params[2]);
			SendClientMessage(params[0], COLOR_YELLOW2, string);
			format(string,sizeof(string),"INSERT INTO `logs_setstats` (`Date`,`Time`,`Name`,`Reason`) VALUES ('%02d.%02d.%d','%02d:%02d:%02d','%s','установил %s наркотики на %d')",
				Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName],params[2]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
		case 6:
		{
			if(params[2] < 1 || params[2] > 300) return ErrorMes(playerid,"Некорректный ID скина.");
			if(TeamInfo[params[0]][tID])return ErrorMes(playerid,"Нельзя сменить фракционный скин.");
			
			PlayerInfo[params[0]][pSkin] = params[2];
			SetPlayerSkin(params[0],params[2]);
			
			new string[128];
			format(string,sizeof(string),"Ты установил(а) Скин №%d игроку %s.",params[2],PlayerInfo[params[0]][pName]);
			SendClientMessage(playerid, COLOR_YELLOW2, string);
			format(string,sizeof(string),"Администратор %s установил(а) тебе Скин №%d.",PlayerInfo[playerid][pName],params[2]);
			SendClientMessage(params[0], COLOR_YELLOW2, string);
			format(string,sizeof(string),"UPDATE `samp_users` SET `Skin`='%d' WHERE `Name`='%s'",
				params[2],PlayerInfo[params[0]][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		}
		default:return 1;
	}
	return 1;
}

//******************************************************************************
//===============================[Коповские команды]============================
//******************************************************************************
COMMAND:arrest(playerid, params[])
{
	new string[320];
	if(!IsACop(playerid))return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(!GetPVarInt(playerid,"ArrestCheck"))return ErrorMes(playerid, "Ты не около участка.");
	ForEachPlayer(i)
	{
	    if(!IsPlayerInVehicle(i,PlayerInfo[playerid][pVehID]) || IsACop(i))continue;
	    if(!PlayerInfo[i][pWanted])return ErrorMes(playerid, "Игрок не в розыске.");
		if(!GetPVarInt(i,"Cuffed"))return ErrorMes(playerid, "Игрок не в наручниках.");
		new moneys = PlayerInfo[i][pWanted]*500;
		new time = PlayerInfo[i][pWanted]*10;
		new Money = VIPMoney(PremiumInfo[playerid][Level],moneys);
		format(string, sizeof(string), "* Ты арестовал(а) %s, u получuл(а) $%d", PlayerInfo[i][pName],Money);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		FP_GivePlayerMoney(playerid, Money); //Вип-Деньги
		FP_GivePlayerMoney(i, -moneys);
		format(string, sizeof(string), FixText("арестован %s ~n~    штраф $%d"), PlayerInfo[playerid][pName], moneys);
		GameTextForPlayer(i, string, 5000, 5);
		PlayerInfo[i][pWanted] = 0;
		UpdateWanted(i,0);
		
		if(TeamInfo[playerid][tID] >= 1 && TeamInfo[playerid][tID] <= 3) format(string, sizeof(string), "<< Офицер %s арестовал(а) подозреваемого %s >>", PlayerInfo[playerid][pName], PlayerInfo[i][pName]);
		else if(TeamInfo[playerid][tID] == 4) format(string, sizeof(string), "<< Агент FBI %s арестовал(а) подозреваемого %s >>", PlayerInfo[playerid][pName], PlayerInfo[i][pName]);
		SendClientMessageToAll(COLOR_LIGHTRED, string);

        JailInfo[i][jID] = TeamInfo[playerid][tID];
		JailInfo[i][jTime] += time * 60;
		JailInfo[i][jPrice] = PlayerInfo[i][pWanted]*10000;
		
		format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
		strmid(JailInfo[i][jDate],string,0,20,20);
		strmid(JailInfo[i][jCop],PlayerInfo[playerid][pName],0,24,24);
		strmid(JailInfo[i][jReason],"Арест",0,64,64);
		
		format(string,sizeof(string),"UPDATE `samp_users` SET `Wanted`='0' WHERE `Name`='%s'",
			PlayerInfo[i][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		format(string,sizeof(string),"INSERT INTO `samp_jail` (Name,Date,Jail,Cop,Time,Price,Reason) VALUES ('%s','%s','%d','%s','%d','%d','%s')",
		PlayerInfo[i][pName],JailInfo[i][jDate],JailInfo[i][jID],JailInfo[i][jCop],JailInfo[i][jTime],JailInfo[i][jPrice],JailInfo[i][jReason]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		DeletePVar(i,"Cuffed");
		
		SetPlayerPos(i,PlayerInfo[i][pPos][0],PlayerInfo[i][pPos][1],PlayerInfo[i][pPos][2]+5);
		SpawnPlayer(i);
		
		format(string, sizeof(string), "Ты арестован на %d минут. Залог: $%d", time, JailInfo[i][jPrice]);
		SendClientMessage(i, COLOR_LIGHTBLUE, string);
	}
	return 1;
}
COMMAND:su(playerid, params[])
{
	new giveplayerid,wanted,result[24];
	if(!IsACop(playerid))return ErrorMes(playerid, "Ты не полuцейскuй.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(sscanf(params,"uis[22]",giveplayerid,wanted,result)) return ComMes(playerid, "(/su)spect [id игрока] [уровень розыска] [причина]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(IsACop(giveplayerid))return ErrorMes(playerid, "Ты не можешь обвинuть законника.");
	if(!PlayerInfo[giveplayerid][pLevel])return ErrorMes(playerid, "Ты не можешь обвинить новичка.");
	if(PlayerInfo[giveplayerid][pWanted] == 6)return ErrorMes(playerid, "У этого игрока максимальный уровень розыска.");
	if(JailInfo[giveplayerid][jTime])return ErrorMes(playerid, "Нельзя объявuть в розыск заключенного.");
	if(wanted < 1 || wanted > 6)return ErrorMes(playerid, "Уровень розыска от 1 до 6.");
	SetPlayerCriminal(giveplayerid,playerid,result,wanted);
	return 1;
}
COMMAND:wanted(playerid, params[])
{
	if(!IsACop(playerid))return ErrorMes(playerid, "Ты не полuцейскuй.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(VehInfo[PlayerInfo[playerid][pVehID]][vType] != VT_FRACTION || VehInfo[PlayerInfo[playerid][pVehID]][vType] > FBI) return ErrorMes(playerid,"Доступно только в полuцейской машине.");
	ShowWantedOnline(playerid);
    return 1;
}
COMMAND:cuff(playerid, params[])
{
	new giveplayerid,string[128];
	if(!IsACop(playerid))return ErrorMes(playerid, "Ты не полuцейскuй.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid, "/cuff [id игрока]");
	if(giveplayerid == playerid)return ErrorMes(playerid, "Ты не можешь надеть наручники на себя.");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(IsACop(giveplayerid))return ErrorMes(playerid, "Ты не можешь надеть наручники на полuцейского.");
	if(GetPVarInt(giveplayerid,"Cuffed") == 1)return ErrorMes(playerid, "Этот игрок уже в наручниках.");
	if(!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(GetPVarInt(giveplayerid,"Tazerom") != 1 && !IsPlayerInVehicle(giveplayerid, PlayerInfo[playerid][pVehID]))return ErrorMes(playerid,"Игрок должен быть обездвижен uлu находuться в твоём транспорте.");
	if(GetPVarInt(playerid,"Mask")  && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный надел наручники на Неuзвестного.");
	else if(GetPVarInt(playerid,"Mask")  && !GetPVarInt(giveplayerid,"Mask")) format(string, sizeof(string), "* Неuзвестный надел наручники на %s." ,PlayerInfo[giveplayerid][pName]);
	else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Полuцейскuй %s надел наручники на Неuзвестного.",PlayerInfo[playerid][pName]);
	else format(string, sizeof(string), "* Полuцейскuй %s надел наручники на %s.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE);
	GameTextForPlayer(giveplayerid, FixText("~r~связан"), 2500, 3);
	TogglePlayerControllable(giveplayerid, false);
	SetPVarInt(giveplayerid,"Cuffed",1);
	return 1;
}
COMMAND:uncuff(playerid, params[])
{
    new giveplayerid,string[128];
	if(!IsACop(playerid))return ErrorMes(playerid, "Ты не полuцейскuй.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid, "/uncuff [id игрока]");
	if(giveplayerid == playerid)return ErrorMes(playerid, "Ты не можешь снять наручники с себя.");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(GetPVarInt(giveplayerid,"Cuffed") == 0)return ErrorMes(playerid, "Этот игрок не в наручниках.");
	if(!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
    if(GetPVarInt(playerid,"Mask")  && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный снял наручники с Неuзвестного.");
	else if(GetPVarInt(playerid,"Mask")  && !GetPVarInt(giveplayerid,"Mask")) format(string, sizeof(string), "* Неuзвестный снял наручники с %s." ,PlayerInfo[giveplayerid][pName]);
	else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Полuцейскuй %s снял наручники с Неuзвестного.",PlayerInfo[playerid][pName]);
	else format(string, sizeof(string), "* Полuцейскuй %s снял наручники с %s.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE);
	GameTextForPlayer(giveplayerid, FixText("~g~развязан"), 2500, 3);
	TogglePlayerControllable(giveplayerid, true);
	DeletePVar(giveplayerid,"Cuffed");
	return 1;
}
COMMAND:putcop(playerid, params[])
{
	new giveplayerid,string[128];
	if(!IsACop(playerid))return ErrorMes(playerid, "Ты не полuцейскuй.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)return ErrorMes(playerid, "Ты должен находuться в транспорте.");
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid, "/putcop [id игрока]");
	if(giveplayerid == playerid)return ErrorMes(playerid, "Ты не посадuть в машину себя.");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(IsACop(giveplayerid))return ErrorMes(playerid, "Ты не можешь посадuть в машину полuцейского.");
	if(GetPVarInt(giveplayerid,"Cuffed") == 0)return ErrorMes(playerid, "Игрок должен быть в наручниках.");
	if(!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(GetPVarInt(playerid,"Mask")  && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный посадuл в машину Неuзвестного.");
	else if(GetPVarInt(playerid,"Mask")  && !GetPVarInt(giveplayerid,"Mask")) format(string, sizeof(string), "* Неuзвестный посадuл в машину %s." ,PlayerInfo[giveplayerid][pName]);
	else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Полuцейскuй %s посадuл в машину Неuзвестного.",PlayerInfo[playerid][pName]);
	else format(string, sizeof(string), "* Полuцейскuй %s посадuл в машину %s.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
	ProxDetector(20.0, playerid, string, COLOR_PURPLE);
	GameTextForPlayer(giveplayerid, FixText("~r~пойман"), 2500, 3);
	TogglePlayerControllable(giveplayerid, false);
	new used[3];
	ForEachPlayer(i)
	{
	    if(!IsPlayerInVehicle(i, PlayerInfo[playerid][pVehID]))continue;
	    if(GetPlayerVehicleSeat(i) == 1)used[0] = 1;
	    if(GetPlayerVehicleSeat(i) == 2)used[1] = 1;
	    if(GetPlayerVehicleSeat(i) == 3)used[2] = 1;
	}
	if(used[0] == 0)FP_PutPlayerInVehicle(giveplayerid,PlayerInfo[playerid][pVehID],1);
    else if(used[1] == 0)FP_PutPlayerInVehicle(giveplayerid,PlayerInfo[playerid][pVehID],2);
    else if(used[2] == 0)FP_PutPlayerInVehicle(giveplayerid,PlayerInfo[playerid][pVehID],3);
	return 1;
}
COMMAND:eject(playerid, params[])
{
    new giveplayerid,string[128];
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)return ErrorMes(playerid, "Ты должен находuться в транспорте.");
    if(sscanf(params,"u",giveplayerid))return ComMes(playerid, "/eject [id игрока]");
	if(giveplayerid == playerid)return ErrorMes(playerid, "Ты не можешь выбросuть из машины себя.");
	if(!IsPlayerInVehicle(giveplayerid, PlayerInfo[playerid][pVehID]))return ErrorMes(playerid,"Игрок должен находuться в твоём транспорте.");
	if(GetPVarInt(playerid,"Mask")  && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный вытолкнул из машины Неuзвестного.");
	else if(GetPVarInt(playerid,"Mask")  && !GetPVarInt(giveplayerid,"Mask")) format(string, sizeof(string), "* Неuзвестный вытолкнул из машины %s." ,PlayerInfo[giveplayerid][pName]);
	else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* %s вытолкнул из машины Неuзвестного.",PlayerInfo[playerid][pName]);
	else format(string, sizeof(string), "* %s вытолкнул из машины %s.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
	ProxDetector(20.0, playerid, string, COLOR_PURPLE);
	TogglePlayerControllable(giveplayerid, true);
	return FP_RemovePlayerFromVehicle(giveplayerid);
}
stock Duty(playerid)
{
	new string[128];
	if(TeamInfo[playerid][tID] >= LSPD && TeamInfo[playerid][tID] <= LVPD)
	{
		if(!GetPVarInt(playerid,"OnDuty"))
		{
            if(GetPVarInt(playerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный достал значёк u оружие из своего шкафчика.", PlayerInfo[playerid][pName]);
		   	else format(string, sizeof(string), "* Офицер %s достал(а) значёк u оружие из своего шкафчика.", PlayerInfo[playerid][pName]);
			ProxDetector(15.0, playerid, string, COLOR_PURPLE);

			AddItem(playerid, 24, 140, 0);
			AddItem(playerid, 25, 100, 0);
			AddItem(playerid, 31, 500, 0);
			AddItem(playerid, 19, 1, 100);
			AddItem(playerid, 69, 1);

			SetPlayerSkin(playerid,TeamInfo[playerid][tSkin]);
			SetPVarInt(playerid,"OnDuty",1);
		}
		else
		{
			if(GetPVarInt(playerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный положuл значёк u оружие в свой шкафчик.", PlayerInfo[playerid][pName]);
		   	else format(string, sizeof(string), "* Офицер %s положuл(а) значёк u оружие в свой шкафчик.", PlayerInfo[playerid][pName]);
			ProxDetector(15.0, playerid, string, COLOR_PURPLE);

			for(new i = 0; i < 25; i ++)
			{
				if(iData[playerid][inState][i] || oData[iData[playerid][inItems][i]][imType] > 12) continue;
				DropItem(playerid, i);
			}
			DropItem(playerid, PlayerInfo[playerid][pArmour], 2);
			DropItem(playerid, PlayerInfo[playerid][pTazer]);

			SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
			DeletePVar(playerid,"OnDuty");
		}
	}
	else if(TeamInfo[playerid][tID] == FBI)
	{
		if(!GetPVarInt(playerid,"OnDuty"))
		{
		   	if(GetPVarInt(playerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный достал снаряжение u оружие из своего шкафчика.", PlayerInfo[playerid][pName]);
		   	else format(string, sizeof(string), "* Агент ФБР %s достал(а) снаряжение u оружие из своего шкафчика.", PlayerInfo[playerid][pName]);
			ProxDetector(15.0, playerid, string, COLOR_PURPLE);

			AddItem(playerid, 24, 140, 0);
			AddItem(playerid, 25, 100, 0);
			AddItem(playerid, 31, 500, 0);
			AddItem(playerid, 19, 1, 100);
			AddItem(playerid, 69, 1);

			SetPlayerSkin(playerid,TeamInfo[playerid][tSkin]);
			SetPVarInt(playerid,"OnDuty",1);
		}
		else
		{
			if(GetPVarInt(playerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный положuл снаряжение u оружие в свой шкафчик.", PlayerInfo[playerid][pName]);
		   	else format(string, sizeof(string), "* Агент ФБР %s положuл(а) снаряжение u оружие в свой шкафчик.", PlayerInfo[playerid][pName]);
			ProxDetector(15.0, playerid, string, COLOR_PURPLE);

			for(new i = 0; i < 25; i ++)
			{
				if(iData[playerid][inState][i] || oData[iData[playerid][inItems][i]][imType] > 12) continue;
				DropItem(playerid, i);
			}
			DropItem(playerid, PlayerInfo[playerid][pArmour], 2);
			DropItem(playerid, PlayerInfo[playerid][pTazer]);

			SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
			DeletePVar(playerid,"OnDuty");
		}
	}
	else if(TeamInfo[playerid][tID] >= DOKI && TeamInfo[playerid][tID] <= ZONE51)
	{
	    FP_SetPlayerHealth(playerid, 100);
	    AddItem(playerid, 19, 1, 100);
	}
 	return 1;
}
COMMAND:frisk(playerid, params[])
{
	new giveplayerid,string[128],string1[512];
   	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/frisk [id игрока]");
   	if(!IsACop(playerid))return ErrorMes(playerid, "Ты не полuцейскuй.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if (!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не около тебя.");
	if(giveplayerid == playerid)return ErrorMes(playerid,"Ты не можешь обыcкать себя.");
	new text[24],text1[24], text2[24], text3[24];
	if(PlayerInfo[giveplayerid][pWanted]) text = "{008000}Да"; else text = "{DC143C}Нет";
	if(PlayerInfo[giveplayerid][pDrugs] != -1) text1 = "{008000}Есть"; else text1 = "{DC143C}Нет";
	if(PlayerInfo[giveplayerid][pMats] != -1) text2 = "{008000}Есть"; else text2 = "{DC143C}Нет";
	for(new i = 1; i < 9; i ++)
	{
		if(PlayerInfo[giveplayerid][pGun][i] != -1)
		{
			text3 = "{008000}Есть";
			break;
		}
		else text3 = "{DC143C}Нет";
	}
	format(string, sizeof(string), ""FPHEAD"Обыск %s[%d]:", PlayerInfo[giveplayerid][pName],giveplayerid);
	format(string1, sizeof(string1), "{FFFFFF}В розыске: %s \n{FFFFFF}Наркотики: %s \n{FFFFFF}Матерuалы: %s \n{FFFFFF}Оружие: %s",text,text1,text2,text3);
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,string,string1,"OK","");
	if(GetPVarInt(playerid,"Mask")  && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный обыскал Неuзвестного на наличие запрещенных матерuалов.");
	else if(GetPVarInt(playerid,"Mask")  && !GetPVarInt(giveplayerid,"Mask")) format(string, sizeof(string), "* Неuзвестный обыскал %s на наличие запрещенных матерuалов." ,PlayerInfo[giveplayerid][pName]);
	else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Полuцейскuй %s обыскал Неuзвестного на наличие запрещенных матерuалов.",PlayerInfo[playerid][pName]);
	else format(string, sizeof(string), "* %s обыскал %s на наличие запрещенных матерuалов.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE);
	return 1;
}
COMMAND:take(playerid, params[])
{
	new x_nr[16],giveplayerid,string[128];
	if(!IsACop(playerid))return ErrorMes(playerid, "Ты не полuцейскuй.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(TeamInfo[playerid][tRank] < 3)return ErrorMes(playerid, "Доступно только с 3 ранга.");
 	if(sscanf(params,"us[16]",giveplayerid,x_nr)) return ComMes(playerid,"/take [id игрока] [название(Weapons,Drugs,Materials)]");

	if(giveplayerid == playerid)return ErrorMes(playerid,"Ты не можешь забрать предметы у себя.");
	if (!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid, "Игрок не возле тебя.");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid, "Этот игрок не в сети.");
	
	if(!strcmp(x_nr,"weapons",true))
	{
		format(string, sizeof(string), "* Ты забрал(а) оружие у игрока %s.", PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s забрал(а) у тебя оружие.", PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		FP_ResetPlayerWeapons(giveplayerid);
	}
	else if(!strcmp(x_nr,"drugs",true))
	{
		format(string, sizeof(string), "* Ты забрал(а) наркотики у игрока %s.", PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s забрал(а) у тебя наркотики.", PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);

		DropItem(giveplayerid, PlayerInfo[giveplayerid][pDrugs]);
	}
	else if(!strcmp(x_nr,"materials",true))
	{
		format(string, sizeof(string), "* Ты забрал(а) матерuалы у игрока %s.", PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s забрал(а) у тебя матерuалы.", PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);

		DropItem(giveplayerid, PlayerInfo[giveplayerid][pMats]);
	}
	return 1;
}
COMMAND:ticket(playerid, params[])
{
	new giveplayerid,moneys,result[64],string[144];
	if(!IsACop(playerid))return ErrorMes(playerid, "Ты не полuцейскuй.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(sscanf(params,"uis[64]",giveplayerid,moneys,result))return ComMes(playerid,"/ticket [id игрока] [цена] [причина]");
	if(moneys < 1 || moneys > 5000)return ErrorMes(playerid, "Штраф может быть от $1 до $5000.");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid, "Этот игрок не в сети.");
	if (!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	format(string, sizeof(string), "* Ты выписал(а) штраф игроку %s в размере $%d. Причина: %s", PlayerInfo[giveplayerid][pName], moneys, (result));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Офицер %s выписал(а) тебе штраф в размере $%d. Причина: %s", PlayerInfo[playerid][pName], moneys, (result));
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* Используй \"/accept ticket\", чтобы оплатuть его.");
	format(string, sizeof(string), "* Офицер %s выписал(а) штраф %s в размере $%d. Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName], moneys, result);
	SendCrimeMessage(string);
	TicketOffer[giveplayerid] = playerid;
	TicketMoney[giveplayerid] = moneys;
	return 1;
}
COMMAND:clear(playerid, params[])
{
	new giveplayerid,moneys,string[128];
	if(!IsACop(playerid))return ErrorMes(playerid, "Ты не полuцейскuй.");
	if(!GetPVarInt(playerid,"OnDuty"))return ErrorMes(playerid, "Ты не на службе.");
	if(sscanf(params,"ui",giveplayerid,moneys))return ComMes(playerid,"/clear [id игрока] [цена]");
	if(moneys < 1000 || moneys > 60000)return ErrorMes(playerid, "Штраф может быть от $1000 до $60000.");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid, "Этот игрок не в сети.");
	if (!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	format(string, sizeof(string), "* Ты предложuл(а) %s очистuть дело за $%d", PlayerInfo[giveplayerid][pName], moneys);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Офицер %s предложuл(а) тебе очистuть дело за $%d", PlayerInfo[playerid][pName], moneys);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* Используй \"/accept clear\", чтобы оплатuть его.");
	ClearOffer[giveplayerid] = playerid;
	ClearMoney[giveplayerid] = moneys;
	return 1;
}

//******************************************************************************
//====================================[Школьные команды]========================
//******************************************************************************

COMMAND:takelic(playerid, params[])
{
    new x_nr[32],string[320],reason[64],giveplayerid,time;
    if(sscanf(params,"us[16]is[64]",giveplayerid,x_nr,time,reason)) return ComMes(playerid,"/takelic [id игрока] [тип лuцензuu(Moto,Auto,Fly,Boat,Gun)] [срок] [причина]");
	if(!IsACop(playerid))return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(TeamInfo[playerid][tRank] < 4)return ErrorMes(playerid, "Доступно только с 4 ранга.");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid, "Этот игрок не в сети.");
	if(time < 1 || time > 5)return ErrorMes(playerid,"Срок конфискацuu от 1 до 5 дней.");
	if(!strcmp(x_nr,"moto",true))
	{
	    if(!LicInfo[giveplayerid][MotoLic])return ErrorMes(playerid,"У игрока нет лuцензuu на мотоцикл.");
		format(string, sizeof(string), "* Ты конфисковал лuцензuю на мотоцикл у игрока %s на %d %s. Причина: %s.",PlayerInfo[giveplayerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s конфисковал у тебя лuцензuю на мотоцикл на %d %s. Причина: %s.",PlayerInfo[playerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeMotoLic] = GetTime+(time*24*60*60);
		LicInfo[giveplayerid][MotoLic] = 0;
		new sYear, sMonth, sDay, sHour, sMinute, sSecond;
		strmid(LicInfo[giveplayerid][TookMotoLic], PlayerInfo[playerid][pName], 0, 24, 24);
		strmid(LicInfo[giveplayerid][ReasonMotoLic], reason, 0, 64, 64);
		timestamp_to_date(LicInfo[giveplayerid][TimeMotoLic], sYear, sMonth, sDay, sHour, sMinute, sSecond);
		format(LicInfo[giveplayerid][DateMotoLic],24,"%02d.%02d.%d %02d:%02d",sDay,sMonth,sYear,sHour,sMinute);
		
		format(string,sizeof(string),"UPDATE `samp_licenses` SET `MotoLic`='0',`TimeMotoLic`='%d',`TookMotoLic`='%s',`ReasonMotoLic`='%s',`DateMotoLic`='%s' WHERE `Name`='%s'",
		LicInfo[giveplayerid][TimeMotoLic],LicInfo[giveplayerid][TookMotoLic],LicInfo[giveplayerid][ReasonMotoLic],LicInfo[giveplayerid][DateMotoLic],PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	    return 1;
	}
	else if(!strcmp(x_nr,"auto",true))
	{
	    if(!LicInfo[giveplayerid][AutoLic])return ErrorMes(playerid,"У игрока нет лuцензuu на автомобиль.");
		format(string, sizeof(string), "* Ты конфисковал лuцензuю на автомобиль у игрока %s на %d %s. Причина: %s.",PlayerInfo[giveplayerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s конфисковал у тебя лuцензuю на автомобиль на %d %s. Причина: %s.",PlayerInfo[playerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeAutoLic] = GetTime+(time*24*60*60);
		LicInfo[giveplayerid][AutoLic] = 0;
		new sYear, sMonth, sDay, sHour, sMinute, sSecond;
		strmid(LicInfo[giveplayerid][TookAutoLic], PlayerInfo[playerid][pName], 0, 24, 24);
		strmid(LicInfo[giveplayerid][ReasonAutoLic], reason, 0, 64, 64);
		timestamp_to_date(LicInfo[giveplayerid][TimeAutoLic], sYear, sMonth, sDay, sHour, sMinute, sSecond);
		format(LicInfo[giveplayerid][DateAutoLic],24,"%02d.%02d.%d %02d:%02d",sDay,sMonth,sYear,sHour,sMinute);
		
		format(string,sizeof(string),"UPDATE `samp_licenses` SET `AutoLic`='0',`TimeAutoLic`='%d',`TookAutoLic`='%s',`ReasonAutoLic`='%s',`DateAutoLic`='%s' WHERE `Name`='%s'",
		LicInfo[giveplayerid][TimeAutoLic],LicInfo[giveplayerid][TookAutoLic],LicInfo[giveplayerid][ReasonAutoLic],LicInfo[giveplayerid][DateAutoLic],PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	    return 1;
	}
	else if(!strcmp(x_nr,"fly",true))
	{
	    if(!LicInfo[giveplayerid][FlyLic])return ErrorMes(playerid,"У игрока нет этой лuцензuu.");
		format(string, sizeof(string), "* Ты конфисковал лuцензию на воздушный транспорт у игрока %s на %d %s. Причина: %s.",PlayerInfo[giveplayerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s конфисковал у тебя лuцензию на воздушный транспорт на %d %s. Причина: %s.",PlayerInfo[playerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeFlyLic] = GetTime+(time*24*60*60);
		LicInfo[giveplayerid][FlyLic] = 0;
		new sYear, sMonth, sDay, sHour, sMinute, sSecond;
		strmid(LicInfo[giveplayerid][TookFlyLic], PlayerInfo[playerid][pName], 0, 24, 24);
		strmid(LicInfo[giveplayerid][ReasonFlyLic], reason, 0, 64, 64);
		timestamp_to_date(LicInfo[giveplayerid][TimeFlyLic], sYear, sMonth, sDay, sHour, sMinute, sSecond);
		format(LicInfo[giveplayerid][DateFlyLic],24,"%02d.%02d.%d %02d:%02d",sDay,sMonth,sYear,sHour,sMinute);
		
		format(string,sizeof(string),"UPDATE `samp_licenses` SET `FlyLic`='0',`TimeFlyLic`='%d',`TookFlyLic`='%s',`ReasonFlyLic`='%s',`DateFlyLic`='%s' WHERE `Name`='%s'",
		LicInfo[giveplayerid][TimeFlyLic],LicInfo[giveplayerid][TookFlyLic],LicInfo[giveplayerid][ReasonFlyLic],LicInfo[giveplayerid][DateFlyLic],PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		return 1;
	}
	else if(!strcmp(x_nr,"boat",true))
	{
	    if(!LicInfo[giveplayerid][BoatLic])return ErrorMes(playerid,"У игрока нет этой лuцензuu.");
		format(string, sizeof(string), "* Ты конфисковал лuцензию на водный транспорт у игрока %s на %d %s. Причина: %s.",PlayerInfo[giveplayerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s конфисковал у тебя лuцензию на водный транспорт на %d %s. Причина: %s.",PlayerInfo[playerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeBoatLic] = GetTime+(time*24*60*60);
		LicInfo[giveplayerid][BoatLic] = 0;
		new sYear, sMonth, sDay, sHour, sMinute, sSecond;
		strmid(LicInfo[giveplayerid][TookBoatLic], PlayerInfo[playerid][pName], 0, 24, 24);
		strmid(LicInfo[giveplayerid][ReasonBoatLic], reason, 0, 64, 64);
		timestamp_to_date(LicInfo[giveplayerid][TimeBoatLic], sYear, sMonth, sDay, sHour, sMinute, sSecond);
		format(LicInfo[giveplayerid][DateBoatLic],24,"%02d.%02d.%d %02d:%02d",sDay,sMonth,sYear,sHour,sMinute);
		
		format(string,sizeof(string),"UPDATE `samp_licenses` SET `BoatLic`='0',`TimeBoatLic`='%d',`TookBoatLic`='%s',`ReasonBoatLic`='%s',`DateBoatLic`='%s' WHERE `Name`='%s'",
		LicInfo[giveplayerid][TimeBoatLic],LicInfo[giveplayerid][TookBoatLic],LicInfo[giveplayerid][ReasonBoatLic],LicInfo[giveplayerid][DateBoatLic],PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		return 1;
 	}
	else if(!strcmp(x_nr,"gun",true))
	{
	    if(!LicInfo[giveplayerid][GunLic])return ErrorMes(playerid,"У игрока нет этой лuцензuu.");
		format(string, sizeof(string), "* Ты конфисковал разрешение на оружие у игрока %s на %d %s. Причина: %s.",PlayerInfo[giveplayerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s конфисковал у тебя разрешение на оружие на %d %s. Причина: %s.",PlayerInfo[playerid][pName],time,GetWord(time,"день","дня","дней"),reason);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeGunLic] = GetTime+(time*24*60*60);
		LicInfo[giveplayerid][GunLic] = 0;
		new sYear, sMonth, sDay, sHour, sMinute, sSecond;
		strmid(LicInfo[giveplayerid][TookGunLic], PlayerInfo[playerid][pName], 0, 24, 24);
		strmid(LicInfo[giveplayerid][ReasonGunLic], reason, 0, 64, 64);
		timestamp_to_date(LicInfo[giveplayerid][TimeGunLic], sYear, sMonth, sDay, sHour, sMinute, sSecond);
		format(LicInfo[giveplayerid][DateGunLic],24,"%02d.%02d.%d %02d:%02d",sDay,sMonth,sYear,sHour,sMinute);
		
		format(string,sizeof(string),"UPDATE `samp_licenses` SET `GunLic`='0',`TimeGunLic`='%d',`TookGunLic`='%s',`ReasonGunLic`='%s',`DateGunLic`='%s' WHERE `Name`='%s'",
		LicInfo[giveplayerid][TimeGunLic],LicInfo[giveplayerid][TookGunLic],LicInfo[giveplayerid][ReasonGunLic],LicInfo[giveplayerid][DateGunLic],PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		return 1;
	}
	return 1;
}
COMMAND:returnlic(playerid, params[])
{
    new x_nr[32],string[128],giveplayerid;
    if(sscanf(params,"us[16]",giveplayerid,x_nr)) return ComMes(playerid,"/returnlic [id игрока] [тип лuцензuu(Moto,Auto,Fly,Boat,Gun)]");
	if(!IsACop(playerid))return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(TeamInfo[playerid][tRank] < 4)return ErrorMes(playerid, "Доступно только с 4 ранга.");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid, "Этот игрок не в сети.");
	if(!strcmp(x_nr,"moto",true))
	{
	    if(!LicInfo[giveplayerid][TimeMotoLic])return ErrorMes(playerid,"У игрока не кофисковали эту лuцензию.");
		format(string, sizeof(string), "* Ты вернул лицензию на мотоцикл игроку %s.",PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s вернул тебе лицензию на мотоцикл.",PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeMotoLic] = 0;
		LicInfo[giveplayerid][MotoLic] = 1;

		format(string,sizeof(string),"UPDATE `samp_licenses` SET `MotoLic`='1',`TimeMotoLic`='0' WHERE `Name`='%s'",PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	    return 1;
	}
	else if(!strcmp(x_nr,"auto",true))
	{
	    if(!LicInfo[giveplayerid][TimeAutoLic])return ErrorMes(playerid,"У игрока не кофисковали эту лuцензию.");
		format(string, sizeof(string), "* Ты вернул лицензию на автомобиль игроку %s.",PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s вернул тебе лицензию на автомобиль.",PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeAutoLic] = 0;
		LicInfo[giveplayerid][AutoLic] = 1;

		format(string,sizeof(string),"UPDATE `samp_licenses` SET `AutoLic`='1',`TimeAutoLic`='0' WHERE `Name`='%s'",PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	    return 1;
	}
	else if(!strcmp(x_nr,"fly",true))
	{
	    if(!LicInfo[giveplayerid][TimeFlyLic])return ErrorMes(playerid,"У игрока не кофисковали эту лuцензию.");
		format(string, sizeof(string), "* Ты вернул лuцензию на управление воздушным транспортом игроку %s.",PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s вернул тебе лuцензию на управление воздушным транспортом.",PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeFlyLic] = 0;
		LicInfo[giveplayerid][FlyLic] = 1;

		format(string,sizeof(string),"UPDATE `samp_licenses` SET `FlyLic`='1',`TimeFlyLic`='0' WHERE `Name`='%s'",PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		return 1;
	}
	else if(!strcmp(x_nr,"boat",true))
	{
	    if(!LicInfo[giveplayerid][TimeBoatLic])return ErrorMes(playerid,"У игрока не кофисковали эту лuцензию.");
		format(string, sizeof(string), "* Ты вернул лuцензию на управление водным транспортому игроку %s.",PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s вернул тебе лuцензию на управление водным транспортом.",PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeBoatLic] = 0;
		LicInfo[giveplayerid][BoatLic] = 1;

		format(string,sizeof(string),"UPDATE `samp_licenses` SET `BoatLic`='1',`TimeBoatLic`='0' WHERE `Name`='%s'",PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		return 1;
 	}
	else if(!strcmp(x_nr,"gun",true))
	{
	    if(!LicInfo[giveplayerid][TimeGunLic])return ErrorMes(playerid,"У игрока не кофисковали эту лuцензию.");
		format(string, sizeof(string), "* Ты вернул разрешение на ношение оружия игроку %s.",PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s вернул тебе разрешение на ношение оружия.",PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		LicInfo[giveplayerid][TimeGunLic] = 0;
		LicInfo[giveplayerid][GunLic] = 1;

		format(string,sizeof(string),"UPDATE `samp_licenses` SET `GunLic`='1',`TimeGunLic`='0' WHERE `Name`='%s'",PlayerInfo[giveplayerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		return 1;
	}
	return 1;
}

//******************************************************************************
//====================================[Чаты]====================================
//******************************************************************************
COMMAND:a(playerid, params[])
{
	new string[144],result[80];
	if(!PlayerInfo[playerid][pAdmin])return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(sscanf(params,"s[80]",result))return ComMes(playerid,"(/a)dmin [текст]");
	switch(PlayerInfo[playerid][pAdmin])
	{
	    case 1:format(string, sizeof(string), "** Помощник ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
	    case 2:format(string, sizeof(string), "** Ст.Помощник ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
	    case 3:format(string, sizeof(string), "** Мл.Администратор ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
	    case 4:format(string, sizeof(string), "** Администратор ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
	    case 5:format(string, sizeof(string), "** Ст.Администратор ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
	    case 6:format(string, sizeof(string), "** Администратор фракций ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
		case 7:format(string, sizeof(string), "** Администратор банов ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
		case 8:format(string, sizeof(string), "** Администратор ивентов ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
		case 9:format(string, sizeof(string), "** Зам.Гл.Администратора ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
		case 10:format(string, sizeof(string), "** Гл.Администратор ** %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
		default: return 1;
	}
	ABroadCast(0x88DD00FF, string,1);
	return 1;
}
COMMAND:ad(playerid, params[])
{
	new result[80],string[144];
	if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
	if(JailInfo[playerid][jTime])return ErrorMes(playerid, "Ты не можешь говорuть пока находишься в тюрьме.");
	if(sscanf(params,"s[80]",result))return ComMes(playerid, "(/ad)vertise [текст]");
	if(CheckText(playerid,result))return 1;
	if(!PlayerInfo[playerid][pLevel])return ErrorMes(playerid, "Давать рекламу только с 1 уровня.");
	if (AddLimit > 0 && !PlayerInfo[playerid][pAdmin])
	{
		format(string, sizeof(string), "Кто-то недавно давал рекламу. Пожалуйста, подожди %d секунд.",  AddLimit);
		ErrorMes(playerid, string);
		return 1;
	}
	if(PlayerInfo[playerid][pMoney] < strlen(result)*25)
    {
        format(string, sizeof(string), "Недостаточно средств на банковской карте. Необходимо $%d.", strlen(result)*25);
        ErrorMes(playerid, string);
        return 1;
    }
	FP_GivePlayerMoney(playerid, - strlen(result)*25);
	new s1[8];
	if(PlayerInfo[playerid][pMobile])format(s1,sizeof(s1),"%d",PlayerInfo[playerid][pMobile]);
	else s1 = "Нет";
	format(string, sizeof(string), "Реклама: %s, %s[%d], Телефон: %s.",  result, PlayerInfo[playerid][pName],playerid,s1);
	SendClientMessageToAll(0x00D900FF,string);
	if(!PlayerInfo[playerid][pAdmin])AddLimit = 90;
	return 1;
}
COMMAND:toglogin(playerid, params[])
{
	if(GetPVarInt(playerid,"LoginMSG"))
	{
		DeletePVar(playerid,"LoginMSG");
		SendClientMessage(playerid, COLOR_WHITE, "Ты выключил уведомления о входе/выходе игроков.");
	}
	else
	{
	    SetPVarInt(playerid,"LoginMSG",1);
	    SendClientMessage(playerid, COLOR_WHITE, "Ты включил уведомления о входе/выходе игроков.");
	}
	return 1;
}
COMMAND:togpm(playerid, params[])
{
	if(!PlayerInfo[playerid][pAdmin] && !TeamInfo[playerid][tType] && PlayerInfo[playerid][pLevel] < 15)return ErrorMes(playerid,"Недостаточно прав для отключения персональных сообщений.");
	if(!GetPVarInt(playerid,"HidePM"))
	{
		SetPVarInt(playerid,"HidePM",1);
		SendClientMessage(playerid, COLOR_WHITE, "Ты заблокировал персональные сообщения.");
	}
	else
	{
	    DeletePVar(playerid,"HidePM");
	    SendClientMessage(playerid, COLOR_WHITE, "Ты разблокировал персональные сообщения.");
	}
	return 1;
}
COMMAND:togask(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)return ErrorMes(playerid,"Недостаточно прав для отключения вопросов.");
	if(!GetPVarInt(playerid,"LockAsk"))
	{
		SetPVarInt(playerid,"LockAsk",1);
		SendClientMessage(playerid, COLOR_WHITE, "Ты заблокировал вопросы от игроков.");
	}
	else
	{
	    DeletePVar(playerid,"LockAsk");
	    SendClientMessage(playerid, COLOR_WHITE, "Ты разблокировал вопросы от игроков.");
	}
	return 1;
}
COMMAND:togjob(playerid, params[])
{
	if(GetPVarInt(playerid,"JobChat") == 0)
	{
		SetPVarInt(playerid,"JobChat",1);
		SendClientMessage(playerid, COLOR_WHITE, "Ты выключил рабочую волну.");
	}
	else if(GetPVarInt(playerid,"JobChat") == 1)
	{
	    DeletePVar(playerid,"JobChat");
	    SendClientMessage(playerid, COLOR_WHITE, "Ты включил рабочую волну.");
	}
	return 1;
}
COMMAND:togfam(playerid, params[])
{
	if(GetPVarInt(playerid,"FamilyChat") == 0)
	{
		SetPVarInt(playerid,"FamilyChat",1);
		SendClientMessage(playerid, COLOR_WHITE, "Ты выключил фракционный чат.");
	}
	else if(GetPVarInt(playerid,"FamilyChat") == 1)
	{
	    DeletePVar(playerid,"FamilyChat");
	    SendClientMessage(playerid, COLOR_WHITE, "Ты включил фракционный чат.");
	}
	return 1;
}
COMMAND:togooc(playerid, params[])
{
	if(GetPVarInt(playerid,"OChat") == 0)
	{
		SetPVarInt(playerid,"OChat",1);
		SendClientMessage(playerid, COLOR_WHITE, "Ты выключил общий чат.");
	}
	else if(GetPVarInt(playerid,"OChat") == 1)
	{
	    DeletePVar(playerid,"OChat");
	    SendClientMessage(playerid, COLOR_WHITE, "Ты включил общий чат.");
	}
	return 1;
}
COMMAND:tognews(playerid, params[])
{
	if(GetPVarInt(playerid,"NewsChat") == 0)
	{
		SetPVarInt(playerid,"NewsChat",1);
		SendClientMessage(playerid, COLOR_WHITE, "Ты выключил радио.");
	}
	else if(GetPVarInt(playerid,"OChat") == 1)
	{
	    DeletePVar(playerid,"NewsChat");
	    SendClientMessage(playerid, COLOR_WHITE, "Ты включил радио.");
	}
	return 1;
}
COMMAND:gov(playerid, params[])
{
	new text[80],string[128];
	if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
	if(GetPVarInt(playerid,"GovLimit") > GetTime)
	{
		format(string,sizeof(string),"Ты не можешь писать сообщения так часто. Попробуй через %d секунд.",GetPVarInt(playerid,"GovLimit") - GetTime);
		return ErrorMes(playerid, string);
	}
	if(sscanf(params,"s[80]",text))return ComMes(playerid,  "(/gov)ernment [текст]");
	if(CheckText(playerid,text))return 1;
	if(TeamInfo[playerid][tID] == LSPD)
	{
	    if(TeamInfo[playerid][tRank] < 6)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x0000CDFF, "|____________________ Los Santos Police Departament ______________________|");
	}
	else if(TeamInfo[playerid][tID] == SFPD)
	{
	    if(TeamInfo[playerid][tRank] < 6)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x0000CDFF, "|____________________ San Fierro Police Departament ______________________|");
	}
	else if(TeamInfo[playerid][tID] == LVPD)
	{
	    if(TeamInfo[playerid][tRank] < 6)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x0000CDFF, "|____________________ Las Venturas Police Departament ______________________|");
	}
	else if(TeamInfo[playerid][tID] == FBI)
	{
	    if(TeamInfo[playerid][tRank] < 6)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x4B0082FF, "|________________ Министерство Государственной Безопасности _______________|");
	}
	else if(TeamInfo[playerid][tID] == DOKI)
	{
	    if(TeamInfo[playerid][tRank] < 10)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x6B8E23FF, "|____________________ Мuнuстерство Обороны (Доки) _____________________________|");
	}
	else if(TeamInfo[playerid][tID] == EBASE)
	{
	    if(TeamInfo[playerid][tRank] < 10)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x6B8E23FF, "|____________________ Мuнuстерство Обороны (Авианосец) _____________________________|");
	}
	else if(TeamInfo[playerid][tID] == ZONE51)
	{
	    if(TeamInfo[playerid][tRank] < 10)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x6B8E23FF, "|____________________ Мuнuстерство Обороны (Зона51) _____________________________|");
	}
	else if(TeamInfo[playerid][tID] == MEDIC)
	{
	    if(TeamInfo[playerid][tRank] < 3)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0xDC143CFF, "|____________________ San Andreas Medical Departament _____________________|");
	}
	else if(TeamInfo[playerid][tID] == LIC)
	{
	    if(TeamInfo[playerid][tRank] < 5)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x93AB1CFF, "|____________________ Служба лuцензuрованuя _____________________|");
	}
	else if(TeamInfo[playerid][tID] == MER)
	{
	    if(TeamInfo[playerid][tRank] < 2)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    format(string, sizeof string, "|____________ Государственные новости (%s) ______________|", GetRankName(playerid));
	    SendClientMessageToAll(0x93AB1CFF, string);
	}
    else if(TeamInfo[playerid][tID] == TAXI)
	{
	    if(TeamInfo[playerid][tRank] < 5)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x93AB1CFF, "|____________________ Служба перевозки пассажиров _____________________|");
	}
 	else if(TeamInfo[playerid][tID] == HA)
	{
	    if(TeamInfo[playerid][tRank] < 9)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(333333, "|____________________ Новости агенства хитманов _____________________|");
	}
	else if(TeamInfo[playerid][tID] == CASINO)
	{
	    if(TeamInfo[playerid][tRank] < 7)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	    SendClientMessageToAll(0x93AB1CFF, "|____________________ Новости Казино _____________________|");
	}
	else return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды."); 
	format(string, sizeof(string), "{FFFFFF}%s[%d]: %s",PlayerInfo[playerid][pName],playerid,text);
	SendClientMessageToAll(0xDC143CFF, string);
	SetPVarInt(playerid,"GovLimit", GetTime+60);
	return 1;
}
COMMAND:me(playerid, params[])
{
	new result[80],string[128];
	if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
	if(sscanf(params,"s[80]",result))return ComMes(playerid, "/me [действие]");
	if(CheckText(playerid,result))return 1;
	if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный %s", result);
	else format(string, sizeof(string), "* %s %s", PlayerInfo[playerid][pName], result);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE);
 	return 1;
}
COMMAND:c(playerid, params[])
{
    new result[80],string[128];
    if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
	if(sscanf(params,"s[80]",result))return ComMes(playerid,"/(c)lose [текст]");
	if(CheckText(playerid,result))return 1;
	if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный шепчет:{FFFFFF} %s", result);
	else format(string, sizeof(string), "%s[%d] шепчет:{FFFFFF} %s", PlayerInfo[playerid][pName],playerid,result);
	ProxDetector(10.0, playerid, string,0xFFA500FF);
 	return 1;
}
COMMAND:s(playerid, params[])
{
    new result[80],string[128];
    if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
	if(sscanf(params,"s[80]",result))return ComMes(playerid, "(/s)hout [текст]");
	if(CheckText(playerid,result))return 1;
	if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный кричит:{FFFFFF} %s", result);
	else format(string, sizeof(string), "%s[%d] кричит:{FFFFFF} %s", PlayerInfo[playerid][pName],playerid, result);
	ProxDetector(40.0, playerid, string,0x33CCFFFF);
 	return 1;
}
COMMAND:m(playerid, params[])
{
    new result[80],string[128];
    if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
	if(sscanf(params,"s[80]",result))return ComMes(playerid, "(/m)egaphone [текст]");
	if(CheckText(playerid,result))return 1;
	if(VehInfo[PlayerInfo[playerid][pVehID]][vType] != VT_FRACTION || VehInfo[PlayerInfo[playerid][pVehID]][vValue] > FBI)return ErrorMes(playerid,"Доступно только в патрульной машине.");
	if(TeamInfo[playerid][tID] == LSPD || TeamInfo[playerid][tID] == SFPD || TeamInfo[playerid][tID] == LVPD) format(string, sizeof(string), "Полuцейскuй %s [мегафон]: %s", PlayerInfo[playerid][pName], result);
	else if(TeamInfo[playerid][tID] == FBI) format(string, sizeof(string), "Агент FBI %s [мегафон]: %s", PlayerInfo[playerid][pName], result);
	else if(TeamInfo[playerid][tID] >= DOKI && TeamInfo[playerid][tID] <= ZONE51) format(string, sizeof(string), "Военный %s [мегафон]: %s", PlayerInfo[playerid][pName], result);
	else return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	ProxDetector(80.0, playerid, string,COLOR_YELLOW);
	return 1;
}
COMMAND:f(playerid, params[])return cmd_r(playerid, params);
COMMAND:r(playerid, params[])
{
    new result[80],string[128];
    if(!TeamInfo[playerid][tID]) return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
    if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
    if(GetPVarInt(playerid,"FamilyChat"))return ErrorMes(playerid, "Ты отключил фракционный чат.");
	if(sscanf(params,"s[80]",result))return ComMes(playerid,"(/r)adio [текст]");
	if(CheckText(playerid,result))return 1;
	
	if(TeamInfo[playerid][tID] <= MEDIC || TeamInfo[playerid][tID] == MER)
	{
		format(string, sizeof(string), "** %s %s[%d]: %s, конец связи. **",GetRankName(playerid), PlayerInfo[playerid][pName],playerid, result);
		SendRadioMessage(TeamInfo[playerid][tID],0x8D8DFFFF,string);
	}
	else if(TeamInfo[playerid][tID] == HA)
	{
		ForEachPlayer(i)
		{
			if(TeamInfo[i][tID] != HA || GetPVarInt(i,"FamilyChat"))continue;
			if(!TeamInfo[i][tType]) format(string, sizeof(string), "** %s: %s. **",GetRankName(playerid),result);
			else format(string, sizeof(string), "** %s %s[%d]: %s. **",GetRankName(playerid), PlayerInfo[playerid][pName],playerid, result);
			SendClientMessage(i,0x01FCFFFF,string);
		}
	}
	else
	{
		format(string, sizeof(string), "** %s %s[%d]: %s. **",GetRankName(playerid), PlayerInfo[playerid][pName],playerid, result);
		SendRadioMessage(TeamInfo[playerid][tID],0x01FCFFFF,string);
	}
	return 1;
}
COMMAND:d(playerid, params[])
{
	new string[128],result[80];
	if(!TeamInfo[playerid][tID]) return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
	if(GetPVarInt(playerid,"FamilyChat"))return ErrorMes(playerid, "Ты отключил фракционный чат.");
	if(sscanf(params,"s[80]",result))return ComMes(playerid,"(/d)epartament [текст]");
	if(CheckText(playerid,result))return 1;
	if(TeamInfo[playerid][tID] <= MEDIC || TeamInfo[playerid][tID] == MER || TeamInfo[playerid][tID] == NEWS)
	{
	    format(string, sizeof(string), "** %s %s[%d]: %s, конец связи. **",GetRankName(playerid), PlayerInfo[playerid][pName],playerid, result);
		SendDepartamentMessage(string);
	}
	else return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	return 1;
}
COMMAND:z(playerid, params[])
{
	new string[144],result[80];
	if(!PlayerInfo[playerid][pAdmin])return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(sscanf(params,"s[80]",result))return ComMes(playerid,"(/a)dmin [текст]");
	if(CheckText(playerid,result))return 1;
	
	switch(PlayerInfo[playerid][pAdmin])
	{
	    case 1,2: format(string, sizeof(string), "Помощник %s: %s", PlayerInfo[playerid][pName], result);
	    case 3..8: format(string, sizeof(string), "Администратор %s: %s", PlayerInfo[playerid][pName], result);
		case 9: format(string, sizeof(string), "Зам.Гл.Администратора %s: %s", PlayerInfo[playerid][pName], result);
		case 10: format(string, sizeof(string), "Гл.Администратор %s: %s", PlayerInfo[playerid][pName], result);
		default: return 1;
	}
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	return 1;
}

COMMAND:w(playerid, params[])return cmd_pm(playerid, params);
COMMAND:pm(playerid, params[])
{
	new giveplayerid,result[80],string[128];
	if(sscanf(params,"us[80]",giveplayerid,result))return ComMes(playerid, "/pm [id игрока] [текст]");
	if(CheckText(playerid,result))return 1;
	if (!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid, "Этот игрок не в сети.");
	if(GetPVarInt(giveplayerid,"HidePM") && !PlayerInfo[playerid][pAdmin])return ErrorMes(playerid, "Этот игрок заблокировал персональные сообщения.");
	if(giveplayerid == playerid)
	{
	    if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный разговаривает сам с собой.");
		else format(string, sizeof(string), "* %s разговаривает сам с собой.", PlayerInfo[playerid][pName]);
		ProxDetector(5.0, playerid, string, COLOR_PURPLE);
		return 1;
	}
	if(GetPVarInt(playerid,"PMLimit") > GetTime)
	{
		format(string,sizeof(string),"Ты не можешь писать сообщения так часто. Попробуй через %d секунд.",GetPVarInt(playerid,"PMLimit") - GetTime);
		return ErrorMes(playerid, string);
	}
	if(!PlayerInfo[playerid][pLevel] && !DistPlayerToPlayer(30.0,playerid,giveplayerid)) return ErrorMes(playerid,"Ты можешь писать личные сообщения только рядом стоящим игрокам.");
	format(string, sizeof(string), "ПМ от %s[%d]: %s", PlayerInfo[playerid][pName], playerid, result);
	SendClientMessage(giveplayerid, COLOR_YELLOW, string);
	format(string, sizeof(string), "ПМ к %s[%d]: %s", PlayerInfo[giveplayerid][pName], giveplayerid,result);
	SendClientMessage(playerid,  0xFFA500AA, string);
	FP_GivePlayerMoney(playerid, - 5);
	if(!PlayerInfo[playerid][pAdmin]) SetPVarInt(playerid,"PMLimit", GetTime+5);
	
	for(new i=1; i<=BIZNES; i++)
	{
		if(!BiznesInfo[i][bType])
		{
			BiznesInfo[i][bMoney] += 2;
			if(BiznesInfo[i][bMafia]) FractionInfo[BiznesInfo[i][bMafia]][oMoney] += 1;
			KAZNA += 2;
			format(string,sizeof(string),"UPDATE `samp_biznes` SET `Money` = '%d' WHERE `ID` = '%d'",BiznesInfo[i][bMoney],i);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

			ForEachPlayer(u)
			{
				if(GetPVarInt(u,"APM") && u != playerid  && u != giveplayerid)
				{
					format(string, sizeof(string), "ПМ от %s[%d] к %s[%d]: %s",PlayerInfo[playerid][pName], playerid, PlayerInfo[giveplayerid][pName], giveplayerid,result);
					SendClientMessage(u, 0xFFD2691E, string);
				}
			}
			break;
		}
	}	
	return 1;
}
COMMAND:re(playerid, params[])return cmd_report(playerid, params);
COMMAND:report(playerid, params[])
{
    new result[80],string[144],giveplayerid;
	if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
 	if(sscanf(params,"is[80]",giveplayerid,result))return ComMes(playerid, "/report [id нарушителя] [текст]");
 	if(CheckText(playerid,result))return 1;
    if(GetPVarInt(playerid,"ReportLimit") > GetTime)
	{
		format(string,sizeof(string),"Ты не можешь писать сообщения так часто. Попробуй через %d секунд.",GetPVarInt(playerid,"ReportLimit") - GetTime);
		return ErrorMes(playerid, string);
	}
	if(IsPlayerConnected(giveplayerid))format(string, sizeof(string), "ЖАЛОБА от %s[%d] на %s[%d]: %s", PlayerInfo[playerid][pName],playerid,PlayerInfo[giveplayerid][pName],giveplayerid, result);
	else format(string, sizeof(string), "ЖАЛОБА от %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
	ABroadCast(COLOR_YELLOW,string,1);
	SendClientMessage(playerid, COLOR_YELLOW, "Твое сообщение отправлено администрацuu.");
	SetPVarInt(playerid,"ReportLimit", GetTime+30);
	return 1;
}
COMMAND:otvet(playerid, params[])
{
    new result[80],string[144],giveplayerid,adminname[24];
	if(!PlayerInfo[playerid][pAdmin]) return ErrorMes(playerid,"Недостаточно прав для использования команды.");
 	if(sscanf(params,"us[80]",giveplayerid,result))return ComMes(playerid, "/otvet [id игрока] [ответ]");
 	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
 	if(CheckText(playerid,result))return 1;

	switch(PlayerInfo[playerid][pAdmin])
	{
	    case 1,2:adminname = "Помощника";
	    case 3..8:adminname = "Администратора";
		case 9:adminname = "Зам.Гл.Администратора";
		case 10:adminname = "Гл.Администратора";
		default: return 1;
	}

	format(string, sizeof(string), "* Сообщение от %s %s[%d]: %s", adminname, PlayerInfo[playerid][pName], playerid, result);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Сообщение к %s[%d]: %s", PlayerInfo[giveplayerid][pName], giveplayerid, result);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}
COMMAND:ask(playerid, params[])
{
    new result[80],string[144],giveplayerid,adminname[24];
	if(PlayerInfo[playerid][pAdmin]) return ErrorMes(playerid,"Данная команда предназначена для игроков.");
	if(GetPVarInt(playerid,"AskLimit") > GetTime)
	{
		format(string,sizeof(string),"Ты не можешь писать сообщения так часто. Попробуй через %d секунд.",GetPVarInt(playerid,"AskLimit") - GetTime);
		return ErrorMes(playerid, string);
	}
 	if(sscanf(params,"us[80]",giveplayerid,result))return ComMes(playerid, "/ask [id администратора] [вопрос]");
 	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!PlayerInfo[giveplayerid][pAdmin]) return ErrorMes(playerid,"Этот игрок не администратор.");
	if(GetPVarInt(giveplayerid,"LockAsk")) return ErrorMes(playerid,"Ты не можешь отправить вопрос этому администратору.");
 	if(CheckText(playerid,result))return 1;

	switch(PlayerInfo[giveplayerid][pAdmin])
	{
	    case 1,2:adminname = "Помощнику";
	    case 3..8:adminname = "Администратору";
		case 9:adminname = "Зам.Гл.Администратора";
		case 10:adminname = "Гл.Администратору";
		default: return 1;
	}
	format(string, sizeof(string), "* Вопрос от %s[%d]: %s", PlayerInfo[playerid][pName], playerid, result);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Вопрос к %s %s[%d]: %s", adminname, PlayerInfo[giveplayerid][pName], giveplayerid, result);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	SetPVarInt(playerid,"AskLimit",GetTime + 15);
	return 1;
}
COMMAND:o(playerid, params[])
{
	new text[90],string[144];
	if(noooc && !PlayerInfo[playerid][pAdmin])return ErrorMes(playerid, "Общuй чат отключён админинистрацией.");
	if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
	if(JailInfo[playerid][jTime])return ErrorMes(playerid, "Ты не можешь говорuть пока находишься в тюрьме.");
	if(GetPVarInt(playerid,"OChat"))return ErrorMes(playerid, "Ты отключил общий чат.");
	if(GetPVarInt(playerid,"OOCLimit") > GetTime)
	{
		format(string,sizeof(string),"Ты не можешь писать сообщения в общuй чат так часто. Попробуй через %d секунд.",GetPVarInt(playerid,"OOCLimit") - GetTime);
		return ErrorMes(playerid, string);
	}
 	if(sscanf(params,"s[90]",text))return ComMes(playerid, "(/o)oc [текст]");
 	if(CheckText(playerid,text))return 1;
 	if(!PlayerInfo[playerid][pLevel])return ErrorMes(playerid, "Писать в общий чат можно только c 1 уровня.");
	if(PlayerInfo[playerid][pAdmin]) 
	{
		format(string, sizeof(string), "{FF0000}»{FFFFFF} %s[%d]: %s", PlayerInfo[playerid][pName],playerid, text);
	}	
	else if(PremiumInfo[playerid][Level])
	{
		format(string, sizeof(string), "{FFFF00}»{FFFFFF} %s[%d]: %s", PlayerInfo[playerid][pName],playerid, text);
		SetPVarInt(playerid,"OOCLimit", GetTime+20);
	}	
	else
	{
		format(string, sizeof(string), "» %s[%d]: %s", PlayerInfo[playerid][pName],playerid, text);
		SetPVarInt(playerid,"OOCLimit", GetTime+40);
	}	
	OOCOff(0xFFFFFFFF,string);
	return 1;
}
COMMAND:news(playerid, params[])
{
	new result[90],string[144];
	if(TeamInfo[playerid][tID] != NEWS)return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	if(MuteInfo[playerid][mTime])return CheckMuteTime(playerid);
	if(GetPVarInt(playerid,"NewsLimit") > GetTime)
	{
		format(string,sizeof(string),"Ты не можешь писать сообщения так часто. Попробуй через %d секунд.",GetPVarInt(playerid,"NewsLimit") - GetTime);
		return ErrorMes(playerid, string);
	}
	if(VehInfo[PlayerInfo[playerid][pVehID]][vType] != VT_FRACTION || VehInfo[PlayerInfo[playerid][pVehID]][vValue] != NEWS) return ErrorMes(playerid, "Ты не в машине репортеров.");
	if(sscanf(params,"s[90]",result))return ComMes(playerid, "/news [текст]");
	if(CheckText(playerid,result))return 1;
	format(string, sizeof(string), "Новости от %s[%d]: %s", PlayerInfo[playerid][pName],playerid, result);
	OOCNews(0xFFA500AA,string);
	SetPVarInt(playerid,"NewsLimit",GetTime+30);

	return 1;
}
//******************************************************************************
//===============================[Лидерские команды]============================
//******************************************************************************
COMMAND:invite(playerid, params[])
{
    new giveplayerid,string[128];
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/invite [id игрока]");
	if (!TeamInfo[playerid][tType]) return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid, "Этот игрок не в сети.");
	if (TeamInfo[giveplayerid][tID]) return ErrorMes(playerid, "Этот игрок уже состоит во фракцuu.");
	if (!PlayerInfo[giveplayerid][pLevel]) return ErrorMes(playerid, "Принимать во фракцию можно только игроков с 1 уровня.");
	if (WarnInfo[giveplayerid][wWarns] >= 2) return ErrorMes(playerid, "У этого игрока более 2-х варнов, принять во фракцию его не возможно.");
	if(giveplayerid == playerid)return ErrorMes(playerid, "Ты не можешь пригласuть сам себя.");
	if(PlayerInfo[giveplayerid][pAdmin])return ErrorMes(playerid, "Администратора нельзя пригласить во фракцию.");
	format(string, sizeof(string), "* Ты предложuл(а) игроку %s вступuть во фракцию \"%s \".", PlayerInfo[giveplayerid][pName], GetTeamName(TeamInfo[playerid][tID]));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Лидер %s предложuл(а) тебе вступuть в \"%s \".", PlayerInfo[playerid][pName], GetTeamName(TeamInfo[playerid][tID]));
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept invite\", чтобы вступuть.");
	InviteOffer[giveplayerid] = playerid;
	return 1;
}
COMMAND:uninvite(playerid, params[])
{
	if(sscanf(params,"u",params[0]))return ComMes(playerid, "/uninvite [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(TeamInfo[playerid][tID] != TeamInfo[params[0]][tID] && PlayerInfo[playerid][pAdmin] < 5)return ErrorMes(playerid, "Этот игрок не в твоей фрацuu.");
	if(!TeamInfo[playerid][tType] && PlayerInfo[playerid][pAdmin] < 5) return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	if(params[0] == playerid) return ErrorMes(playerid, "Ты не можешь кикнуть себя из фракции.");
	if(!TeamInfo[params[0]][tID])return ErrorMes(playerid, "Этот игрок не состоит во фракцuu.");
	if(TeamInfo[params[0]][tType]) return ErrorMes(playerid, "Ты не можешь кикнуть лидера или заместителя.");

	new string[64];
	format(string, sizeof(string), "* Ты был кикнут из фракцuu лидером %s.", PlayerInfo[playerid][pName]);
	SendClientMessage(params[0], COLOR_LIGHTBLUE, string);

	format(string, sizeof(string), "Ты кикнул %s из фракцuu.", PlayerInfo[params[0]][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

	DeletePlayerFromTeam(params[0]);
	return 1;
}

COMMAND:govkick(playerid, params[])
{
	if(TeamInfo[playerid][tID] != MER)return ErrorMes(playerid, "Недостаточно прав для использования команды.");

	if(sscanf(params,"u",params[0]))return ComMes(playerid, "/govkick [id игрока]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(params[0] == playerid) return ErrorMes(playerid, "Ты не можешь кикнуть себя из фракции.");
	if(!TeamInfo[params[0]][tID])return ErrorMes(playerid, "Этот игрок не состоит во фракцuu.");
	if(TeamInfo[params[0]][tType]) return ErrorMes(playerid, "Ты не можешь кикнуть лидера или заместителя.");

	switch(TeamInfo[playerid][tRank])
	{
		case 5:
		{
			if(TeamInfo[params[0]][tID] < HUN)
				return ErrorMes(playerid, "Ты не можешь кикнуть этого игрока из фракции.");
		}
		case 4:
		{
			if(TeamInfo[params[0]][tID] != DOKI && TeamInfo[params[0]][tID] != EBASE && TeamInfo[params[0]][tID] != ZONE51)
				return ErrorMes(playerid, "Ты не можешь кикнуть этого игрока из фракции.");
		}
		case 3:
		{
			if(!IsACop(params[0])) 
				return ErrorMes(playerid, "Ты не можешь кикнуть этого игрока из фракции.");
		}
		case 2:
		{
			if(TeamInfo[params[0]][tID] != NEWS) 
				return ErrorMes(playerid, "Ты не можешь кикнуть этого игрока из фракции.");
		}
		default: return ErrorMes(playerid, "Недостаточно прав для использования команды.");

	}
	DeletePlayerFromTeam(params[0]);

	new string[80];
	format(string, sizeof(string), "* %s %s кикнул(а) тебя из фракции.", GetRankName(playerid), PlayerInfo[playerid][pName]);
	SendClientMessage(params[0], COLOR_LIGHTBLUE, string);

	format(string, sizeof(string), "Ты кикнул %s из фракцuu.", PlayerInfo[params[0]][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}

COMMAND:giverank(playerid, params[])
{
    
	if(sscanf(params,"ui",params[0],params[1]))return ComMes(playerid,"/giverank [id игрока] [ранг]");
	if (!TeamInfo[playerid][tType])return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	if(!IsPlayerConnected(params[0]))return ErrorMes(playerid, "Этот игрок не в сети.");
	if(TeamInfo[playerid][tID] != TeamInfo[params[0]][tID])return ErrorMes(playerid, "Этот игрок не в твоей фрацuu.");
	if(playerid == params[0])return ErrorMes(playerid, "Ты не можешь изменuть себе ранг.");
	if(TeamInfo[params[0]][tType])return ErrorMes(playerid, "Ты не можешь изменить ранг этому игроку.");

	switch(TeamInfo[playerid][tID])
	{
	    case LSPD..LVPD,DOKI..ZONE51: if(params[1] > 11 || params[1] < 1)return ErrorMes(playerid, "Ранг может быть от 1 до 11.");
        case FBI,LIC,CASINO,MER: if(params[1] > 7 || params[1] < 1)return ErrorMes(playerid, "Ранг может быть от 1 до 7.");
		case HA,SRACE: if(params[1] > 9 || params[1] < 1)return ErrorMes(playerid, "Ранг может быть от 1 до 9.");
		case HUN: if(params[1] > 10 || params[1] < 1)return ErrorMes(playerid, "Ранг может быть от 1 до 10.");
	    case MEDIC: if(params[1] > 4 || params[1] < 1)return ErrorMes(playerid, "Ранг может быть от 1 до 4.");
		default: if(params[1] > 6 || params[1] < 1)return ErrorMes(playerid, "Ранг может быть от 1 до 6.");
	}
	
	new string[128];
	if(params[1] > TeamInfo[params[0]][tRank])
	{
		format(string, sizeof(string), "Ты был(а) повышен(а) до %d ранга лидером %s",params[1], PlayerInfo[playerid][pName]);
		SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ты повысил(а) игрока %s до %d ранга.", PlayerInfo[params[0]][pName], params[1]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	else
	{
		format(string, sizeof(string), "Ты был(а) понижен(а) до %d ранга лидером %s",params[1], PlayerInfo[playerid][pName]);
		SendClientMessage(params[0], COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ты понизила(а) игрока %s до %d ранга.", PlayerInfo[params[0]][pName], params[1]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	}
	UpdatePlayerTeam(params[0], 0, params[1]);
	return 1;
}

COMMAND:twarn(playerid, params[])
{
	new string[200],result[64];
	if(!TeamInfo[playerid][tType])return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(sscanf(params,"us[64]",params[0],result))return ComMes(playerid,"/twarn [id игрока] [причина]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if(TeamInfo[playerid][tID] != TeamInfo[params[0]][tID])return ErrorMes(playerid,"Этот игрок не состоит в твоей фракции.");
	if(TeamInfo[params[0]][tType])return ErrorMes(playerid,"Ты не можешь дать предупреждение лидеру.");
	if(playerid == params[0])return ErrorMes(playerid,"Ты не можешь сделать себе выговор.");
	
	
	if(TWarnInfo[params[0]][wWarns] >= 2)
	{
		format(string, sizeof(string), "%s был(а) кикнут(а) из фракции, Причина: 3 выговора.", PlayerInfo[params[0]][pName]);
		SendRadioMessage(TeamInfo[playerid][tID],COLOR_LIGHTRED, string);
		
		DeletePlayerFromTeam(params[0]);
	}
	else
	{
		format(string, sizeof(string), "%s сделал(а) выговор %s , Причина: %s", PlayerInfo[playerid][pName],PlayerInfo[params[0]][pName], (result));
		SendRadioMessage(TeamInfo[playerid][tID],COLOR_LIGHTRED, string);
		
		SetPVarInt(playerid,"AddWarnID",params[0]);
		
		format(string,sizeof(string),"INSERT INTO `samp_twarns` (Name,Date,Admin,Reason) VALUES ('%s','%02d.%02d.%d %02d:%02d:%02d','%s','%s')",PlayerInfo[params[0]][pName],Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],result);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string, "OnQueryFinish","dd",playerid,DB_ADD_TWARN);
		
		if(!TWarnInfo[params[0]][wWarns])
		{
			format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
			strmid(TWarnInfo[params[0]][wDate1],string,0,20,20);
			strmid(TWarnInfo[params[0]][wAdmin1],PlayerInfo[playerid][pName],0,24,24);
			strmid(TWarnInfo[params[0]][wReason1],result,0,64,64);
		}
		else
		{
			format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
			strmid(TWarnInfo[params[0]][wDate2],string,0,20,20);
			strmid(TWarnInfo[params[0]][wAdmin2],PlayerInfo[playerid][pName],0,24,24);
			strmid(TWarnInfo[params[0]][wReason2],result,0,64,64);
		}
	}
	return 1;
}
COMMAND:untwarn(playerid, params[])
{
	new result[80];
	if(!TeamInfo[playerid][tType])return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(sscanf(params,"us[80]",params[0],result))return ComMes(playerid,"/untwarn [id игрока] [причина]");
	if(!IsPlayerConnected(params[0])) return ErrorMes(playerid,"Этот игрок не в сети.");
	if (TeamInfo[playerid][tID] != TeamInfo[params[0]][tID])return ErrorMes(playerid,"Этот игрок не состоит в твоей фракции.");
	if(!TWarnInfo[params[0]][wWarns])return ErrorMes(playerid,"У этого игрока нет выговоров.");
	
	SetPVarInt(playerid,"WarnRemove",params[0]);
	
	new string[256];			
	format(string,sizeof(string),"[%s] Выдал: %s. Причина: %s\n",TWarnInfo[params[0]][wDate1],TWarnInfo[params[0]][wAdmin1],TWarnInfo[params[0]][wReason1]);
	if(TWarnInfo[params[0]][wWarns] == 2) format(string,sizeof(string),"%s[%s] Выдал: %s. Причина: %s",string,TWarnInfo[params[0]][wDate2],TWarnInfo[params[0]][wAdmin2],TWarnInfo[params[0]][wReason2]);
					
	new _str[64];
	format(_str,sizeof(_str),""FPHEAD"Выговоры %s",PlayerInfo[params[0]][pName]);
	ShowPlayerDialog(playerid,D_ADMIN_TWARN,DIALOG_STYLE_LIST,_str,string,"Снять","Выйти");

	return 1;
}
//******************************************************************************
//===============================[Бизнес команды]===============================
//******************************************************************************
COMMAND:b(playerid, params[])return cmd_biznes(playerid, params);
COMMAND:biznes(playerid, params[])
{
	new x_job[16],string[256],giveplayerid,price;
	sscanf(params,"s[16]ui",x_job,giveplayerid,price);
	if(isnull(x_job))
	{
	    if(!PlayerInfo[playerid][pBizKey])return ErrorMes(playerid,"У тебя нет бизнеса.");
		return ShowBiznesDialog(playerid);
	}
	if(!strcmp(x_job,"buy", true))
	{
		if(PlayerInfo[playerid][pBizKey])return ErrorMes(playerid, "У тебя уже есть бизнес.");
		for(new b = 1; b < BIZNES; b++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, BiznesInfo[b][bEnterX], BiznesInfo[b][bEnterY], BiznesInfo[b][bEnterZ]))
			{
				if(strcmp(BiznesInfo[b][bOwner],"The State",true)) return ErrorMes(playerid,"Этот бизнес не продается.");
				if(PlayerInfo[playerid][pLevel] < BiznesInfo[b][bLevel])
				{
					format(string, sizeof(string), "Доступно только с %d уровня.",BiznesInfo[b][bLevel]);
					return ErrorMes(playerid, string);
				}
				if(PlayerInfo[playerid][pMoney] < BiznesInfo[b][bPrice])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
				PlayerInfo[playerid][pBizKey] = b;
				strmid(BiznesInfo[b][bOwner], PlayerInfo[playerid][pName], 0, MAX_PLAYER_NAME, MAX_PLAYER_NAME);
				FP_GivePlayerMoney(playerid,-BiznesInfo[b][bPrice]);
				if(BiznesInfo[b][bInt]) SetPos(playerid,BiznesInfo[b][bExitX],BiznesInfo[b][bExitY],BiznesInfo[b][bExitZ],0.0,BiznesInfo[b][bInt],BiznesInfo[b][bID]);
				SendClientMessage(playerid, COLOR_WHITE, "Поздравляю, теперь ты владеешь этим бизнесом.");
						
				format(string,sizeof(string),"UPDATE `samp_biznes` SET `Owner` = '%s' WHERE `ID` = '%d'",BiznesInfo[b][bOwner],b);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
				format(string, sizeof(string), "{00CC00}%s{33CCFF}\nВладелец: {00CC00}%s{33CCFF}\n{33CCFF}Крыша: {FFD700}%s", BiznesInfo[b][bMessage],BiznesInfo[b][bOwner],GetTeamName(BiznesInfo[b][bMafia]));
				Update3DTextLabelText(BiznesInfo[b][bText], 0xFFFFFFFF, string);
				
				break;
			}
		}
		return 1;
	}
	else if(!strcmp(x_job,"sell", true))
	{
		if(!PlayerInfo[playerid][pBizKey])return ErrorMes(playerid,  "У тебя нет бизнеса.");
		if(!strcmp(PlayerInfo[playerid][pName], BiznesInfo[PlayerInfo[playerid][pBizKey]][bOwner], true))
		{
			new bouse = PlayerInfo[playerid][pBizKey];
			BiznesInfo[bouse][bMafia] = 0;
			strmid(BiznesInfo[bouse][bOwner], "The State", 0, strlen("The State"), 24);

			FP_GivePlayerMoney(playerid,VIPMoney(PremiumInfo[playerid][Level],floatround(BiznesInfo[bouse][bPrice]/3)) + BiznesInfo[bouse][bMoney]); //Вип-Деньги
			
			BiznesInfo[bouse][bMoney] = 0;
			PlayerInfo[playerid][pBizKey] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "Поздравляю, ты успешно продал(а) свой бизнес.");
			
			format(string,sizeof(string),"UPDATE `samp_biznes` SET `Owner`='The State',`Money`='0',`Mafia`='0' WHERE `ID` = %d",bouse);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

			format(string, sizeof(string), "{00CC00}%s{33CCFF}\nЦена: {FFD700}$%d{33CCFF}\nУровень: {FFD700}%d", BiznesInfo[bouse][bMessage],BiznesInfo[bouse][bPrice],BiznesInfo[bouse][bLevel]);
			Update3DTextLabelText(BiznesInfo[bouse][bText], 0xFFFFFFFF, string);
			return 1;
		}
		return 1;
	}
	else if(!strcmp(x_job,"sellto", true))
	{
	    if(!PlayerInfo[playerid][pBizKey])return ErrorMes(playerid,"У тебя нет бизнеса.");
		if(sscanf(params,"s[16]ui",x_job,giveplayerid,price))return ComMes(playerid, "/b sellto [id игрока] [цена]");
		if(giveplayerid == playerid)return ErrorMes(playerid,"Ты не можешь продать бизнес себе.");
		if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	    if(!DistPlayerToPlayer(5.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	    if(PlayerInfo[giveplayerid][pBizKey])return ErrorMes(playerid,"У этого игрока есть бизнес.");
		if(!ValidDialogValue(price))return ErrorMes(playerid,"Цена не может быть отрицательной.");
		if(PlayerInfo[giveplayerid][pLevel] < BiznesInfo[PlayerInfo[playerid][pBizKey]][bLevel])return ErrorMes(playerid,"У этого игрока недостаточный уровень.");

		MyBiznesOffer[giveplayerid] = playerid;
		MyBiznesMoney[giveplayerid] = price;

		format(string,sizeof(string),"* Ты предлагаешь %s купuть у тебя бизнес за $%d.",PlayerInfo[giveplayerid][pName],price);
	  	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	  	format(string,sizeof(string),"* %s предлагает тебе купuть у него бизнес за $%d.",PlayerInfo[playerid][pName],price);
	  	SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,string);
	  	SendClientMessage(giveplayerid,COLOR_LIGHTBLUE," Используй \"/accept buybiznes\" , чтобы согласuться.");
	}
	return 1;
}

//******************************************************************************
//===============================[Домашние команды]=============================
//******************************************************************************
COMMAND:h(playerid, params[])return cmd_house(playerid, params);
COMMAND:house(playerid, params[])
{
	new x_job[16],string[180],giveplayerid,price;
	sscanf(params,"s[16]ui",x_job,giveplayerid,price);
	if(isnull(x_job))
	{
	    if(!PlayerInfo[playerid][pHouseKey])return ErrorMes(playerid,"У тебя нет дома.");
		ShowHouseDialog(playerid);
		return 1;
	}
	if(!strcmp(x_job,"buy", true))
	{
		if(PlayerInfo[playerid][pHouseKey]) return ErrorMes(playerid, "У тебя уже есть дом.");
		for(new h = 1; h<=HOUSE; h++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hEnterX], HouseInfo[h][hEnterY], HouseInfo[h][hEnterZ]))
			{
			    if(strcmp(HouseInfo[h][hOwner],"The State",true))return ErrorMes(playerid,"Этот дом не продаётся.");
				if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
				{
					format(string, sizeof(string), "Этот дом доступен только с %d уровня.", HouseInfo[h][hLevel]);
					return ErrorMes(playerid,  string);
				}
				if(PlayerInfo[playerid][pMoney] < HouseInfo[h][hPrice])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
				PlayerInfo[playerid][pHouseKey] = h;
				strmid(HouseInfo[h][hOwner], PlayerInfo[playerid][pName], 0, MAX_PLAYER_NAME, 64);
				FP_GivePlayerMoney(playerid,-HouseInfo[h][hPrice]);
				SetPos(playerid,HouseInfo[h][hExitX],HouseInfo[h][hExitY],HouseInfo[h][hExitZ],0.0,HouseInfo[h][hInt],HouseInfo[h][hID]);
				SendClientMessage(playerid, COLOR_WHITE, "Поздравляю, теперь этот дом принадлежит тебе.");
	            
				DestroyDynamicMapIcon(HouseInfo[h][hMapIcon]);
				DestroyDynamicPickup(HousePickUps[h]);
				
				HousePickUps[h] = CreateDynamicPickup(1272, 23, HouseInfo[h][hEnterX], HouseInfo[h][hEnterY], HouseInfo[h][hEnterZ],0,0,-1,100.0);
				HouseInfo[h][hMapIcon] = CreateDynamicMapIcon(HouseInfo[h][hEnterX],HouseInfo[h][hEnterY],HouseInfo[h][hEnterZ],32,COLOR_LIGHTRED,0,0,-1,150.0);
				format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Владелец: {00CC00}%s", HouseInfo[h][hID],HIInfo[HouseInfo[h][hType]][HouseName],HouseInfo[h][hOwner]);
				Update3DTextLabelText(HouseInfo[h][hText],0xFFFFFFFF, string);
				
				format(string,sizeof(string),"UPDATE `samp_houses` SET `Owner` = '%s' WHERE `ID` = '%d'", 
					PlayerInfo[playerid][pName], HouseInfo[h][hID]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				
				PlayerInfo[playerid][pSpawn] = 1;
				format(string,sizeof(string),"UPDATE `samp_users` SET `Spawn`='1' WHERE `Name` = '%s'", 
					PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				return 1;
			}
		}
		return 1;
	}
	if(!strcmp(x_job,"get", true))
	{
		if(!PlayerInfo[playerid][pHouseKey])return ErrorMes(playerid, "У тебя нет дома.");

	    if(HouseInfo[PlayerInfo[playerid][pHouseKey]][hMats] == -1) return ErrorMes(playerid, "Ты уже забрал все из тайника.");

		FP_GivePlayerMoney(playerid, HouseInfo[PlayerInfo[playerid][pHouseKey]][hMoney]);
		
		format(string, sizeof(string), "Ты забрал(а) $%d из дома",HouseInfo[PlayerInfo[playerid][pHouseKey]][hMoney]);
		SendClientMessage(playerid, COLOR_YELLOW, string);

		AddItem(playerid, 21, HouseInfo[PlayerInfo[playerid][pHouseKey]][hMats]);
		AddItem(playerid, 47, HouseInfo[PlayerInfo[playerid][pHouseKey]][hDrugs]);

		HouseInfo[PlayerInfo[playerid][pHouseKey]][hMoney] = 0;
		HouseInfo[PlayerInfo[playerid][pHouseKey]][hMats] = -1;
		HouseInfo[PlayerInfo[playerid][pHouseKey]][hDrugs] = -1;

		format(string,sizeof(string),"UPDATE `samp_houses` SET `Money` =0,`Mats` =-1,`Drugs` =-1 WHERE `ID` = '%d'", HouseInfo[PlayerInfo[playerid][pHouseKey]][hID]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		return 1;
	}
	else if(!strcmp(x_job,"sellto", true))
	{
	    if(!PlayerInfo[playerid][pHouseKey])return ErrorMes(playerid,"У тебя нет дома.");
		if(sscanf(params,"s[16]ui",x_job,giveplayerid,price))return ComMes(playerid, "/h sellto [id игрока] [цена]");
		if(giveplayerid == playerid)return ErrorMes(playerid,"Ты не можешь продать дом себе.");
		if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	    if(!DistPlayerToPlayer(5.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	    if(PlayerInfo[giveplayerid][pHouseKey])return ErrorMes(playerid,"У этого игрока есть дом.");
		if(!ValidDialogValue(price))return ErrorMes(playerid,"Цена не может быть отрицательной.");
        if(PlayerInfo[giveplayerid][pLevel] < HouseInfo[PlayerInfo[playerid][pHouseKey]][hLevel])return ErrorMes(playerid,"У этого игрока недостаточный уровень.");

		MyHouseOffer[giveplayerid] = playerid;
		MyHouseMoney[giveplayerid] = price;
		
		format(string,sizeof(string),"* Ты предлагаешь %s купuть у тебя дом за $%d.",PlayerInfo[giveplayerid][pName],price);
	  	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	  	format(string,sizeof(string),"* %s предлагает тебе купuть у него дом за $%d.",PlayerInfo[playerid][pName],price);
	  	SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,string);
	  	SendClientMessage(giveplayerid,COLOR_LIGHTBLUE," Используй \"/accept buyhouse\" , чтобы согласuться.");
	}
	
	if(!strcmp(x_job,"sell", true))
	{
		if(!PlayerInfo[playerid][pHouseKey])return ErrorMes(playerid, "У тебя нет дома.");

		new house = PlayerInfo[playerid][pHouseKey];
		HouseInfo[house][hHel] = 0;
		HouseInfo[house][hArm] = 0;
		HouseInfo[house][hSafe] = 0;
		HouseInfo[house][hLock] = 0;
		HouseInfo[house][hMoney] = 0;
		HouseInfo[house][hMats] = 0;
		HouseInfo[house][hDrugs] = 0;
		
		for(new i = 0; i < 20; i ++)
		{
			HouseInfo[house][hItems][i] = 0;
			HouseInfo[house][hValue][i] = 0;
			HouseInfo[house][hState][i] = 0.0;
		}
		
		PlayerInfo[playerid][pHouseKey] = 0;
		strmid(HouseInfo[house][hOwner], "The State", 0, strlen("The State"), 64);
		FP_GivePlayerMoney(playerid,VIPMoney(PremiumInfo[playerid][Level],floatround(HouseInfo[house][hPrice]/3)) ); //Вип-Деньги
		
		SendClientMessage(playerid, COLOR_WHITE, "Поздравляю, ты успешно продал(а) свой дом.");
		
		if(PlayerInfo[playerid][pWorld] == HouseInfo[house][hID] && PlayerInfo[playerid][pInt] == HouseInfo[house][hInt]) SetPos(playerid,HouseInfo[house][hEnterX],HouseInfo[house][hEnterY],HouseInfo[house][hEnterZ],0.0,0,0);
		
		PlayerInfo[playerid][pSpawn] = 0;
		format(string,sizeof(string),"UPDATE `samp_users` SET `Spawn` = '0' WHERE `Name` = '%s'",
			PlayerInfo[playerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		DestroyDynamicMapIcon(HouseInfo[house][hMapIcon]);
		DestroyDynamicPickup(HousePickUps[house]);
		
		HousePickUps[house] = CreateDynamicPickup(1273, 23, HouseInfo[house][hEnterX], HouseInfo[house][hEnterY], HouseInfo[house][hEnterZ],0,0,-1,100.0);
		HouseInfo[house][hMapIcon] = CreateDynamicMapIcon(HouseInfo[house][hEnterX],HouseInfo[house][hEnterY],HouseInfo[house][hEnterZ],31,COLOR_LIGHTRED,0,0,-1,150.0);
		format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Уровень: {FFD700}%d\n{33CCFF}Цена: {FFD700}$%d", HouseInfo[house][hID],HIInfo[HouseInfo[house][hType]][HouseName],HouseInfo[house][hLevel],HouseInfo[house][hPrice]);
		Update3DTextLabelText(HouseInfo[house][hText],0xFFFFFFFF, string);
		
		format(string,sizeof(string),"UPDATE `samp_houses` SET `Owner` = 'The State',`Lock` = '0',`Money` = '0',`Safe` = '0',`Hel` = '0',`Arm` = '0' WHERE `ID` = '%d'",HouseInfo[house][hID]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

		return 1;
	}

	return 1;
}
//******************************************************************************
//===============================[Анuмацuu]=====================================
//******************************************************************************
COMMAND:sa_cmd(playerid, params[])
{
	new string[512];
	strcat(string,"{F5DEB3}");
 	strcat(string,"/quit(/q) - Закрытие клиента SA:MP\n");
	strcat(string,"/interior - Показывает ID интерьера, в котором вы находитесь\n");
	strcat(string,"/fpslimit [0-60] - Установка ограничения кадров в секунду(FPS)\n");
	strcat(string,"/pagesize [10-20] - Изменение количества строк чата\n");
	strcat(string,"/timestamp - Включение/отключение времени сообщений в чате\n");
	strcat(string,"/headmove - Включение/отключение вращения головы персонажа\n");
	strcat(string,"/dl - Команда для просмотра информации о автомобиле\n");
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Команды SA-MP",string,"OK","");
	return 1;
}

COMMAND:main_cmd(playerid, params[])
{
	new string[1520];
	strcat(string,"{F5DEB3}");
 	strcat(string,"/kpk - Основной раздел\n");
 	strcat(string,"/menu - Основной меню игрока\n");
	strcat(string,"/id [Ник] – Узнать ID игрока по нику\n");
	strcat(string,"/lock - Открыть/закрыть свой транспор\n");
	strcat(string,"/drink - Купить в баре напиток\n");
	strcat(string,"/usedrugs - Использовать наркотики\n");
	strcat(string,"/accept - Принять услугу\n");
	strcat(string,"/cvet [1-100] - Установить цвет персонажа.(/cvet 100 - отключить цвет)\n");
	strcat(string,"/tie [id] - Связать игрока\n");
	strcat(string,"/untie [id] - Развязать игрока\n");
	strcat(string,"/eject [id] - Выкинуть игрока из транспорта\n");
	strcat(string,"/bail [id] - Внести залог за игрока\n");
	strcat(string,"/v - Контроль личного авто\n");
	strcat(string,"/hv - Контроль домашнего авто\n");
	strcat(string,"/h - Контроль жилья\n");
	strcat(string,"/b - Контроль бизнеса\n");
	strcat(string,"/h buy - покупка жилья\n");
	strcat(string,"/b buy - покупка бизнеса\n");
	strcat(string,"/join - Присоединиться к ивенту\n");
	strcat(string,"/contract [id] [сумма] - Заказать игрока наёмным убийцам\n");
	strcat(string,"/call [номер] - Звонок по телефону\n");
	strcat(string,"/report [id] - Жалоба администрации\n");
	strcat(string,"/smoke - Выкурить сигарету\n");
    strcat(string,"/drinkbeer - Выпить пива\n");
    
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Основные команды",string,"OK","");
	return 1;
}

COMMAND:chat_cmd(playerid, params[])
{
	new string[1024];
	strcat(string,"{F5DEB3}");
 	strcat(string,"/r(/f) [текст] - Фракциооный чат\n");
	strcat(string,"/togfam - Закрыть фракционный чат\n");
	strcat(string,"/ad [текст] - Дать рекламу\n");
	strcat(string,"/me [текст] – Имитация действия в чате\n");
	strcat(string,"/gov [текст] – Канал для официальных организаций\n");
	strcat(string,"/pm [id] - Отправить личное сообщение игроку\n");
	strcat(string,"/togpm - Закрыть личные сообщение\n");
	strcat(string,"/o [текст] - Написать в общий чат\n");
	strcat(string,"/togooc - Закрыть общий чат\n");
	strcat(string,"/s [текст] - Крикнуть\n");
	strcat(string,"/c [текст] - Шептать\n");
	strcat(string,"/d [текст] – Общий канал для общения Законников и Медиков\n");
										
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Команды чата",string,"OK","");
	return 1;
}

COMMAND:animlist(playerid, params[])
{
	new s1[380],s2[340],s3[340],string[1600];
 	format(s1,sizeof(s1),"{F5DEB3}Синхронные анuмацuu:\n\
 	                        ___________________________\n\
	 					  /iznas - Изнасuловать игрока\n\
						   /hand - Пожать руку игроку\n\
						   /hug - Обняться с игроком\n\
						   /kiss[1-3] - Поцеловать игрока\n\n\
						   Обычные анuмацuu:\n\
						   ___________________________\n\
						   /piss - Справuть нужду\n\
						   /wank - Мастурбатор\n\
						   /dance [1-4] - Танцевать\n\
						   /handsup - Поднять руки\n\
						   /drunk - Пьяная походка\n\
						   /bomb - Заложuть бомбу\n\
						   /arrested - Взять под прицел");
	format(s2,sizeof(s2),"/laugh - Смеяться\n\
						   /robman - Угрожать оружием\n\
						   /crossarm - Сложuть руки\n\
						   /lay - Лежать\n\
						   /hide - Спрятать голову\n\
						   /vomit - Блевать\n\
						   /wave - Махать руками\n\
						   /slapass - Шлёпнуть по заднице\n\
						   /gro - Сесть\n\
						   /crack - Корячка\n\
						   /deal - Передать\n\
		 				   /smo - Курuть\n\
						   /fucku - Показать фак");
	format(s3,sizeof(s3),"/chat - Говорuть\n\
						   /taichi - Разминка\n\
						   /show - Указать рукой");
	format(string,sizeof(string),"%s\n%s\n%s",s1,s2,s3);
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Анuмацuu",string,"OK","");
	return 1;
}
COMMAND:iznas(playerid, params[])
{
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/iznas [id игрока]");
	if(!IsPlayerConnected(params[0]))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(params[0]))return ErrorMes(playerid,"Недоступно в транспорте.");
	if(params[0] == playerid)return ErrorMes(playerid,"Ты не можешь изнасuловать сам себя.");
    if(!DistPlayerToPlayer(2,playerid, params[0]))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(PlayerInfo[params[0]][pAdmin] || PremiumInfo[params[0]][Level] >= 2)return ApplyAnimation(playerid,"SNM","SPANKINGW",4.1,0,1,1,1,1,1);
    SendClientMessage(playerid,0x00FF00AA,"Ты изнасuловал игрока.");
    SendClientMessage(params[0],0xFF0000AA,"Тебя изнасuловали.");
    ApplyAnimation(params[0],"SNM","SPANKINGW",4.1,0,1,1,1,1,1);
    ApplyAnimation(playerid,"SNM","SPANKEDW",4.1,0,1,1,1,1,1);
	return 1;
}
COMMAND:hand(playerid, params[])
{
	new string[128],giveplayerid;
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/hand [id игрока]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if (!DistPlayerToPlayer(2.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(giveplayerid))return ErrorMes(playerid,"Недоступно в транспорте.");
	if(giveplayerid == playerid) return 1;
	format(string, sizeof(string), "* Ты предложuл(а) %s рукопожатие", PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* %s хочет пожать вам руку.", PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept hand\" , чтобы пожать руку.");
    HandOffer[giveplayerid] = playerid;
	return 1;
}
COMMAND:hug(playerid, params[])
{
	new string[128],giveplayerid;
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/hug [id игрока]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if (!DistPlayerToPlayer(2.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(giveplayerid))return ErrorMes(playerid,"Недоступно в транспорте.");
	if(giveplayerid == playerid) return 1;
	format(string, sizeof(string), "* Вы предложuлu %s семейное приветствие", PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* %s хочет вас обнять по семейному.", PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept hug\" , чтобы обняться.");
    HandOffer[giveplayerid] = playerid;
	return 1;
}
COMMAND:kiss1(playerid, params[])
{
	new string[128],giveplayerid;
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/kiss1 [id игрока]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if (!DistPlayerToPlayer(2.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(giveplayerid))return ErrorMes(playerid,"Недоступно в транспорте.");
	if(giveplayerid == playerid) return 1;
	format(string, sizeof(string), "* Вы предложuлu %s поцелуй.", PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* %s хочет вас поцеловать..", PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept kiss\" , чтобы поцеловаться.");
    KissOffer[giveplayerid] = playerid;
    KissOfferType[giveplayerid] = 1;
	return 1;
}
COMMAND:kiss2(playerid, params[])
{
	new string[128],giveplayerid;
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/kiss2 [id игрока]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if (!DistPlayerToPlayer(2.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(giveplayerid))return ErrorMes(playerid,"Недоступно в транспорте.");
	if(giveplayerid == playerid) return 1;
	format(string, sizeof(string), "* Вы предложuлu %s поцелуй.", PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* %s хочет вас поцеловать..", PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept kiss\" , чтобы поцеловаться.");
    KissOffer[giveplayerid] = playerid;
    KissOfferType[giveplayerid] = 2;
	return 1;
}
COMMAND:kiss3(playerid, params[])
{
	new string[128],giveplayerid;
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/kiss3 [id игрока]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if (!DistPlayerToPlayer(2.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(IsPlayerInAnyVehicle(playerid) || IsPlayerInAnyVehicle(giveplayerid))return ErrorMes(playerid,"Недоступно в транспорте.");
	if(giveplayerid == playerid) return 1;
	format(string, sizeof(string), "* Вы предложuлu %s поцелуй.", PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* %s хочет вас поцеловать..", PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept kiss\" , чтобы поцеловаться.");
    KissOffer[giveplayerid] = playerid;
    KissOfferType[giveplayerid] = 3;
	return 1;
}

COMMAND:piss(playerid, params[])return FP_SetPlayerSpecialAction(playerid,68);
COMMAND:noob(playerid, params[])return FP_SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DUCK);
COMMAND:handsup(playerid, params[])return FP_SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
COMMAND:dance(playerid, params[])
{
	new dance;
	if(sscanf(params,"i",dance))return ComMes(playerid,"/dance [1-4]");
	if(dance < 1 || dance > 4)return ComMes(playerid,"/dance [1-4]");
	if(dance == 1) FP_SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
	else if(dance == 2) FP_SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
	else if(dance == 3) FP_SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
	else if(dance == 4) FP_SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
	return 1;
}

COMMAND:wank(playerid, params[])
{
	FP_ApplyAnimation(playerid,"PAULNMAC","wank_loop",4.1,0,2,1,1,1);
   	FP_ApplyAnimation(playerid,"PAULNMAC","wank_out", 4.9,1,1,1,1,1);
	return 1;
}
COMMAND:drunk(playerid, params[])return FP_ApplyAnimation(playerid,"PED","WALK_DRUNK",4.0,1,1,1,1,0);
COMMAND:bomb(playerid, params[])return FP_ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);//PlaceBomb
COMMAND:arrested(playerid, params[])return FP_ApplyAnimation(playerid,"ped","ARRESTgun",4.0,0,1,1,1,0);//GunArrest
COMMAND:laugh(playerid, params[])return FP_ApplyAnimation(playerid,"RAPPING","Laugh_01",4.0,0,0,0,0,0);//Laugh
COMMAND:lookuout(playerid, params[])return FP_ApplyAnimation(playerid,"SHOP","ROB_Shifty",4.0,0,0,0,0,0);//RobLookout
COMMAND:robman(playerid, params[])return FP_ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.0,1,0,0,0,0);//Rob
COMMAND:crossarm(playerid, params[])return FP_ApplyAnimation(playerid,"COP_AMBIENT","Cogiveplayeridok_loop",4.0,0,1,1,1,0);//Armscrossed
COMMAND:lay(playerid, params[])return FP_ApplyAnimation(playerid,"BEACH","bather",4.0,1,0,0,0,0);//Laydown
COMMAND:hide(playerid, params[])return FP_ApplyAnimation(playerid,"ped","cower",3.0,1,0,0,0,0);//TakingCover
COMMAND:vomit(playerid, params[])return FP_ApplyAnimation(playerid,"FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);//VomitBAH!
COMMAND:eat(playerid, params[])return FP_ApplyAnimation(playerid,"FOOD","EAT_Burger",3.0,0,0,0,0,0);//EatBurger
COMMAND:wave(playerid, params[])return FP_ApplyAnimation(playerid,"ON_LOOKERS","wave_loop",4.0,1,0,0,0,0);//Wave
COMMAND:slapass(playerid, params[])return FP_ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.0,0,0,0,0,0);//AssSlapping
COMMAND:deal(playerid, params[])return FP_ApplyAnimation(playerid,"DEALER","DEALER_DEAL",4.0,0,0,0,0,0);//DealDrugs
COMMAND:crack(playerid, params[])return FP_ApplyAnimation(playerid,"CRACK","crckdeth2",4.0,1,0,0,0,0);//DieingofCrack
COMMAND:smo(playerid, params[])return FP_ApplyAnimation(playerid,"SMOKING","M_smklean_loop",4.0,1,0,0,0,0);//Smoke
COMMAND:gro(playerid, params[])return FP_ApplyAnimation(playerid,"BEACH","ParkSit_M_loop",4.0,1,0,0,0,0);//Sit
COMMAND:chat(playerid, params[])return FP_ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
COMMAND:fucku(playerid, params[])return FP_ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0);
COMMAND:taichi(playerid, params[])return FP_ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
COMMAND:sit(playerid, params[])return FP_ApplyAnimation(playerid,"BAR","dnk_stndF_loop",4.0,1,0,0,0,0);
COMMAND:rechange(playerid, params[])return FP_ApplyAnimation(playerid,"PYTHON","python_reload",4.0,0,1,1,1,-1);
COMMAND:sitrechange(playerid, params[])return FP_ApplyAnimation(playerid,"PYTHON","python_crouchreload",4.0,0,1,1,1,0);
COMMAND:sitshot(playerid, params[])return FP_ApplyAnimation(playerid,"PYTHON","python_crouchfire",4.0,0,1,1,1,0);
COMMAND:show(playerid, params[])return FP_ApplyAnimation(playerid,"ON_LOOKERS","POINTUP_IN",4.0,0,1,1,1,0);
COMMAND:fixingcar(playerid, params[])return FP_ApplyAnimation(playerid,"CAR","Fixn_car_loop",4.0,0,1,1,1,1);
//******************************************************************************
//===============================[Общие команды]================================
//******************************************************************************
COMMAND:quitteam(playerid, params[])
{
	
	if(!PremiumInfo[playerid][Level])return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	if(TeamInfo[playerid][tType])return ErrorMes(playerid, "Ты не можешь покинуть фракцию.");
	if(!TeamInfo[playerid][tID])return ErrorMes(playerid, "Ты не являешься членом фракции.");

	new string[64];
	format(string, sizeof(string), "* Ты покинул(а) фракцuю %s.", GetTeamName(TeamInfo[playerid][tID]));
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	
	DeletePlayerFromTeam(playerid);
	return 1;
}
stock StartExam(playerid)
{
	if(GetPVarInt(playerid,"TakingLesson"))return ErrorMes(playerid, "Ты уже сдаёшь на права.");
	switch(GetPVarInt(playerid,"TestCheck"))
	{
		case 1:
		{
			if(LicInfo[playerid][MotoLic])return ErrorMes(playerid, "У тебя уже есть лицензия на мотоцикл.");
			else if(LicInfo[playerid][TimeMotoLic])return ErrorMes(playerid, "Восстановить изъятую лицензию могут только офицеры полиции.");
			ShowPlayerDialog(playerid,D_GUNLIC_BUY,DIALOG_STYLE_MSGBOX,""FPHEAD"Мотошкола","{F5DEB3}Ты действительно хочешь начать экзамен за $5000?","Да","Нет");
		}
		case 2:
		{
			if(LicInfo[playerid][AutoLic])return ErrorMes(playerid, "У тебя уже есть лицензия на автомобиль.");
			else if(LicInfo[playerid][TimeAutoLic])return ErrorMes(playerid, "Восстановить изъятую лицензию могут только офицеры полиции.");
			
			ShowPlayerDialog(playerid,D_GUNLIC_BUY,DIALOG_STYLE_MSGBOX,""FPHEAD"Автошкола","{F5DEB3}Ты действительно хочешь начать экзамен?","Да","Нет");
		}
		case 3:
		{
			if(PlayerInfo[playerid][pLevel] < 3) return ErrorMes(playerid,"Эта лицензия доступна с 3 уровня.");
			if(LicInfo[playerid][BoatLic])return ErrorMes(playerid, "У тебя уже есть лицензия на водный транспорт.");
			else if(LicInfo[playerid][TimeBoatLic])return ErrorMes(playerid, "Восстановить изъятую лицензию могут только офицеры полиции.");
			ShowPlayerDialog(playerid,D_GUNLIC_BUY,DIALOG_STYLE_MSGBOX,""FPHEAD"Аквашкола","{F5DEB3}Ты действительно хочешь начать экзамен за $25000?","Да","Нет");
		}
		case 4:
		{
			if(PlayerInfo[playerid][pLevel] < 5) return ErrorMes(playerid,"Эта лицензия доступна с 5 уровня.");
			if(LicInfo[playerid][FlyLic])return ErrorMes(playerid, "У тебя уже есть лицензия на воздушный транспорт.");
			else if(LicInfo[playerid][TimeFlyLic])return ErrorMes(playerid, "Восстановить изъятую лицензию могут только офицеры полиции.");
			ShowPlayerDialog(playerid,D_GUNLIC_BUY,DIALOG_STYLE_MSGBOX,""FPHEAD"Авиашкола","{F5DEB3}Ты действительно хочешь начать экзамен за $50000?","Да","Нет");
			
		}
		case 5:
		{
			if(PlayerInfo[playerid][pLevel] < 5) return ErrorMes(playerid,"Эта лицензия доступна с 5 уровня.");
			if(LicInfo[playerid][GunLic])return ErrorMes(playerid, "У тебя уже есть лицензия на оружие.");
			else if(LicInfo[playerid][TimeGunLic])return ErrorMes(playerid, "Восстановить изъятую лицензию могут только офицеры полиции.");
			ShowPlayerDialog(playerid,D_GUNLIC_BUY,DIALOG_STYLE_MSGBOX,""FPHEAD"Оружейная лицензия","{F5DEB3}Ты действительно хочешь купить оружейную лицензию за $150000?","Да","Нет");
		}
		default:return 1;
	}
  	
    return 1;
}
COMMAND:fu(playerid, params[])
{
	if(!TeamInfo[playerid][tType]) return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	if(TeamInfo[playerid][tID] < LCN || TeamInfo[playerid][tID] > RIFA) return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	ShowFractionDialog(playerid);
	return 1;
}
stock ShowFractionDialog(playerid)
{
	new string[1024],gun[128];
	if(TeamInfo[playerid][tID] == YA || TeamInfo[playerid][tID] == TRIADA)format(gun,sizeof(gun),"Катана");
	else format(gun,sizeof(gun),"Бита");
	if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] >= 2) strcat(gun,", Desert Eagle");
	else if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] >= 1) strcat(gun,", Pistol");
	if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] >= 3) strcat(gun,", MP5");
	if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] >= 4) strcat(gun,", Shotgun");
	if(FractionInfo[TeamInfo[playerid][tID]][oGunLevel] == 5) strcat(gun,", AK47");
	format(string,sizeof(string),"[1]  Уровень: %d | Очки улучшений: %d\n\
								  [2]  Оружие: %d уровень (%s)\n\
								  [3]  Деньги: %d уровень (MAX: %d)\n\
								  [4]  Материалы: %d уровень (MAX: %d)\n\
								  [5]  Наркотики: %d уровень (MAX: %d)",
								  FractionInfo[TeamInfo[playerid][tID]][oLevel],FractionInfo[TeamInfo[playerid][tID]][oPoints],
								  FractionInfo[TeamInfo[playerid][tID]][oGunLevel],gun,
								  FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel],(FractionInfo[TeamInfo[playerid][tID]][oMoneyLevel]+1)*250000,
								  FractionInfo[TeamInfo[playerid][tID]][oMatsLevel],(FractionInfo[TeamInfo[playerid][tID]][oMatsLevel]+1)*20000,
								  FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel],(FractionInfo[TeamInfo[playerid][tID]][oDrugsLevel]+1)*1500);
	ShowPlayerDialog(playerid, D_FUPD , DIALOG_STYLE_LIST, ""FPHEAD"Статистика фракции", string, "Выбрать", "Выйти");
	return 1;
}

COMMAND:tie(playerid, params[])
{
	new giveplayerid,string[128];

	if(PlayerInfo[playerid][pRope] == -1) return ErrorMes(playerid, "Веревка должна быть у тебя в руках.");
	if(!TeamInfo[playerid][tID])return ErrorMes(playerid,"Ты не можешь связывать людей.");
	if(TeamInfo[playerid][tRank] < 3)return ErrorMes(playerid,"Доступно только с 3 ранга.");

	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/tie [id игрока]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(GetPVarInt(giveplayerid,"PlayerTied"))return ErrorMes(playerid,"Этот игрок уже связан.");
	if (!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не около тебя.");
	if(giveplayerid == playerid)return ErrorMes(playerid,"Ты не можешь связать себя.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || !IsPlayerInVehicle(giveplayerid, PlayerInfo[playerid][pVehID]))
		return ErrorMes(playerid,"Ты можешь связать только пассажира.");
	
	format(string, sizeof(string), "* Ты был связан игроком %s.", PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Ты связал(а) игрока %s.", PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	if(GetPVarInt(playerid,"Mask")  && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный связал Неuзвестного.");
	else if(GetPVarInt(playerid,"Mask")  && !GetPVarInt(giveplayerid,"Mask")) format(string, sizeof(string), "* Неuзвестный связал %s." ,PlayerInfo[giveplayerid][pName]);
	else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* %s связал(а) Неuзвестного.",PlayerInfo[playerid][pName]);
	else format(string, sizeof(string), "* %s связал(а) %s.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE);
	GameTextForPlayer(giveplayerid, FixText("~r~связан"), 2500, 3);
	TogglePlayerControllable(giveplayerid, 0);
	SetPVarInt(giveplayerid,"PlayerTied",1);

	if(!iData[playerid][inValue][PlayerInfo[playerid][pRope]]) DropItem(playerid, PlayerInfo[playerid][pRope]);

	return 1;
}
COMMAND:untie(playerid, params[])
{
	new giveplayerid,string[128];
	if(!TeamInfo[playerid][tID])return ErrorMes(playerid,"Ты не можешь развязывать людей.");
	if(TeamInfo[playerid][tRank] < 3)return ErrorMes(playerid,"Доступно только с 3 ранга.");
	if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/untie [id игрока]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!GetPVarInt(giveplayerid,"PlayerTied"))return ErrorMes(playerid,"Этот игрок не связан.");
	if (!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не около тебя.");
	if(giveplayerid == playerid)return ErrorMes(playerid,"Ты не можешь развязать себя.");
	format(string, sizeof(string), "* Ты был развязан игроком %s.", PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Ты развязал(а) игрока %s.", PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	if(GetPVarInt(playerid,"Mask")  && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* Неuзвестный развязал Неuзвестного.");
	else if(GetPVarInt(playerid,"Mask")  && !GetPVarInt(giveplayerid,"Mask")) format(string, sizeof(string), "* Неuзвестный развязал %s." ,PlayerInfo[giveplayerid][pName]);
	else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(giveplayerid,"Mask") ) format(string, sizeof(string), "* %s развязал(а) Неuзвестного.",PlayerInfo[playerid][pName]);
	else format(string, sizeof(string), "* %s развязал(а) %s.", PlayerInfo[playerid][pName] ,PlayerInfo[giveplayerid][pName]);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE);
	GameTextForPlayer(giveplayerid, FixText("~g~развязан"), 2500, 3);
	TogglePlayerControllable(giveplayerid, 1);
	DeletePVar(giveplayerid,"PlayerTied");

	AddItem(playerid, 67, 1);

	return 1;
}
COMMAND:bail(playerid, params[])
{
	new giveplayerid,string[128];
    if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/bail [id игрока]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!JailInfo[giveplayerid][jTime])return ErrorMes(playerid,"Этот игрок не в тюрьме.");
	if(!JailInfo[giveplayerid][jPrice])return ErrorMes(playerid,"Этого игрока нельзя выпустuть под залог.");
	if(PlayerInfo[playerid][pMoney] < JailInfo[giveplayerid][jPrice])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
	format(string, sizeof(string), " %s внес за тебя залог: $%d", PlayerInfo[playerid][pName],JailInfo[giveplayerid][jPrice]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), " Ты внес $%d в качестве залога за %s", JailInfo[giveplayerid][jPrice],PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	FP_GivePlayerMoney(playerid, -JailInfo[giveplayerid][jPrice]);
	JailInfo[giveplayerid][jPrice] = 0;
	JailInfo[giveplayerid][jTime] = 1;
	
	return 1;
}
COMMAND:block(playerid, params[])
{
	if(!IsACop(playerid)) return ErrorMes(playerid,"Недостаточно прав для использования команды.");
	new giveplayerid,string[128];
    if(sscanf(params,"u",giveplayerid))return ComMes(playerid,"/block [id игрока]");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!JailInfo[giveplayerid][jTime])return ErrorMes(playerid,"Этот игрок не в тюрьме.");
	if(!JailInfo[giveplayerid][jPrice])return ErrorMes(playerid,"Этого игрока нельзя выпустuть под залог.");
	JailInfo[giveplayerid][jPrice] = 0;
	format(string, sizeof(string), "%s запретил тебя выпускать под залог.", PlayerInfo[playerid][pName]);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "Ты запретил выпускать игрока %s под залог.", PlayerInfo[giveplayerid][pName]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	
	format(string,sizeof(string),"UPDATE `samp_jail` SET `Price`='0' WHERE `Name`='%s'",PlayerInfo[giveplayerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	return 1;
}
COMMAND:lock(playerid, params[])
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mLicType])
		{
			if(PlayerInfo[playerid][pVehID] != PlayerInfo[playerid][pVehID])
			{
				UnLockCar(-1,PlayerInfo[playerid][pVehID]);
				return RemovePlayerFromVehicle(playerid);
			}
			if(!VehInfo[PlayerInfo[playerid][pVehID]][vLock]) LockCar(playerid,PlayerInfo[playerid][pVehID]);
			else UnLockCar(playerid,PlayerInfo[playerid][pVehID]);
		}	
		return 1;
	}
	else if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
		for(new i = 1; i <= MAX_VEHICLES; i++)
		{
			if(IsValidVehicle(i) && strlen(VehInfo[i][vOwner]) && !strcmp(VehInfo[i][vOwner],PlayerInfo[playerid][pName],true))
			{
				if(DistPlayerToVehicle(5,playerid,i))
				{
					if(!VehInfo[i][vLock]) LockCar(playerid,i);
					else UnLockCar(playerid,i);
					break;
				}
			}
		}
	}	
	return 1;
}
COMMAND:kpk(playerid, params[])
{
	new string[128];
	if(GetPVarInt(playerid,"Mask") )format(string,sizeof(string),"* Неuзвестный достал свой КПК.",PlayerInfo[playerid][pName]);
	else format(string,sizeof(string),"* %s достал(а) свой КПК.",PlayerInfo[playerid][pName]);
	ProxDetector(10.0, playerid, string,COLOR_PURPLE);
	ShowDialog(playerid,D_KPK);
	return 1;
}

COMMAND:v(playerid, params[])return cmd_vehicle(playerid, params);
COMMAND:vehicle(playerid, params[]) return ShowDialog(playerid,D_VLIST);

COMMAND:cvet(playerid, params[])
{
	if(sscanf(params,"i",params[0]))return ComMes(playerid, "/cvet [цвет]");
	if(params[0] < 1 || params[0] > 100) return ErrorMes(playerid,"Доступные цвета от 1 до 100.");
	if(GetPVarInt(playerid,"Mask")) return ErrorMes(playerid,"В маскировочном костюме цвет отключен.");
	SetPlayerColor(playerid,PlayerColors[params[0]-1]);
    return 1;
}
COMMAND:find(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != DET)return ErrorMes(playerid, "Ты не детектив.");
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/find [id игрока]");

	if(GetPVarInt(playerid,"UserFind") > GetTime)
	{
		new message[64];
		format(message,sizeof(message),"Ты недавно искал человека. Попробуй через %d секунд.",GetPVarInt(playerid,"UserFind") - GetTime);
		return SendClientMessage(playerid,COLOR_WHITE,message);
	}	
	if(!IsPlayerConnected(params[0]))return ErrorMes(playerid, "Этот игрок не в сети.");
	if(PlayerInfo[params[0]][pInt])return ErrorMes(playerid, "Этот игрок находится в здании.");
	if(params[0] == playerid)return SendClientMessage(playerid,COLOR_WHITE, "Ты нашел(а) себя, какой(ая) умничка.");
	
	SetPVarInt(playerid,"UserFind",GetTime+30);

	FP_SetPlayerRaceCheckpoint(playerid,1, PlayerInfo[params[0]][pPos][0], PlayerInfo[params[0]][pPos][1], PlayerInfo[params[0]][pPos][2],0.0,0.0,0.0,5);

	return 1;
}
COMMAND:armor(playerid, params[])
{
	new giveplayerid,money,string[128];
	if(GetPVarInt(playerid,"AcceptLimit") > GetTime)
    {
        format(string,sizeof(string),"Ты недавно уже предлагал(а) игроку бронежилет, попробуй через %d секунд.",GetPVarInt(playerid,"AcceptLimit") - GetTime);
	  	return ErrorMes(playerid,string);
	}
	if(PlayerInfo[playerid][pJob] != BDG)return ErrorMes(playerid, "Ты не телохранитель.");
	if(sscanf(params,"ui",giveplayerid,money))return ComMes(playerid,"/armor [id игрока] [цена]");
	if((money < 250 || money > 1000) && (giveplayerid != playerid)) return ErrorMes(playerid, "Цена за бронежuлет должна быть в пределах от 250$ до 1000$");
	if(!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(giveplayerid == playerid)
	{
	    if(PlayerInfo[playerid][pMySelfTime])
		{
			if(PlayerInfo[playerid][pMySelfTime] < 60) format(string,sizeof(string),"Ты не можешь сейчас взять себе бронежuлет, попробуй через %d секунд!",PlayerInfo[playerid][pMySelfTime]%60);
			else format(string,sizeof(string),"Ты не можешь сейчас взять себе бронежuлет, попробуй через %d минут %d секунд!",floatround(PlayerInfo[playerid][pMySelfTime]/60),PlayerInfo[playerid][pMySelfTime]%60);	
			return ErrorMes(playerid,string);
		}
		PlayerInfo[playerid][pMySelfTime] = 600;
		return cmd_accept(playerid,"armor");
	}
	GuardOffer[giveplayerid] = playerid;
	GuardPrice[giveplayerid] = money;
	format(string, sizeof(string), "* Ты предложuл(а) бронежuлет игроку %s за $%d.", PlayerInfo[giveplayerid][pName], money);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Телохранитель %s предлагает тебе бронежuлет за $%d.", PlayerInfo[playerid][pName], money);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept armor\" , чтобы купuть его.");
	SetPVarInt(playerid,"AcceptLimit",GetTime+15);
	return 1;
}
COMMAND:sellcar(playerid, params[])
{
	new giveplayerid,money,string[128];
	if(GetPVarInt(playerid,"AcceptLimit") > GetTime)
    {
        format(string,sizeof(string),"Ты недавно уже предлагал(а) игроку страховку, попробуй через %d секунд.",GetPVarInt(playerid,"AcceptLimit") - GetTime);
	  	return ErrorMes(playerid,string);
	}
	if(PlayerInfo[playerid][pJob] != STR)return ErrorMes(playerid, "Ты не страховщик транспорта.");
	if(sscanf(params,"ui",giveplayerid,money))return ComMes(playerid,"/sellcar [id игрока] [цена]");
	if(giveplayerid == playerid)return ErrorMes(playerid, "Ты не можешь застраховать свой транспорт.");
	if(GetPVarInt(giveplayerid,"CarCalls") > 0)return ErrorMes(playerid, "У этого игрока уже есть страховка.");
	if(money < 500 || money > 10000)return ErrorMes(playerid,  "Страховка должна быть от $500 до $10.000.");
	if (!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid, "Этот игрок не в сети.");
	if(!IsPlayerInAnyVehicle(giveplayerid))return ErrorMes(playerid, "Игрок не в машине.");
	if (!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	format(string, sizeof(string), "* Ты предлагаешь %s застраховать транспорт за $%d .", PlayerInfo[giveplayerid][pName], money);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* %s хочет застраховать твой транспорт за $%d.", PlayerInfo[playerid][pName], money);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept car\" , чтобы застраховать транспорт.");
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	CarOffer[giveplayerid] = playerid;
	CarPrice[giveplayerid] = money;
	CarID[giveplayerid] = PlayerInfo[playerid][pVehID];
	SetPVarInt(playerid,"AcceptLimit",GetTime+15);
	return 1;
}

COMMAND:refill(playerid, params[])
{
	new giveplayerid,money,string[128];
	if(PlayerInfo[playerid][pJob] != MECH)return ErrorMes(playerid, "Ты не механник.");
	if(GetPVarInt(playerid,"AcceptLimit") > GetTime)
	{
	    format(string,sizeof(string),"Ты недавно уже предлогал(а) игроку заправку, попробуй через %d секунд.",GetPVarInt(playerid,"AcceptLimit") - GetTime);
	  	return ErrorMes(playerid, string);
	}
	if(sscanf(params,"ui",giveplayerid,money))return ComMes(playerid,  "/refill [id игрока] [цена]");
	if(money < 250 || money > 10000)return ErrorMes(playerid,  "Цена может быть от $1 до $10.000.");
	if (!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid, "Этот игрок не в сети.");
	if(!IsPlayerInAnyVehicle(giveplayerid))return ErrorMes(playerid, "Игрок не в машине.");
	if (!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(giveplayerid == playerid)
	{
		if(PlayerInfo[playerid][pMySelfTime])
		{
			if(PlayerInfo[playerid][pMySelfTime] < 60) format(string,sizeof(string),"Ты не можешь сейчас заправuть себе авто, попробуй через %d секунд!",PlayerInfo[playerid][pMySelfTime]%60);
			else format(string,sizeof(string),"Ты не можешь сейчас заправuть себе авто, попробуй через %d минут %d секунд!",floatround(PlayerInfo[playerid][pMySelfTime]/60),PlayerInfo[playerid][pMySelfTime]%60);
			return ErrorMes(playerid, string);
		}
		PlayerInfo[playerid][pMySelfTime] = 600;
		return cmd_accept(playerid,"refill");
	}
	RefillOffer[giveplayerid] = playerid;
	RefillPrice[giveplayerid] = money;
	format(string, sizeof(string), "* Ты предложuл(а) %s заправuть транспорт за $%d .",PlayerInfo[giveplayerid][pName],money);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), " Механик %s предложuл(а) заправuть твой транспорт за $%d.",PlayerInfo[playerid][pName],money);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept refill\" , чтобы заправuться.");
	SetPVarInt(playerid,"AcceptLimit",GetTime+15);
	return 1;
}
//------------------------------------------------------------------------------
COMMAND:repair(playerid, params[])
{
	new giveplayerid,money,string[128];
	if(PlayerInfo[playerid][pJob] != MECH)return ErrorMes(playerid, "Ты не механник.");
	if(GetPVarInt(playerid,"AcceptLimit") > GetTime)
	{
	    format(string,sizeof(string),"Ты недавно уже предлагал(а) игроку заправку, попробуй через %d секунд.",GetPVarInt(playerid,"AcceptLimit") - GetTime);
	  	return ErrorMes(playerid, string);
	}
	if(sscanf(params,"ui",giveplayerid,money))return ComMes(playerid,  "/repair [id игрока] [цена]");
	if(money < 250 || money > 10000)return ErrorMes(playerid, "Цена может быть от $250 до $10.000.");
	if (!IsPlayerConnected(giveplayerid)) return ErrorMes(playerid, "Этот игрок не в сети.");
	if(!IsPlayerInAnyVehicle(giveplayerid))return ErrorMes(playerid, "Игрок не в машине.");
	if (!DistPlayerToPlayer(8.0, playerid, giveplayerid))return ErrorMes(playerid,"Игрок не возле тебя.");
	if(giveplayerid == playerid)
	{
	    if(PlayerInfo[playerid][pMySelfTime] > 0)
		{
			if(PlayerInfo[playerid][pMySelfTime] < 60)format(string,sizeof(string),"Ты не можешь сейчас починuть себе авто, попробуй через %d секунд!",PlayerInfo[playerid][pMySelfTime]%60);
			else format(string,sizeof(string),"Ты не можешь сейчас починuть себе авто, попробуй через %d минут %d секунд!",floatround(PlayerInfo[playerid][pMySelfTime]/60),PlayerInfo[playerid][pMySelfTime]%60);
			return ErrorMes(playerid, string);
		}
		PlayerInfo[playerid][pMySelfTime] = 600;
		return cmd_accept(playerid,"repair");
	}
	RepairOffer[giveplayerid] = playerid;
	RepairPrice[giveplayerid] = money;
	format(string, sizeof(string), " Вы хотите починuть транспорт %s за $%d .",PlayerInfo[giveplayerid][pName],money);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), " Механик %s хочет починuть вашу тачку за $%d.",PlayerInfo[playerid][pName],money);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Используй \"/accept repair\" , чтобы починuть транспорт.");
	SetPVarInt(playerid,"AcceptLimit",GetTime+15);
	return 1;
}
COMMAND:job(playerid,params[])
{
    new x_job[16],string[96];
    if(sscanf(params,"s[16]",x_job)) return 1;
    else if(!strcmp(x_job,"trucker",true))
	{
		if(VehInfo[PlayerInfo[playerid][pVehID]][vType] != VT_JOB || VehInfo[PlayerInfo[playerid][pVehID]][vValue] != TRUCK || GetPlayerState(playerid) != PLAYER_STATE_DRIVER)return JobMes(playerid,"Ты не за рулем тягача.");
		if(GetPVarInt(playerid,"StartJob")) return JobMes(playerid, "Ты уже взял груз, отвези его сначала.");
		if(!IsTrailerAttachedToVehicle(PlayerInfo[playerid][pVehID]))return JobMes(playerid,"Для начала миссuu тебе нужно прицепuть трейлер.");
		if(PlayerInfo[playerid][pJobTime])
		{
		 	if(PlayerInfo[playerid][pJobTime] < 60) format(string,sizeof(string),"Ты недавно доставлял груз, новый заказ через %d секунд!",PlayerInfo[playerid][pJobTime]%60);
			else format(string,sizeof(string),"Ты недавно доставлял груз, новый заказ через %d минут %d секунд!",floatround(PlayerInfo[playerid][pJobTime]/60),PlayerInfo[playerid][pJobTime]%60);
			return JobMes(playerid, string);
		}
		SetPVarInt(playerid,"Trailer",GetVehicleTrailer(PlayerInfo[playerid][pVehID]));
		if (GetVehicleModel(GetPVarInt(playerid,"Trailer")) == 584)
		{
		    new rand = random(sizeof(Zapravki));
			SetPVarFloat(playerid,"JobX",Zapravki[rand][0]);
			SetPVarFloat(playerid,"JobY",Zapravki[rand][1]);
			SetPVarFloat(playerid,"JobZ",Zapravki[rand][2]);
		}
		if (GetVehicleModel(GetPVarInt(playerid,"Trailer")) == 435 || GetVehicleModel(GetPVarInt(playerid,"Trailer")) == 591)
		{
			new rand = random(sizeof(Skladi));
			SetPVarFloat(playerid,"JobX",Skladi[rand][0]);
			SetPVarFloat(playerid,"JobY",Skladi[rand][1]);
			SetPVarFloat(playerid,"JobZ",Skladi[rand][2]);
		}
		FP_DisablePlayerRaceCheckpoint(playerid);
		FP_SetPlayerRaceCheckpoint(playerid,1, GetPVarFloat(playerid,"JobX"),GetPVarFloat(playerid,"JobY"),GetPVarFloat(playerid,"JobZ")-1,0.0,0.0,0.0,8.0);
		SetPVarInt(playerid,"StartJob",TRUCK);
		
		PlayerTextDrawHide(playerid, Helper[playerid]);
		SendClientMessage(playerid,COLOR_YELLOW2,"Едь на красную метку.");
		return 1;
	}
	else if(!strcmp(x_job,"jack",true))
	{
		if(PlayerInfo[playerid][pJob] != JACK)return ErrorMes(playerid,"Ты не автоугонщик.");
		if(GetPVarInt(playerid,"StartJob"))return ErrorMes(playerid,"Ты уже выполняешь заказ.");
		if(PlayerInfo[playerid][pJobTime])
		{
			if(PlayerInfo[playerid][pJobTime] < 60) format(string,sizeof(string),"Ты недавно выполнял(а) заказ, попробуй через %d секунд!",PlayerInfo[playerid][pJobTime]%60);
		 	format(string,sizeof(string),"Ты недавно выполнял(а) заказ, попробуй через %d минут %d секунд!",floatround(PlayerInfo[playerid][pJobTime]/60),PlayerInfo[playerid][pJobTime]%60);
			return JobMes(playerid, string);
		}
		new rand = random(sizeof(JackPos));
		SetPVarFloat(playerid,"JobX",JackPos[rand][0]);
		SetPVarFloat(playerid,"JobY",JackPos[rand][1]);
		SetPVarFloat(playerid,"JobZ",JackPos[rand][2]);
		FP_DisablePlayerRaceCheckpoint(playerid);
		FP_SetPlayerRaceCheckpoint(playerid,1, GetPVarFloat(playerid,"JobX"),GetPVarFloat(playerid,"JobY"),GetPVarFloat(playerid,"JobZ")-1,0.0,0.0,0.0,8.0);
		SetPVarInt(playerid,"StartJob",JACK);
		SendClientMessage(playerid,COLOR_YELLOW2,"Едь на красную метку.");
		return 1;
	}
	else if(!strcmp(x_job,"mech",true))
	{
		if(PlayerInfo[playerid][pJob] != MECH)return ErrorMes(playerid,"Ты не механик.");
		if(GetPVarInt(playerid,"Mech"))
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Твоё дежурство окончено. Теперь ты больше не принимаешь зaказы.");
		    DeletePVar(playerid,"Mech");
		    Mechanics -= 1;
		    MechanicAccepted[playerid] = -1;
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ты закончuл(а) дежурство.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ты заступил(а) на дежурство. Принимай заказы на ремонт.");
		    SetPVarInt(playerid,"Mech",1);
		    Mechanics += 1;
		    format(string, sizeof(string), "[Новости] Механик %s заступил на дежурство. (/call 555)",PlayerInfo[playerid][pName]);
		    SendClientMessageToAll(COLOR_LIGHTBLUE, string);
		}
	}
	else if(!strcmp(x_job,"taxi",true))
	{
		if(TeamInfo[playerid][tID] != TAXI)return ErrorMes(playerid,"Ты не водитель такси.");
		if(GetPVarInt(playerid,"taxi") != 0)
		{
		    TaxiDrivers -= 1;
		    DeletePVar(playerid,"taxi");
   			format(string, sizeof(string), "* Ты закончuл(а) дежурство и заработал(а) $%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			FP_GivePlayerMoney(playerid, TransportMoney[playerid]);
			TransportValue[playerid] = 0;
			TransportMoney[playerid] = 0;
			TaxiCallTime[playerid] = 0;
			TaxiAccepted[playerid] = -1;
			Delete3DTextLabel(duty3dtext[playerid]);
			return 1;
		}
		else
		{
			if(VehInfo[PlayerInfo[playerid][pVehID]][vType] == VT_FRACTION && VehInfo[PlayerInfo[playerid][pVehID]][vValue] == TAXI)
			{
			    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)return ErrorMes(playerid,"Ты должен быть в транспорте.");
			    ShowPlayerDialog(playerid,D_TAXI,DIALOG_STYLE_INPUT,""FPHEAD"Цена за проезд","Введите тариф на дежурство:","Выбрать","Отмена");
			}
		}
		return 1;
 	}
 	else if(strcmp(x_job,"medic",true) == 0)
	{
 		if(TeamInfo[playerid][tID] != MEDIC)return ErrorMes(playerid,"Ты не медик.");
		if(GetPVarInt(playerid,"medic") == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ты закончuл(а) дежурство.");
			DeletePVar(playerid,"medic");
			Medics -= 1;
			MedicAccepted[playerid] = -1;
		}
		else
		{
			format(string, sizeof(string), "[Новости] Медик %s заступил на дежурство. (/call 03)",PlayerInfo[playerid][pName]);
			SendClientMessageToAll(0xFF8282AA, string);
			SetPVarInt(playerid,"medic",1);
			Medics += 1;
		}
	}
	return 1;
}
COMMAND:callcar(playerid,params[])
{
	if(!GetPVarInt(playerid,"CarCalls"))return ErrorMes(playerid, "Ты больше не можешь вызывать эвакуатор.");
	FP_SetVehiclePos(CarID[playerid],PlayerInfo[playerid][pPos][0], PlayerInfo[playerid][pPos][1], PlayerInfo[playerid][pPos][2]);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Купленное авто прибыло.");
	SetPVarInt(playerid,"CarCalls",GetPVarInt(playerid,"CarCalls")-1);
	
	new message[64];
	format(message,sizeof(message),"* Ты можешь использовать эвакутор еще %d раз.", GetPVarInt(playerid,"CarCalls"));
	return SendClientMessage(playerid, COLOR_LIGHTBLUE,message);
}
COMMAND:heal(playerid, params[])
{
	new location = PlayerInfo[playerid][pWorld],giveplayerid,string[128],money;
	if(sscanf(params,"ui",giveplayerid,money))
	{
	   	if(IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[location][hExitX], HouseInfo[location][hExitY],HouseInfo[location][hExitZ]))
		{
			if(HouseInfo[location][hArm] && IsACop(playerid))
			{
                if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string), "* Неuзвестный надел на себя бронежuлет.");
				else format(string, sizeof(string), "* %s надел на себя бронежuлет.", PlayerInfo[playerid][pName]);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE);
				AddItem(playerid, 19, 1, 100);
			}
			if(HouseInfo[location][hHel])
			{
				if (PlayerInfo[playerid][pHealth] < 100.0)
				{
					FP_SetPlayerHealth(playerid,100.0);
					PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
					SendClientMessage(playerid,COLOR_WHITE, "Ты использовал(а) аптечку.");
				}
				else return ErrorMes(playerid,"Ты полностью здоров.");
			}
			return 1;
		}
		else return ComMes(playerid,"/heal [id игрока] [цена]");
	}
	if(TeamInfo[playerid][tID] != MEDIC)return ErrorMes(playerid, "Ты не медик.");
	if (!IsPlayerConnected(giveplayerid))return ErrorMes(playerid,"Этот игрок не в сети.");
	if(money < 0 || money > 1000) return ErrorMes(playerid, "Цена за лечение должна быть в пределах от 0$ до 1000$");
	if(!DistPlayerToPlayer(8.0, playerid, giveplayerid)) return ErrorMes(playerid, "Игрок не возле тебя.");
	if(giveplayerid == playerid)
	{
	    if(PlayerInfo[playerid][pMySelfTime])
		{
			if(PlayerInfo[playerid][pMySelfTime] < 60) format(string,sizeof(string),"Ты не можешь сейчас вылечuть себя, попробуй через %d секунд!",PlayerInfo[playerid][pJobTime]%60);
	 		else format(string,sizeof(string),"Ты не можешь сейчас вылечuть себя, попробуй через %d минут %d секунд!",floatround(PlayerInfo[playerid][pJobTime]/60),PlayerInfo[playerid][pJobTime]%60);
			return ErrorMes(playerid,string);
		}
		PlayerInfo[playerid][pMySelfTime] = 600;
		return cmd_accept(playerid,"heal");
	}
	if(!PlayerInfo[giveplayerid][pLevel])
	{
		format(string, sizeof(string), "* Ты вылечuл(а) игрока %s.", PlayerInfo[giveplayerid][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Медик %s вылечил(а) тебя.", PlayerInfo[playerid][pName]);
		SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		FP_SetPlayerHealth(giveplayerid,100);
		return 1;
	}
	HealOffer[giveplayerid] = playerid;
	HealPrice[giveplayerid] = money;
	format(string, sizeof(string), "* Ты предложuл(а) лечение игроку %s за $%d.", PlayerInfo[giveplayerid][pName], money);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	format(string, sizeof(string), "* Медик %s предлагает тебе лечение за $%d, (введи /accept heal) если согласен.", PlayerInfo[playerid][pName], money);
	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	return 1;
}

COMMAND:id(playerid, params[])
{
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/id [ник игрока]");
	if(!IsPlayerConnected(params[0]))return ErrorMes(playerid,"Этот игрок не в сети.");
	
	new message[64];
	format(message,sizeof(message),"(( ID: %d | Ник: %s ))",params[0],PlayerInfo[params[0]][pName]);
	return SendClientMessage(playerid, COLOR_YELLOW2, message);
}

COMMAND:ip(playerid, params[])
{
    if(!PlayerInfo[playerid][pAdmin]) return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(sscanf(params,"u",params[0]))return ComMes(playerid,"/ip [id игрока]");
	if(!IsPlayerConnected(params[0]))return ErrorMes(playerid,"Этот игрок не в сети.");
	
	new string[70];
	format(string, sizeof(string), "(( ID: %d | Ник: %s | IP: %s ))",params[0],PlayerInfo[params[0]][pName],PlayerInfo[params[0]][pLastIP]);
	return SendClientMessage(playerid, COLOR_YELLOW2, string);
}
COMMAND:gevDrugs(playerid, params[])
{
    new ammount,string[128];
    if(PlayerInfo[playerid][pJob] != DRUGER) return ErrorMes(playerid,"Ты не продавец наркотиков.");
    if(!IsPlayerInRangeOfPoint(playerid,3.0,331.5209,1120.7213,1083.8903))return ErrorMes(playerid,"Ты не в притоне.");

	if(PlayerInfo[playerid][pDrugs] != -1 && iData[playerid][inValue][PlayerInfo[playerid][pDrugs]] > 3)
	{
		format(string, sizeof(string), "У тебя уже есть %d грамм наркотиков.", iData[playerid][inValue][PlayerInfo[playerid][pDrugs]]);
		return ErrorMes(playerid, string);
	}
	if(sscanf(params,"i",ammount))return ShowDrugsGetDialog(playerid);
	if(ammount < 1 || ammount > 100) 
	{ 
		ErrorMes(playerid, "Ты можешь закупать от 1 до 100 грамм за раз."); 
		return ShowDrugsGetDialog(playerid);
	}
	new price = ammount * 50;
	if(PlayerInfo[playerid][pMoney] < price) return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
	format(string, sizeof(string), "* Ты купuл(а) %d грамм наркотиков за $%d.", ammount, price);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	FP_GivePlayerMoney(playerid, -price);

	AddItem(playerid, 47, ammount);
	
    return 1;
}
COMMAND:portable(playerid, params[])
{
    if(TeamInfo[playerid][tID] != HA)return ErrorMes(playerid, "Tы не хитман.");
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ты загрузuл(а) в свой КПК информацию с сервера агентства.");
	ShowHitDialog(playerid);
	return 1;
}
COMMAND:contract(playerid, params[])
{
	new giveplayerid,moneys,string[128];
	if(sscanf(params,"ui",giveplayerid,moneys))return ComMes(playerid, "/contract [id игрока] [сумма]");
	if(moneys < 1000 || moneys > 1000000) return ErrorMes(playerid, "Стоимость контракта не может быть меньше чем $1.000 u больше чем $1.000.000.");
	if(PlayerInfo[playerid][pLevel] == 0)return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if (!IsPlayerConnected(giveplayerid))return ErrorMes(playerid, "Этот игрок не в сети.");
	//if(TeamInfo[giveplayerid][tID] == HA)return ErrorMes(playerid, "Нельзя заказать хитмана.");
	if(TeamInfo[playerid][tID] == HA)return ErrorMes(playerid, "Ты не можешь заключuть контракт.");
	if(IsACop(giveplayerid) && moneys < 250000)return ErrorMes(playerid, "Контракт на полuцейского стоит от $250.000 .");
	if(giveplayerid == playerid) return ErrorMes(playerid, "Ты не можешь заказать себя.");
	if(PlayerInfo[playerid][pMoney] < moneys) return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
	FP_GivePlayerMoney(playerid, - moneys);
	PlayerInfo[giveplayerid][pHeadValue] += moneys;
	format(string, sizeof(string), "%s заказал(а) игрока %s.Вознаграждение $%d.",PlayerInfo[playerid][pName], PlayerInfo[giveplayerid][pName], moneys);
	SendRadioMessage(HA, COLOR_YELLOW, string);
	format(string, sizeof(string), "* Ты заключuл(а) контракт на %s за $%d.",PlayerInfo[giveplayerid][pName], moneys);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}
COMMAND:materials(playerid, params[])
{
	new x_nr[32],ammount,string[128];
	if (PlayerInfo[playerid][pJob] != GUNNER)return ErrorMes(playerid,"Ты не продавец оружия.");
	sscanf(params,"s[16]i",x_nr,ammount);
	if(isnull(x_nr))
	{
		ComMes(playerid, "/materials [действие]");
		SendClientMessage(playerid, COLOR_WHITE, "{008000}[ДОСТУПНО]{FFFFFF} Get, Deliver.");
		return 1;
	}
	if(strcmp(x_nr,"get",true) == 0)
	{
		if(!IsPlayerInRangeOfPoint(playerid,3.0,2719.1379,-2517.8215,17.3672))return ErrorMes(playerid,"Ты не на месте получения матерuалов.");
		if(MatsHolding[playerid] >= 10)return ErrorMes(playerid, "Ты не можешь взять больше.");
		if(sscanf(params,"s[16]i",x_nr,ammount))return ShowMatsGetDialog(playerid);
		if(ammount < 1 || ammount > 30) 
		{ 
			ErrorMes(playerid, "Ты можешь закупать от 1 до 30 пакетов за раз.");
			return ShowMatsGetDialog(playerid);
		}
		new price = ammount * 50;
		if(PlayerInfo[playerid][pMoney] < price)return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
		format(string, sizeof(string), "* Ты купuл(а) %d пакетов за $%d.", ammount, price);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		FP_GivePlayerMoney(playerid, - price);
		MatsHolding[playerid] = ammount;
	}
	else if(strcmp(x_nr,"deliver",true) == 0)
	{
		if(!IsPlayerInRangeOfPoint(playerid,3.0,-535.8046,-506.2124,25.5234))return ErrorMes(playerid,"Ты не на месте сдачи матерuалов.");
		if(MatsHolding[playerid] == 0)return ErrorMes(playerid,"У тебя нет матерuалов.");
		new payout = 50*MatsHolding[playerid];
		format(string, sizeof(string), "* На фабрике изготовuлu %d матерuалов за твои %d пакетов.", payout, MatsHolding[playerid]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

		AddItem(playerid, 21, payout);

		MatsHolding[playerid] = 0;

	}
	return 1;
}
SkinShopShow(playerid)
{
	if(GetPVarInt(playerid, "TypeTextDraw") == 5) return 1;
	//if(PlayerInfo[playerid][pMoney] < 5000) return ErrorMes(playerid,"Для смены одежды необходисо $5000.");
    if(!IsAtClothShop(playerid)) return ErrorMes(playerid,"Ты не в магазuне одежды.");
    if(TeamInfo[playerid][tID]) return ErrorMes(playerid, "Ты не можешь сменить одежду.");

	pShopTXD[playerid][0] = CreatePlayerTextDraw(playerid, 65.000000, 195.000000, "1");
	PlayerTextDrawAlignment(playerid, pShopTXD[playerid][0], 2);
	PlayerTextDrawBackgroundColor(playerid, pShopTXD[playerid][0], 0);
	PlayerTextDrawFont(playerid, pShopTXD[playerid][0], 5);
	PlayerTextDrawLetterSize(playerid, pShopTXD[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawColor(playerid, pShopTXD[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, pShopTXD[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, pShopTXD[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, pShopTXD[playerid][0], 1);
	PlayerTextDrawUseBox(playerid, pShopTXD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, pShopTXD[playerid][0], 0);
	PlayerTextDrawTextSize(playerid, pShopTXD[playerid][0], 85.000000, 105.000000);
	PlayerTextDrawSetSelectable(playerid, pShopTXD[playerid][0], 0);
	PlayerTextDrawSetPreviewRot(playerid, pShopTXD[playerid][0], 0.0, 0.0, 30.0);

	pShopTXD[playerid][1] = CreatePlayerTextDraw(playerid, 150.000000, 220.000000, "2");
	PlayerTextDrawAlignment(playerid, pShopTXD[playerid][1], 2);
	PlayerTextDrawBackgroundColor(playerid, pShopTXD[playerid][1], 0);
	PlayerTextDrawFont(playerid, pShopTXD[playerid][1], 5);
	PlayerTextDrawLetterSize(playerid, pShopTXD[playerid][1], 0.000000, 0.000000);
	PlayerTextDrawColor(playerid, pShopTXD[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, pShopTXD[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, pShopTXD[playerid][1], 0);
	PlayerTextDrawSetShadow(playerid, pShopTXD[playerid][1], 1);
	PlayerTextDrawUseBox(playerid, pShopTXD[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, pShopTXD[playerid][1], 0);
	PlayerTextDrawTextSize(playerid, pShopTXD[playerid][1], 100.000000, 125.000000);
	PlayerTextDrawSetSelectable(playerid, pShopTXD[playerid][1], 0);
	PlayerTextDrawSetPreviewRot(playerid, pShopTXD[playerid][1], 0.0, 0.0, 15.0);

	pShopTXD[playerid][2] = CreatePlayerTextDraw(playerid, 240.000000, 195.000000, "3");
	PlayerTextDrawAlignment(playerid, pShopTXD[playerid][2], 2);
	PlayerTextDrawBackgroundColor(playerid, pShopTXD[playerid][2], 0);
	PlayerTextDrawFont(playerid, pShopTXD[playerid][2], 5);
	PlayerTextDrawLetterSize(playerid, pShopTXD[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawColor(playerid, pShopTXD[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, pShopTXD[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, pShopTXD[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, pShopTXD[playerid][2], 1);
	PlayerTextDrawUseBox(playerid, pShopTXD[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, pShopTXD[playerid][2], 0);
	PlayerTextDrawTextSize(playerid, pShopTXD[playerid][2], 160.000000, 180.000000);
	PlayerTextDrawSetSelectable(playerid, pShopTXD[playerid][2], 0);
	PlayerTextDrawSetPreviewRot(playerid, pShopTXD[playerid][2], 0.0, 0.0, 0.0);

	pShopTXD[playerid][3] = CreatePlayerTextDraw(playerid, 390.000000, 220.000000, "4");
	PlayerTextDrawAlignment(playerid, pShopTXD[playerid][3], 2);
	PlayerTextDrawBackgroundColor(playerid, pShopTXD[playerid][3], 0);
	PlayerTextDrawFont(playerid, pShopTXD[playerid][3], 5);
	PlayerTextDrawLetterSize(playerid, pShopTXD[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawColor(playerid, pShopTXD[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, pShopTXD[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, pShopTXD[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, pShopTXD[playerid][3], 1);
	PlayerTextDrawUseBox(playerid, pShopTXD[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, pShopTXD[playerid][3], 0);
	PlayerTextDrawTextSize(playerid, pShopTXD[playerid][3], 100.000000, 125.000000);
	PlayerTextDrawSetSelectable(playerid, pShopTXD[playerid][3], 0);
	PlayerTextDrawSetPreviewRot(playerid, pShopTXD[playerid][3], 0.0, 0.0, 345.0);

	pShopTXD[playerid][4] = CreatePlayerTextDraw(playerid, 490.000000, 195.000000, "5");
	PlayerTextDrawAlignment(playerid, pShopTXD[playerid][4], 2);
	PlayerTextDrawBackgroundColor(playerid, pShopTXD[playerid][4], 0);
	PlayerTextDrawFont(playerid, pShopTXD[playerid][4], 5);
	PlayerTextDrawLetterSize(playerid, pShopTXD[playerid][4], 0.000000, 0.000000);
	PlayerTextDrawColor(playerid, pShopTXD[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, pShopTXD[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, pShopTXD[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, pShopTXD[playerid][4], 1);
	PlayerTextDrawUseBox(playerid, pShopTXD[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid, pShopTXD[playerid][4], 0);
	PlayerTextDrawTextSize(playerid, pShopTXD[playerid][4], 85.000000, 105.000000);
	PlayerTextDrawSetSelectable(playerid, pShopTXD[playerid][4], 0);
	PlayerTextDrawSetPreviewRot(playerid, pShopTXD[playerid][4], 0.0, 0.0, 330.0);

	pShopTXD[playerid][5] = CreatePlayerTextDraw(playerid, 320.000000, 375.000000, "~p~SKIN: 0");
	PlayerTextDrawAlignment(playerid, pShopTXD[playerid][5], 2);
	PlayerTextDrawBackgroundColor(playerid, pShopTXD[playerid][5], 255);
	PlayerTextDrawFont(playerid, pShopTXD[playerid][5], 2);
	PlayerTextDrawLetterSize(playerid, pShopTXD[playerid][5], 0.300000, 1.299999);
	PlayerTextDrawColor(playerid, pShopTXD[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid, pShopTXD[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, pShopTXD[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, pShopTXD[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, pShopTXD[playerid][5], 0);

	pShopTXD[playerid][6] = CreatePlayerTextDraw(playerid, 320.000000, 390.000000, "~g~$0");
	PlayerTextDrawAlignment(playerid, pShopTXD[playerid][6], 2);
	PlayerTextDrawBackgroundColor(playerid, pShopTXD[playerid][6], 255);
	PlayerTextDrawFont(playerid, pShopTXD[playerid][6], 0);
	PlayerTextDrawLetterSize(playerid, pShopTXD[playerid][6], 0.549999, 1.799999);
	PlayerTextDrawColor(playerid, pShopTXD[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid, pShopTXD[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid, pShopTXD[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, pShopTXD[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, pShopTXD[playerid][6], 0);

	SkinShopUpdate(playerid);
	
	for(new i = 0; i < 7; i++) PlayerTextDrawShow(playerid, pShopTXD[playerid][i]);
	for(new i = 0; i < 9; i++) TextDrawShowForPlayer(playerid, ShopTXD[i]);
	SelectTextDraw(playerid, 0xFFFFFF50);
	SetPlayerCameraPos(playerid, 2099.0, 1335.5,15.0);
	SetPlayerCameraLookAt(playerid, 2099.0, 1335.5, 0.0);
	SetPVarInt(playerid, "TypeTextDraw", 5);

	return 1;
}

SkinShopHide(playerid, bool:cancel = true)
{
	for(new i = 0; i < 7; i++)
	{
		if(pShopTXD[playerid][i] != PlayerText:INVALID_TEXT_DRAW)
			PlayerTextDrawDestroy(playerid, pShopTXD[playerid][i]); 
	}
	for(new i = 0; i < 9; i++) TextDrawHideForPlayer(playerid, ShopTXD[i]);
	DeletePVar(playerid, "SkinShop_Count");
	DeletePVar(playerid, "SkinShop_Cost");
	
	DeletePVar(playerid, "TypeTextDraw");
	if(cancel == true) 
	{
		DeletePVar(playerid, "SkinShop_ID");
		CancelSelectTextDraw(playerid);
		SetCameraBehindPlayer(playerid);
	}	
}

SkinShopUpdate(playerid)
{

	if(PlayerInfo[playerid][pSex] == 2) // Женские скины
	{
		SetPVarInt(playerid, "SkinShop_ID", Female[GetPVarInt(playerid, "SkinShop_Count")][0]);
		SetPVarInt(playerid, "SkinShop_Cost", Female[GetPVarInt(playerid, "SkinShop_Count")][1]);
		switch(GetPVarInt(playerid, "SkinShop_Count"))
		{
			case 0:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Female[MAX_FEMALE_SKIN - 2][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Female[MAX_FEMALE_SKIN - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Female[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Female[GetPVarInt(playerid, "SkinShop_Count") + 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Female[GetPVarInt(playerid, "SkinShop_Count") + 2][0]);
			}
			case 1:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Female[9][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Female[GetPVarInt(playerid, "SkinShop_Count") - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Female[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Female[GetPVarInt(playerid, "SkinShop_Count") + 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Female[GetPVarInt(playerid, "SkinShop_Count") + 2][0]);
			}
			case MAX_FEMALE_SKIN - 2:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Female[GetPVarInt(playerid, "SkinShop_Count") - 2][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Female[GetPVarInt(playerid, "SkinShop_Count") - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Female[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Female[GetPVarInt(playerid, "SkinShop_Count") + 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Female[0][0]);
			}
			case MAX_FEMALE_SKIN - 1:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Female[GetPVarInt(playerid, "SkinShop_Count") - 2][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Female[GetPVarInt(playerid, "SkinShop_Count") - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Female[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Female[0][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Female[1][0]);
			}
			default:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Female[GetPVarInt(playerid, "SkinShop_Count") - 2][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Female[GetPVarInt(playerid, "SkinShop_Count") - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Female[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Female[GetPVarInt(playerid, "SkinShop_Count") + 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Female[GetPVarInt(playerid, "SkinShop_Count") + 2][0]);
			}
		}
	}
	else
	{
		SetPVarInt(playerid, "SkinShop_ID", Male[GetPVarInt(playerid, "SkinShop_Count")][0]);
		SetPVarInt(playerid, "SkinShop_Cost", Male[GetPVarInt(playerid, "SkinShop_Count")][1]);
		switch(GetPVarInt(playerid, "SkinShop_Count"))
		{
			case 0:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Male[MAX_MALE_SKIN - 2][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Male[MAX_MALE_SKIN - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Male[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Male[GetPVarInt(playerid, "SkinShop_Count") + 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Male[GetPVarInt(playerid, "SkinShop_Count") + 2][0]);
			}
			case 1:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Male[9][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Male[GetPVarInt(playerid, "SkinShop_Count") - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Male[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Male[GetPVarInt(playerid, "SkinShop_Count") + 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Male[GetPVarInt(playerid, "SkinShop_Count") + 2][0]);
			}
			case MAX_MALE_SKIN - 2:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Male[GetPVarInt(playerid, "SkinShop_Count") - 2][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Male[GetPVarInt(playerid, "SkinShop_Count") - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Male[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Male[GetPVarInt(playerid, "SkinShop_Count") + 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Male[0][0]);
			}
			case MAX_MALE_SKIN - 1:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Male[GetPVarInt(playerid, "SkinShop_Count") - 2][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Male[GetPVarInt(playerid, "SkinShop_Count") - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Male[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Male[0][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Male[1][0]);
			}
			default:
			{
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][0], Male[GetPVarInt(playerid, "SkinShop_Count") - 2][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][1], Male[GetPVarInt(playerid, "SkinShop_Count") - 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][2], Male[GetPVarInt(playerid, "SkinShop_Count")][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][3], Male[GetPVarInt(playerid, "SkinShop_Count") + 1][0]);
				PlayerTextDrawSetPreviewModel(playerid, pShopTXD[playerid][4], Male[GetPVarInt(playerid, "SkinShop_Count") + 2][0]);
			}
		}	
	}
	new string[14];
	format(string, sizeof(string), "~p~SKIN: %d", GetPVarInt(playerid, "SkinShop_ID") );
	PlayerTextDrawSetString(playerid, pShopTXD[playerid][5], string);
	format(string, sizeof(string), "~g~$%d", GetPVarInt(playerid, "SkinShop_Cost") );
	PlayerTextDrawSetString(playerid, pShopTXD[playerid][6], string);
	for(new i = 0; i < 7; i++) PlayerTextDrawShow(playerid, pShopTXD[playerid][i]);
}

ClothesShow(playerid) // Выбор одежды
{
	if(GetPVarInt(playerid, "TypeTextDraw") == 6) return 1;
	pClothesTXD[playerid][0] = CreatePlayerTextDraw(playerid, 75.000000, 200.000000, "1");
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][0], -256);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][0], 5);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][0], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][0], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][0], 1);
	PlayerTextDrawUseBox(playerid, pClothesTXD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, pClothesTXD[playerid][0], 255);
	PlayerTextDrawTextSize(playerid, pClothesTXD[playerid][0], 100.000000, 150.000000);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][0], 1);

	pClothesTXD[playerid][1] = CreatePlayerTextDraw(playerid, 175.000000, 200.000000, "2");
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][1], -256);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][1], 5);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][1], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][1], 1);
	PlayerTextDrawUseBox(playerid, pClothesTXD[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, pClothesTXD[playerid][1], 255);
	PlayerTextDrawTextSize(playerid, pClothesTXD[playerid][1], 100.000000, 150.000000);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][1], 1);

	pClothesTXD[playerid][2] = CreatePlayerTextDraw(playerid, 275.000000, 200.000000, "3");
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][2], -256);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][2], 5);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][2], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][2], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][2], 1);
	PlayerTextDrawUseBox(playerid, pClothesTXD[playerid][2], 1);
	PlayerTextDrawBoxColor(playerid, pClothesTXD[playerid][2], 255);
	PlayerTextDrawTextSize(playerid, pClothesTXD[playerid][2], 100.000000, 150.000000);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][2], 1);

	pClothesTXD[playerid][3] = CreatePlayerTextDraw(playerid, 375.000000, 200.000000, "4");
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][3], -256);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][3], 5);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][3], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][3], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][3], 1);
	PlayerTextDrawUseBox(playerid, pClothesTXD[playerid][3], 1);
	PlayerTextDrawBoxColor(playerid, pClothesTXD[playerid][3], 255);
	PlayerTextDrawTextSize(playerid, pClothesTXD[playerid][3], 100.000000, 150.000000);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][3], 1);

	pClothesTXD[playerid][4] = CreatePlayerTextDraw(playerid, 475.000000, 200.000000, "5");
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][4], -256);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][4], 5);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][4], 0.500000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][4], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][4], 1);
	PlayerTextDrawUseBox(playerid, pClothesTXD[playerid][4], 1);
	PlayerTextDrawBoxColor(playerid, pClothesTXD[playerid][4], 255);
	PlayerTextDrawTextSize(playerid, pClothesTXD[playerid][4], 100.000000, 150.000000);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][4], 1);

	pClothesTXD[playerid][5] = CreatePlayerTextDraw(playerid, 125.000000, 345.000000, "~p~SKIN: 0");
	PlayerTextDrawAlignment(playerid, pClothesTXD[playerid][5], 2);
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][5], 255);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][5], 2);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][5], 0.320000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][5], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][5], 0);

	pClothesTXD[playerid][6] = CreatePlayerTextDraw(playerid, 225.000000, 345.000000, "~p~SKIN: 0");
	PlayerTextDrawAlignment(playerid, pClothesTXD[playerid][6], 2);
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][6], 255);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][6], 2);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][6], 0.320000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][6], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][6], 0);

	pClothesTXD[playerid][7] = CreatePlayerTextDraw(playerid, 325.000000, 345.000000, "~p~SKIN: 0");
	PlayerTextDrawAlignment(playerid, pClothesTXD[playerid][7], 2);
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][7], 255);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][7], 2);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][7], 0.320000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][7], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][7], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][7], 0);

	pClothesTXD[playerid][8] = CreatePlayerTextDraw(playerid, 425.000000, 345.000000, "~p~SKIN: 0");
	PlayerTextDrawAlignment(playerid, pClothesTXD[playerid][8], 2);
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][8], 255);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][8], 2);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][8], 0.320000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][8], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][8], 0);

	pClothesTXD[playerid][9] = CreatePlayerTextDraw(playerid, 525.000000, 345.000000, "~p~SKIN: 0");
	PlayerTextDrawAlignment(playerid, pClothesTXD[playerid][9], 2);
	PlayerTextDrawBackgroundColor(playerid, pClothesTXD[playerid][9], 255);
	PlayerTextDrawFont(playerid, pClothesTXD[playerid][9], 2);
	PlayerTextDrawLetterSize(playerid, pClothesTXD[playerid][9], 0.320000, 1.000000);
	PlayerTextDrawColor(playerid, pClothesTXD[playerid][9], -1);
	PlayerTextDrawSetOutline(playerid, pClothesTXD[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, pClothesTXD[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, pClothesTXD[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, pClothesTXD[playerid][9], 0);

	ClothesUpdate(playerid);

	for(new i = 0; i < 10; i++) PlayerTextDrawShow(playerid, pClothesTXD[playerid][i]);
	for(new i = 0; i < 6; i++) TextDrawShowForPlayer(playerid, ClothesTXD[i]);
	SelectTextDraw(playerid, 0xFFFFFF50);
	SetPlayerCameraPos(playerid, 2099.0, 1335.5,15.0);
	SetPlayerCameraLookAt(playerid, 2099.0, 1335.5, 0.0);
	SetPVarInt(playerid, "TypeTextDraw", 6);
	return 1;
}

ClothesUpdate(playerid)
{
	for(new i = 0; i < 5; i++)
	{
		new string[14];
		format(string, sizeof string, "~p~SKIN: %d", PlayerInfo[playerid][pSkins][i]);
		PlayerTextDrawSetPreviewModel(playerid, pClothesTXD[playerid][i], PlayerInfo[playerid][pSkins][i]);
		PlayerTextDrawSetString(playerid, pClothesTXD[playerid][i+5], string);
	}
	for(new i = 0; i < 10; i++) PlayerTextDrawShow(playerid, pClothesTXD[playerid][i]);
}

ClothesHide(playerid)
{
	for(new i = 0; i < 10; i++)
	{
		if(pClothesTXD[playerid][i] != PlayerText:INVALID_TEXT_DRAW)
			PlayerTextDrawDestroy(playerid, pClothesTXD[playerid][i]); 
	}
	for(new i = 0; i < 6; i++) TextDrawHideForPlayer(playerid, ClothesTXD[i]);
	DeletePVar(playerid, "SkinShop_ID");
	DeletePVar(playerid, "Skin_Slot");
	DeletePVar(playerid, "Skin_ID");
	DeletePVar(playerid, "TypeTextDraw");
	CancelSelectTextDraw(playerid);
	SetCameraBehindPlayer(playerid);
}

COMMAND:mask(playerid, params[])
{
    if(TeamInfo[playerid][tID] != HA && !PlayerInfo[playerid][pAdmin]/*&& (TeamInfo[playerid][tID] != FBI || TeamInfo[playerid][tRank] < 3)*/) return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
    ShowPlayerDialog(playerid,D_MASK,DIALOG_STYLE_LIST,""FPHEAD"Маскировка","[1] Наркодuллер\n[2] Чёрный плащ\n[3] Горожанuн\n[4] Бомж\n[5] Женскuй скин\n[6] Снять маскuровку","Сменuть","Отмена");
    return 1;
}

COMMAND:fstyle(playerid, params[])
{
	ShowPlayerDialog(playerid,D_FS, DIALOG_STYLE_LIST, ""FPHEAD"Изменuть стuль боя","[1] Обычный\n[2] Boxing\n[3] Kung-Fu\n[4] KneeHead\n[5] GrabKick", "Сменuть", "Выйти");
	return 1;
}
COMMAND:drink(playerid, params[])
{
    if(!IsAtBar(playerid))return ErrorMes(playerid,"Ты не в баре.");
    SetPVarInt(playerid, "Menu_Other", 6);
	MenuShow(playerid, BT_OTHER, BT_HANDS);
	return 1;
}

COMMAND:drinkbeer(playerid, params[])
{ 
	if(PlayerInfo[playerid][pPivo] == -1)
		return ErrorMes(playerid, "Пиво должно быть у тебя в руках.");
	UseItem(playerid, PlayerInfo[playerid][pPivo]);	
	return 1;
}
COMMAND:smoke(playerid, params[])
{
	if(PlayerInfo[playerid][pSigs] == -1)
		return ErrorMes(playerid, "Сигареты должны быть у тебя в руках.");
	UseItem(playerid, PlayerInfo[playerid][pSigs]);
    return 1;
}
COMMAND:usedrugs(playerid, params[])
{
	if(PlayerInfo[playerid][pDrugs] == -1) 
		return ErrorMes(playerid, "Наркотики должны быть у тебя в руках.");
	UseItem(playerid, PlayerInfo[playerid][pDrugs]);
	return 1;
}
COMMAND:makegun(playerid, params[])
{
	if(PlayerInfo[playerid][pMats] == -1)
		return ErrorMes(playerid, "Материалы должны быть у тебя в руках.");
	UseItem(playerid, PlayerInfo[playerid][pMats]);
    return 1;
}

COMMAND:call(playerid, params[])
{
	new string[128];
	if(!PlayerInfo[playerid][pMobile])return ErrorMes(playerid, "У тебя нет мобильного телефона.");
	if(JailInfo[playerid][jTime])return ErrorMes(playerid, "У тебя отобрали телефон на время заключения.");
	if(GetPVarInt(playerid,"Cuffed") > 0)return ErrorMes(playerid, "Ты не можешь позвонить, т.к. у тебя заняты руки.");
	if(Mobile[playerid] != -1)return ErrorMes(playerid, "Ты уже звонишь.");
	if(sscanf(params,"i",params[0]))return ComMes(playerid, "/call [номер]");
	if(GetPVarInt(playerid,"Mask") ) format(string, sizeof(string), "* Неизвестный нaбupaeт нoмep.");
	else format(string, sizeof(string), "* %s нaбupaeт нoмep.", PlayerInfo[playerid][pName]);
	ProxDetector(20.0, playerid, string, COLOR_PURPLE);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	if(params[0] == 444)
	{
	    ForEachPlayer(i) if(TaxiAccepted[i] == playerid) return ErrorMes(playerid,"Твой заказ уже принят.");
	    if(TaxiDrivers < 1)
		{
		    ErrorMes(playerid, "В данный момент нет свободных таксистов.");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		    return 1;
		}
        format(string, sizeof(string), "* %s вызывeт тakcu (/accept taxi)", PlayerInfo[playerid][pName]);
		SendRadioMessage(TAXI , 0x01FCFFC8, string);
		for(new z=0; z < sizeof(ZoneInfo);z++)
		{
		    if(IsPlayerInCubeArea(playerid,ZoneInfo[z][zone_minx],ZoneInfo[z][zone_maxx],ZoneInfo[z][zone_miny],ZoneInfo[z][zone_maxy],ZoneInfo[z][zone_minz],ZoneInfo[z][zone_maxz]))
			{
				for (new z1=0; z1 < sizeof(ZoneInfoM);z1++)
	  			{
	 				if(IsPlayerInCubeArea(playerid,ZoneInfoM[z1][zone_minx],ZoneInfoM[z1][zone_maxx],ZoneInfoM[z1][zone_miny],ZoneInfoM[z1][zone_maxy],ZoneInfoM[z1][zone_minz],ZoneInfoM[z1][zone_maxz]))
	   				{
	  					format(string, sizeof(string), "* Район: %s, область: %s", ZoneInfo[z][zone_name], ZoneInfoM[z1][zone_name]);
						SendRadioMessage(TAXI , COLOR_YELLOW2, string);
						break;
					}
				}
			}
   		}
	   	format(string, sizeof(string), "* Всего таксистов на дежурстве: %d чел.", TaxiDrivers);
	   	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	   	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы вызвали такси. Дождитесь ответа.");
	   	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	   	SetPVarInt(playerid,"TaxiCall",1);
	   	return 1;
	}
	if(params[0] == 555)
	{
	    ForEachPlayer(i) if(MechanicAccepted[i] == playerid) return ErrorMes(playerid,"Твой заказ уже принят.");
	    if(Mechanics < 1)
	    {
	        ErrorMes(playerid, "На работе сейчас нет механников.");
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	        return 1;
	    }
	    format(string, sizeof(string), "** %s вызывeт мexaнuka. (/accept mechanic)", PlayerInfo[playerid][pName]);
		SendJobMessage(MECH,0x01FCFFC8, string);
		for(new z=0; z < sizeof(ZoneInfo);z++)
		{
			if(IsPlayerInCubeArea(playerid,ZoneInfo[z][zone_minx],ZoneInfo[z][zone_maxx],ZoneInfo[z][zone_miny],ZoneInfo[z][zone_maxy],ZoneInfo[z][zone_minz],ZoneInfo[z][zone_maxz]))
			{
				for (new z1=0; z1 < sizeof(ZoneInfoM);z1++)
	  			{
	 				if(IsPlayerInCubeArea(playerid,ZoneInfoM[z1][zone_minx],ZoneInfoM[z1][zone_maxx],ZoneInfoM[z1][zone_miny],ZoneInfoM[z1][zone_maxy],ZoneInfoM[z1][zone_minz],ZoneInfoM[z1][zone_maxz]))
	   				{
	  					format(string, sizeof(string), "* Район: %s, область: %s", ZoneInfo[z][zone_name], ZoneInfoM[z1][zone_name]);
						SendJobMessage(MECH , COLOR_YELLOW2, string);
						break;
					}
				}
			}
   		}
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы вызвали механика. Ждите ответа.");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		SetPVarInt(playerid,"MechCall",1);
		return 1;
	}
	if(params[0] == 03)
	{
	    ForEachPlayer(i) if(MedicAccepted[i] == playerid) return ErrorMes(playerid,"Твой заказ уже принят.");
	    if(Medics < 1)
	    {
	        ErrorMes(playerid, "В данный момент нет свободных медиков.");
	        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	        return 1;
	    }
		format(string, sizeof(string), "** %s вызывeт медика. (/accept medic)", PlayerInfo[playerid][pName]);
	    SendRadioMessage(MEDIC, 0x01FCFFC8, string);
	    for(new z=0; z < sizeof(ZoneInfo);z++)
	   	{
		    if(IsPlayerInCubeArea(playerid,ZoneInfo[z][zone_minx],ZoneInfo[z][zone_maxx],ZoneInfo[z][zone_miny],ZoneInfo[z][zone_maxy],ZoneInfo[z][zone_minz],ZoneInfo[z][zone_maxz]))
			{
				for (new z1=0; z1 < sizeof(ZoneInfoM);z1++)
  				{
 					if(IsPlayerInCubeArea(playerid,ZoneInfoM[z1][zone_minx],ZoneInfoM[z1][zone_maxx],ZoneInfoM[z1][zone_miny],ZoneInfoM[z1][zone_maxy],ZoneInfoM[z1][zone_minz],ZoneInfoM[z1][zone_maxz]))
   					{
  						format(string, sizeof(string), "* Район: %s, Область: %s", ZoneInfo[z][zone_name], ZoneInfoM[z1][zone_name]);
						SendRadioMessage(MEDIC, COLOR_YELLOW2, string);
					    break;
					}
				}
			}
  		}
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Вы вызвали медика. Ждите ответа...");
	    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	    SetPVarInt(playerid,"MedicCall",1);
	    return 1;
	}
	if(params[0] == PlayerInfo[playerid][pMobile])
	{
		ErrorMes(playerid, "** Абонент занят **");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		return 1;
	}
	ForEachPlayer(i)
	{
		if(PlayerInfo[i][pMobile] == params[0])
		{
			if(JailInfo[i][jTime] || Mobile[i] != -1)
			{
			    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				return ErrorMes(playerid, "** Абонент недоступен **");	
			}
			Mobile[playerid] = i;
			
			format(string,sizeof(string),"Абонент %s (Телефон: %d) вызывает тебя. Чтобы поднять трубку, используй \"/ответить\".", PlayerInfo[playerid][pName], PlayerInfo[playerid][pMobile]);
			SendClientMessage(i, COLOR_YELLOW2,string);
			if(GetPVarInt(i,"Mask") )  format(string, sizeof(string), "** У Неизвестного звонит телефон.");
			else format(string, sizeof(string), "* У %s звонит телефон.", PlayerInfo[i][pName]);
			ProxDetector(20.0, i, string, COLOR_PURPLE);
			return 1;
		}
	}
	return 1;
}
COMMAND:pickup(playerid, params[])
{
	if(Mobile[playerid] != -1)return ErrorMes(playerid, "Ты уже на связи.");
	if(GetPVarInt(playerid,"Cuffed") )return ErrorMes(playerid, "Ты не можешь взять трубку.");
	ForEachPlayer(i)
	{
		if(Mobile[i] != playerid)continue;
		new string[128];
		Mobile[playerid] = i;
		format(string,sizeof(string),"%s поднял(а) трубку и ответил(а) на твой звонок. Чтобы положить трубку, используй \"/сбросить\"",PlayerInfo[playerid][pName]);
		SendClientMessage(i, COLOR_YELLOW2, string);
		format(string,sizeof(string),"Ты поднял(а) трубку и ответил(а) на твой звонок %s. Чтобы положить трубку, используй \"/сбросить\"",PlayerInfo[i][pName]);
		SendClientMessage(playerid, COLOR_YELLOW2, string);
   		if(GetPVarInt(playerid,"Mask") ) format(string, sizeof(string), "* Незнакомец oтвeчaeт нa звoнok.");
		else format(string, sizeof(string), "* %s oтвeчaeт нa звoнok.", PlayerInfo[playerid][pName]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE);
		
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		SetPVarInt(playerid,"CallTime",GetTime);
		SetPVarInt(i,"CallTime",GetTime);
		break;
	}
	return 1;
}
COMMAND:hangup(playerid, params[])
{
	if(Mobile[playerid] == -1)return ErrorMes(playerid, "Ты не звонишь по телефону.");
	
	new string[128];
	format(string,sizeof(string),"%s закончил(а) разговор и положил(а) трубку.",PlayerInfo[playerid][pName]);
	SendClientMessage(Mobile[playerid],COLOR_YELLOW2, string);
	format(string,sizeof(string),"Ты закончил(а) разговор с %s и положил(а) трубку.",PlayerInfo[Mobile[playerid]][pName]);
	SendClientMessage(playerid,COLOR_YELLOW2,string);
	if(GetPVarInt(playerid,"CallTime"))
	{
		new Cost = floatround((GetTime-GetPVarInt(playerid,"CallTime"))/3)+5;
		FP_GivePlayerMoney(playerid, -Cost);
		FP_GivePlayerMoney(Mobile[playerid], -Cost);
		for(new i=1; i<=BIZNES; i++)
		{
			if(!BiznesInfo[i][bType])
			{
				BiznesInfo[i][bMoney] += Cost;
				if(BiznesInfo[i][bMafia]) FractionInfo[BiznesInfo[i][bMafia]][oMoney] += floatround(Cost*0.25);
				KAZNA += floatround(Cost*0.25);
				format(string,sizeof(string),"UPDATE `samp_biznes` SET `Money` = '%d' WHERE `ID` = '%d'",BiznesInfo[i][bMoney],i);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				break;
			}
		}
	}
	DeletePVar(playerid,"CallTime");
	DeletePVar(Mobile[playerid],"CallTime");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	SetPlayerSpecialAction(Mobile[playerid], SPECIAL_ACTION_STOPUSECELLPHONE);
	Mobile[Mobile[playerid]] = -1;
	Mobile[playerid] = -1;
	return 1;
}


COMMAND:trunk(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid))return ErrorMes(playerid,"Недоступно в транспорте.");
	for(new vid = 1; vid <= MAX_VEHICLES; vid++)
	{
		if(DistPlayerToVehicle(5,playerid,vid))
		{
		   	new Float: Pos[3];
		   	GetVehiclePos(vid,Pos[0],Pos[1],Pos[2]);
			GetXYInFrontOfVehicle(vid,Pos[0],Pos[1], -3);
		    if(!IsPlayerInRangeOfPoint(playerid,1.5,Pos[0],Pos[1],Pos[2])) 
		    	return ErrorMes(playerid,"Ты должен быть возле багажника.");
		    if(!VehInfo[vid][vBoot])
		    	return ErrorMes(playerid,"Багажник закрыт.");

		    SetPVarInt(playerid, "Menu_Other", 1);
		    SetPVarInt(playerid,"Menu_OtherID", vid);

		    MenuShow(playerid, BT_OTHER, BT_HANDS);
			return 1;
		}
	}
	return ErrorMes(playerid,"Ты должен быть возле багажника.");
}

COMMAND:teamtowcar(playerid, params[])
{
	if(!TeamInfo[playerid][tType])return ErrorMes(playerid, "Недостаточно прав для uспользованuя команды.");
	new used[MAX_VEHICLES+1];
	ForEachPlayer(i) if(IsPlayerInAnyVehicle(i)) used[PlayerInfo[i][pVehID]] = 1;
	for(new c=1; c <= MAX_VEHICLES; c++)
	{
	    if(used[c] || VehInfo[c][vType] != VT_FRACTION)continue;
		switch(VehInfo[c][vValue])
		{
			case LSPD: if((TeamInfo[playerid][tID] >= LSPD && TeamInfo[playerid][tID] <= LVPD))SetVehicleToRespawn(c);
			case FBI: if(TeamInfo[playerid][tID] == FBI)SetVehicleToRespawn(c);
			case DOKI: if(TeamInfo[playerid][tID] == DOKI)SetVehicleToRespawn(c);
			case EBASE: if(TeamInfo[playerid][tID] == EBASE)SetVehicleToRespawn(c);
			case ZONE51: if(TeamInfo[playerid][tID] == ZONE51)SetVehicleToRespawn(c);
			case MEDIC: if(TeamInfo[playerid][tID] == MEDIC)SetVehicleToRespawn(c);
			case NEWS: if(TeamInfo[playerid][tID] == NEWS)SetVehicleToRespawn(c);
			case LIC: if(TeamInfo[playerid][tID] == LIC)SetVehicleToRespawn(c);
			case MER: if(TeamInfo[playerid][tID] == MER)SetVehicleToRespawn(c);
			case TAXI: if(TeamInfo[playerid][tID] == TAXI)SetVehicleToRespawn(c);
			case HUN: if(TeamInfo[playerid][tID] == HUN)SetVehicleToRespawn(c);
			case HA: if(TeamInfo[playerid][tID] == HA)SetVehicleToRespawn(c);
			case LCN: if(TeamInfo[playerid][tID] == LCN)SetVehicleToRespawn(c);
			case YA: if(TeamInfo[playerid][tID] == YA)SetVehicleToRespawn(c);
			case RM: if(TeamInfo[playerid][tID] == RM)SetVehicleToRespawn(c);
			case TRIADA: if(TeamInfo[playerid][tID] == TRIADA)SetVehicleToRespawn(c);
			case GROOVE: if(TeamInfo[playerid][tID] == GROOVE)SetVehicleToRespawn(c);
			case BALLAS: if(TeamInfo[playerid][tID] == BALLAS)SetVehicleToRespawn(c);
			case VAGOS: if(TeamInfo[playerid][tID] == VAGOS)SetVehicleToRespawn(c);
			case ECOR: if(TeamInfo[playerid][tID] == ECOR)SetVehicleToRespawn(c);
			case RIFA: if(TeamInfo[playerid][tID] == RIFA)SetVehicleToRespawn(c);
			case SRACE: if(TeamInfo[playerid][tID] == SRACE)SetVehicleToRespawn(c);
			case RAST: if(TeamInfo[playerid][tID] == RAST)SetVehicleToRespawn(c);
		}	
	}
	//SendRadioMessage(TeamInfo[playerid][tID],COLOR_WHITE, "Фракционный транспорт был расставлен по местам.");
	return 1;
}
COMMAND:capture(playerid, params[])
{
    new faction = TeamInfo[playerid][tID];
    if(!IsInBand(playerid)) return ErrorMes(playerid,"Захват зон доступен только бандам.");
    if(TeamInfo[playerid][tRank] < 4) return ErrorMes(playerid,"Начать захват можно только с 4 ранга.");
	if(TeamOnline(TeamInfo[playerid][tID]) < 3) return ErrorMes(playerid,"В данный момент недостаточно союзников для войны.");
	if(WarTime[faction]) return CheckCaptureTime(playerid,faction);
	for(new i; i<ZONES; i++)
	{
		if(i == 8 || i == 9 || i == 27 || i == 35  || i == 37  || i == 45 || i == 79 || i == 81 || i == 82 || i == 87) continue;   
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) && GZInfo[i][gFrakVlad] != faction && !ZoneOnBattle[i])
		{
		    new string[128];
			if(WarTime[GZInfo[i][gFrakVlad]]) return ErrorMes(playerid,"Банда, контролирующая данную территорию еще не восстановилась после последней войны.");
		    if(TeamOnline(GZInfo[i][gFrakVlad]) < 3) return ErrorMes(playerid,"В данный момент недостаточно соперников для войны.");
			SendRadioMessage(GZInfo[i][gFrakVlad],COLOR_YELLOW,"[Война]{FFFFFF}Ваша Зона под атакой.");
			format(string,sizeof(string),"[Война]{FFFFFF}%s начал борьбу за зону против %s.",PlayerInfo[playerid][pName],GetTeamName(GZInfo[i][gFrakVlad]));
			SendRadioMessage(faction,COLOR_YELLOW,string);
			GangZoneFlashForAll(GZInfo[i][gID],GetGZColorF(faction));
			WarTime[faction]  = 2400;
			WarTime[GZInfo[i][gFrakVlad]]  = 2400;
			GZInfo[i][gNapad] = faction;
			ZoneTimer[i] = 600;
			ZoneOnBattle[i] = 1;
			CreateWarnText(i);
			break;
		}
	}
	return 1;
}
COMMAND:getbiz(playerid, params[])
{
    if(!IsInMafia(playerid)) return ErrorMes(playerid,"Захват бизнесов доступен только мафиям.");
    if(TeamInfo[playerid][tRank] < 4) return ErrorMes(playerid,"Захватить бизнес можно только с 4 ранга.");
    for(new i=1;i<=BIZNES;i++)
	{
		if(!IsPlayerInRangeOfPoint(playerid,5,BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY],BiznesInfo[i][bEnterZ]))continue;
		if(!strcmp(BiznesInfo[i][bOwner],"The State",true))return ErrorMes(playerid,"Этот бизнес принадлежит государству.");
		if(BiznesInfo[i][bMafia] == TeamInfo[playerid][tID])return ErrorMes(playerid,"Этот бизнес находится под защитой мафии.");
		if(BiznesInfo[i][bMafia])
		{
			ErrorMes(playerid,"Этот бизнес находится под защитой мафии.");
			return SendClientMessage(playerid,COLOR_YELLOW2, "Используй \"/mafiawar\" , чтобы начать войну за бизнес.");
		}
	    BiznesInfo[i][bMafia] = TeamInfo[playerid][tID];
		
		new string[256];
		format(string,sizeof(string),"UPDATE `samp_biznes` SET `Mafia` = '%d' WHERE `ID` = '%d'",BiznesInfo[i][bMafia],i);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
			
		format(string, sizeof(string), "{00CC00}%s{33CCFF}\nВладелец: {00CC00}%s{33CCFF}\n{33CCFF}Крыша: {FFD700}%s", BiznesInfo[i][bMessage],BiznesInfo[i][bOwner],GetTeamName(BiznesInfo[i][bMafia]));
		Update3DTextLabelText(BiznesInfo[i][bText], 0xFFFFFFFF, string);
		
		return 1;
	}
	return 1;
}
COMMAND:mafiawar(playerid, params[])
{
    new faction = TeamInfo[playerid][tID],zone;
    if(!IsInMafia(playerid)) return ErrorMes(playerid,"Захват бизнесов доступен только мафиям.");
    if(TeamInfo[playerid][tRank] < 4) return ErrorMes(playerid,"Начать захват можно только с 4 ранга.");
    if(sscanf(params,"i",zone) || zone > 3 || zone < 0)return ComMes(playerid, "/mafiawar [Место стрелки] 0-Карьер;1-Свалка;2-Забр.Аэропорт");
	if(TeamOnline(TeamInfo[playerid][tID]) < 3) return ErrorMes(playerid,"В данный момент недостаточно союзников для наезда.");
	if(WarTime[faction] > 0) return CheckCaptureTime(playerid,faction);
	for(new i=1;i<=BIZNES;i++)
	{
		if(!IsPlayerInRangeOfPoint(playerid,5,BiznesInfo[i][bEnterX], BiznesInfo[i][bEnterY],BiznesInfo[i][bEnterZ]))continue;
		new string[128];
		if(!strcmp(BiznesInfo[i][bOwner],"The State",true))return ErrorMes(playerid,"Этот бизнес принадлежит государству.");
		if(BizOnBattle[i] > 0)return ErrorMes(playerid,"За этот бизнес уже идет война.");
		if(BiznesInfo[i][bMafia] == faction)return ErrorMes(playerid,"Этот бизнес под защитой вашей мафии.");
		if(BiznesInfo[i][bMafia] == 0)return ErrorMes(playerid,"Этот бизнес не находится под защитой.");
		if(ZoneOnBattle[ZONES+zone] == 1)return ErrorMes(playerid,"В данный момент уже идет война на этой территории.");
		if(TeamOnline(BiznesInfo[i][bMafia]) < 3) return ErrorMes(playerid,"В данный момент недостаточно соперников для войны.");
		if(WarTime[BiznesInfo[i][bMafia]]) return ErrorMes(playerid,"Мафия, контролирующая данный бизнес еще не восстановилась после последней войны.");
		SendRadioMessage(BiznesInfo[i][bMafia],COLOR_LIGHTRED,"Бизнес, находяйщийся под вашей защитой подвергся нападению. У вас 10 минут, чтобы собраться на стрелку.");
		format(string,sizeof(string),"%s начал борьбу за бизнес против %s. У вас 10 минут чтобы подготовится к атаке.",PlayerInfo[playerid][pName],GetTeamName(BiznesInfo[i][bMafia]));
		SendRadioMessage(faction,COLOR_YELLOW,string);
		if(zone == 0) {SendRadioMessage(faction,COLOR_YELLOW,"Стрелка состоится в Карьере."); SendRadioMessage(BiznesInfo[i][bMafia],COLOR_YELLOW,"Стрелка состоится в Карьере.");}
		else if(zone == 1) {SendRadioMessage(faction,COLOR_YELLOW,"Стрелка состоится на Свалке."); SendRadioMessage(BiznesInfo[i][bMafia],COLOR_YELLOW,"Стрелка состоится на Свалке.");}
		else {SendRadioMessage(faction,COLOR_YELLOW,"Стрелка состоится в Забр.Аэропорте."); SendRadioMessage(BiznesInfo[i][bMafia],COLOR_YELLOW,"Стрелка состоится в Забр.Аэропорте.");}
		WarTime[faction]  = 2400;
		WarTime[BiznesInfo[i][bMafia]]  = 2400;
		GZInfo[ZONES+zone][gFrakVlad] = BiznesInfo[i][bMafia];
		GZInfo[ZONES+zone][gNapad] = faction;
		ZoneTimer[ZONES+zone] = 900;
		ZoneOnBattle[ZONES+zone] = 1;
		BizOnBattle[i] = faction;
		CreateWarnText(ZONES+zone);
		break;
	}
	return 1;
}
COMMAND:gzoneid(playerid, params[])
{
	for(new i; i<sizeof(GZInfo); i++)
	{
		if(!PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) continue;
		
		new message[12];
		format(message,sizeof(message),"Зона: %d",i);
		return SendClientMessage(playerid,COLOR_WHITE,message);
	}
	return 1;
}

COMMAND:world(playerid, params[])
{
	new message[28];
	format(message,sizeof(message),"World: %d, Interior: %d",PlayerInfo[playerid][pWorld],PlayerInfo[playerid][pInt]);
	return SendClientMessage(playerid,COLOR_WHITE,message);
}

COMMAND:spawnchange(playerid, params[])
{
	new string[128];
	if(PlayerInfo[playerid][pSpawn])
	{
	    PlayerInfo[playerid][pSpawn] = 0;
		format(string,sizeof(string),"UPDATE `samp_users` SET `Spawn` = '0' WHERE `Name` = '%s'",
			PlayerInfo[playerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
				
	    if(TeamInfo[playerid][tID])SendClientMessage(playerid,COLOR_YELLOW2,"Теперь ты будешь появляться на респе фракции.");
        else if(PlayerInfo[playerid][pOrigin])SendClientMessage(playerid,COLOR_YELLOW2,"Теперь ты будешь появляться в общежитии.");
        else SendClientMessage(playerid,COLOR_YELLOW2,"Теперь ты будешь появляться в больнице.");
	}
	else
	{
	    if(!PlayerInfo[playerid][pHouseKey])return ErrorMes(playerid,"У тебя нет дома.");
		
	    PlayerInfo[playerid][pSpawn] = 1;
		format(string,sizeof(string),"UPDATE `samp_users` SET `Spawn` = '1' WHERE `Name` = '%s'",
			PlayerInfo[playerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		SendClientMessage(playerid,COLOR_YELLOW2,"Теперь ты будешь появляться дома.");
	}
	return 1;
}
COMMAND:townchange(playerid, params[])
{
	ShowPlayerDialog(playerid,D_SPAWN_TOWN,DIALOG_STYLE_LIST,""FPHEAD"Смена города","Лос Сантос\nСан Фиерро\nЛас Вентурас","Сменить","Отмена");
	return 1;
}
COMMAND:join(playerid, params[])
{
	if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Участие в ивентах доступно с 1 уровня.");
	if(EventOpen <= GetTime)return ErrorMes(playerid,"В данный момент нет открытых ивентов.");
	if(PlayerInfo[playerid][pAdmin])return ErrorMes(playerid,"Администраторы не могут учавствовать в ивентах.");
	if(JailInfo[playerid][jTime])return ErrorMes(playerid,"Заключенные не могут учавствовать в ивентах.");
	if(PlayerInfo[playerid][pInt]) return ErrorMes(playerid,"Для подключения к ивенту выйди из здания.");
	if(PlayerInfo[playerid][pVehID]) return ErrorMes(playerid,"Для подключения к ивенту выйди из транспорта.");
	if(GetPVarInt(playerid,"EventStart")) return ErrorMes(playerid,"Ты уже принимал(а) участие в последнем ивенте.");
	if(EventPlayers >= MaxEventPlayers) return ErrorMes(playerid,"Лимит игроков на этом ивенте исчерпан, попробуй в следующий раз.");
	
	if(EventType == 2) 
	{
		if(!LicInfo[playerid][AutoLic]) return ErrorMes(playerid,"Ты не можешь принять участие в этом ивенте без лицензии.");
	}	
	else if(EventType == 3) 
	{
		if(!LicInfo[playerid][MotoLic]) return ErrorMes(playerid,"Ты не можешь принять участие в этом ивенте без лицензии.");
	}	
	else if(EventType == 4) 
	{
		if(!LicInfo[playerid][AutoLic]) return ErrorMes(playerid,"Ты не можешь принять участие в этом ивенте без лицензии.");
	}	
	else if(EventType == 5) 
	{
		if(!LicInfo[playerid][AutoLic]) return ErrorMes(playerid,"Ты не можешь принять участие в этом ивенте без лицензии.");
	}

	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	EventPlayerList[EventPlayers] = playerid;
	
	SaveStats(playerid);
	SetPlayerPos(playerid,PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2]);
	//FP_ResetPlayerWeapons(playerid);
	FP_SetPlayerHealth(playerid,100);
	TextDrawShowForPlayer(playerid,DMText);
	
	
	switch(EventType)
	{
		case 0: //DeathMatch
		{
			SetSyncTime(playerid, SYNC_TYPE_POS);
			TogglePlayerControllable(playerid,false);
			SetPlayerPos(playerid, BattleField[EventPlayers][0], BattleField[EventPlayers][1], BattleField[EventPlayers][2]);
			FP_SetPlayerInterior(playerid, 10);
			SetCameraBehindPlayer(playerid);

			PlayerInfo[playerid][pPos][0] = BattleField[EventPlayers][0];
			PlayerInfo[playerid][pPos][1] = BattleField[EventPlayers][1];
			PlayerInfo[playerid][pPos][2] = BattleField[EventPlayers][2];
			PlayerInfo[playerid][pSetPos][0] = BattleField[EventPlayers][0];
			PlayerInfo[playerid][pSetPos][1] = BattleField[EventPlayers][1];
			PlayerInfo[playerid][pSetPos][2] = BattleField[EventPlayers][2];
		
			AddItem(playerid, 19, 1, 100);
			AddItem(playerid, 24, 1000, -1);
			AddItem(playerid, 29, 1000, -1);
			AddItem(playerid, 31, 1000, -1);
			
			cmd_cvet(playerid," 3");
		}
		case 1: //Counter Strike
		{
			SetSyncTime(playerid, SYNC_TYPE_POS);
			TogglePlayerControllable(playerid,false);
			SetPlayerPos(playerid, Atrium[EventPlayers][0], Atrium[EventPlayers][1], Atrium[EventPlayers][2]);
			FP_SetPlayerInterior(playerid, 18);
			SetCameraBehindPlayer(playerid);

			PlayerInfo[playerid][pPos][0] = Atrium[EventPlayers][0];
			PlayerInfo[playerid][pPos][1] = Atrium[EventPlayers][1];
			PlayerInfo[playerid][pPos][2] = Atrium[EventPlayers][2];
			PlayerInfo[playerid][pSetPos][0] = Atrium[EventPlayers][0];
			PlayerInfo[playerid][pSetPos][1] = Atrium[EventPlayers][1];
			PlayerInfo[playerid][pSetPos][2] = Atrium[EventPlayers][2];

			SetPVarInt(playerid,"CSTeam",EventPlayers%2);
			SetPVarInt(playerid,"ReconSkin",GetPlayerSkin(playerid));

			AddItem(playerid, 19, 1, 100);
			AddItem(playerid, 24, 1000, -1);
			AddItem(playerid, 29, 1000, -1);
			AddItem(playerid, 30, 1000, -1);

			if(!GetPVarInt(playerid,"CSTeam")) // Cops = 0
			{
				SetPlayerSkin(playerid,285);
		
				cmd_cvet(playerid," 68");
			}
			else // Terrorist = 1
			{
				SetPlayerSkin(playerid,73);
				
				cmd_cvet(playerid," 3");
			}
		}
		case 2: //8-Track Race
		{
			SetSyncTime(playerid, SYNC_TYPE_POS);
			new vehicleid = AddStaticVehicleEx(494, HotRing[EventPlayers][0],HotRing[EventPlayers][1],HotRing[EventPlayers][2], 347.74, -1, -1, 1800000);
			LinkVehicleToInterior(vehicleid,7);
			VehInfo[vehicleid][vEngine] = 1;
			VehInfo[vehicleid][vLights] = 1;
			VehInfo[vehicleid][vGas] = VehMInfo[GetVehicleModel(vehicleid)-400][mTank];
			VehInfo[vehicleid][vPercent] = VehMInfo[GetVehicleModel(vehicleid)-400][mPercent];
			VehInfo[vehicleid][vPos][0] = VehInfo[vehicleid][vParkX];
			VehInfo[vehicleid][vPos][1] = VehInfo[vehicleid][vParkY];
			VehInfo[vehicleid][vPos][2] = VehInfo[vehicleid][vParkZ];
			FP_SetVehicleHealth(vehicleid,1000.0);
			SetVehicleParamsEx(vehicleid, VehInfo[vehicleid][vEngine], VehInfo[vehicleid][vLights], VehInfo[vehicleid][vAlarm], VehInfo[vehicleid][vLock], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vBoot], 0);		
			VehInfo[vehicleid][vType] = VT_EVENT;
			SetPVarInt(playerid,"EventCar",vehicleid);
			SetPVarInt(playerid,"EnterVehicle",vehicleid);
			PutPlayerInVehicle(playerid,vehicleid,0);
			SetPlayerInterior(playerid,7);
			TogglePlayerControllable(playerid,false);
			DeletePVar(playerid,"EventLaps");
			SetPVarInt(playerid,"EventCP",1);
			FP_DisablePlayerRaceCheckpoint(playerid);
			FP_SetPlayerRaceCheckpoint(playerid, 0, HotRingCP[0][0],HotRingCP[0][1],HotRingCP[0][2],HotRingCP[1][0],HotRingCP[1][1],HotRingCP[1][2], 7.0);
							
		}
		case 3: //DirtBike Race
		{
			SetSyncTime(playerid, SYNC_TYPE_POS);
			new vehicleid = AddStaticVehicleEx(468, DirtBike[EventPlayers][0],DirtBike[EventPlayers][1],DirtBike[EventPlayers][2], 50.0, -1, -1, 1800000);
			LinkVehicleToInterior(vehicleid,4);
			VehInfo[vehicleid][vEngine] = 1;
			VehInfo[vehicleid][vLights] = 1;
			VehInfo[vehicleid][vGas] = VehMInfo[GetVehicleModel(vehicleid)-400][mTank];
			VehInfo[vehicleid][vPercent] = VehMInfo[GetVehicleModel(vehicleid)-400][mPercent];
			VehInfo[vehicleid][vPos][0] = VehInfo[vehicleid][vParkX];
			VehInfo[vehicleid][vPos][1] = VehInfo[vehicleid][vParkY];
			VehInfo[vehicleid][vPos][2] = VehInfo[vehicleid][vParkZ];
			FP_SetVehicleHealth(vehicleid,1000.0);
			SetVehicleParamsEx(vehicleid, VehInfo[vehicleid][vEngine], VehInfo[vehicleid][vLights], VehInfo[vehicleid][vAlarm], VehInfo[vehicleid][vLock], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vBoot], 0);		
			VehInfo[vehicleid][vType] = VT_EVENT;
			SetPVarInt(playerid,"EventCar",vehicleid);
			SetPVarInt(playerid,"EnterVehicle",vehicleid);
			PutPlayerInVehicle(playerid,vehicleid,0);
			SetPlayerInterior(playerid,4);
			TogglePlayerControllable(playerid,false);
			DeletePVar(playerid,"EventLaps");
			SetPVarInt(playerid,"EventCP",1);
			FP_DisablePlayerRaceCheckpoint(playerid);
			FP_SetPlayerRaceCheckpoint(playerid, 0, DirtBikeCP[0][0],DirtBikeCP[0][1],DirtBikeCP[0][2],DirtBikeCP[1][0],DirtBikeCP[1][1],DirtBikeCP[1][2], 7.0);
		
		}
		case 4: //Monster Derby
		{
			SetSyncTime(playerid, SYNC_TYPE_POS);
			new vehicleid = AddStaticVehicleEx(556, Monster[EventPlayers][0],Monster[EventPlayers][1],Monster[EventPlayers][2],Monster[EventPlayers][3], -1, -1, 1800000);
			LinkVehicleToInterior(vehicleid,16);
			VehInfo[vehicleid][vEngine] = 1;
			VehInfo[vehicleid][vLights] = 1;
			VehInfo[vehicleid][vGas] = VehMInfo[GetVehicleModel(vehicleid)-400][mTank];
			VehInfo[vehicleid][vPercent] = VehMInfo[GetVehicleModel(vehicleid)-400][mPercent];
			VehInfo[vehicleid][vPos][0] = VehInfo[vehicleid][vParkX];
			VehInfo[vehicleid][vPos][1] = VehInfo[vehicleid][vParkY];
			VehInfo[vehicleid][vPos][2] = VehInfo[vehicleid][vParkZ];
			FP_SetVehicleHealth(vehicleid,1000.0);
			SetVehicleParamsEx(vehicleid, VehInfo[vehicleid][vEngine], VehInfo[vehicleid][vLights], VehInfo[vehicleid][vAlarm], VehInfo[vehicleid][vLock], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vBoot], 0);		
			VehInfo[vehicleid][vType] = VT_EVENT;
			SetPVarInt(playerid,"EventCar",vehicleid);
			SetPVarInt(playerid,"EnterVehicle",vehicleid);
			PutPlayerInVehicle(playerid,vehicleid,0);
			SetPlayerInterior(playerid,16);
			TogglePlayerControllable(playerid,false);
		}
		default: //Bloods Derby 
		{
			SetSyncTime(playerid, SYNC_TYPE_POS);
			new vehicleid = AddStaticVehicleEx(504, Blood[EventPlayers][0],Blood[EventPlayers][1],Blood[EventPlayers][2],Blood[EventPlayers][3], -1, -1, 1800000);
			LinkVehicleToInterior(vehicleid,15);
			VehInfo[vehicleid][vEngine] = 1;
			VehInfo[vehicleid][vLights] = 1;
			VehInfo[vehicleid][vGas] = VehMInfo[GetVehicleModel(vehicleid)-400][mTank];
			VehInfo[vehicleid][vPercent] = VehMInfo[GetVehicleModel(vehicleid)-400][mPercent];
			VehInfo[vehicleid][vPos][0] = VehInfo[vehicleid][vParkX];
			VehInfo[vehicleid][vPos][1] = VehInfo[vehicleid][vParkY];
			VehInfo[vehicleid][vPos][2] = VehInfo[vehicleid][vParkZ];
			FP_SetVehicleHealth(vehicleid,1000.0);
			SetVehicleParamsEx(vehicleid, VehInfo[vehicleid][vEngine], VehInfo[vehicleid][vLights], VehInfo[vehicleid][vAlarm], VehInfo[vehicleid][vLock], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vBoot], 0);		
			VehInfo[vehicleid][vType] = VT_EVENT;
			SetPVarInt(playerid,"EventCar",vehicleid);
			SetPVarInt(playerid,"EnterVehicle",vehicleid);
			PutPlayerInVehicle(playerid,vehicleid,0);
			SetPlayerInterior(playerid,15);
			TogglePlayerControllable(playerid,false);
		}
	}
	EventPlayers ++;
	SetPVarInt(playerid,"EventStart",GetTime + 900);
	if(EventPlayers == MaxEventPlayers) 
	{
		EventOpen = GetTime;
		SendClientMessageToAll(-1, "{A020F0}Регистрация на ивент закончена | Все участники подключились.");
		ForEachEvent(i) TogglePlayerControllable(i,true);
	}	
	return 1;
}
COMMAND:kill(playerid, params[])
{
	if(GetPVarInt(playerid,"EventStart") > GetTime)
	{
		for(new i; i < EventPlayers; i++)
		{
			if(EventPlayerList[i] != playerid) continue;
			EventPlayers --;
			EventPlayerList[i] = EventPlayerList[EventPlayers];
			break;
		}
		TextDrawHideForPlayer(playerid,DMText);
		if(GetPVarInt(playerid,"EventCar")) 
		{
			DestroyVehicle(GetPVarInt(playerid,"EventCar"));
			DeletePVar(playerid,"EventCar");
		}	
		if(EventPlayers) UpdateDMText();
		SetPVarInt(playerid,"EventStart",GetTime);

		FP_ResetPlayerWeapons(playerid);
		DropItem(playerid, PlayerInfo[playerid][pArmour], 2);

		SpawnPlayer(playerid);
		return 1;	
	}
	else return ErrorMes(playerid,"Данная команда доступна только на ивенте.");
}
COMMAND:target(playerid, params[])
{
	if(TeamInfo[playerid][tID] != HUN)return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
    new string[2048],str[36],count;
	ForEachPlayer(i)
	{
		if(PlayerInfo[i][pHunterValue] < 1000)continue;
		format(str,sizeof(str),"%s[%d]: $%d\n",PlayerInfo[i][pName],i,PlayerInfo[i][pHunterValue]);
		strcat(string,str);
		count ++;
	}
	if(!count)return ErrorMes(playerid,"Список нарушителей порядка пуст.");
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_LIST,""FPHEAD"Список нарушителей:",string,"OK","");
    return 1;
}
COMMAND:charity(playerid, params[])
{
	if(sscanf(params,"i",params[0]))return ComMes(playerid, "/charity [сумма]");
	if (params[0] >  PlayerInfo[playerid][pMoney] || !ValidDialogValue(params[0]))
		return ErrorMes(playerid, "У тебя нет такой суммы.");
	FP_GivePlayerMoney(playerid, -params[0]);
	KAZNA += params[0];

	new message[80];

	format(message,sizeof(message),"UPDATE `samp_settings` SET `kazna`= %d",
		KAZNA);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, message);

	format(message,sizeof(message),"Ты пожертвовал(а) государству $%d, спасибо.",params[0]);
	return SendClientMessage(playerid, COLOR_WHITE, message);
}
COMMAND:kazna(playerid, params[])
{
	new message[32];
	if(TeamInfo[playerid][tID] != MER) return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(TeamInfo[playerid][tType] != 2) return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	format(message,sizeof(message),"В казне $%d.", KAZNA);
	return SendClientMessage(playerid, COLOR_WHITE, message);
}

COMMAND:getkazna(playerid, params[])
{
	if(sscanf(params,"i",params[0]))return ComMes(playerid, "/getkazna [сумма]");
	if(PlayerInfo[playerid][pAdmin] != 10) return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	//if(TeamInfo[playerid][tType] != 2) return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(params[0] <= 0) return ErrorMes(playerid,"Сумма должна не может быть отрицательной.");
	if(KAZNA < params[0]) return ErrorMes(playerid,"В казне нет такого количества денег.");

	KAZNA -= params[0];
	FP_GivePlayerMoney(playerid, params[0]);

	new message[80];

	format(message,sizeof(message),"%s взял(а) из казны $%d, в казне $%d.",PlayerInfo[playerid][pName], params[0], KAZNA);
	ABroadCast(COLOR_YELLOW,message,3);

	format(message,sizeof(message),"Ты взял(а) из казны $%d, в казне $%d.",params[0], KAZNA);
	return SendClientMessage(playerid, COLOR_WHITE, message);
}

COMMAND:vote(playerid, params[])
{
	//if(TeamInfo[playerid][tID] != MER) return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	//if(TeamInfo[playerid][tType] != 2) return ErrorMes(playerid,"Недостаточно прав для uспользованuя команды.");
	if(PlayerInfo[playerid][pLevel] < 3) return ErrorMes(playerid, "Голосование доступно только с 3 уровня.");
	for(new i = 0; i < 5; i++)
	{
		if(VoteInfo[i][voStatus] == 1 && GetTime - VoteInfo[i][voTime] > 86400)
		{
			VoteInfo[i][voStatus] = 2;

			new string[64];
			format(string, sizeof string, "UPDATE `samp_votes` SET `status` = 2 WHERE `id` = %d", VoteInfo[i][voID]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

		}
	}
	return ShowDialog(playerid, D_VOTE_MAIN);
}

COMMAND:loadmats(playerid, params[])
{
	if(!GetPVarInt(playerid,"ArmaMats"))return ErrorMes(playerid,"У тебя нет ящика.");
	if(TeamInfo[playerid][tID] >= LCN && TeamInfo[playerid][tID] <= RAST)
	{
	    for(new i=1; i <= MAX_VEHICLES; i++)
	    {
			if(DistPlayerToVehicle(5, playerid, i) && GetVehicleModel(i) == 482)
			{
			    new Float: Pos[3],string[128];
			    GetVehiclePos(i,Pos[0],Pos[1],Pos[2]);
			    GetXYInFrontOfVehicle(i,Pos[0],Pos[1], -3);
			    if(!IsPlayerInRangeOfPoint(playerid,1.5,Pos[0],Pos[1],Pos[2]))return ErrorMes(playerid,"Ты должен быть возле багажника.");
			    if(VehInfo[i][vLoadMats] >= 10)
				{
				    RemovePlayerAttachedObject(playerid,0);
				    ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
					DeletePVar(playerid,"ArmaMats");
					return ErrorMes(playerid,"Грузовик полон.");
				}
				VehInfo[i][vLoadMats] ++;
				RemovePlayerAttachedObject(playerid,0);
				ApplyAnimation(playerid,"PED","IDLE_tired",4.1,0,1,1,0,1);
				DeletePVar(playerid,"ArmaMats");
				if(GetPVarInt(playerid,"Mask"))format(string, sizeof(string),"* Неuзвестный положил ящик в грузовик. Загружено материалов: %d.",VehInfo[i][vLoadMats]*500);
				else format(string, sizeof(string), "* %s положил(а) ящик в грузовик. Загружено материалов: %d.", PlayerInfo[playerid][pName],VehInfo[i][vLoadMats]*500);
				ProxDetector(10.0, playerid, string, COLOR_PURPLE);
				break;
			}
		}
	}
	return 1;
}
COMMAND:unloadmats(playerid, params[])
{
    if(TeamInfo[playerid][tID] >= LCN && TeamInfo[playerid][tID] <= RAST)
	{
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return ErrorMes(playerid,"Ты должен быть в транспорте.");
	    if(!VehInfo[PlayerInfo[playerid][pVehID]][vLoadMats])return ErrorMes(playerid,"В транспорте нет материалов.");
 		if(TeamInfo[playerid][tID] == LCN && !IsPlayerInRangeOfPoint(playerid,50,1456.1324,2773.4507,10.8203))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == YA && !IsPlayerInRangeOfPoint(playerid,50,2634.7605,1824.1888,11.0161))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == RM && !IsPlayerInRangeOfPoint(playerid,50,943.5978,1733.7712,8.9768))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == TRIADA && !IsPlayerInRangeOfPoint(playerid,50,1990.6473,986.7347,10.8127))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == GROOVE && !IsPlayerInRangeOfPoint(playerid,50,2495.3665,-1691.1370,14.7656))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == BALLAS && !IsPlayerInRangeOfPoint(playerid,50,2000.0259,-1114.0546,27.1250))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == VAGOS && !IsPlayerInRangeOfPoint(playerid,50,2808.0747,-1176.1071,25.3793))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == ECOR && !IsPlayerInRangeOfPoint(playerid,50,1852.2900,-1990.2065,13.546))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == RIFA && !IsPlayerInRangeOfPoint(playerid,50,2145.0156,-1801.7720,16.1406))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == SRACE && !IsPlayerInRangeOfPoint(playerid,50,-2129.1255,-188.2981,35.3203))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    else if(TeamInfo[playerid][tID] == RAST && !IsPlayerInRangeOfPoint(playerid,50,2175.4324,-1667.2572,15.0859))return ErrorMes(playerid,"Ты не можешь разгрузить материалы здесь.");
	    
		new string[128];
	    FractionInfo[TeamInfo[playerid][tID]][oMats] += VehInfo[PlayerInfo[playerid][pVehID]][vLoadMats]*500;
	    format(string,sizeof(string),"%s[%d] разгрузил(а) из грузовика %d материалов.В общаке: %d матов.",PlayerInfo[playerid][pName],playerid,VehInfo[PlayerInfo[playerid][pVehID]][vLoadMats]*500,FractionInfo[TeamInfo[playerid][tID]][oMats]);
		SendRadioMessage(TeamInfo[playerid][tID], 0x01FCFFFF, string);
	    VehInfo[PlayerInfo[playerid][pVehID]][vLoadMats] = 0;
	    
	}
	return 1;
}
COMMAND:dice(playerid, params[])
{
	new string[128];
	if(!GetPVarInt(playerid,"Dice"))return ErrorMes(playerid,"Ты еще не получил(а) игральные кости.");
	if(GetPVarInt(playerid,"Mask") )format(string, sizeof(string),"* Неuзвестный бросил игральные кости. Выпавшее число: {33CCFF}%d.",2+random(10));
	else format(string, sizeof(string), "* %s бросил(а) игральные кости. Выпавшее число: {33CCFF}%d.", PlayerInfo[playerid][pName],2+random(10));
	ProxDetector(10.0, playerid, string, COLOR_PURPLE);
	return 1;
}
COMMAND:fixcar(playerid, params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)return ErrorMes(playerid,"Недоступно в транспорте.");
	if(GetPVarInt(playerid,"Cuffed"))return ErrorMes(playerid,"У тебя связаны руки.");
	for(new i=1; i <= MAX_VEHICLES; i++)
	{
	    if(DistPlayerToVehicle(5,playerid,i))
	    {
			new Float: Pos[3],string[128];
			if(VehInfo[i][vHealth] > 400) return ErrorMes(playerid,"Транспорт не нуждается в ремонте.");
		 	GetVehiclePos(i,Pos[0],Pos[1],Pos[2]);
		    GetXYInFrontOfVehicle(i,Pos[0],Pos[1], 2.5);
			//CreatePickup(1239,23,Pos[0],Pos[1],Pos[2],-1);
		    if(!IsPlayerInRangeOfPoint(playerid,1.5,Pos[0],Pos[1],Pos[2]))return ErrorMes(playerid,"Ты должен быть возле двигателя.");
			if(GetPVarInt(playerid,"Mask"))format(string, sizeof(string),"* Неuзвестный пытается починить двигатель.");
			else format(string, sizeof(string), "* %s пытается починить двигатель.", PlayerInfo[playerid][pName]);
			ProxDetector(10.0, playerid, string, COLOR_PURPLE);
			TogglePlayerControllable(playerid,false);
			SetTimerEx("RepairCar",5000,false,"ii",playerid,i);
		}
	}
	return 1;
}

Public:RepairCar(playerid,vehicleid)
{
	new string[128];
    TogglePlayerControllable(playerid,true);
    if(GetPVarInt(playerid,"Mask"))format(string, sizeof(string),"* Неuзвестный успешно починил двигатель.");
	else format(string, sizeof(string), "* %s успешно починил(а) двигатель.", PlayerInfo[playerid][pName]);
	ProxDetector(10.0, playerid, string, COLOR_PURPLE);
	FP_SetVehicleHealth(vehicleid,400);
	return 1;
}
COMMAND:buy(playerid, params[])
{
	if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");

    new string[128], accept_id;
    if(sscanf(params,"i", accept_id)) return ComMes(playerid, "/accept buy [Номер предложения]");

    format(string, sizeof string, "Accept_Type_%d", accept_id);
    new accept_type = GetPVarInt(playerid, string);

	if(!accept_type)return ErrorMes(playerid, "Никто ничего не предлагал или срок предложения истек.");

	format(string, sizeof string, "Accept_ID_%d", accept_id);
    new accept_offer = GetPVarInt(playerid, string);

	if(!IsPlayerConnected(accept_offer)) return ErrorMes(playerid, "Этот игрок не в сети.");
	if(!DistPlayerToPlayer(5.0, playerid, accept_offer)) return ErrorMes(playerid, "Игрок не около тебя.");

	format(string, sizeof string, "Accept_Price_%d", accept_id);
    new accept_price = GetPVarInt(playerid, string);

	if(PlayerInfo[playerid][pMoney] < accept_price) return ErrorMes(playerid,"Недостаточно средств на банковской карте.");

	new FindItem = -1;

	if(oData[accept_type][imType] < 100)
	{
		format(string, sizeof string, "Accept_Value_%d", accept_id);
    	new accept_value = GetPVarInt(playerid, string);

		for(new i = 0; i < 25; i++)
		{
			if(iData[accept_offer][inItems][i] != accept_type || iData[accept_offer][inState][i] <= 0) continue;
			if(iData[accept_offer][inValue][i] < accept_value) 
			{
				DeleteSell(playerid, accept_id, 0);
				return ErrorMes(playerid, "У игрока нет такого количества товара.");
			}
			if(oData[accept_type][imType] == 24 && iData[accept_offer][inValue][i] != accept_value) continue;

			switch(oData[accept_type][imType])
			{
				case 0,1,10..12: 
				{
					if(!AddItem(playerid, accept_type, accept_value)) return 1;

					DropItem(accept_offer, i);

					format(string, sizeof(string), "* Ты купил(а) у %s %s за $%d.", 
						PlayerInfo[accept_offer][pName],oData[accept_type][imName], accept_price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					
					format(string, sizeof(string), "* %s купил(а) у тебя %s за $%d.", 
						PlayerInfo[playerid][pName], oData[accept_type][imName], accept_price);
					SendClientMessage(accept_offer, COLOR_LIGHTBLUE, string);
				}
				case 24: 
				{
					if(!AddItem(playerid, accept_type, accept_value)) return 1;

					DropItem(accept_offer, i);

					format(string, sizeof(string), "* Ты купил(а) у %s %s (Номер: %d) за $%d.", 
						PlayerInfo[accept_offer][pName],oData[accept_type][imName], accept_value, accept_price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					
					format(string, sizeof(string), "* %s купил(а) у тебя %s (Номер: %d) за $%d.", 
						PlayerInfo[playerid][pName], oData[accept_type][imName], accept_value, accept_price);
					SendClientMessage(accept_offer, COLOR_LIGHTBLUE, string);
				}	
				default:
				{
					if(!AddItem(playerid, accept_type, accept_value)) return 1;

					iData[accept_offer][inValue][i] -= accept_value;
					if(!iData[accept_offer][inValue][i]) DropItem(accept_offer, i);
					else 
					{

						SetSyncTime(accept_offer, SYNC_TYPE_WEAPONS);
    					ResetPlayerWeapons(accept_offer);
					   	for(new s = 0; s < 13; s++)
					   	{
					   		if(PlayerInfo[accept_offer][pGun][s] == -1) continue;
					   		GivePlayerWeapon(accept_offer, 
					   			iData[accept_offer][inItems][PlayerInfo[accept_offer][pGun][s]], 
					   			iData[accept_offer][inValue][PlayerInfo[accept_offer][pGun][s]]);
					   	}

						if(GetPVarInt(accept_offer, "TypeTextDraw") == 4) InfoShow(accept_offer, 0, i);

						format(string, sizeof string, "UPDATE `samp_bag` SET `%d` = '%d|%d|%.1f' WHERE `name` = '%s'",
							i,iData[accept_offer][inItems][i],iData[accept_offer][inValue][i],iData[accept_offer][inState][i], PlayerInfo[accept_offer][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					}

					format(string, sizeof(string), "* Ты купил(а) у %s %s (%d) за $%d.", 
						PlayerInfo[accept_offer][pName],oData[accept_type][imName], accept_value, accept_price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					
					format(string, sizeof(string), "* %s купил(а) у тебя %s (%d) за $%d.", 
						PlayerInfo[playerid][pName], oData[accept_type][imName], accept_value, accept_price);
					SendClientMessage(accept_offer, COLOR_LIGHTBLUE, string);
				}
			}

			FindItem = i;
			break;
		}
	}
	
	else
	{
		format(string, sizeof string, "Accept_Value_%d", accept_id);
    	new Float:accept_value = GetPVarFloat(playerid, string);

    	

		for(new i = 0; i < 5; i++)
		{
			if(atData[accept_offer][atModel][i] != accept_type || atData[accept_offer][atState][i] <= 0) continue;

			if(!AddItem(playerid, accept_type, 1, accept_value)) return 1;
			DropItem(accept_offer, i, 2);

			format(string, sizeof(string), "* Ты купил(а) у %s %s (Состояние: %.0f) за $%d.", 
				PlayerInfo[accept_offer][pName],oData[accept_type][imName], accept_value, accept_price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			
			format(string, sizeof(string), "* %s купил(а) у тебя %s (Состояние: %.0f) за $%d.", 
				PlayerInfo[playerid][pName], oData[accept_type][imName], accept_value, accept_price);
			SendClientMessage(accept_offer, COLOR_LIGHTBLUE, string);

			FindItem = i;
			break;
		}
	}

	if(FindItem == -1)
	{
		DeleteSell(playerid, accept_id, 0);
		return ErrorMes(playerid, "У игрока нет такого товара.");
	}

	FP_GivePlayerMoney(playerid, -accept_price);
	FP_GivePlayerMoney(accept_offer, accept_price);
	
	DeleteSell(playerid, accept_id, 0);
	return 1;
}
COMMAND:accept(playerid, params[])
{
	new x_job[18],string[256];
    if(sscanf(params,"s[16]",x_job))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Accept __________________|");
		ComMes(playerid, "/accept [имя]");
		SendClientMessage(playerid, COLOR_WHITE, "{008000}[ДОСТУПНО]{FFFFFF} Ticket, Invite, Buycar, Repair, Refill, Car");
		SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		return 1;
	}
	else if(strcmp(x_job,"ticket",true) == 0)
	{
	    if(PlayerInfo[playerid][pLevel] == 0) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
		if(TicketOffer[playerid] == -1)return ErrorMes(playerid, "Никто не выписывал тебе штраф.");
		if(!IsPlayerConnected(TicketOffer[playerid]))return ErrorMes(playerid, "Этот игрок не в сети.");
		if(!DistPlayerToPlayer(5.0, playerid, TicketOffer[playerid]))return ErrorMes(playerid, "Игрок не около тебя.");
		if(PlayerInfo[playerid][pMoney] < TicketMoney[playerid])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
		format(string, sizeof(string), "* Ты оплатuл(а) штраф на сумму $%d, выписанный офицером %s.", TicketMoney[playerid],PlayerInfo[TicketOffer[playerid]][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* %s оплатuл(а) штраф в размере $%d.", PlayerInfo[playerid][pName], TicketMoney[playerid]);
		SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
		FP_GivePlayerMoney(playerid, - TicketMoney[playerid]);
		FP_GivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
		TicketOffer[playerid] = -1;
		TicketMoney[playerid] = 0;
		return 1;
	}
	else if(strcmp(x_job,"clear",true) == 0)
	{
	    if(PlayerInfo[playerid][pLevel] == 0) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
		if(ClearOffer[playerid] == -1)return ErrorMes(playerid, "Никто не предлагал тебе очистuть дело.");
		if(!IsPlayerConnected(ClearOffer[playerid]))return ErrorMes(playerid, "Этот игрок не в сети.");
		if(!DistPlayerToPlayer(5.0, playerid, ClearOffer[playerid]))return ErrorMes(playerid, "Игрок не около тебя.");
		if(PlayerInfo[playerid][pMoney] < ClearMoney[playerid])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
		format(string, sizeof(string), "* Офицер %s очистuл(а) твоё дело за $%d.", PlayerInfo[ClearOffer[playerid]][pName],ClearMoney[playerid]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ты очистuл(а) дело %s за $%d.", PlayerInfo[playerid][pName], ClearMoney[playerid]);
		SendClientMessage(ClearOffer[playerid], COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Офицер %s очистuл(а) дело %s за $%d", PlayerInfo[ClearOffer[playerid]][pName],PlayerInfo[playerid][pName], ClearMoney[playerid]);
		SendCrimeMessage(string);
		FP_GivePlayerMoney(playerid, - ClearMoney[playerid]);
		FP_GivePlayerMoney(ClearOffer[playerid], ClearMoney[playerid]);
		PlayerInfo[playerid][pWanted] = 0;
		UpdateWanted(playerid,0);
		ClearOffer[playerid] = -1;
		ClearMoney[playerid] = 0;

		format(string,sizeof(string),"UPDATE `samp_users` SET Wanted=0 WHERE Name='%s'",
			PlayerInfo[playerid][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		return 1;
	}
	else if(strcmp(x_job,"invite",true) == 0)
	{
	    if(InviteOffer[playerid] == -1) return ErrorMes(playerid, "Никто не предлагал тебе вступuть во фракцию.");
	    if(!IsPlayerConnected(InviteOffer[playerid]))return ErrorMes(playerid, "Этот игрок не в сети.");
		if(!TeamInfo[InviteOffer[playerid]][tID])return ErrorMes(playerid,"Игрок, пригласивший тебя уже не состоит во фракции.");
		
		format(string, sizeof(string), "* Ты был принят в %s лидером %s на испытательный срок.", GetTeamName(TeamInfo[InviteOffer[playerid]][tID]), PlayerInfo[InviteOffer[playerid]][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ты принял игрока %s в %s на испытательный срок.", PlayerInfo[playerid][pName],GetTeamName(TeamInfo[InviteOffer[playerid]][tID]));
		SendClientMessage(InviteOffer[playerid], COLOR_LIGHTBLUE, string);
		
		AddPlayerToTeam(playerid, TeamInfo[InviteOffer[playerid]][tID], 0, 1);

		InviteOffer[playerid] = -1;

		return 1;
	}
	else if(strcmp(x_job,"buycar", true) == 0)
	{
	    if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
	    if(MyCarOffer[playerid] == -1) return ErrorMes(playerid,"Никто не предлагал тебе купuть транспорт.");
        if(!DistPlayerToPlayer(5.0, playerid, MyCarOffer[playerid]))return ErrorMes(playerid,"Игрок не возле тебя.");
		
		if(strcmp(VehInfo[MyCarID[playerid]][vOwner],PlayerInfo[MyCarOffer[playerid]][pName],true)) return ErrorMes(playerid,"Этот транспорт не принадлежит продавцу.");
		if(PlayerInfo[playerid][pMoney] < MyCarMoney[playerid])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");

		FP_GivePlayerMoney(playerid, -MyCarMoney[playerid]);
		PlayerInfo[playerid][pCars] ++;
		FP_GivePlayerMoney(MyCarOffer[playerid], MyCarMoney[playerid]);
		PlayerInfo[MyCarOffer[playerid]][pCars] --;
		
		format(string,sizeof(string),"* Ты купuл(а) транспорт у %s за $%d.",PlayerInfo[MyCarOffer[playerid]][pName],MyCarMoney[playerid]);
	  	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	  	format(string,sizeof(string),"* %s купuл(а) у тебя транспорт за $%d.",PlayerInfo[playerid][pName],MyCarMoney[playerid]);
	  	SendClientMessage(MyCarOffer[playerid],COLOR_LIGHTBLUE,string);
		
	  	strmid(VehInfo[MyCarID[playerid]][vOwner], PlayerInfo[playerid][pName], 0, MAX_PLAYER_NAME, 24);
		
		// Покупка тачки у другого игрока.
		format(string,sizeof(string),"UPDATE `samp_vehicles` SET `Owner` = '%s' WHERE `ID` = '%d'", PlayerInfo[playerid][pName], VehInfo[MyCarID[playerid]][vID]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		MyCarOffer[playerid] = -1;
		MyCarMoney[playerid] = 0;
		MyCarID[playerid] = 0;
		return 1;
	}
	else if(strcmp(x_job,"buybiznes", true) == 0)
	{
	    if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
	    if(MyBiznesOffer[playerid] == -1) return ErrorMes(playerid,"Никто не предлагал тебе купuть бизнес.");
        if(!DistPlayerToPlayer(5.0, playerid, MyBiznesOffer[playerid]))return ErrorMes(playerid,"Игрок не возле тебя.");
		if(PlayerInfo[playerid][pMoney] < MyBiznesMoney[playerid])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
		
		if(!PlayerInfo[MyBiznesOffer[playerid]][pBizKey])return ErrorMes(playerid,"У этого игрока нет бизнеса.");
		
		PlayerInfo[playerid][pBizKey] = PlayerInfo[MyBiznesOffer[playerid]][pBizKey];
		PlayerInfo[MyBiznesOffer[playerid]][pBizKey] = 0;
		FP_GivePlayerMoney(playerid,-MyBiznesMoney[playerid]);
		FP_GivePlayerMoney(MyBiznesOffer[playerid],MyBiznesMoney[playerid]);
		format(string,sizeof(string),"* Ты купuл(а) бизнес у %s за $%d.",PlayerInfo[MyBiznesOffer[playerid]][pName],MyBiznesMoney[playerid]);
	  	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	  	format(string,sizeof(string),"* %s купuл(а) у тебя бизнес за $%d.",PlayerInfo[playerid][pName],MyBiznesMoney[playerid]);
	  	SendClientMessage(MyBiznesOffer[playerid],COLOR_LIGHTBLUE,string);
	  	strmid(BiznesInfo[PlayerInfo[playerid][pBizKey]][bOwner], PlayerInfo[playerid][pName], 0, MAX_PLAYER_NAME, 999);
		
		new b = PlayerInfo[playerid][pBizKey];
		format(string,sizeof(string),"UPDATE `samp_biznes` SET `Owner` = '%s' WHERE `ID` = '%d'",BiznesInfo[b][bOwner],b);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
					
		format(string, sizeof(string), "{00CC00}%s{33CCFF}\nВладелец: {00CC00}%s{33CCFF}\n{33CCFF}Крыша: {FFD700}%s", BiznesInfo[b][bMessage],BiznesInfo[b][bOwner],GetTeamName(BiznesInfo[b][bMafia]));
		Update3DTextLabelText(BiznesInfo[b][bText], 0xFFFFFFFF, string);

		MyBiznesOffer[playerid] = -1;
		MyBiznesMoney[playerid] = 0;
		return 1;
	}
	else if(strcmp(x_job,"buyhouse", true) == 0)
	{
	    if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
	    if(MyHouseOffer[playerid] == -1) return ErrorMes(playerid,"Никто не предлагал тебе купuть дом.");
        if(!DistPlayerToPlayer(5.0, playerid, MyHouseOffer[playerid]))return ErrorMes(playerid,"Игрок не возле тебя.");
		if(PlayerInfo[playerid][pMoney] < MyHouseMoney[playerid])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
		if(!PlayerInfo[MyHouseOffer[playerid]][pHouseKey])return ErrorMes(playerid,"У этого игрока нет дома.");
		
		PlayerInfo[playerid][pHouseKey] = PlayerInfo[MyHouseOffer[playerid]][pHouseKey];
		PlayerInfo[MyHouseOffer[playerid]][pHouseKey] = 0;

		FP_GivePlayerMoney(playerid,-MyHouseMoney[playerid]);
		FP_GivePlayerMoney(MyHouseOffer[playerid],MyHouseMoney[playerid]);
		
		format(string,sizeof(string),"* Ты купuл(а) дом у %s за $%d.",PlayerInfo[MyHouseOffer[playerid]][pName],MyHouseMoney[playerid]);
	  	SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	  	format(string,sizeof(string),"* %s купuл(а) у тебя дом за $%d.",PlayerInfo[playerid][pName],MyHouseMoney[playerid]);
	  	SendClientMessage(MyHouseOffer[playerid],COLOR_LIGHTBLUE,string);
		
	  	strmid(HouseInfo[PlayerInfo[playerid][pHouseKey]][hOwner], PlayerInfo[playerid][pName], 0, MAX_PLAYER_NAME, 64);
		
		DestroyDynamicMapIcon(HouseInfo[PlayerInfo[playerid][pHouseKey]][hMapIcon]);
		DestroyDynamicPickup(HousePickUps[PlayerInfo[playerid][pHouseKey]]);
				
		HousePickUps[PlayerInfo[playerid][pHouseKey]] = CreateDynamicPickup(1272, 23, HouseInfo[PlayerInfo[playerid][pHouseKey]][hEnterX], HouseInfo[PlayerInfo[playerid][pHouseKey]][hEnterY], HouseInfo[PlayerInfo[playerid][pHouseKey]][hEnterZ],0,0,-1,100.0);
		HouseInfo[PlayerInfo[playerid][pHouseKey]][hMapIcon] = CreateDynamicMapIcon(HouseInfo[PlayerInfo[playerid][pHouseKey]][hEnterX],HouseInfo[PlayerInfo[playerid][pHouseKey]][hEnterY],HouseInfo[PlayerInfo[playerid][pHouseKey]][hEnterZ],32,COLOR_LIGHTRED,0,0,-1,150.0);
		format(string, sizeof(string), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Владелец: {00CC00}%s", HouseInfo[PlayerInfo[playerid][pHouseKey]][hID],HIInfo[HouseInfo[PlayerInfo[playerid][pHouseKey]][hType]][HouseName],HouseInfo[PlayerInfo[playerid][pHouseKey]][hOwner]);
		Update3DTextLabelText(HouseInfo[PlayerInfo[playerid][pHouseKey]][hText],0xFFFFFFFF, string);
				
		format(string,sizeof(string),"UPDATE `samp_houses` SET `Owner` = '%s' WHERE `ID` = '%d'", 
			PlayerInfo[playerid][pName], HouseInfo[PlayerInfo[playerid][pHouseKey]][hID]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		PlayerInfo[MyHouseOffer[playerid]][pSpawn] = 0;
		format(string,sizeof(string),"UPDATE `samp_users` SET `Spawn` = '0' WHERE `Name` = '%s'",
			PlayerInfo[MyHouseOffer[playerid]][pName]);
		mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
		
		MyHouseOffer[playerid] = -1;
		MyHouseMoney[playerid] = 0;
		return 1;
	}
	else if(strcmp(x_job,"armor",true) == 0)
	{
	    if(PlayerInfo[playerid][pLevel] == 0) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
		if(GuardOffer[playerid] == -1)return ErrorMes(playerid,"Никто не предлагал тебе броню.");
		if(PlayerInfo[playerid][pMoney] < GuardPrice[playerid])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
		if(!IsPlayerConnected(GuardOffer[playerid]))return ErrorMes(playerid,"Этот игрок не в сети.");
		if(!DistPlayerToPlayer(5.0, playerid, GuardOffer[playerid]))return ErrorMes(playerid, "Игрок не около тебя.");
		AddItem(playerid, 19, 1, 50);
		if(GuardOffer[playerid] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Ты надел на себя легкuй бронежuлет.");
		format(string, sizeof(string), "Ты купuл(а) легкuй бронежuлет за $%d у телохранителя %s.",GuardPrice[playerid],PlayerInfo[GuardOffer[playerid]][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "%s купuл(а) у тебя легкuй бронежuлет.", PlayerInfo[playerid][pName]);
		SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
		
		FP_GivePlayerMoney(GuardOffer[playerid], GuardPrice[playerid]);
		FP_GivePlayerMoney(playerid, -GuardPrice[playerid]);
		GuardOffer[playerid] = -1;
		GuardPrice[playerid] = 0;
		return 1;
	}
	else if(strcmp(x_job,"car",true) == 0)
	{
	    if(PlayerInfo[playerid][pLevel] == 0) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
		if(CarOffer[playerid] == -1)return ErrorMes(playerid,"Никто не предлагал тебе страховку.");
		if(!IsPlayerConnected(CarOffer[playerid]))return ErrorMes(playerid,"Этот игрок не в сети.");
		if(PlayerInfo[playerid][pMoney] < CarPrice[playerid])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
		if(!IsPlayerInVehicle(playerid, CarID[playerid]))return ErrorMes(playerid,"Ты должен находuться в транспорте.");

		format(string, sizeof(string), "* %s застраховал(а) твой транспорт за $%d.",CarPrice[playerid],PlayerInfo[CarOffer[playerid]][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ты можешь использовать эвакуатор \"/callcar\" 3 раза.");
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "* Ты застраховал(а) транспорт %s.",PlayerInfo[playerid][pName]);
		SendClientMessage(CarOffer[playerid], COLOR_LIGHTBLUE, string);

		FP_GivePlayerMoney(CarOffer[playerid], CarPrice[playerid]);
		FP_GivePlayerMoney(playerid, -CarPrice[playerid]);

		FP_RemovePlayerFromVehicle(CarOffer[playerid]);
		SetPVarInt(playerid,"CarCalls",3);
		CarOffer[playerid] = -1;
		CarPrice[playerid] = 0;
		return 1;
	}
	else if(strcmp(x_job,"refill",true) == 0)
	{
	    if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
	    if(RefillOffer[playerid] == -1)return ErrorMes(playerid,"Никто не предлагал тебе заправку.");
		if(!IsPlayerConnected(RefillOffer[playerid]))return ErrorMes(playerid,"Этот игрок не сети.");
		if(PlayerInfo[playerid][pMoney] < RefillPrice[playerid])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
		if(!IsPlayerInAnyVehicle(playerid)) return ErrorMes(playerid, "Ты должен находится в транспорте, который необходимо заправuть.");
		if(!DistPlayerToPlayer(5.0, playerid, RefillOffer[playerid]))return ErrorMes(playerid, "Игрок не около тебя.");
        
        new Float:fuel = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mTank];
		
		if(VehInfo[PlayerInfo[playerid][pVehID]][vPercent] == 0.1) VehInfo[PlayerInfo[playerid][pVehID]][vGas] = fuel;
		else VehInfo[PlayerInfo[playerid][pVehID]][vGas] += fuel;

		if(VehInfo[PlayerInfo[playerid][pVehID]][vGas] > VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mTank]) 
		VehInfo[PlayerInfo[playerid][pVehID]][vGas] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mTank];
		VehInfo[PlayerInfo[playerid][pVehID]][vPercent] = VehMInfo[GetVehicleModel(PlayerInfo[playerid][pVehID])-400][mPercent];
		
		new FuelText[8];
		format(FuelText,sizeof(FuelText),"%.2f",VehInfo[PlayerInfo[playerid][pVehID]][vGas]);
		PlayerTextDrawSetString(playerid,pSpeedTXD[playerid][2], FuelText);

		
		if(RefillOffer[playerid] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Ты заправuл(а) свой автомобuль.");
		format(string, sizeof(string), "* Механик %s заправuл(а) ваш транспорт за $%d .",PlayerInfo[RefillOffer[playerid]][pName],RefillPrice[playerid]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ты заправuл(а) транспорт %s.",PlayerInfo[playerid][pName]);
		SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
	

		FP_GivePlayerMoney(RefillOffer[playerid], RefillPrice[playerid]);
		FP_GivePlayerMoney(playerid, -RefillPrice[playerid]);

		RefillOffer[playerid] = -1;
		RefillPrice[playerid] = 0;
		return 1;
	}
	else if(strcmp(x_job,"repair",true) == 0)
	{
	    if(PlayerInfo[playerid][pLevel] == 0) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
		if(RepairOffer[playerid] == -1)return ErrorMes(playerid,"Никто не предлагал тебе починку.");
		if(!IsPlayerConnected(RepairOffer[playerid]))return ErrorMes(playerid,"Этот игрок не сети.");
		if(PlayerInfo[playerid][pMoney] < RepairPrice[playerid])return ErrorMes(playerid,"Недостаточно средств на банковской карте.");
		if(!IsPlayerInAnyVehicle(playerid))return ErrorMes(playerid, "Ты должен находится в транспорте, который необходимо починuть.");
		if(!DistPlayerToPlayer(5.0, playerid, RepairOffer[playerid]))return ErrorMes(playerid, "Игрок не около тебя.");
		FP_SetVehicleHealth(PlayerInfo[playerid][pVehID], 1000.0);
		RepairVehicle(PlayerInfo[playerid][pVehID]);
		if(RepairOffer[playerid] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Ты починuл(а) свой автомобuль.");
		format(string, sizeof(string), "* Механик %s починuл(а) ваш автомобuль за $%d .",PlayerInfo[RepairOffer[playerid]][pName],RepairPrice[playerid]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Ты починuл(а) автомобuль %s",PlayerInfo[playerid][pName]);
		SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);

		FP_GivePlayerMoney(RepairOffer[playerid], RepairPrice[playerid]);
		FP_GivePlayerMoney(playerid, -RepairPrice[playerid]);
		
		RepairOffer[playerid] = -1;
		RepairPrice[playerid] = 0;
		return 1;
	}
	else if(strcmp(x_job,"heal",true) == 0)
	{
		if(HealOffer[playerid] == -1) return ErrorMes(playerid,"Никто не предлагал тебе лечение.");
		if(PlayerInfo[playerid][pMoney] < HealPrice[playerid])return ErrorMes(playerid, "Недостаточно средств на банковской карте.");
		if(!IsPlayerConnected(HealOffer[playerid]))return ErrorMes(playerid, "Этот игрок не в сети.");
		if(!DistPlayerToPlayer(5.0, playerid, HealOffer[playerid]))return ErrorMes(playerid, "Игрок не около тебя.");
  		FP_SetPlayerHealth(playerid,100);
		if(HealOffer[playerid] == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Ты вылечuл(а) себя.");
		format(string, sizeof(string), "%s вылечuл(а) тебя за $%d.",PlayerInfo[HealOffer[playerid]][pName],HealPrice[playerid]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "Ты вылечuл(а) игрока %s.",PlayerInfo[playerid][pName],HealPrice[playerid]);
		SendClientMessage(HealOffer[playerid], COLOR_LIGHTBLUE, string);

		FP_GivePlayerMoney(HealOffer[playerid], HealPrice[playerid]);
		FP_GivePlayerMoney(playerid, -HealPrice[playerid]);

		HealOffer[playerid] = -1;
		HealPrice[playerid] = 0;
		return 1;
	}
	else if(strcmp(x_job,"hand",true) == 0)
	{
		if(HandOffer[playerid] == -1)return ErrorMes(playerid,"Никто не предлагал тебе рукопожатие.");
		if(!IsPlayerConnected(HandOffer[playerid]))return ErrorMes(playerid, "Этот игрок не в сети.");
		new Float:face;
		GetPlayerFacingAngle(HandOffer[playerid], face);
		SetPlayerFacingAngle(playerid, face+180);
		GetPlayerFacingAngle(playerid, face);
		SetPlayerFacingAngle(HandOffer[playerid], face+180);
		format(string, sizeof(string), "* Вы пожали руку %s.", PlayerInfo[HandOffer[playerid]][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Вы пожали руку %s", PlayerInfo[playerid][pName]);
		SendClientMessage(HandOffer[playerid], COLOR_LIGHTBLUE, string);
		ApplyAnimation(playerid,"GANGS","hndshkaa",4.0, 0, 0, 0, 0, 0, 1);
		ApplyAnimation(HandOffer[playerid],"GANGS","hndshkaa",4.0, 0, 0, 0, 0, 0, 1);
		if(GetPVarInt(playerid,"Mask")  && GetPVarInt(HandOffer[playerid],"Mask") ) { format(string, sizeof(string), "* Два Неuзвестных вам человека жмут друг другу руки."); }
		else if(GetPVarInt(playerid,"Mask")  && GetPVarInt(HandOffer[playerid],"Mask") == 0) { format(string, sizeof(string), "* %s ждмёт руку Неuзвестному." ,PlayerInfo[HandOffer[playerid]][pName]); }
		else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(HandOffer[playerid],"Mask") ) { format(string, sizeof(string), "* %s ждмёт руку Неuзвестному.", PlayerInfo[playerid][pName]); }
		else format(string, sizeof(string), "* %s u %s жмут друг другу руки.", PlayerInfo[playerid][pName] ,PlayerInfo[HandOffer[playerid]][pName]);
		ProxDetector(15.0, playerid, string, COLOR_PURPLE);
		HandOffer[playerid] = -1;
	}
	else if(strcmp(x_job,"hug",true) == 0)
	{
		if(HandOffer[playerid] == -1)return ErrorMes(playerid,"Никто не предлагал тебе обняться.");
		if(!IsPlayerConnected(HandOffer[playerid]))return ErrorMes(playerid, "Этот игрок не в сети.");
		new Float:face;
		GetPlayerFacingAngle(HandOffer[playerid], face);
		SetPlayerFacingAngle(playerid, face+180);
		GetPlayerFacingAngle(playerid, face);
		SetPlayerFacingAngle(HandOffer[playerid], face+180);
		format(string, sizeof(string), "* Вы пожали руку %s.", PlayerInfo[HandOffer[playerid]][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Вы пожали руку %s", PlayerInfo[playerid][pName]);
		SendClientMessage(HandOffer[playerid], COLOR_LIGHTBLUE, string);
		ApplyAnimation(playerid,"GANGS","hndshkfa",4.0, 0, 0, 0, 0, 0, 1);
		ApplyAnimation(HandOffer[playerid],"GANGS","hndshkfa",4.0, 0, 0, 0, 0, 0, 1);
		if(GetPVarInt(playerid,"Mask")  && GetPVarInt(HandOffer[playerid],"Mask") ) { format(string, sizeof(string), "* Два Неuзвестных вам человека приобняли друг друга."); }
		else if(GetPVarInt(playerid,"Mask")  && GetPVarInt(HandOffer[playerid],"Mask") == 0) { format(string, sizeof(string), "* %s приобнuмает Неuзвестного." ,PlayerInfo[HandOffer[playerid]][pName]); }
		else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(HandOffer[playerid],"Mask") ) { format(string, sizeof(string), "* %s приобнuмает Неuзвестного.", PlayerInfo[playerid][pName]); }
		else format(string, sizeof(string), "* %s u %s приобняли друг друга.", PlayerInfo[playerid][pName] ,PlayerInfo[HandOffer[playerid]][pName]);
		ProxDetector(15.0, playerid, string, COLOR_PURPLE);
		HandOffer[playerid] = -1;
	}
	else if(strcmp(x_job,"kiss",true) == 0)
	{
		if(KissOffer[playerid] == -1)return ErrorMes(playerid,"Никто не предлагал тебе поцелуй.");
		if(!IsPlayerConnected(KissOffer[playerid]))return ErrorMes(playerid, "Этот игрок не в сети.");
		new Float:face;
		GetPlayerFacingAngle(KissOffer[playerid], face);
		SetPlayerFacingAngle(playerid, face+180);
		GetPlayerFacingAngle(playerid, face);
		SetPlayerFacingAngle(KissOffer[playerid], face+180);
		format(string, sizeof(string), "* Вы поцеловали %s.", PlayerInfo[KissOffer[playerid]][pName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		format(string, sizeof(string), "* Вы поцеловали %s", PlayerInfo[playerid][pName]);
		SendClientMessage(KissOffer[playerid], COLOR_LIGHTBLUE, string);
		if(KissOfferType[playerid] == 1)
		{
			if(PlayerInfo[playerid][pSex] == 1) ApplyAnimation(playerid,"KISSING","giveplayerid_Kiss_01",4.0, 0, 0, 0, 0, 0, 1);
			if(PlayerInfo[playerid][pSex] == 2) ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_01",4.0, 0, 0, 0, 0, 0, 1);
			if(PlayerInfo[KissOffer[playerid]][pSex] == 1) ApplyAnimation(KissOffer[playerid],"KISSING","giveplayerid_Kiss_01",4.0, 0, 0, 0, 0, 0, 1);
			if(PlayerInfo[KissOffer[playerid]][pSex] == 2) ApplyAnimation(KissOffer[playerid],"KISSING","Grlfrd_Kiss_01",4.0, 0, 0, 0, 0, 0, 1);
		}
		if(KissOfferType[playerid] == 2)
		{
		    if(PlayerInfo[playerid][pSex] == 1) ApplyAnimation(playerid,"KISSING","giveplayerid_Kiss_02",4.0, 0, 0, 0, 0, 0, 1);
		    if(PlayerInfo[playerid][pSex] == 2) ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_02",4.0, 0, 0, 0, 0, 0, 1);
		    if(PlayerInfo[KissOffer[playerid]][pSex] == 1) ApplyAnimation(KissOffer[playerid],"KISSING","giveplayerid_Kiss_02",4.0, 0, 0, 0, 0, 0, 1);
		    if(PlayerInfo[KissOffer[playerid]][pSex] == 2) ApplyAnimation(KissOffer[playerid],"KISSING","Grlfrd_Kiss_02",4.0, 0, 0, 0, 0, 0, 1);
		}
		if(KissOfferType[playerid] == 3)
		{
		    if(PlayerInfo[playerid][pSex] == 1) ApplyAnimation(playerid,"KISSING","giveplayerid_Kiss_03",4.0, 0, 0, 0, 0, 0, 1);
		    if(PlayerInfo[playerid][pSex] == 2) ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_03",4.0, 0, 0, 0, 0, 0, 1);
		    if(PlayerInfo[KissOffer[playerid]][pSex] == 1) ApplyAnimation(KissOffer[playerid],"KISSING","giveplayerid_Kiss_03",4.0, 0, 0, 0, 0, 0, 1);
		    if(PlayerInfo[KissOffer[playerid]][pSex] == 2) ApplyAnimation(KissOffer[playerid],"KISSING","Grlfrd_Kiss_03",4.0, 0, 0, 0, 0, 0, 1);
		}
		if(GetPVarInt(playerid,"Mask")  && GetPVarInt(KissOffer[playerid],"Mask") ) { format(string, sizeof(string), "* Два Неuзвестных вам человека целуют друг друга."); }
		else if(GetPVarInt(playerid,"Mask")  && GetPVarInt(KissOffer[playerid],"Mask") == 0) { format(string, sizeof(string), "* %s целует Неuзвестного." ,PlayerInfo[KissOffer[playerid]][pName]); }
		else if(!GetPVarInt(playerid,"Mask") && GetPVarInt(KissOffer[playerid],"Mask") ) { format(string, sizeof(string), "* %s целует Неuзвестного.", PlayerInfo[playerid][pName]); }
		else format(string, sizeof(string), "* %s u %s целуют друг друга.", PlayerInfo[playerid][pName] ,PlayerInfo[KissOffer[playerid]][pName]);
		ProxDetector(15.0, playerid, string, COLOR_PURPLE);
		KissOffer[playerid] = -1;
		KissOfferType[playerid] = 0;
	}
	
	
	else if(!strcmp(x_job,"taxi",true))
	{
	    if(TeamInfo[playerid][tID] != TAXI)return ErrorMes(playerid,"Ты не водитель такси.");
		if(!GetPVarInt(playerid,"taxi"))return ErrorMes(playerid,"Ты не на службе.");
		if(TaxiCallTime[playerid])return ErrorMes(playerid, "Ты уже принял вызов.");
		SearchingTaxi(playerid);
	}
	else if(!strcmp(x_job,"medic",true))
	{
	    if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
	    if(TeamInfo[playerid][tID] != MEDIC)return ErrorMes(playerid,"Ты не медик.");
		if(MedicCallTime[playerid])return ErrorMes(playerid, "Ты уже принял вызов.");
        SearchingMedic(playerid);
	}
	else if(!strcmp(x_job,"mechanic",true))
	{
	    if(!PlayerInfo[playerid][pLevel]) return ErrorMes(playerid,"Ты не можешь принuмать услугu на 0 уровне.");
	    if(PlayerInfo[playerid][pJob] != MECH)return ErrorMes(playerid,"Ты не механик.");
		if(MechanicCallTime[playerid])return ErrorMes(playerid, "Ты уже принял вызов.");
		SearchingMech(playerid);
	}
	return 1;
}
forward OnQueryFinish(playerid,queryid,string[]);
public OnQueryFinish(playerid,queryid,string[])
{
	#if defined LOGGING

	#endif
	//if(playerid == -1) printf("%d | %d | %s", playerid,queryid,string);
	//else printf("%s[%d] | %d | %s", PlayerInfo[playerid][pName],playerid,queryid,string);
	switch(queryid)
	{
		case DB_ADD_CAR:
		{
			VehInfo[playerid][vID] = cache_insert_id();
		}
		case DB_ADD_FORUM:
		{
			PlayerInfo[playerid][pID] = cache_insert_id();
		}
		case DB_ADD_VOTE:
		{
			VoteInfo[playerid][voID] = cache_insert_id();
		}
		case DB_LOAD_SETTINGS:
		{
            if(!cache_num_rows()) return 1;
            cache_get_value_name_int(0,"kazna", KAZNA); 
		}
		case DB_LOAD_BIZNES:
		{
			new rows, biznesid;
		    cache_get_row_count(rows);
            if(rows)
            {
				new str[256];
                BIZNES = rows;
                for(new i; i<rows; i++)
				{
					biznesid ++;
					cache_get_value_name_int(i,"ID", BiznesInfo[biznesid][bID]); 
		            cache_get_value_name(i,"Owner",BiznesInfo[biznesid][bOwner], 24);
					cache_get_value_name_int(i,"Mafia", BiznesInfo[biznesid][bMafia]); 
		            cache_get_value_name_float(i,"Enter_X", BiznesInfo[biznesid][bEnterX]);
		            cache_get_value_name_float(i,"Enter_Y", BiznesInfo[biznesid][bEnterY]); 
		            cache_get_value_name_float(i,"Enter_Z", BiznesInfo[biznesid][bEnterZ]); 
		            cache_get_value_name_int(i,"Type", BiznesInfo[biznesid][bType]);
		            cache_get_value_name_int(i,"Money", BiznesInfo[biznesid][bMoney]); 
		            cache_get_value_name_int(i,"EnterCost", BiznesInfo[biznesid][bEnterCost]); 
		            cache_get_value_name_int(i,"Prods", BiznesInfo[biznesid][bProds]); 
		            cache_get_value_name_int(i,"MaxProds", BiznesInfo[biznesid][bMaxProds]); 

					/*for(new in; in<sizeof(BIInfo); in++)
					{
						if(BiznesInfo[biznesid][bInt] == BIInfo[in][Int])
						{
							if(BiznesInfo[biznesid][bExitX] - BIInfo[in][Exit_X] < 1 && BiznesInfo[biznesid][bExitY] - BIInfo[in][Exit_Y] < 1)
							{
								format(str,sizeof(str),"UPDATE `samp_biznes` SET `Type` = '%d' WHERE `ID` = '%d'",in,BiznesInfo[biznesid][bID]);
								mysql_function_query(1,str,false,"","");
							}
						}
					}*/
					strmid(BiznesInfo[biznesid][bMessage], BIInfo[BiznesInfo[biznesid][bType]][BizName], 0, 32,32);
					BiznesInfo[biznesid][bExitX] = BIInfo[BiznesInfo[biznesid][bType]][Exit_X];
		            BiznesInfo[biznesid][bExitY] = BIInfo[BiznesInfo[biznesid][bType]][Exit_Y];
		            BiznesInfo[biznesid][bExitZ] = BIInfo[BiznesInfo[biznesid][bType]][Exit_Z];
		            BiznesInfo[biznesid][bInt] = BIInfo[BiznesInfo[biznesid][bType]][Int];
					BiznesInfo[biznesid][bPrice] = BIInfo[BiznesInfo[biznesid][bType]][Price];
					BiznesInfo[biznesid][bLevel] = BIInfo[BiznesInfo[biznesid][bType]][Level];
					BiznesInfo[biznesid][bProdsCount] = BIInfo[BiznesInfo[biznesid][bType]][ProdsCount];
					if(BiznesInfo[biznesid][bProdsCount] && !BiznesInfo[biznesid][bProdsCost][0])
					{
						switch(BiznesInfo[biznesid][bType])
						{
							case 1:
							{
								for(new j; j<BiznesInfo[biznesid][bProdsCount]; j++)
								{
									BiznesInfo[biznesid][bProdsCost][j] = FuelCost[j];
								}
							}
							case 11,12:
							{
								for(new j; j<BiznesInfo[biznesid][bProdsCount]; j++)
								{
									BiznesInfo[biznesid][bProdsCost][j] = ShopType[1][j];
								}
							}
							case 13..15:
							{
								for(new j; j<BiznesInfo[biznesid][bProdsCount]; j++)
								{
									BiznesInfo[biznesid][bProdsCost][j] = GunType[1][j];
								}
							}
							default: {}
						}
					}	
					CreateDynamicMapIcon(BiznesInfo[biznesid][bEnterX],BiznesInfo[biznesid][bEnterY],BiznesInfo[biznesid][bEnterZ],BIInfo[BiznesInfo[biznesid][bType]][MapIcon], 0, 0, 0, -1, 300.0);
					BiznesInfo[biznesid][bCheckpoint] = CreateDynamicCP(BiznesInfo[biznesid][bEnterX],BiznesInfo[biznesid][bEnterY],BiznesInfo[biznesid][bEnterZ], 1.0, 0, 0, -1, 4.0);
					
					if(!strcmp(BiznesInfo[biznesid][bOwner],"The State",true))
					{
						BiznesPickUps[biznesid]= CreateDynamicPickup(1274, 23, BiznesInfo[biznesid][bEnterX], BiznesInfo[biznesid][bEnterY], BiznesInfo[biznesid][bEnterZ],0,0,-1,100.0);
						format(str, sizeof(str), "{00CC00}%s{33CCFF}\nЦена: {FFD700}$%d{33CCFF}\nУровень: {FFD700}%d", BiznesInfo[biznesid][bMessage],BiznesInfo[biznesid][bPrice],BiznesInfo[biznesid][bLevel]);
						BiznesInfo[biznesid][bText] = Create3DTextLabel(str,COLOR_WHITE,BiznesInfo[biznesid][bEnterX], BiznesInfo[biznesid][bEnterY], BiznesInfo[biznesid][bEnterZ]+1.2,20.0,0,1);
					}
					else
					{
						BiznesPickUps[biznesid]= CreateDynamicPickup(1274, 23, BiznesInfo[biznesid][bEnterX], BiznesInfo[biznesid][bEnterY], BiznesInfo[biznesid][bEnterZ],0,0,-1,100.0);
						format(str, sizeof(str), "{00CC00}%s{33CCFF}\nВладелец: {00CC00}%s{33CCFF}\n{33CCFF}Крыша: {FFD700}%s", BiznesInfo[biznesid][bMessage],BiznesInfo[biznesid][bOwner],GetTeamName(BiznesInfo[biznesid][bMafia]));
						BiznesInfo[biznesid][bText] = Create3DTextLabel(str,COLOR_WHITE,BiznesInfo[biznesid][bEnterX], BiznesInfo[biznesid][bEnterY], BiznesInfo[biznesid][bEnterZ]+1.2,20.0,0,1);
					}
				}
			}
			return 1;
		}
		case DB_LOAD_CAR:
		{
			new rows;
		    cache_get_row_count(rows);
            if(!rows) return 1;
			PlayerInfo[playerid][pCars] = rows;
            new vehicleid, Float:Pos[4],color[2],delay;
            for(new i; i<rows; i++)
			{	
				cache_get_value_name_int(i,"Model", vehicleid); 
				if(vehicleid < 400 || vehicleid > 611) continue;
				cache_get_value_name_float(i,"Park_x", Pos[0]);
				cache_get_value_name_float(i,"Park_y", Pos[1]); 
		        cache_get_value_name_float(i,"Park_z", Pos[2]); 
		        cache_get_value_name_float(i,"Park_a", Pos[3]); 
				cache_get_value_name_int(i,"Color1", color[0]); 
		        cache_get_value_name_int(i,"Color2", color[1]); 
				cache_get_value_name_int(i,"Delay", delay); 
				
				vehicleid = AddStaticVehicleEx(vehicleid, Pos[0], Pos[1], Pos[2]+1, Pos[3], color[0], color[1], delay);
				
				cache_get_value_name_int(i,"ID", VehInfo[vehicleid][vID]); 
		        cache_get_value_name_int(i,"Model", VehInfo[vehicleid][vModel]); 
				cache_get_value_name_int(i,"Type", VehInfo[vehicleid][vType]); 
				cache_get_value_name_int(i,"Value", VehInfo[vehicleid][vValue]); 
		        cache_get_value_name_float(i,"Park_x", VehInfo[vehicleid][vParkX]); 
				cache_get_value_name_float(i,"Park_y", VehInfo[vehicleid][vParkY]); 
		        cache_get_value_name_float(i,"Park_z", VehInfo[vehicleid][vParkZ]); 
		        cache_get_value_name_float(i,"Park_a", VehInfo[vehicleid][vParkA]); 
		        cache_get_value_name_int(i,"Color1", VehInfo[vehicleid][vColor1]); 
		        cache_get_value_name_int(i,"Color2", VehInfo[vehicleid][vColor2]); 
				cache_get_value_name_int(i,"Delay", VehInfo[vehicleid][vDelay]); 
				cache_get_value_name(i,"Owner",VehInfo[vehicleid][vOwner],24);
				cache_get_value_name_int(i,"Lock", VehInfo[vehicleid][vLock]); 
		        cache_get_value_name_int(i,"Spoiler", VehInfo[vehicleid][vSpoiler]); 
				cache_get_value_name_int(i,"Hood", VehInfo[vehicleid][vHood]); 
		        cache_get_value_name_int(i,"Sideskirt", VehInfo[vehicleid][vSideskirt]); 
				cache_get_value_name_int(i,"Nitro", VehInfo[vehicleid][vNitro]); 
		        cache_get_value_name_int(i,"Lamps", VehInfo[vehicleid][vLamps]); 
				cache_get_value_name_int(i,"Exhaust", VehInfo[vehicleid][vExhaust]); 
		        cache_get_value_name_int(i,"Wheels", VehInfo[vehicleid][vWheels]); 
				cache_get_value_name_int(i,"Roof", VehInfo[vehicleid][vRoof]); 
		        cache_get_value_name_int(i,"Stereo", VehInfo[vehicleid][vStereo]); 
				cache_get_value_name_int(i,"Hydraulics", VehInfo[vehicleid][vHydraulics]); 
		        cache_get_value_name_int(i,"Bullbar", VehInfo[vehicleid][vBullbar]); 
				cache_get_value_name_int(i,"RearBullbars", VehInfo[vehicleid][vRearBullbars]); 
		        cache_get_value_name_int(i,"FrontSign", VehInfo[vehicleid][vFrontSign]); 
				cache_get_value_name_int(i,"FrontBullbars", VehInfo[vehicleid][vFrontBullbars]); 
		        cache_get_value_name_int(i,"FrontBumper",  VehInfo[vehicleid][vFrontBumper]); 
				cache_get_value_name_int(i,"RearBumper", VehInfo[vehicleid][vRearBumper]); 
		        cache_get_value_name_int(i,"Vents", VehInfo[vehicleid][vVents]); 
				cache_get_value_name_int(i,"PaintJob", VehInfo[vehicleid][vPaintJob]); 
		        cache_get_value_name_int(i,"Neon", VehInfo[vehicleid][vNeon]); 
				cache_get_value_name(i,"Plate",VehInfo[vehicleid][vPlate],24);
				
				cache_get_value_name_float(i,"Gas", VehInfo[vehicleid][vGas]);
		        cache_get_value_name_float(i,"Procent", VehInfo[vehicleid][vPercent]);
				cache_get_value_name_float(i,"Drived", VehInfo[vehicleid][vDrived]);
				
				if(VehInfo[vehicleid][vPercent] < 0.01) 
				{
					VehInfo[vehicleid][vGas] = VehMInfo[GetVehicleModel(vehicleid)-400][mTank];
					VehInfo[vehicleid][vPercent] = VehMInfo[GetVehicleModel(vehicleid)-400][mPercent];
				}	
				VehInfo[vehicleid][vPos][0] = VehInfo[vehicleid][vParkX];
				VehInfo[vehicleid][vPos][1] = VehInfo[vehicleid][vParkY];
				VehInfo[vehicleid][vPos][2] = VehInfo[vehicleid][vParkZ];
				SetVehicleNumberPlate(vehicleid, VehInfo[vehicleid][vPlate]);
				SetVehicleToRespawn(vehicleid);
			}
			return 1;
		}
		case DB_LOAD_CARS:
		{
			new rows;
		    cache_get_row_count(rows);
            if(!rows) return 1;
            new vehicleid, Float:Pos[4],color[2],delay;
            for(new i; i<rows; i++)
			{	
				cache_get_value_name_int(i,"Model", vehicleid); 
				if(vehicleid < 400 || vehicleid > 611) continue;
				cache_get_value_name_float(i,"Park_x", Pos[0]);
				cache_get_value_name_float(i,"Park_y", Pos[1]); 
		        cache_get_value_name_float(i,"Park_z", Pos[2]); 
		        cache_get_value_name_float(i,"Park_a", Pos[3]); 
				cache_get_value_name_int(i,"Color1", color[0]); 
		        cache_get_value_name_int(i,"Color2", color[1]); 
				cache_get_value_name_int(i,"Delay", delay); 
				
				vehicleid = AddStaticVehicleEx(vehicleid, Pos[0], Pos[1], Pos[2]+1, Pos[3], color[0], color[1], delay);
				
				cache_get_value_name_int(i,"ID", VehInfo[vehicleid][vID]); 
		        cache_get_value_name_int(i,"Model", VehInfo[vehicleid][vModel]); 
				cache_get_value_name_int(i,"Type", VehInfo[vehicleid][vType]); 
				cache_get_value_name_int(i,"Value", VehInfo[vehicleid][vValue]); 
		        cache_get_value_name_float(i,"Park_x", VehInfo[vehicleid][vParkX]); 
				cache_get_value_name_float(i,"Park_y", VehInfo[vehicleid][vParkY]); 
		        cache_get_value_name_float(i,"Park_z", VehInfo[vehicleid][vParkZ]); 
		        cache_get_value_name_float(i,"Park_a", VehInfo[vehicleid][vParkA]); 
		        cache_get_value_name_int(i,"Color1", VehInfo[vehicleid][vColor1]); 
		        cache_get_value_name_int(i,"Color2", VehInfo[vehicleid][vColor2]); 
				cache_get_value_name_int(i,"Delay", VehInfo[vehicleid][vDelay]); 
				cache_get_value_name(i,"Owner",VehInfo[vehicleid][vOwner],24);
				if(!strlen(VehInfo[vehicleid][vOwner])) strmid(VehInfo[vehicleid][vOwner],"The State",0,24,24);
				cache_get_value_name_int(i,"Lock", VehInfo[vehicleid][vLock]); 
		        cache_get_value_name_int(i,"Spoiler", VehInfo[vehicleid][vSpoiler]); 
				cache_get_value_name_int(i,"Hood", VehInfo[vehicleid][vHood]); 
		        cache_get_value_name_int(i,"Sideskirt", VehInfo[vehicleid][vSideskirt]); 
				cache_get_value_name_int(i,"Nitro", VehInfo[vehicleid][vNitro]); 
		        cache_get_value_name_int(i,"Lamps", VehInfo[vehicleid][vLamps]); 
				cache_get_value_name_int(i,"Exhaust", VehInfo[vehicleid][vExhaust]); 
		        cache_get_value_name_int(i,"Wheels", VehInfo[vehicleid][vWheels]); 
				cache_get_value_name_int(i,"Roof", VehInfo[vehicleid][vRoof]); 
		        cache_get_value_name_int(i,"Stereo", VehInfo[vehicleid][vStereo]); 
				cache_get_value_name_int(i,"Hydraulics", VehInfo[vehicleid][vHydraulics]); 
		        cache_get_value_name_int(i,"Bullbar", VehInfo[vehicleid][vBullbar]); 
				cache_get_value_name_int(i,"RearBullbars", VehInfo[vehicleid][vRearBullbars]); 
		        cache_get_value_name_int(i,"FrontSign", VehInfo[vehicleid][vFrontSign]); 
				cache_get_value_name_int(i,"FrontBullbars", VehInfo[vehicleid][vFrontBullbars]); 
		        cache_get_value_name_int(i,"FrontBumper",  VehInfo[vehicleid][vFrontBumper]); 
				cache_get_value_name_int(i,"RearBumper", VehInfo[vehicleid][vRearBumper]); 
		        cache_get_value_name_int(i,"Vents", VehInfo[vehicleid][vVents]); 
				cache_get_value_name_int(i,"PaintJob", VehInfo[vehicleid][vPaintJob]); 
		        cache_get_value_name_int(i,"Neon", VehInfo[vehicleid][vNeon]); 
				cache_get_value_name(i,"Plate",VehInfo[vehicleid][vPlate],24);
				VehInfo[vehicleid][vPos][0] = VehInfo[vehicleid][vParkX];
				VehInfo[vehicleid][vPos][1] = VehInfo[vehicleid][vParkY];
				VehInfo[vehicleid][vPos][2] = VehInfo[vehicleid][vParkZ];
				SetVehicleNumberPlate(vehicleid, VehInfo[vehicleid][vPlate]);
				VehInfo[vehicleid][vGas] = VehMInfo[GetVehicleModel(vehicleid)-400][mTank];
				VehInfo[vehicleid][vPercent] = VehMInfo[GetVehicleModel(vehicleid)-400][mPercent];
				SetVehicleToRespawn(vehicleid);
			} //
			return 1;
		}
		case DB_LOAD_HOUSES:
		{
			new rows, houseid;
		    cache_get_row_count(rows);
            if(!rows) return 1;

			new str[256];
            HOUSE = rows;
            for(new i = 0; i < rows; i ++)
			{
				houseid ++;
				cache_get_value_name_int(i,"ID", HouseInfo[houseid][hID]); 
				cache_get_value_name(i,"Owner",HouseInfo[houseid][hOwner],24);
				cache_get_value_name_float(i,"Enter_X", HouseInfo[houseid][hEnterX]); 
	            cache_get_value_name_float(i,"Enter_Y", HouseInfo[houseid][hEnterY]); 
	            cache_get_value_name_float(i,"Enter_Z", HouseInfo[houseid][hEnterZ]); 
				cache_get_value_name_int(i,"Type", HouseInfo[houseid][hType]); 
				cache_get_value_name_int(i,"Lock", HouseInfo[houseid][hLock]); 
				cache_get_value_name_int(i,"Money", HouseInfo[houseid][hMoney]); 
				cache_get_value_name_int(i,"Mats", HouseInfo[houseid][hMats]); 
				cache_get_value_name_int(i,"Drugs", HouseInfo[houseid][hDrugs]); 

	            cache_get_value_name_int(i,"Hel", HouseInfo[houseid][hHel]); 
				cache_get_value_name_int(i,"Arm", HouseInfo[houseid][hArm]); 
				cache_get_value_name_int(i,"Safe", HouseInfo[houseid][hSafe]); 

				for(new h = 0, num[3], string__[20]; h < 20; h++)
				{
					format(num, sizeof num, "%d", h);
					cache_get_value_name(i, num, string__, 20);
					sscanf(string__, "p<|>iif", HouseInfo[houseid][hItems][h], HouseInfo[houseid][hValue][h], HouseInfo[houseid][hState][h]);
				}

				/*for(new in; in<sizeof(HIInfo); in++)
				{
					if(HouseInfo[houseid][hInt] == HIInfo[in][Int])
					{
						if(HouseInfo[houseid][hExitX] - HIInfo[in][Exit_X] < 1 && HouseInfo[houseid][hExitY] - HIInfo[in][Exit_Y] < 1)
						{
							format(str,sizeof(str),"UPDATE `samp_houses` SET `Type` = '%d' WHERE `ID` = '%d'",in,HouseInfo[houseid][hID]);
							mysql_function_query(1,str,false,"","");
						}
					}
				}*/

				HouseInfo[houseid][hExitX] = HIInfo[HouseInfo[houseid][hType]][Exit_X];
	            HouseInfo[houseid][hExitY] = HIInfo[HouseInfo[houseid][hType]][Exit_Y];
	            HouseInfo[houseid][hExitZ] = HIInfo[HouseInfo[houseid][hType]][Exit_Z];
	            HouseInfo[houseid][hInt] = HIInfo[HouseInfo[houseid][hType]][Int];
				HouseInfo[houseid][hPrice] = HIInfo[HouseInfo[houseid][hType]][Price];
				HouseInfo[houseid][hLevel] = HIInfo[HouseInfo[houseid][hType]][Level];
				
				HouseInfo[houseid][hCheckpoint] = CreateDynamicCP(HouseInfo[houseid][hEnterX],HouseInfo[houseid][hEnterY],HouseInfo[houseid][hEnterZ], 1.0, 0, 0, -1, 4.0);

				if(!strcmp(HouseInfo[houseid][hOwner],"The State",true))
				{
					HouseInfo[houseid][hMapIcon] = CreateDynamicMapIcon(HouseInfo[houseid][hEnterX],HouseInfo[houseid][hEnterY],HouseInfo[houseid][hEnterZ],31,COLOR_LIGHTRED,0,0,-1,150.0);
					HousePickUps[houseid] = CreateDynamicPickup(1273, 23, HouseInfo[houseid][hEnterX], HouseInfo[houseid][hEnterY], HouseInfo[houseid][hEnterZ],0,0,-1,100.0);
					format(str, sizeof(str), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Уровень: {FFD700}%d\n{33CCFF}Цена: {FFD700}$%d",
					HouseInfo[houseid][hID],HIInfo[HouseInfo[houseid][hType]][HouseName],HouseInfo[houseid][hLevel],HouseInfo[houseid][hPrice]);
					HouseInfo[houseid][hText] = Create3DTextLabel(str,COLOR_GREEN,HouseInfo[houseid][hEnterX], HouseInfo[houseid][hEnterY], HouseInfo[houseid][hEnterZ]+1.2,20.0,0,1);
				}
				else
				{
					HouseInfo[houseid][hMapIcon] = CreateDynamicMapIcon(HouseInfo[houseid][hEnterX],HouseInfo[houseid][hEnterY],HouseInfo[houseid][hEnterZ],32,COLOR_LIGHTRED,0,0,-1,150.0);
					HousePickUps[houseid] = CreateDynamicPickup(1272, 23, HouseInfo[houseid][hEnterX], HouseInfo[houseid][hEnterY], HouseInfo[houseid][hEnterZ],0,0,-1,100.0);
					format(str, sizeof(str), "{00CC00}Дом №%d\n{33CCFF}Класс: {FFD700}%s\n{33CCFF}Владелец: {00CC00}%s",
					HouseInfo[houseid][hID],HIInfo[HouseInfo[houseid][hType]][HouseName],HouseInfo[houseid][hOwner]);
					HouseInfo[houseid][hText] = Create3DTextLabel(str,COLOR_LIGHTBLUE,HouseInfo[houseid][hEnterX], HouseInfo[houseid][hEnterY], HouseInfo[houseid][hEnterZ]+1.2,20.0,0,1);
				}
			}
			return 1;
		}
		case DB_LOAD_FRACTION:
		{
			new rows, fractionid;
			cache_get_row_count(rows);
            if(rows)
            {
                for(new i; i<rows; i++)
				{
					cache_get_value_name_int(i,"ID", fractionid); 
					cache_get_value_name_int(i,"Level", FractionInfo[fractionid][oLevel]); 
					cache_get_value_name_int(i,"Points", FractionInfo[fractionid][oPoints]); 
					cache_get_value_name_int(i,"Mats", FractionInfo[fractionid][oMats]); 
					cache_get_value_name_int(i,"Drugs", FractionInfo[fractionid][oDrugs]); 
					cache_get_value_name_int(i,"Money", FractionInfo[fractionid][oMoney]); 
					cache_get_value_name_int(i,"MatsLevel", FractionInfo[fractionid][oMatsLevel]); 
					cache_get_value_name_int(i,"DrugsLevel", FractionInfo[fractionid][oDrugsLevel]); 
					cache_get_value_name_int(i,"MoneyLevel", FractionInfo[fractionid][oMoneyLevel]); 
					cache_get_value_name_int(i,"GunLevel", FractionInfo[fractionid][oGunLevel]); 
				}
			}
			return 1;
		}
		case DB_LOAD_ZONES:
		{
			new rows;
			cache_get_row_count(rows);
            if(!rows) return 1;
            for(new i; i < rows; i++)
			{
				cache_get_value_name_float(i,"X1", GZInfo[i][gCoords][0]); 
				cache_get_value_name_float(i,"Y1", GZInfo[i][gCoords][1]); 
				cache_get_value_name_float(i,"X2", GZInfo[i][gCoords][2]); 
				cache_get_value_name_float(i,"Y2", GZInfo[i][gCoords][3]); 
				cache_get_value_name_int(i,"Gang", GZInfo[i][gFrakVlad]); 
				GZInfo[i][gID] = GangZoneCreate(GZInfo[i][gCoords][0],GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]);
			}
			return 1;
		}
		case DB_LOAD_VOTES:
		{
			new rows;
			cache_get_row_count(rows);
            if(!rows) return 1;
            for(new i; i < rows; i++)
			{
				new str[210], rank, index;
				cache_get_value_name_int(i,"rank", rank);
				index = rank*10;

				cache_get_value_name_int(i,"id", VoteInfo[rank][voID]); 
				cache_get_value_name_int(i,"time", VoteInfo[rank][voTime]); 
				cache_get_value_name_int(i,"status", VoteInfo[rank][voStatus]); 
				cache_get_value_name_int(i,"rank", VoteInfo[rank][voRank]); 
				cache_get_value_name_int(i,"members", VoteInfo[rank][voCandidates]); 
				
				cache_get_value_name(i,"candidates",str, 210);
				sscanf(str,"p<|>s[20]s[20]s[20]s[20]s[20]s[20]s[20]s[20]s[20]s[20]",
				VName[index],VName[index+1],VName[index+2],VName[index+3],VName[index+4],VName[index+5],VName[index+6],VName[index+7],VName[index+8],VName[index+9]);

				cache_get_value_name(i,"votes",str, 110);
				sscanf(str,"p<|>iiiiiiiiii",
				VVotes[index],VVotes[index+1],VVotes[index+2],VVotes[index+3],VVotes[index+4],VVotes[index+5],VVotes[index+6],VVotes[index+7],VVotes[index+8],VVotes[index+9]);

			}
			return 1;
		}
		case DB_LOAD_VOTERS:
		{
            new rows;
			cache_get_row_count(rows);
            if(!rows) return 1;
            for(new i = 0; i < rows; i++)
            {
            	new str[12], vote_id, vote_type;
				cache_get_value_name_int(i,"vote_type", vote_type);
            	format(str, sizeof str, "Vote_%d", vote_type);
				cache_get_value_name_int(i,"vote_id", vote_id);
				SetPVarInt(playerid, str, vote_id);
            }

        }    
		case DB_CHECK_BONUS:
		{
            if(cache_num_rows()) 
            {
            	cache_get_value_name_int(0,"SSM", PlayerInfo[playerid][pSSM]);

            	new __string[32];
            	format(__string, sizeof __string, "%d SSM", PlayerInfo[playerid][pSSM]);
				PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], __string);
			}
			return ShowDonateDialog(playerid);
		}
		case DB_CHECK_ACCOUNT:
		{
			if(cache_num_rows())
			{
				return ShowDialog(playerid, D_LOGIN);
			}
			
			if(!IsValidName(playerid, PlayerInfo[playerid][pName])) return ShowDialog(playerid,D_RPNAME);

			if(strfind(PlayerInfo[playerid][pName], "[SS]", true) != -1 || strfind(PlayerInfo[playerid][pName], "[FP]", true) != -1 || strfind(PlayerInfo[playerid][pName], "[PC]", true) != -1) 
			{
				ErrorMes(playerid, "Префиксы [FP], [PC] и [SS] может установить только администрация.");
				return ShowDialog(playerid,D_RPNAME);
			}

			return ShowDialog(playerid, D_REGISTER);
		}
		case DB_CHECK_RPNAME:
		{
		    if(cache_num_rows())
		    {
				ErrorMes(playerid,"Этот Ник уже занят, придумайте другой.");
               	return ShowDialog(playerid, D_RPNAME);
            }
		    strmid(PlayerInfo[playerid][pName], string, 0, 24,24);
		    SetPlayerName(playerid,PlayerInfo[playerid][pName]);
			return ShowDialog(playerid, D_REGISTER);
		}
		case DB_BAN_ADMIN:
		{
			if(cache_num_rows() && PlayerInfo[playerid][pAdmin] != 10)return ErrorMes(playerid, "Администратора нельзя забанuть.");
			
			new PlayerName[24],query[80],days,reason[64];
			if(sscanf(string,"s[24]is[64]",PlayerName,days,reason)) return 1;
			format(query,sizeof(query),"SELECT `name` FROM `samp_users` WHERE `name` = '%s'",PlayerName);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dds",playerid,DB_CHECK_ACCOUNT_BAN,string);
		}
		case DB_CHECK_ACCOUNT_BAN:
		{
			if(!cache_num_rows()) return ErrorMes(playerid,"Данный аккаунт отсутствует в базе данных.");
			
			new PlayerName[24],query[80],days,reason[64];
			if(sscanf(string,"s[24]is[64]",PlayerName,days,reason)) return 1;
			format(query,sizeof(query),"SELECT `Name` FROM `samp_bans` WHERE `Name` = '%s'",PlayerName);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dds",playerid,DB_BAN_OFFLINE,string);
		}
		
		case DB_BAN_OFFLINE:
		{	
			if(cache_num_rows()) return ErrorMes(playerid,"Данный аккаунт уже находится в бан листе.");
			
			new PlayerName[24],days,reason[64];
			if(sscanf(string,"s[24]is[64]",PlayerName,days,reason)) return 1;
			
			new query[128];
			format(query, sizeof(query), "Администратор %s забанил(а) %s на %d %s. Причина: %s", PlayerInfo[playerid][pName], PlayerName, days, GetWord(days,"день","дня","дней"), reason);
			SendClientMessageToAll(COLOR_LIGHTRED, query);
	
			TempBan(PlayerName,"Скрыт",PlayerInfo[playerid][pName],days,reason);

		}
		case DB_UNBAN:
		{
			if(!cache_num_rows()) return ErrorMes(playerid,"Данный аккаунт отсутствует в бан листе.");
			
			new query[80];
			format(query,sizeof(query), "DELETE FROM `samp_bans` WHERE `Name` = '%s'",string);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			
			format(query,sizeof(query),"DELETE FROM `samp_warns` WHERE `Name` = '%s'",string);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			
			format(query,sizeof(query), "[ACMD] %s разбанил(а) %s.",PlayerInfo[playerid][pName], string);
			ABroadCast(COLOR_ACMD,query,1);
			printf(query);
		}
		case DB_CHECK_PASSWORD:
		{
			new fetch[210];
			if(!cache_num_rows())
			{
				AddPVarInt(playerid,"WrongPassword", 1);
				if(GetPVarInt(playerid, "WrongPassword") == 3) return FP_Kick(playerid,"Подбор пароля");
				format(fetch,sizeof(fetch),"{FF0000}[ОШИБКА]{FFFFFF} Неверный пароль. Осталось {FF0000}%d{FFFFFF} попыток.",3 - GetPVarInt(playerid,"WrongPassword"));
				SendClientMessage(playerid,-1,fetch);
				return ShowDialog(playerid, D_LOGIN);
			}

			cache_get_value_name_int(0,"id", PlayerInfo[playerid][pID]);
			//cache_get_value_name(0,"email",PlayerInfo[playerid][pEmail],1,64);
			cache_get_value_name_int(0,"sex", PlayerInfo[playerid][pSex]);
			cache_get_value_name(0,"refer",PlayerInfo[playerid][pRefer],24);
			cache_get_value_name_int(0,"level", PlayerInfo[playerid][pLevel]); 
			cache_get_value_name_int(0,"exp", PlayerInfo[playerid][pExp]); 
			cache_get_value_name_int(0,"SSM", PlayerInfo[playerid][pSSM]);

			format(fetch, sizeof fetch, "%d SSM", PlayerInfo[playerid][pSSM]);
			PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], fetch);

			cache_get_value_name(0,"textdraws",fetch,12);
			sscanf(fetch, "p<|>iiii",
				TextDrawInfo[playerid][DateTD],
				TextDrawInfo[playerid][TimeTD],
				TextDrawInfo[playerid][SpeedTD],
				TextDrawInfo[playerid][LevelTD]);


			if(TextDrawInfo[playerid][DateTD]) TextDrawShowForPlayer(playerid,DateDisp);
			if(TextDrawInfo[playerid][TimeTD]) TextDrawShowForPlayer(playerid,TimeDisp);
			
			cache_get_value_name(0,"fight",fetch,12);
			sscanf(fetch, "p<|>iiiii",
				PlayerInfo[playerid][pFStyle],PlayerInfo[playerid][pBoxing],
				PlayerInfo[playerid][pKunfu],PlayerInfo[playerid][pKneehead],PlayerInfo[playerid][pGrabkick]);


			switch(PlayerInfo[playerid][pFStyle])
			{
				case 0: SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
				case 1: SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
				case 2: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
				case 3: SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
				case 4: SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
			}

			UpdateLevelText(playerid);
			
			cache_get_value_name_int(0,"Origin", PlayerInfo[playerid][pOrigin]); 
			cache_get_value_name_int(0,"Spawn", PlayerInfo[playerid][pSpawn]); 
			cache_get_value_name_int(0,"MatsTime", PlayerInfo[playerid][pMatsTime]); 
			cache_get_value_name_int(0,"Skin", PlayerInfo[playerid][pSkin]); 

			cache_get_value_name(0,"Skins",fetch,20);
			sscanf(fetch, "p<|>iiiii",
				PlayerInfo[playerid][pSkins][0],
				PlayerInfo[playerid][pSkins][1],
				PlayerInfo[playerid][pSkins][2],
				PlayerInfo[playerid][pSkins][3],
				PlayerInfo[playerid][pSkins][4]);

			cache_get_value_name_int(0,"PayDay", PlayerInfo[playerid][pPayDay]); 
			cache_get_value_name_int(0,"HeadValue", PlayerInfo[playerid][pHeadValue]); 
			cache_get_value_name_int(0,"HunterValue", PlayerInfo[playerid][pHunterValue]); 
			cache_get_value_name_int(0,"MySelfTime", PlayerInfo[playerid][pMySelfTime]); 
			cache_get_value_name_int(0,"Job", PlayerInfo[playerid][pJob]); 
			cache_get_value_name_int(0,"JobTime", PlayerInfo[playerid][pJobTime]); 
			cache_get_value_name_int(0,"RobTime", PlayerInfo[playerid][pRobTime]); 
			cache_get_value_name_int(0,"Money", PlayerInfo[playerid][pMoney]); 
			cache_get_value_name_int(0,"Wanted", PlayerInfo[playerid][pWanted]); 
			UpdateWanted(playerid,PlayerInfo[playerid][pWanted]);

			GivePlayerMoney(playerid,PlayerInfo[playerid][pMoney]);

			format(fetch, sizeof(fetch), "~g~$%d", PlayerInfo[playerid][pMoney]);
			PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_MONEY], fetch);
			
			format(fetch,sizeof(fetch), "SELECT * FROM `samp_bag` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_BAG);

			format(fetch,sizeof(fetch), "SELECT * FROM `samp_premium` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_PREMIUM);
			
			format(fetch,sizeof(fetch), "SELECT * FROM `samp_admins` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_ADMIN);
			
			format(fetch,sizeof(fetch), "SELECT * FROM `samp_team` WHERE `Name` = '%s'", 
				PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_TEAM);
			
			format(fetch,sizeof(fetch), "SELECT * FROM `samp_mute` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_MUTE);
			
			format(fetch,sizeof(fetch), "SELECT * FROM `samp_jail` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_JAIL);
			
			format(fetch,sizeof(fetch), "SELECT * FROM `samp_warns` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_WARN);
			
			format(fetch,sizeof(fetch), "SELECT * FROM `samp_twarns` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_TWARN);

			format(fetch,sizeof(fetch), "SELECT * FROM `samp_licenses` WHERE `Name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_LIC);
						
			format(fetch,sizeof(fetch), "SELECT * FROM `samp_vehicles` WHERE `Owner` = '%s' AND (`Type` = '3' OR `Type` = '4')",
				PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_CAR);

			format(fetch,sizeof(fetch), "SELECT * FROM `samp_voters` WHERE `name` = '%s' AND (`vote_id` = %d OR `vote_id` = %d OR `vote_id` = %d OR `vote_id` = %d OR `vote_id` = %d)", 
				PlayerInfo[playerid][pName], VoteInfo[0][voID], VoteInfo[1][voID], VoteInfo[2][voID], VoteInfo[3][voID], VoteInfo[4][voID]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch, "OnQueryFinish","dd",playerid,DB_LOAD_VOTERS);
			
			for(new i = 1; i <= HOUSE; i++)
			{
				if(!strcmp(HouseInfo[i][hOwner],PlayerInfo[playerid][pName],true) && strlen(HouseInfo[i][hOwner])) PlayerInfo[playerid][pHouseKey] = i;
			}
			for(new i = 1; i <= BIZNES; i++)
			{
				if(!strcmp(BiznesInfo[i][bOwner],PlayerInfo[playerid][pName],true) && strlen(BiznesInfo[i][bOwner])) PlayerInfo[playerid][pBizKey] = i;
			}

			format(fetch,sizeof(fetch),"INSERT INTO `samp_online` (`ID`, `Name`, `Score`, `Team`) VALUES ('%d', '%s', '%d', '%d')",
				playerid,PlayerInfo[playerid][pName],PlayerInfo[playerid][pLevel],TeamInfo[playerid][tID]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);	
			
			format(fetch, sizeof(fetch), "(( %s[%d] авторизуется на сервере | {ffffff}IP: %s ))",PlayerInfo[playerid][pName], playerid, PlayerInfo[playerid][pLastIP]);
			ABroadCast(0xBFC0C2FF,fetch, 1);
						
			SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 0);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 1);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 1);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 1);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 0);
			SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 0);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 1);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 1);
			//SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 1);

			DeletePVar(playerid,"OChat");
			DeletePVar(playerid,"FamilyChat");
			DeletePVar(playerid,"JobChat");
			DeletePVar(playerid,"HidePM");
			DeletePVar(playerid,"NewsChat");

			for(new i; i<sizeof(GZInfo); i++) GangZoneShowForPlayer(playerid,GZInfo[i][gID],GetGangZoneColor(i));

			//SetPVarInt(playerid,"Snow",1);
			
			SetPVarInt(playerid,"Login",1);
			StopAudioStreamForPlayer(playerid);
			TextDrawHideForPlayer(playerid, LoadScreen);
			//SpawnPlayer(playerid);
			
			format(fetch,sizeof(fetch),"UPDATE `samp_users` SET `last_login`='%d' WHERE `name` = '%s'",GetTime,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);

			return 1;
		}

		case DB_LOAD_BAG:
		{
			new rows;
		    cache_get_row_count(rows);
			if(!rows)
			{
				new fetch[120];
				format(fetch,sizeof(fetch), "INSERT INTO `samp_bag` (`name`) VALUES ('%s')", PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, fetch);
				return 1;
			}

			for(new i = 0, num[3], string__[20]; i < 25; i++)
			{
				format(num, sizeof num, "%d", i);
				cache_get_value_name(0, num, string__, 20);
				sscanf(string__, "p<|>iif", iData[playerid][inItems][i], iData[playerid][inValue][i], iData[playerid][inState][i]);
				ImageShow(playerid, i, iData[playerid][inItems][i], false);

				switch(oData[iData[playerid][inItems][i]][imType])
				{
					case 0..12:
					{
						if(i > 19) FP_GivePlayerWeapon(playerid, iData[playerid][inItems][i], iData[playerid][inValue][i], i);
					}
					case 13: PlayerInfo[playerid][pBankPass] = iData[playerid][inValue][i];
					case 14: 
					{
						if(i > 19) PlayerInfo[playerid][pMats] = i;
					}	
					case 15..20: 
					{
						if(i > 19) PlayerInfo[playerid][pDrugs] = i;
					}	
					case 21: 
					{
						if(i > 19) PlayerInfo[playerid][pPivo] = i;
					}	
					case 22: 
					{
						if(i > 19) PlayerInfo[playerid][pSigs] = i;
					}	
					case 23:  
					{
						if(i > 19) PlayerInfo[playerid][pCP] = i;
					}	
					case 24: 
					{
						if(i > 19) PlayerInfo[playerid][pMobile] = iData[playerid][inValue][i];
					}	
					case 25:  
					{
						if(i > 19) PlayerInfo[playerid][pRope] = i;
					}	
					case 26:  
					{
						if(i > 19) PlayerInfo[playerid][pSD] = i;
					}	
					case 27: PlayerInfo[playerid][pTazer] = i;
					default: {}
				}

			}


		}
		case DB_LOAD_TEAM:
		{
			if(!cache_num_rows())
			{
				TeamInfo[playerid][tID] = 0;
				TeamInfo[playerid][tDate] = EOS;
				TeamInfo[playerid][tType] = 0;
				TeamInfo[playerid][tRank] = 0;
				TeamInfo[playerid][tSkin] = 0;
			}
			else
			{			
				cache_get_value_name_int(0,"Team", TeamInfo[playerid][tID]); 
				cache_get_value_name(0,"Date",TeamInfo[playerid][tDate],20);
				cache_get_value_name_int(0,"Type", TeamInfo[playerid][tType]); 
				cache_get_value_name_int(0,"Rank", TeamInfo[playerid][tRank]); 
				cache_get_value_name_int(0,"Skin", TeamInfo[playerid][tSkin]); 
				
				if(TeamInfo[playerid][tID] >= LCN && TeamInfo[playerid][tID] <= RIFA)
				{
					if(TeamInfo[playerid][tRank] == 7 || TeamInfo[playerid][tRank] == 8) TeamInfo[playerid][tRank] = 4;
					else if(TeamInfo[playerid][tRank] == 8 || TeamInfo[playerid][tRank] == 9) TeamInfo[playerid][tRank] = 5;
					else if(TeamInfo[playerid][tRank] == 10 || TeamInfo[playerid][tRank] == 11)	TeamInfo[playerid][tRank] = 6;
				}
				SetSkin(playerid);

				SetPlayerColor(playerid,PlayerColors[TeamColors[TeamInfo[playerid][tID]]-1]);

				if(IsACop(playerid)) SetPVarInt(playerid,"OnDuty",1);
				
				new _str[128];
				format(_str,sizeof(_str),"UPDATE `samp_team` SET `Online`='1',`LastLogin`='%d' WHERE `Name` = '%s'",
					GetTime,PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, _str);
			}
			return SpawnPlayer(playerid);
		}
		case DB_LOAD_MUTE:
		{
			if(cache_num_rows())
			{		
				cache_get_value_name(0,"Date",MuteInfo[playerid][mDate],20);
				cache_get_value_name_int(0,"Time", MuteInfo[playerid][mTime]);
				cache_get_value_name(0,"Admin",MuteInfo[playerid][mAdmin],24);
				cache_get_value_name(0,"Reason",MuteInfo[playerid][mReason],64);
			}
		}
		case DB_LOAD_JAIL:
		{
			if(!cache_num_rows())
			{
				JailInfo[playerid][jID] = 0;
				JailInfo[playerid][jTime] = 0;
				JailInfo[playerid][jPrice] = 0;
				JailInfo[playerid][jDate] = EOS;
				JailInfo[playerid][jCop] = EOS;
				JailInfo[playerid][jReason] = EOS;
				return 1;
			}
			cache_get_value_name(0,"Date",JailInfo[playerid][jDate],20);
			cache_get_value_name_int(0,"Jail", JailInfo[playerid][jID]); 
			cache_get_value_name_int(0,"Time", JailInfo[playerid][jTime]); 
			cache_get_value_name_int(0,"Price", JailInfo[playerid][jPrice]); 
			cache_get_value_name(0,"Cop",JailInfo[playerid][jCop],24);
			cache_get_value_name(0,"Reason",JailInfo[playerid][jReason],64);
			SpawnPlayer(playerid);
			return 1;
		}
		case DB_LOAD_WARN:
		{
			new rows;
		    cache_get_row_count(rows);
			if(!rows) 
			{
				WarnInfo[playerid][wWarns] = 0;
				WarnInfo[playerid][wWarn][0] = 0;
				WarnInfo[playerid][wWarn][1] = 0;
				WarnInfo[playerid][wDate1] = EOS;
				WarnInfo[playerid][wDate2] = EOS;
				WarnInfo[playerid][wAdmin1] = EOS;
				WarnInfo[playerid][wAdmin2] = EOS;
				WarnInfo[playerid][wReason1] = EOS;
				WarnInfo[playerid][wReason2] = EOS;
				return 1;
			}
			WarnInfo[playerid][wWarns] = rows;

			cache_get_value_name_int(0,"ID", WarnInfo[playerid][wWarn][0]);
			cache_get_value_name(0,"Date",WarnInfo[playerid][wDate1],20);
			cache_get_value_name(0,"Admin",WarnInfo[playerid][wAdmin1],24);
			cache_get_value_name(0,"Reason",WarnInfo[playerid][wReason1],64);
			
			if(rows > 1)
			{
				cache_get_value_name_int(0,"ID", WarnInfo[playerid][wWarn][1]);
				cache_get_value_name(0,"Date",WarnInfo[playerid][wDate2],20);
				cache_get_value_name(0,"Admin",WarnInfo[playerid][wAdmin2],24);
				cache_get_value_name(0,"Reason",WarnInfo[playerid][wReason2],64);
			}
			else
			{
				WarnInfo[playerid][wWarn][1] = 0;
				WarnInfo[playerid][wDate2] = EOS;
				WarnInfo[playerid][wAdmin2] = EOS;
				WarnInfo[playerid][wReason2] = EOS;
			}

		}
		case DB_LOAD_TWARN:
		{
			new rows;
		    cache_get_row_count(rows);
			if(!rows)
			{

				TWarnInfo[playerid][wWarns] = 0;
				TWarnInfo[playerid][wWarn][0] = 0;
				TWarnInfo[playerid][wWarn][1] = 0;
				TWarnInfo[playerid][wDate1] = EOS;
				TWarnInfo[playerid][wDate2] = EOS;
				TWarnInfo[playerid][wAdmin1] = EOS;
				TWarnInfo[playerid][wAdmin2] = EOS;
				TWarnInfo[playerid][wReason1] = EOS;
				TWarnInfo[playerid][wReason2] = EOS;
				return 1;
			}
			TWarnInfo[playerid][wWarns] = rows;

			cache_get_value_name_int(0,"ID", TWarnInfo[playerid][wWarn][0]);
			cache_get_value_name(0,"Date",TWarnInfo[playerid][wDate1],20);
			cache_get_value_name(0,"Admin",TWarnInfo[playerid][wAdmin1],24);
			cache_get_value_name(0,"Reason",TWarnInfo[playerid][wReason1],64);
			
			if(rows > 1)
			{
				cache_get_value_name_int(0,"ID", TWarnInfo[playerid][wWarn][1]);
				cache_get_value_name(0,"Date",TWarnInfo[playerid][wDate2],20);
				cache_get_value_name(0,"Admin",TWarnInfo[playerid][wAdmin2],24);
				cache_get_value_name(0,"Reason",TWarnInfo[playerid][wReason2],64);
			}
			else
			{
				TWarnInfo[playerid][wWarn][1] = 0;
				TWarnInfo[playerid][wDate2] = EOS;
				TWarnInfo[playerid][wAdmin2] = EOS;
				TWarnInfo[playerid][wReason2] = EOS;
			}

		}
		case DB_ADD_WARN:
		{
			WarnInfo[GetPVarInt(playerid,"AddWarnID")][wWarn][WarnInfo[GetPVarInt(playerid,"AddWarnID")][wWarns]] = cache_insert_id();
			WarnInfo[GetPVarInt(playerid,"AddWarnID")][wWarns] ++;
			DeletePVar(playerid,"AddWarnID");
		}
		case DB_ADD_TWARN:
		{
			TWarnInfo[GetPVarInt(playerid,"AddWarnID")][wWarn][TWarnInfo[GetPVarInt(playerid,"AddWarnID")][wWarns]] = cache_insert_id();
			TWarnInfo[GetPVarInt(playerid,"AddWarnID")][wWarns] ++;
			DeletePVar(playerid,"AddWarnID");
		}
		case DB_LOAD_ADMIN:
		{
			new rows;
		    cache_get_row_count(rows);
			if(!rows) 
			{
				AdminInfo[playerid][aLevel] = 0;
				AdminInfo[playerid][aPassword][0] = EOS;
				AdminInfo[playerid][aRank][0] = EOS;
				AdminInfo[playerid][aTime] = 0;
				AdminInfo[playerid][aLeader] = 0;
				AdminInfo[playerid][aMember] = 0;
				AdminInfo[playerid][aTRank] = 0;
				return 1;
			}	
            cache_get_value_name_int(0,"Level", AdminInfo[playerid][aLevel]); 
			cache_get_value_name(0,"Password",AdminInfo[playerid][aPassword],32);
			switch(AdminInfo[playerid][aLevel])
			{
				case 1: strmid(AdminInfo[playerid][aRank], "Помощник", 0, 24, 24);
				case 2: strmid(AdminInfo[playerid][aRank], "Ст.Помощник", 0, 24, 24);
				case 3: strmid(AdminInfo[playerid][aRank], "Мл.Администратор", 0, 24, 24);
				case 4: strmid(AdminInfo[playerid][aRank], "Администратор", 0, 24, 24);
				case 5: strmid(AdminInfo[playerid][aRank], "Ст.Администратор", 0, 24, 24);
				case 6: strmid(AdminInfo[playerid][aRank], "Администратор фракций", 0, 24, 24);
				case 7: strmid(AdminInfo[playerid][aRank], "Администратор банов", 0, 24, 24);
				case 8: strmid(AdminInfo[playerid][aRank], "Администратор ивентов", 0, 24, 24);
				case 9: strmid(AdminInfo[playerid][aRank], "Зам.Гл.Администратора", 0, 24, 24);
				case 10:strmid(AdminInfo[playerid][aRank], "Гл.Администратор", 0, 24, 24);
			}
			SendClientMessage(playerid,COLOR_YELLOW,"Для получения администраторских прав, используй команду \"/aduty\".");
			
		}
		case DB_LOAD_LIC:
		{

			for(new i = 25; i < 30; i++) // Лицензии licmedal 25 - 29
			{
				pInvTXD[playerid][i] = CreatePlayerTextDraw(playerid, InvPos[i][1]-16, InvPos[i][0]+8, "_");
				
				PlayerTextDrawAlignment(playerid, pInvTXD[playerid][i], 2);
				PlayerTextDrawBackgroundColor(playerid, pInvTXD[playerid][i], 255);
				PlayerTextDrawFont(playerid, pInvTXD[playerid][i], 4);
				PlayerTextDrawLetterSize(playerid, pInvTXD[playerid][i], 0.500000, 1.000000);
				PlayerTextDrawColor(playerid, pInvTXD[playerid][i], -1);
				PlayerTextDrawSetOutline(playerid, pInvTXD[playerid][i], 0);
				PlayerTextDrawSetProportional(playerid, pInvTXD[playerid][i], 1);
				PlayerTextDrawSetShadow(playerid, pInvTXD[playerid][i], 1);
				PlayerTextDrawUseBox(playerid, pInvTXD[playerid][i], 1);
				PlayerTextDrawBoxColor(playerid, pInvTXD[playerid][i], 255);
				PlayerTextDrawTextSize(playerid, pInvTXD[playerid][i], 32.000000, 29.000000);
			}

		    new rows;
		    cache_get_row_count(rows);
			if(!rows)
			{
				new _str[80];
				format(_str,sizeof(_str), "INSERT INTO `samp_licenses` (Name) VALUES ('%s')", PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, _str);

				PlayerTextDrawSetString(playerid, pInvTXD[playerid][25], "LD_DRV:nawtxt");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][26], "LD_DRV:nawtxt");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][27], "LD_DRV:nawtxt");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][28], "LD_DRV:nawtxt");
				PlayerTextDrawSetString(playerid, pInvTXD[playerid][29], "LD_DRV:nawtxt");

				LicInfo[playerid][MotoLic] = 0;
			    LicInfo[playerid][TimeMotoLic] = 0;
				LicInfo[playerid][AutoLic] = 0;
				LicInfo[playerid][TimeAutoLic] = 0;
				LicInfo[playerid][BoatLic] = 0;
				LicInfo[playerid][TimeBoatLic] = 0;
				LicInfo[playerid][FlyLic] = 0;
				LicInfo[playerid][TimeFlyLic] = 0;
				LicInfo[playerid][GunLic] = 0;
				LicInfo[playerid][TimeGunLic] = 0;
				return 1;
			}
            cache_get_value_name_int(0,"MotoLic", LicInfo[playerid][MotoLic]); 
			cache_get_value_name_int(0,"TimeMotoLic", LicInfo[playerid][TimeMotoLic]); 
			cache_get_value_name(0,"TookMotoLic",LicInfo[playerid][TookMotoLic],24);
			cache_get_value_name(0,"ReasonMotoLic",LicInfo[playerid][ReasonMotoLic],64);
			cache_get_value_name(0,"DateMotoLic",LicInfo[playerid][DateMotoLic],24);
	        cache_get_value_name_int(0,"AutoLic", LicInfo[playerid][AutoLic]); 
			cache_get_value_name_int(0,"TimeAutoLic", LicInfo[playerid][TimeAutoLic]); 
			cache_get_value_name(0,"TookAutoLic",LicInfo[playerid][TookAutoLic],24);
			cache_get_value_name(0,"ReasonAutoLic",LicInfo[playerid][ReasonAutoLic],64);
			cache_get_value_name(0,"DateAutoLic",LicInfo[playerid][DateAutoLic],24);
			cache_get_value_name_int(0,"BoatLic", LicInfo[playerid][BoatLic]); 
			cache_get_value_name_int(0,"TimeBoatLic", LicInfo[playerid][TimeBoatLic]); 
			cache_get_value_name(0,"TookBoatLic",LicInfo[playerid][TookBoatLic],24);
			cache_get_value_name(0,"ReasonBoatLic",LicInfo[playerid][ReasonBoatLic],64);
			cache_get_value_name(0,"DateBoatLic",LicInfo[playerid][DateBoatLic],24);
			cache_get_value_name_int(0,"FlyLic", LicInfo[playerid][FlyLic]); 
			cache_get_value_name_int(0,"TimeFlyLic", LicInfo[playerid][TimeFlyLic]); 
			cache_get_value_name(0,"TookFlyLic",LicInfo[playerid][TookFlyLic],24);
			cache_get_value_name(0,"ReasonFlyLic",LicInfo[playerid][ReasonFlyLic],64);
			cache_get_value_name(0,"DateFlyLic",LicInfo[playerid][DateFlyLic],24);
			cache_get_value_name_int(0,"GunLic", LicInfo[playerid][GunLic]); 
			cache_get_value_name_int(0,"TimeGunLic", LicInfo[playerid][TimeGunLic]); 
			cache_get_value_name(0,"TookGunLic",LicInfo[playerid][TookGunLic],24);
			cache_get_value_name(0,"ReasonGunLic",LicInfo[playerid][ReasonGunLic],64);
			cache_get_value_name(0,"DateGunLic",LicInfo[playerid][DateGunLic],24);

		  
		    if(LicInfo[playerid][TimeMotoLic])
		    {
		    	if(LicInfo[playerid][TimeMotoLic] <= GetTime)
				{
	                LicInfo[playerid][TimeMotoLic] = 0;
	                if(!LicInfo[playerid][MotoLic]) SendClientMessage(playerid,-1,"Поздравляю, тебе вернули {00CC00}лицензию на управление мотоциклом{FFFFFF}.");
	                LicInfo[playerid][MotoLic] = 1;
	                PlayerTextDrawSetString(playerid, pInvTXD[playerid][25], "LD_DRV:gold");

	                new query[128];
					format(query,sizeof(query),"UPDATE `samp_licenses` SET `MotoLic`='1',`TimeMotoLic`='0' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
				}
				else PlayerTextDrawSetString(playerid, pInvTXD[playerid][25], "LD_DRV:silver");
			}
			else if(!LicInfo[playerid][MotoLic]) PlayerTextDrawSetString(playerid, pInvTXD[playerid][25], "LD_DRV:nawtxt"); 
			else PlayerTextDrawSetString(playerid, pInvTXD[playerid][25], "LD_DRV:gold");

			
			if(LicInfo[playerid][TimeAutoLic])
		    {
		    	if(LicInfo[playerid][TimeAutoLic] <= GetTime)
				{
	                LicInfo[playerid][TimeAutoLic] = 0;
	                if(!LicInfo[playerid][AutoLic]) SendClientMessage(playerid,-1,"Поздравляю, тебе вернули {00CC00}лицензию на управление автомобилем{FFFFFF}.");
	                LicInfo[playerid][AutoLic] = 1;
	                PlayerTextDrawSetString(playerid, pInvTXD[playerid][26], "LD_DRV:gold");

	                new query[128];
					format(query,sizeof(query),"UPDATE `samp_licenses` SET `AutoLic`='1',`TimeAutoLic`='0' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
				}
				else PlayerTextDrawSetString(playerid, pInvTXD[playerid][26], "LD_DRV:silver");
			}
			else if(!LicInfo[playerid][AutoLic]) PlayerTextDrawSetString(playerid, pInvTXD[playerid][26], "LD_DRV:nawtxt");
			else PlayerTextDrawSetString(playerid, pInvTXD[playerid][26], "LD_DRV:gold");

			if(!LicInfo[playerid][BoatLic]) PlayerTextDrawSetString(playerid, pInvTXD[playerid][27], "LD_DRV:nawtxt");
			else if(LicInfo[playerid][TimeBoatLic])
		    {
		    	if(LicInfo[playerid][TimeBoatLic] <= GetTime)
				{
	                LicInfo[playerid][TimeBoatLic] = 0;
	                if(!LicInfo[playerid][BoatLic]) SendClientMessage(playerid,-1,"Поздравляю, тебе вернули {00CC00}лицензию на управление водным транспортом{FFFFFF}.");
	                LicInfo[playerid][BoatLic] = 1;
	                PlayerTextDrawSetString(playerid, pInvTXD[playerid][27], "LD_DRV:gold");

	                new query[128];
					format(query,sizeof(query),"UPDATE `samp_licenses` SET `BoatLic`='1',`TimeBoatLic`='0' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
				}
				else PlayerTextDrawSetString(playerid, pInvTXD[playerid][27], "LD_DRV:silver");
			}
			else PlayerTextDrawSetString(playerid, pInvTXD[playerid][27], "LD_DRV:gold");

			
			if(LicInfo[playerid][TimeFlyLic])
		    {
		    	if(LicInfo[playerid][TimeFlyLic] <= GetTime)
				{
	                LicInfo[playerid][TimeFlyLic] = 0;
	                if(!LicInfo[playerid][FlyLic]) SendClientMessage(playerid,-1,"Поздравляю, тебе вернули {00CC00}лицензию на управление воздушным транспортом{FFFFFF}.");
	                LicInfo[playerid][FlyLic] = 1;
	                PlayerTextDrawSetString(playerid, pInvTXD[playerid][28], "LD_DRV:gold");

	                new query[128];
					format(query,sizeof(query),"UPDATE `samp_licenses` SET `FlyLic`='1',`TimeFlyLic`='0' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
				}
				else PlayerTextDrawSetString(playerid, pInvTXD[playerid][28], "LD_DRV:silver");
			}
			else if(!LicInfo[playerid][FlyLic]) PlayerTextDrawSetString(playerid, pInvTXD[playerid][28], "LD_DRV:nawtxt");
			else PlayerTextDrawSetString(playerid, pInvTXD[playerid][28], "LD_DRV:gold");

			
			if(LicInfo[playerid][TimeGunLic])
		    {
		    	if(LicInfo[playerid][TimeGunLic] <= GetTime)
				{
	                LicInfo[playerid][TimeGunLic] = 0;
	                if(!LicInfo[playerid][GunLic]) SendClientMessage(playerid,-1,"Поздравляю, тебе вернули {00CC00}лицензию на ношение оружия{FFFFFF}.");
	                LicInfo[playerid][GunLic] = 1;
	                PlayerTextDrawSetString(playerid, pInvTXD[playerid][29], "LD_DRV:gold");

	                new query[128];
					format(query,sizeof(query),"UPDATE `samp_licenses` SET `GunLic`='1',`TimeGunLic`='0' WHERE `name`='%s'", PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
				}
				else PlayerTextDrawSetString(playerid, pInvTXD[playerid][29], "LD_DRV:silver");
			}
			else if(!LicInfo[playerid][GunLic]) PlayerTextDrawSetString(playerid, pInvTXD[playerid][29], "LD_DRV:nawtxt");
			else PlayerTextDrawSetString(playerid, pInvTXD[playerid][29], "LD_DRV:gold");
		}
		case DB_CHECK_NAME:
		{
			if(cache_num_rows()) return ErrorMes(playerid,"Этот ник уже занят.");

			new name[MAX_PLAYER_NAME],giveplayerid,query[256];
			if(sscanf(string,"us[24]",giveplayerid,name))return 1;
			
			for(new i = 1; i <= MAX_VEHICLES; i++)
			{
				if(IsValidVehicle(i) && strlen(VehInfo[i][vOwner]) && !strcmp(VehInfo[i][vOwner],PlayerInfo[giveplayerid][pName],true))
					strmid(VehInfo[i][vOwner], name, 0, MAX_PLAYER_NAME, 24);
			}
			if(PlayerInfo[giveplayerid][pHouseKey])
				strmid(HouseInfo[PlayerInfo[giveplayerid][pHouseKey]][hOwner], name, 0, MAX_PLAYER_NAME, 24);

			if(PlayerInfo[giveplayerid][pBizKey])
				strmid(BiznesInfo[PlayerInfo[giveplayerid][pBizKey]][bOwner], name, 0, MAX_PLAYER_NAME, 24);

			format(query,sizeof(query),"UPDATE `samp_users` SET `name`= '%s' WHERE `name`='%s'",name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_users` SET `refer`= '%s' WHERE `refer`='%s'",name,PlayerInfo[giveplayerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_premium` SET `Name`= '%s' WHERE `Name`='%s'",name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_premium` SET `Refer`= '%s' WHERE `Refer`='%s'",name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_licenses` SET `Name`= '%s' WHERE `Name`='%s'",name,PlayerInfo[giveplayerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);

			format(query,sizeof(query),"UPDATE `samp_vehicles` SET `Owner` = '%s' WHERE `Owner` = '%s'",
				name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_houses` SET `Owner` = '%s' WHERE `Owner` = '%s'",
				name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_biznes` SET `Owner` = '%s' WHERE `Owner` = '%s'",
				name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);

			format(query,sizeof(query),"UPDATE `samp_bag` SET `Name`= '%s' WHERE `Name`='%s'",
				name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_admins` SET `Name`= '%s' WHERE `Name`='%s'",
				name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_team` SET `Name`= '%s' WHERE `Name`='%s'",
				name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_bans` SET `Name`= '%s' WHERE `Name`='%s'",
				name,PlayerInfo[giveplayerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);

			format(query, sizeof(query),"Администратор %s сменил(a) тебе ник на %s.",PlayerInfo[playerid][pName],name);
			SendClientMessage(giveplayerid,-1,query);
			format(query, sizeof(query), "[ACMD] %s сменил(а) ник %s на %s.",PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName],name);
			ABroadCast(COLOR_ACMD,query,1);
			
			format(query,sizeof(query),"INSERT INTO `logs_changename` (`Date`,`Time`,`Admin`,`OldName`,`NewName`) VALUES ('%02d.%02d.%d','%02d:%02d:%02d','%s','%s','%s')",
				Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],PlayerInfo[giveplayerid][pName],name); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			
			strmid(PlayerInfo[giveplayerid][pName], name, 0, MAX_PLAYER_NAME, 64);
			SetPlayerName(giveplayerid, name);
		}
		case DB_DONATE_NAME:
		{
			if(cache_num_rows()) return ErrorMes(playerid,"Этот ник уже занят.");

			if(strlen(string) < 3 || strlen(string) > 20) return 1;

			new query[256];

			PlayerInfo[playerid][pSSM] -= 50;
			
			for(new i = 1; i <= MAX_VEHICLES; i++)
			{
				if(IsValidVehicle(i) && strlen(VehInfo[i][vOwner]) && !strcmp(VehInfo[i][vOwner],PlayerInfo[playerid][pName],true))
					strmid(VehInfo[i][vOwner], string, 0, MAX_PLAYER_NAME, 24);
			}
			if(PlayerInfo[playerid][pHouseKey])
				strmid(HouseInfo[PlayerInfo[playerid][pHouseKey]][hOwner], string, 0, MAX_PLAYER_NAME, 24);

			if(PlayerInfo[playerid][pBizKey])
				strmid(BiznesInfo[PlayerInfo[playerid][pBizKey]][bOwner], string, 0, MAX_PLAYER_NAME, 24);

			format(query,sizeof(query),"UPDATE `samp_users` SET `SSM` = '%d',`name`= '%s' WHERE `name`='%s'",PlayerInfo[playerid][pSSM],string,PlayerInfo[playerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_users` SET `refer`= '%s' WHERE `refer`='%s'",string,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_premium` SET `Name`= '%s' WHERE `Name`='%s'",string,PlayerInfo[playerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_premium` SET `Refer`= '%s' WHERE `Refer`='%s'",string,PlayerInfo[playerid][pName]); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_licenses` SET `Name`= '%s' WHERE `Name`='%s'",string,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);

			format(query,sizeof(query),"UPDATE `samp_vehicles` SET `Owner` = '%s' WHERE `Owner` = '%s'",
				string,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_houses` SET `Owner` = '%s' WHERE `Owner` = '%s'",
				string,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_biznes` SET `Owner` = '%s' WHERE `Owner` = '%s'",
				string,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_bag` SET `Name`= '%s' WHERE `Name`='%s'",
				string,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_admins` SET `Name`= '%s' WHERE `Name`='%s'",
				string,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_team` SET `Name`= '%s' WHERE `Name`='%s'",
				string,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			format(query,sizeof(query),"UPDATE `samp_bans` SET `Name`= '%s' WHERE `Name`='%s'",
				string,PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);

			format(query, sizeof(query),"Ты сменил(a) себе ник на %s.",string);
			SendClientMessage(playerid,-1,query);
			format(query, sizeof(query), "* %s сменил(а) себе ник на %s.",PlayerInfo[playerid][pName],string);
			ABroadCast(COLOR_ACMD,query,1);
			
			format(query,sizeof(query),"INSERT INTO `logs_changename` (`Date`,`Time`,`Admin`,`OldName`,`NewName`) VALUES ('%02d.%02d.%d','%02d:%02d:%02d','%s','%s','%s')",Day,Month,Year,Hour,Minute,Second,PlayerInfo[playerid][pName],PlayerInfo[playerid][pName],string); 
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
						
			format(query, sizeof query, "%d SSM", PlayerInfo[playerid][pSSM]);
			PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], query);

			strmid(PlayerInfo[playerid][pName], string, 0, MAX_PLAYER_NAME, 64);
			SetPlayerName(playerid, string);
		}
		case DB_CHECK_PASS:
		{
			if(!cache_num_rows()) return ErrorMes(playerid,"Игрок с таким ником не найден.");

			new name[24],password[32],query[128];
			if(sscanf(string,"s[24]s[32]",name, password))return 1;

			format(query,sizeof(query), "UPDATE `samp_users` SET `password` = MD5(MD5('%s')) WHERE `name` = '%s'", password, name);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			return 1;
		}
		case DB_CHECK_BAN:
		{
			new query[320];
			if(cache_num_rows()) 
			{
				new BanName[MAX_PLAYER_NAME],BanAdmin[MAX_PLAYER_NAME],BanIP[16],BanDate[24],BanTime,BanDays,BanReason[64];
				cache_get_value_name(0,"Name", BanName,24);
				cache_get_value_name(0,"Admin", BanAdmin,24);
				cache_get_value_name(0,"IP", BanIP,16);
				cache_get_value_name(0,"Date", BanDate,24);
				cache_get_value_name_int(0,"Time", BanTime);
				BanTime -= GetTime;
				cache_get_value_name_int(0,"Days", BanDays); 
				cache_get_value_name(0,"Reason", BanReason,64);
				if(BanTime > 0)
				{
					new days, hours, minutes, seconds;
					days = BanTime/86400;
					hours = (BanTime-days*86400)/3600;
					minutes = (BanTime-days*86400-hours*3600)/60;
					seconds = BanTime-days*86400-hours*3600-minutes*60;
					if(BanTime > 86400) format(query,sizeof(query),"{F5DEB3}Ник: %s\nIP: %s\nЗабанил: %s\nДата: %s\nСрок: %d дней\nПричина: %s\n\nОсталось до разбана %d дней.",BanName,BanIP,BanAdmin,BanDate,BanDays,BanReason,days);
					else if(BanTime > 3600) format(query,sizeof(query),"{F5DEB3}Ник: %s\nIP: %s\nЗабанил: %s\nДата: %s\nСрок: %d дней\nПричина: %s\n\nОсталось до разбана %d часов.",BanName,BanIP,BanAdmin,BanDate,BanDays,BanReason,hours);
					else if(BanTime > 60) format(query,sizeof(query),"{F5DEB3}Ник: %s\nIP: %s\nЗабанил: %s\nДата: %s\nСрок: %d дней\nПричина: %s\n\nОсталось до разбана %d минут.",BanName,BanIP,BanAdmin,BanDate,BanDays,BanReason,minutes);
					else format(query,sizeof(query),"{F5DEB3}Ник: %s\nIP: %s\nЗабанил: %s\nДата: %s\nСрок: %d дней\nПричина: %s\n\nОсталось до разбана %d секунд.",BanName,BanIP,BanAdmin,BanDate,BanDays,BanReason,seconds);
					ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Аккаунт забанен",query,"Oк","");
					SetTimerEx("KickTimer",1000,false,"d",playerid);
					return 1;
				}
				format(query,sizeof(query),"DELETE FROM `samp_bans` WHERE `Name` = '%s'",PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, query);	
				format(query,sizeof(query),"DELETE FROM `samp_warns` WHERE `Name` = '%s'",PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			}
			format(query,sizeof(query), "SELECT `id` FROM `samp_users` WHERE `name` = '%s'", PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dd",playerid,DB_CHECK_ACCOUNT);

			PlayerTextDrawsCreate(playerid);

			return 1;
		}
		case DB_CHECK_REFER:
		{
			if(!cache_num_rows())
			{
				ErrorMes(playerid,"Данный аккаунт отсутствует в базе данных.");
				return ShowDialog(playerid, D_REFER);
			}	
			strmid(PlayerInfo[playerid][pRefer],string,0,24,24);
			
			new query[100];
			format(query,sizeof(query), "UPDATE `samp_users` SET `refer` = '%s' WHERE `name` = '%s'", PlayerInfo[playerid][pRefer],PlayerInfo[playerid][pName]);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			
			SetPVarInt(playerid,"Login",1); //Регистрация (Рефер)
			StopAudioStreamForPlayer(playerid);
			TextDrawHideForPlayer(playerid, LoadScreen);
			SpawnPlayer(playerid);
			
			return 1;
		}
		case DB_CHECK_EMAIL:
		{
			if(cache_num_rows())
			{
				ErrorMes(playerid,"Этот Email уже занят, используйте другой.");
				return ShowDialog(playerid,D_EMAILREG);
			}
			
			new query[440];
			strmid(PlayerInfo[playerid][pEmail],string,0,64,64);
			
			TextDrawInfo[playerid][DateTD] = 1;
			TextDrawInfo[playerid][TimeTD] = 1;
			TextDrawInfo[playerid][SpeedTD] = 1;
			TextDrawInfo[playerid][LevelTD] = 1;

			UpdateLevelText(playerid);

		    PlayerInfo[playerid][pFStyle] = 0;
			PlayerInfo[playerid][pBoxing] = 0;
			PlayerInfo[playerid][pKunfu] = 0;
			PlayerInfo[playerid][pKneehead] = 0;
			PlayerInfo[playerid][pGrabkick] = 0;

		    LicInfo[playerid][MotoLic] = 0;
		    LicInfo[playerid][TimeMotoLic] = 0;
			LicInfo[playerid][AutoLic] = 0;
			LicInfo[playerid][TimeAutoLic] = 0;
			LicInfo[playerid][BoatLic] = 0;
			LicInfo[playerid][TimeBoatLic] = 0;
			LicInfo[playerid][FlyLic] = 0;
			LicInfo[playerid][TimeFlyLic] = 0;
			LicInfo[playerid][GunLic] = 0;
			LicInfo[playerid][TimeGunLic] = 0;

			format(query,sizeof(query), "INSERT INTO `samp_users` (name,password,email,reg_date,reg_ip,last_login,textdraws,fight) VALUES ('%s', MD5(MD5('%s')), '%s', '%d', '%s','%d','1|1|1|1','0|0|0|0|0')",
			PlayerInfo[playerid][pName], PlayerInfo[playerid][pKey],PlayerInfo[playerid][pEmail], GetTime, PlayerInfo[playerid][pLastIP],GetTime);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query, "OnQueryFinish","dd",playerid,DB_ADD_FORUM);
			return ShowDialog(playerid, D_REFER);
			//return ShowDialog(playerid,D_EMAILCODE);
		}
		case DB_ADMIN_ONLINE:
		{
			new query[128];
			if(cache_num_rows()) 
			{
				format(query,sizeof(query),"UPDATE `logs_admin_online` SET `Online`='1' WHERE `Date` = '%02d.%02d.%d' AND `Name`='%s'",Day,Month,Year,PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
				return 1;
			}
			format(query,sizeof(query),"INSERT INTO `logs_admin_online` (`Name`,`Date`,`Online`) VALUES ('%s','%02d.%02d.%d','1')",PlayerInfo[playerid][pName],Day,Month,Year);
			mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
			return 1;
			
		}
		case DB_LOAD_PREMIUM:
		{
			if(!cache_num_rows())
			{
				new query[80];
				format(query,sizeof(query),"INSERT INTO `samp_premium` (`Name`) VALUES ('%s')",PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, query);

				PremiumInfo[playerid][Level] = 0;
				PremiumInfo[playerid][Date] = 0;
				PremiumInfo[playerid][Refer][0] = EOS;
				PremiumInfo[playerid][Rub] = 0;
				PremiumInfo[playerid][Players] = 0;
				return 1;
			}	
			new str[160];
			cache_get_value_name_int(0,"Level", PremiumInfo[playerid][Level]); 
			cache_get_value_name_int(0,"Date", PremiumInfo[playerid][Date]); 
			cache_get_value_name(0,"Refer",PremiumInfo[playerid][Refer],24);
			cache_get_value_name_int(0,"Rub", PremiumInfo[playerid][Rub]); 
			cache_get_value_name_int(0,"Players", PremiumInfo[playerid][Players]); 
			while(PremiumInfo[playerid][Players] >= 5)
			{
				PremiumInfo[playerid][Players] -= 5;
				if(PremiumInfo[playerid][Level] < 5)
				{
					PremiumInfo[playerid][Level]++;
					format(str,sizeof(str),"Поздравляю, тебя указали 5 человек при покупке VIP аккаунта и ты получил(а) VIP %d уровня.",PremiumInfo[playerid][Level]);
					SendClientMessage(playerid,COLOR_GREEN,str);
				}
				PremiumInfo[playerid][Date] = GetTime + 2592000;
				format(str,sizeof(str),"UPDATE `samp_premium` SET `Players`='%d',`Level`='%d',`Date`='%d' WHERE `Name`='%s'",PremiumInfo[playerid][Players],PremiumInfo[playerid][Level],PremiumInfo[playerid][Date],PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, str);
			}
			if(PremiumInfo[playerid][Date] <= GetTime)
			{
				if(PremiumInfo[playerid][Level] == 1)
				{
					if(!PremiumInfo[playerid][Rub])
					{
						PremiumInfo[playerid][Level] = 0;
						SendClientMessage(playerid,COLOR_YELLOW,"Время действия VIP аккаунта закончилось. Все привилегии отключены.");
						format(str,sizeof(str),"UPDATE `samp_premium` SET `Level`='0',`Refer`='Нет' WHERE `Name`='%s'",PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, str);
						
					}
					else if(PremiumInfo[playerid][Rub] < 100)
					{
						PremiumInfo[playerid][Date] = GetTime + 25920*PremiumInfo[playerid][Rub];
						PremiumInfo[playerid][Rub] = 0;
						new sYear, sMonth, sDay;
						timestamp_to_date(PremiumInfo[playerid][Date], sYear, sMonth, sDay);
						format(str,sizeof(str),"Время действия VIP аккаунта автоматически продлено до %02d.%02d.%d",sDay,sMonth,sYear); 
						SendClientMessage(playerid,COLOR_YELLOW,str);
						format(str,sizeof(str),"UPDATE `samp_premium` SET `Rub`='0',`Date`='%d' WHERE `Name`='%s'",PremiumInfo[playerid][Date],PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, str);
					}
					else if(PremiumInfo[playerid][Rub] >= 100)
					{
						PremiumInfo[playerid][Date] = GetTime + 2592000;
						PremiumInfo[playerid][Rub] -= 100;
						new sYear, sMonth, sDay;
						timestamp_to_date(PremiumInfo[playerid][Date], sYear, sMonth, sDay);
						format(str,sizeof(str),"Время действия VIP аккаунта автоматически продлено до %02d.%02d.%d",sDay,sMonth,sYear);
						SendClientMessage(playerid,COLOR_YELLOW,str);
						format(str,sizeof(str),"UPDATE `samp_premium` SET `Rub`='%d',`Date`='%d' WHERE `Name`='%s'",PremiumInfo[playerid][Rub],PremiumInfo[playerid][Date],PlayerInfo[playerid][pName]);
						mysql_tquery(MYSQL_DEFAULT_HANDLE, str);
					}
				}
				else if(PremiumInfo[playerid][Level])
				{
					PremiumInfo[playerid][Level] --;
					PremiumInfo[playerid][Date] = GetTime + 2592000;
					format(str,sizeof(str),"Время действия VIP аккаунта закончилось. Уровень VIP понижен до %d.",PremiumInfo[playerid][Level]);
					SendClientMessage(playerid,COLOR_YELLOW,str);
					format(str,sizeof(str),"UPDATE `samp_premium` SET `Level`='%d',`Date`='%d' WHERE `Name`='%s'",PremiumInfo[playerid][Level],PremiumInfo[playerid][Date],PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, str);
				}
			}
			
		}
		case DB_CHECK_PREMIUM:
		{
			new query[140];
			if(cache_num_rows()) {
				new level;
				cache_get_value_name_int(0,"Level", level);
				if(!level) strmid(PremiumInfo[playerid][Refer], "Нет", 0, MAX_PLAYER_NAME, 24);
				else
				{
					strmid(PremiumInfo[playerid][Refer], string, 0, MAX_PLAYER_NAME, 24);
					format(query,sizeof(query),"UPDATE `samp_premium` SET `Rub`=`Rub`+50,`Players`=`Players`+1 WHERE `Name`='%s'",string);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
				}
				PremiumInfo[playerid][Level] = 1;
				PremiumInfo[playerid][Date] = GetTime + 2592000;
				format(query,sizeof(query),"UPDATE `samp_premium` SET `Level`='1',`Refer`='%s',`Date`='%d' WHERE `Name`='%s'",PremiumInfo[playerid][Refer],PremiumInfo[playerid][Date],PlayerInfo[playerid][pName]);
				mysql_tquery(MYSQL_DEFAULT_HANDLE, query);	
				if(!PlayerInfo[playerid][pAdmin])
				{
					PlayerInfo[playerid][pSSM] -= 150;

					format(query, sizeof query, "%d SSM", PlayerInfo[playerid][pSSM]);
					PlayerTextDrawSetString(playerid, pMenuTXD[playerid][TD_SSM], query);

					format(query,sizeof(query),"UPDATE `samp_users` SET `SSM`='%d' WHERE `name`='%s'",PlayerInfo[playerid][pSSM],PlayerInfo[playerid][pName]);
					mysql_tquery(MYSQL_DEFAULT_HANDLE, query);
				}
				SendClientMessage(playerid,COLOR_GREEN,"Поздравляю, ты приобрел(а) VIP аккаунт 1 уровня.");
				return ShowDonateDialog(playerid);
			}
		}
		case DB_LOAD_REFERS:
		{
			new rows;
		    cache_get_row_count(rows);
			if(!rows)
			{
				ErrorMes(playerid,"У тебя нет рефералов.");
				return ShowDialog(playerid,D_VIP);
			}
			new sName[24],sLevel,query[1024];
			
			for(new i,str[32]; i<rows; i++)
			{
				cache_get_value_name_int(i,"Level", sLevel); 
				cache_get_value_name(i,"Name",sName,24);
				format(str,sizeof(str),"%d ур | %s\n", sLevel, sName);
				strcat(query,str);
			}
			return ShowPlayerDialog(playerid,D_VIP_REFERS,DIALOG_STYLE_LIST,""FPHEAD"Список рефералов",query,"OK","Назад");
		}
		default: return 1;
	}
	return 1;
}
public OnQueryError(errorid, const error[], const callback[], const query[], MySQL:handle)
{
	printf("[ERROR_MYSQL]%s",error);
	printf("[ERROR_MYSQL]%s",query);
	ABroadCast(COLOR_YELLOW,error,3);
	ABroadCast(COLOR_YELLOW,query,3);
	return 1;
}
stock IsValidMail(email[])
{
	new a_count, t_count, length = strlen(email);
	if(length < 5 || length > 64)return false;
	for(new i = 0; i < strlen(email); i++)
	{
		if(email[i] == '@')
		{
			a_count++;
			if(a_count > 1) return false;
		}
		if(email[i] == '.') t_count++;

		if((email[i] < 'A' && email[i] > 'Z') || (email[i] < 'a' && email[i] > 'z'))
		{
			if(email[i] != '.' && email[i] != '_')	return false;
		}
		if(i == length-1 && ( email[i] == '.' || !a_count || !t_count) )return false;
	}
	return true;
}
stock ShowDialog(playerid,dialogid)
{
	switch(dialogid)
	{
		case D_REGISTER:
		{
			new string[512];
			format(string, sizeof(string), "{F5DEB3}Привествствуем тебя, {8D8DFF}%s{F5DEB3} !\n\n\
					Сервер: {FF0000}%s{F5DEB3}\n\
					Игровой мод: {008000}"MODENAME"{F5DEB3}\n\
					Версия клиента: {008000}"SAMPV"{F5DEB3}\n\
					Официальный сайт: {8D8DFF}%s{F5DEB3}\n\n\
					Этот Ник еще {FF0000}не зарегистрирован{F5DEB3} на сервере.\n\n\
					Придумай пароль u нажми 'Создать'", 
					PlayerInfo[playerid][pName],SERVER_NAME,PlayerInfo[playerid][pName], SERVER_SITE);
			ShowPlayerDialog(playerid, D_REGISTER, DIALOG_STYLE_PASSWORD, ""FPHEAD"Регистрация.", string, "Выбрать", "Отмена");
		}
		case D_RPNAME:
	    {
	        new string[512];
			format(string,sizeof(string), "{F5DEB3}Ник {3366FF}%s{F5DEB3} не подходит для игры на нашем сервере.\n\n",PlayerInfo[playerid][pName]);
    		strcat(string, "Разрещенные в Нике символы:\n\
							- Буквы латинского алфавита (A-Z, a-z)\n\
							- Нижнее подчеркивание (В середине слова)\n\
							Длина Ника должны быть в пределах от 5 до 20 символов.\n\
				    		В дальнейшем Вы будете заходить на сервер под новым Ником.\n\nВведи Ник и нажми {FFD700}\"Далее\"{F5DEB3}.");
			return ShowPlayerDialog(playerid, D_RPNAME , DIALOG_STYLE_INPUT, ""FPHEAD"Регистрация", string, "Далее", "Выход");
	    }
		case D_LOGIN:
		{
			new string[512];
			format(string, sizeof(string), "{F5DEB3}Привествствуем тебя, {8D8DFF}%s{F5DEB3} !\n\n\
					Сервер: {FF0000}%s{F5DEB3}\n\
					Игровой мод: {008000}"MODENAME"{F5DEB3}\n\
					Версия клиента: {008000}"SAMPV"{F5DEB3}\n\
					Официальный сайт: {8D8DFF}%s{F5DEB3}\n\n\
					Этот ник уже {008000}зарегистрирован{F5DEB3} на сервере.\n\
					Введи пароль в окошко u нажми 'Войти'", 
					PlayerInfo[playerid][pName],SERVER_NAME, SERVER_SITE);
			return ShowPlayerDialog(playerid, D_LOGIN , DIALOG_STYLE_PASSWORD, ""FPHEAD"Авторизация.", string, "Войти", "Выйти");
		}
		case D_REFER: return ShowPlayerDialog(playerid, D_REFER, DIALOG_STYLE_INPUT, ""FPHEAD"Регистрация","{F5DEB3}Если ты пришел на сервер по приглашению, то можешь указать {00CC00}Ник{F5DEB3} пригласившего.\nПри достижении 5 уровня он получит 20 SSM за твое приглашение.","OK","Пропуск");
		case D_EMAILREG:return ShowPlayerDialog(playerid, D_EMAILREG , DIALOG_STYLE_INPUT, ""FPHEAD"Регистрация", "{F5DEB3}Внимание, используйте свой реальный {FFD700}Email{F5DEB3} адрес, чтобы обезопасить свой аккаунт.\n\
																									Если Вы {FF0000}потеряете доступ{F5DEB3} к своему аккаунту его можно будет {00CC00}восстановить{F5DEB3}.\n\n\
																									Введи {FFD700}Email{F5DEB3} и нажми {FFD700}\"OK\"{F5DEB3}.", "OK", "Выйти");
		case D_EMAILCODE: return ShowPlayerDialog(playerid, D_EMAILCODE, DIALOG_STYLE_MSGBOX, ""FPHEAD"Регистрация","{F5DEB3}На указанный тобой Email выслана инструкция по активации аккаунта.\nАктивация необходима, чтобы получить полный доступ к серверам и форуму.","ОК","");
		case D_SEX:return ShowPlayerDialog(playerid, D_SEX , DIALOG_STYLE_LIST, ""FPHEAD"Ты парень или девушка?", "Парень\nДевушка", "Дальше", "");
		case D_RACE:return ShowPlayerDialog(playerid, D_RACE , DIALOG_STYLE_LIST, ""FPHEAD"Выбери место жительства","Лос Сантос\nСан Фиерро\nЛас Вентурас", "Дальше", "");
		case D_KPK: return ShowPlayerDialog(playerid,D_KPK,DIALOG_STYLE_LIST,""FPHEAD"КПК","[1] Аккаунт\n[2] GPS-навигатор (Работы, локации)\n[3] Списки (Администраторы, Лидеры u т.д.)\n[4] Основные команды\n[5] Службы (Автосервис, таксопарк и т.д.)\n[6] Собственность (Дома, Транспорт и т.д)","Выбрать","Отмена");
		case D_KPK_ACC:return ShowPlayerDialog(playerid,D_KPK_ACC,DIALOG_STYLE_LIST,""FPHEAD"КПК -> Аккаунт","[1] Меню игрока\n[2] Настройка HUD\n[3] Управление чатами","Выбрать","Назад");
		case D_GPS:return ShowPlayerDialog(playerid,D_GPS,DIALOG_STYLE_LIST,""FPHEAD"КПК -> GPS","[1] Работы\n[2] Основные локацuu\n[3] Блuжайшие услуги\n[4] Убрать метку","Выбрать","Назад");
		case D_KPK_ONLINE:return ShowPlayerDialog(playerid,D_KPK_ONLINE,DIALOG_STYLE_LIST,""FPHEAD"КПК -> Онлайн","[1] Лидеры\n[2] Члены фракцuu\n[3] Администрация","Выбрать","Назад");
		case D_HELP:return ShowPlayerDialog(playerid,D_HELP,DIALOG_STYLE_LIST,""FPHEAD"КПК -> Помощь","[1] Анuмацuu\n[2] Основные команды\n[3] Лидерские команды\n[4] Админcксие команды","Выбрать","Назад");
		case D_SOBSTV:return ShowPlayerDialog(playerid,D_SOBSTV,DIALOG_STYLE_LIST,""FPHEAD"КПК -> Собственность","[1] Личный траснпорт\n[2] Дома u Квартиры\n[3] Бизнес","Выбрать","Назад");
		case D_SERVICE:return ShowPlayerDialog(playerid,D_SERVICE,DIALOG_STYLE_LIST,""FPHEAD"КПК -> Сервисы","Таксопарк\nАвтосервис\nМед. служба","Выбрать","Назад");
		case D_ADUTY: return ShowPlayerDialog(playerid, D_ADUTY, DIALOG_STYLE_PASSWORD, ""FPHEAD"Администраторские права","{F5DEB3}Введи свой пароль для получения администраторских прав.","OK","Назад");
		case D_ADUTY_PASS: return ShowPlayerDialog(playerid, D_ADUTY_PASS, DIALOG_STYLE_INPUT, ""FPHEAD"Администраторские права","{F5DEB3}У тебя еще не указан пароль для доступа к администраторским правам.\nПридумай и введи отличный от основного пароль и нажми \"ОК\"","OK","Назад");
		case D_TEXTDRAWS:
		{
			new string[300] = '[';
			if(TextDrawInfo[playerid][DateTD])  strcat(string,"1] Дата\t\t\t{FFD700}| {00CC00}Да\n"); else strcat(string,"1] Дата\t\t\t{FFD700}| {FF0000}Нет\n");
			if(TextDrawInfo[playerid][TimeTD])  strcat(string,"[2] Время\t\t{FFD700}| {00CC00}Да\n"); else strcat(string,"[2] Время\t\t{FFD700}| {FF0000}Нет\n");
			if(TextDrawInfo[playerid][SpeedTD]) strcat(string,"[3] Спидометр\t\t{FFD700}| {00CC00}Да\n"); else strcat(string,"[3] Спидометр\t\t{FFD700}| {FF0000}Нет\n");
			if(TextDrawInfo[playerid][LevelTD]) strcat(string,"[4] Уровень\t\t{FFD700}| {00CC00}Да\n"); else strcat(string,"[4] Уровень\t\t{FFD700}| {FF0000}Нет\n");
			
			return ShowPlayerDialog(playerid,D_TEXTDRAWS,DIALOG_STYLE_LIST,""FPHEAD"КПК -> Настройка HUD",string,"Выбрать","Назад");
		}
		case D_PREMIUM_BUY:return ShowPlayerDialog(playerid, D_PREMIUM_BUY, DIALOG_STYLE_INPUT, ""FPHEAD"VIP аккаунт","{F5DEB3}Если ты хочешь, чтобы пригласивший тебя игрок получал процент от твоего доната, укажи его {00CC00}Ник{F5DEB3}.\nПри покупке VIP аккаунта он получит половину от затраченной тобой суммы.\n\n{FFFF00}Внимание, для получения этой суммы игрок тоже должен иметь VIP аккаунт.","Купить","Назад");
		case D_CHANGE_CHECK:return ShowPlayerDialog(playerid,D_CHANGE_CHECK,DIALOG_STYLE_MSGBOX,""FPHEAD"GPS - навигатор","{F5DEB3}У тебя уже активирован GPS навигатор.\nЕсли ты хочешь сменить конечную точку нажми \"Сменить\"","Сменить","Отмена");
    
		case D_VIP:return ShowPlayerDialog(playerid,D_VIP,DIALOG_STYLE_LIST,""FPHEAD"VIP","Информация\nПродлить VIP (100р)\nВывести деньги\nКупить SSM (1 SSM = 1р)\nСписок рефералов","Выбрать","Назад");
		case D_VIP_SUMMA:
		{
			new string[128];
			format(string,sizeof(string),"{F5DEB3}Введите сумму, которую хотите вывести.\nМаксимальная сумма для вывода: {00CC00}%d руб.",PremiumInfo[playerid][Rub]);
			return ShowPlayerDialog(playerid, D_VIP_SUMMA, DIALOG_STYLE_INPUT, ""FPHEAD"VIP аккаунт",string,"Далее","Назад");
		}
		case D_VIP_KOSHEL:
		{
			return ShowPlayerDialog(playerid, D_VIP_KOSHEL, DIALOG_STYLE_INPUT, ""FPHEAD"VIP аккаунт","{F5DEB3}Введите номер счета, на который вы хотите вывести деньги.\nПример правильного счета: {00CC00}R123456789012{F5DEB3}.","Далее","Назад");
		}
		case D_VIP_OK:
		{
			new string[140];
			format(string,sizeof(string),"{F5DEB3}Кошелек: {00CC00}R%d\n{F5DEB3}Сумма для вывода: {00CC00}%d рублей\n\n{F5DEB3}Нажмите \"Да\", если всё верно.",GetPVarInt(playerid,"VIPMoney"), GetPVarInt(playerid,"VIPKoshel") );
			return ShowPlayerDialog(playerid, D_VIP_OK, DIALOG_STYLE_MSGBOX, ""FPHEAD"VIP аккаунт",string,"Да","Нет");
		}
		case D_VIP_INFO: 
		{	
			new string[192],sDay,sMonth,sYear;
			timestamp_to_date(PremiumInfo[playerid][Date], sYear, sMonth, sDay);
			format(string,sizeof(string),"{F5DEB3}Ник\t\t\t%s\nУровень\t\t%d\nРефер\t\t\t%s\nБаланс\t\t%d руб.\nДо след. уровня\t%d человек\nАктивен до\t\t%02d.%02d.%d",
			PlayerInfo[playerid][pName],PremiumInfo[playerid][Level],PremiumInfo[playerid][Refer],PremiumInfo[playerid][Rub],5-PremiumInfo[playerid][Players],sDay,sMonth,sYear);
			return ShowPlayerDialog(playerid,D_VIP_INFO,DIALOG_STYLE_MSGBOX,""FPHEAD"Информация о VIP",string,"OK","Назад");
		}
		case D_RADIO:
		{
		    new string[512];
			for(new i;i<sizeof(RadioInfo);i++)
			{
				strcat(string,RadioInfo[i][Name]);
				strcat(string,"\n");
			}
			strcat(string,"[30] {00CC00}Ввести ссылку\n[31] {FF0000}Выключить радио");
			return ShowPlayerDialog(playerid,D_RADIO,DIALOG_STYLE_LIST,""FPHEAD"Радио",string,"Окей","Выход");
		}
		case D_RADIO_INPUT:return ShowPlayerDialog(playerid,D_RADIO_INPUT,DIALOG_STYLE_INPUT,""FPHEAD"Радио","{FFFFFF}Введи {00CC00}ссылку на аудиозапись или плейлист{FFFFFF} и нажми {FFD700}\"Окей\"{FFFFFF}.\nЕсли ты хочешь {00CC00}повторить последнюю композицию{FFFFFF}, введи {3366FF}\"Повтор\"{FFFFFF} и нажми {FFD700}\"OK\"{FFFFFF}.","OK","Назад");
		case D_VLIST:
		{
			new string[240],str[64],count;
			for(new i = 1; i <= MAX_VEHICLES; i++)
			{
				if(IsValidVehicle(i) && strlen(VehInfo[i][vOwner]) && !strcmp(VehInfo[i][vOwner],PlayerInfo[playerid][pName],true))
				{
					if(VehInfo[i][vType] == VT_OWNED) format(str,sizeof(str),"[%d] Личный: %s (ID:%d)\n",count + 1, VehMInfo[GetVehicleModel(i)-400][mName], VehInfo[i][vID]);
					else if(VehInfo[i][vType] == VT_RENT) format(str,sizeof(str),"[%d] Аренда: %s (ID:%d)\n",count + 1, VehMInfo[GetVehicleModel(i)-400][mName], VehInfo[i][vID]);
					PlayerInfo[playerid][pCarID][count] = i;
					strcat(string,str);
					count ++;
					if(count == 3) break;
				}
			}
			if(!count) return ErrorMes(playerid,"У тебя нет личного транспорта.");
			format(str,sizeof(str),""FPHEAD"Ваш транспорт: %d",count);
			return ShowPlayerDialog(playerid,D_VLIST,DIALOG_STYLE_LIST,str,string,"Выбрать","Отмена");
		}
		case D_VOTE_MAIN:
		{
			new vote_status[3][18] = { "{FF0000}Закрыто", "{00FF00}Активно", "{FFD700}Завершено" };

			new string[200];
			format(string, sizeof(string), "Министр культуры\t\t%s\nМинистр внутренних дел\t%s\nМинистр обороны\t\t%s\nМинистр правоохранения\t%s\nМинистр экономики\t\t%s",
	        vote_status[VoteInfo[0][voStatus]],vote_status[VoteInfo[1][voStatus]],vote_status[VoteInfo[2][voStatus]],vote_status[VoteInfo[3][voStatus]],vote_status[VoteInfo[4][voStatus]]);

			return ShowPlayerDialog(playerid,D_VOTE_MAIN,DIALOG_STYLE_LIST,""FPHEAD"Голосование",string,"Выбрать"," Выйти"); 
		}
		case D_VOTE_NEW:
		{
			new string[32];
			
			format(string, sizeof(string), "Введите ник кандидата #%d", VoteInfo[GetPVarInt(playerid,"VoteRank")][voCandidates]+1);
			return ShowPlayerDialog(playerid,D_VOTE_NEW,DIALOG_STYLE_INPUT,voters[GetPVarInt(playerid,"VoteRank")],string,"Дальше","Готово");
		}
		case D_VOTE:
		{
			new string[512] = "Против всех кандидатов\n", str[48], index = GetPVarInt(playerid,"VoteRank")*10;

			for(new i = 0; i < VoteInfo[GetPVarInt(playerid,"VoteRank")][voCandidates]; i++)
			{
				format(str, sizeof(str), "%s : %d голосов\n", VName[index], VVotes[index]);
				strcat(string, str);
				index ++;
			}	
			return ShowPlayerDialog(playerid,D_VOTE,DIALOG_STYLE_LIST,voters[GetPVarInt(playerid,"VoteRank")],string,"Дальше","Назад");
		}
		case D_VOTE_OK:
		{
			new string[80];
			format(string, sizeof(string), "Вы действительно хотите отдать свой голос за %s?", VName[GetPVarInt(playerid,"VoteRank")*10 + GetPVarInt(playerid,"VoteRankID")]);
			return ShowPlayerDialog(playerid,D_VOTE_OK,DIALOG_STYLE_MSGBOX,voters[GetPVarInt(playerid,"VoteRank")],string,"Да","Нет");
		}
		case D_VOTE_NULL:
		{
			return ShowPlayerDialog(playerid,D_VOTE_NULL,DIALOG_STYLE_MSGBOX,voters[GetPVarInt(playerid,"VoteRank")],"Вы действительно хотите проголосовать против всех?","Да","Нет");
		}
		case D_VOTE_END:
		{
			new string[512], str[48], index = GetPVarInt(playerid,"VoteRank")*10;

			for(new i = 0; i < VoteInfo[GetPVarInt(playerid,"VoteRank")][voCandidates]; i++)
			{
				format(str, sizeof(str), "%s : %d голосов\n", VName[index], VVotes[index]);
				strcat(string, str);
				index ++;
			}	
			return ShowPlayerDialog(playerid,D_VOTE_END,DIALOG_STYLE_MSGBOX,voters[GetPVarInt(playerid,"VoteRank")],string,"OK","Закрыть");
		}
		case D_VOTE_END_OK:
			return ShowPlayerDialog(playerid,D_VOTE_END_OK,DIALOG_STYLE_MSGBOX,voters[GetPVarInt(playerid,"VoteRank")],"Вы действительно хотите завершить голосование?","Да","Нет");

		case D_VOTE_DEL:
		{
			new string[512], str[48], index = GetPVarInt(playerid,"VoteRank")*10;

			for(new i = 0; i < VoteInfo[GetPVarInt(playerid,"VoteRank")][voCandidates]; i++)
			{
				format(str, sizeof(str), "%s : %d голосов\n", VName[index], VVotes[index]);
				strcat(string, str);
				index ++;
			}	
			return ShowPlayerDialog(playerid,D_VOTE_DEL,DIALOG_STYLE_MSGBOX,voters[GetPVarInt(playerid,"VoteRank")],string,"OK","Удалить");
		}
		case D_VOTE_DEL_OK:
			return ShowPlayerDialog(playerid,D_VOTE_DEL_OK,DIALOG_STYLE_MSGBOX,voters[GetPVarInt(playerid,"VoteRank")],"Вы действительно хотите удалить результаты голосования?","Да","Нет");

		case D_VOTE_RESULT:
		{
			new string[512], str[48], index = GetPVarInt(playerid,"VoteRank")*10;

			for(new i = 0; i < VoteInfo[GetPVarInt(playerid,"VoteRank")][voCandidates]; i++)
			{
				format(str, sizeof(str), "%s : %d голосов\n", VName[index], VVotes[index]);
				strcat(string, str);
				index ++;
			}	
			return ShowPlayerDialog(playerid,D_VOTE_RESULT,DIALOG_STYLE_MSGBOX,voters[GetPVarInt(playerid,"VoteRank")],string,"OK","");
		}
		case D_DROP:
		{
			return ShowPlayerDialog(playerid, D_DROP, DIALOG_STYLE_MSGBOX, ""FPHEAD"Инвентарь", 
				""FPMSG"Вы действительно хотите выбросить этот предмет?", "Да", "Нет");
		}
		case D_LIC_SHOW:
		{
			return ShowPlayerDialog(playerid, D_LIC_SHOW, DIALOG_STYLE_INPUT, ""FPHEAD"Лицензии", 
				""FPMSG"Кому вы хотите показать свои лицензии?", "Показать", "Назад");
		}
		case D_SELL_ID:
		{
			return ShowPlayerDialog(playerid, D_SELL_ID, DIALOG_STYLE_INPUT, ""FPHEAD"Инвентарь", 
				""FPMSG"Кому вы хотите это продать?", "Далее", "Назад");
		}
		case D_SELL_VALUE:
		{
			return ShowPlayerDialog(playerid, D_SELL_VALUE, DIALOG_STYLE_INPUT, ""FPHEAD"Инвентарь", 
				""FPMSG"Сколько вы хотите продать?", "Далее", "Назад");

		}

		case D_SELL_PRICE:
		{
			return ShowPlayerDialog(playerid, D_SELL_PRICE, DIALOG_STYLE_INPUT, ""FPHEAD"Инвентарь", 
				""FPMSG"За сколько вы хотите это продать?", "Далее", "Назад");
		}
		case D_HANDS_TO_BAG:
		{
			return ShowPlayerDialog(playerid, D_HANDS_TO_BAG, DIALOG_STYLE_INPUT, ""FPHEAD"Инвентарь", 
				""FPMSG"Сколько вы хотите положить в рюкзак?", "Далее", "Назад");
		}
		case D_BAG_TO_HANDS:
		{
			return ShowPlayerDialog(playerid, D_BAG_TO_HANDS, DIALOG_STYLE_INPUT, ""FPHEAD"Инвентарь", 
				""FPMSG"Сколько вы хотите взять из рюкзака?", "Далее", "Назад");
		}
		case D_TRUNK_TO_BAG:
		{
			return ShowPlayerDialog(playerid, D_TRUNK_TO_BAG, DIALOG_STYLE_INPUT, ""FPHEAD"Инвентарь", 
				""FPMSG"Сколько вы хотите взять из багажника?", "Далее", "Назад");
		}
		case D_HOUSE_TO_BAG:
		{
			return ShowPlayerDialog(playerid, D_HOUSE_TO_BAG, DIALOG_STYLE_INPUT, ""FPHEAD"Инвентарь", 
				""FPMSG"Сколько вы хотите взять из тайника?", "Далее", "Назад");
		}
		case D_BAG_TO_TRUNK:
		{
			return ShowPlayerDialog(playerid, D_BAG_TO_TRUNK, DIALOG_STYLE_INPUT, ""FPHEAD"Инвентарь", 
				""FPMSG"Сколько вы хотите положить в багажник?", "Далее", "Назад");
		}
		case D_BAG_TO_HOUSE:
		{
			return ShowPlayerDialog(playerid, D_BAG_TO_HOUSE, DIALOG_STYLE_INPUT, ""FPHEAD"Инвентарь", 
				""FPMSG"Сколько вы хотите положить в тайник?", "Далее", "Назад");
		}
		case D_CHAT:
		{
			return ShowPlayerDialog(playerid,D_CHAT,DIALOG_STYLE_LIST,""FPHEAD"КПК -> Чаты","Персональные сообщения\nОбщий чат\nНовости\nСообщения о входе","Выбрать","Назад");
		}
		case D_MAKEGUN:
		{
			return ShowPlayerDialog(playerid,D_MAKEGUN,DIALOG_STYLE_LIST,""FPHEAD"Собрать оружие","[1] Пистолет (100 материалов)\n\
									  													[2] Desert Eagle (150 материалов)\n\
									  													[3] Дробовик (350 материалов)\n\
									  													[4] Микро УЗИ (200 материалов)\n\
									  													[5] MP5 (200 материалов)\n\
									  													[6] AK-47 (600 материалов)\n\
									  													[7] M4 (600 материалов)\n\
									  													[8] Тек-9 (200 материалов)\n\
									  													[9] Винтовка (350 материалов)","Выбрать","Выйти");
		}
		case D_SKIN:
		{
			return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ошибка",
															 "Вам необходимо выбрать одежду.",
															 "OK", "");
		}
		case D_SKIN_MONEY:
		{
			new string[48];
			format(string, sizeof(string), "Для покупки этой одежды необходимо $%d.", GetPVarInt(playerid, "SkinShop_Cost"));
			return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ошибка", string,
															 "OK", "");
		}
		case D_SKIN_BUY:
		{
			new string[60];
			format(string, sizeof(string), "Вы действительно хотите купить эту одежду за $%d?" , GetPVarInt(playerid, "SkinShop_Cost"));
			return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Магазин одежды", string,
															 "Да", 
															 "Нет");
		}
		case D_CLOTHES_NULL:
		{
			return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Ошибка",
															 "На этой вешалке нет комплекта одежды.",
															 "OK", "");
		}
		case D_CLOTHES_GET:
		{
			return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Шкаф",
															 "Вы действительно хотите сменить одежду?",
															 "Да", 
															 "Нет");
		}
		case D_CLOTHES_REPLACE:
		{
			return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Шкаф",
															 "Вы действительно хотите повесить комплект одежды в этот слот?",
															 "Да", 
															 "Нет");
		}
		case D_CLOTHES_PUT:
		{
			return ShowPlayerDialog(playerid, dialogid, DIALOG_STYLE_MSGBOX, "Шкаф",
															 "Ваш текущий комплект одежды будет доставлен в гардероб.\n\
															 Выберите слот в шкафу, на который вы хотите повесить одежду.\n\
															 Если вам не нужен старый комплект одежды, закройте шкаф.",
															 "OK", "");
		}
		default: return 1;
	}
	return 1;
}
COMMAND:vip(playerid,params[])
{
	if(!PremiumInfo[playerid][Level])return ErrorMes(playerid,"У тебя нет VIP аккаунта. Преимущества VIP: \"/viphelp\"");
	return ShowDialog(playerid,D_VIP);
}
COMMAND:toint(playerid,params[])
{
	new i;
	if(sscanf(params,"i",i)) return 1;
	SetPos(playerid,HIInfo[i][Exit_X],HIInfo[i][Exit_Y],HIInfo[i][Exit_Z],0.0, HIInfo[i][Int],0);
	return 1;
}
COMMAND:viphelp(playerid,params[])
{
	new string[1024];
	strcat(string, "{F5DEB3}1 уровень:\n");
	strcat(string, "\tВозможность выйти из фракции, банды или мафии: \"/quitteam\"\n");
	strcat(string, "\tВозможность покупки 3 единиц личного транспорта\n");
	strcat(string, "\tБонус к зарплате, ивентам и стоимости продажи имущества +20%\n");
	strcat(string, "\n2 уровень:\n");
	strcat(string, "\tБонус к зарплате, ивентам и стоимости продажи имущества +30%\n");
	strcat(string, "\n3 уровень:\n");
	strcat(string, "\tБонус к зарплате, ивентам и стоимости продажи имущества +40%\n");
	strcat(string, "\tЗащита от \"/iznas\", бесплатная починка\n");
	strcat(string, "\n4 уровень:\n");
	strcat(string, "\tБонус к зарплате, ивентам и стоимости продажи имущества +50%\n");
	strcat(string, "\tБесплатный тюнинг и заправка транспорта\n");
	strcat(string, "\n5 уровень:\n");
	strcat(string, "\tБонус к зарплате, ивентам и стоимости продажи имущества +80%\n");
	strcat(string, "\tДолжность помощника (На усмотрение администрации)");
	strcat(string, "\n\nВозможности VIP будут увеличиваться...");
	ShowPlayerDialog(playerid,555,DIALOG_STYLE_MSGBOX,""FPHEAD"Преимущества VIP",string,"OK","");
	return 1;
}
COMMAND:snow(playerid,params[])
{
	if(!GetPVarInt(playerid,"Snow")) CreateSnow(playerid);
	else DeleteSnow(playerid);
	return 1;
}
stock CreateSnow(playerid)
{
	for(new i = 0; i < 5; i++) SnowObject[playerid][i] = CreateDynamicObject(18864, PlayerInfo[i][pPos][0] + random(15), PlayerInfo[i][pPos][1] + random (15), PlayerInfo[i][pPos][2] - 5, random(100), random(100), random(100), -1, -1, playerid);
	SetPVarInt(playerid,"Snow",1);
	return true;
}
stock DeleteSnow(playerid)
{
    for(new i = 0; i < 5; i++) DestroyDynamicObject(SnowObject[playerid][i]);
    DeletePVar(playerid,"Snow");
    return true;
}
COMMAND:radio(playerid,params[])
{
	return ShowDialog(playerid,D_RADIO);
}

AddPlayerToTeam(playerid, team, type, rank)
{
	new string[196];
	TeamInfo[playerid][tID] = team;
	TeamInfo[playerid][tType] = type;
	TeamInfo[playerid][tRank] = rank;
	SetSkin(playerid);
	
	format(string,sizeof(string),"%02d.%02d.%d %02d:%02d:%02d",Day,Month,Year,Hour,Minute,Second);
	strmid(TeamInfo[playerid][tDate],string,0,20,20);
	
	PlayerInfo[playerid][pJob] = 0;
	format(string,sizeof(string),"UPDATE `samp_users` SET `Job`='0' WHERE `Name`='%s'",
		PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	format(string,sizeof(string),"INSERT INTO `samp_team` (`Name`,`Date`,`Team`,`Type`,`Rank`,`Skin`,`Online`,`LastLogin`) VALUES ('%s','%s','%d','%d','%d','%d','1','%d')",
		PlayerInfo[playerid][pName],TeamInfo[playerid][tDate],TeamInfo[playerid][tID],TeamInfo[playerid][tType],TeamInfo[playerid][tRank],TeamInfo[playerid][tSkin],GetTime);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

	if(IsACop(playerid)) SetPVarInt(playerid,"OnDuty",1);
	SetPlayerColor(playerid,PlayerColors[TeamColors[TeamInfo[playerid][tID]]-1]);
	
	SetPlayerPos(playerid,PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2]+5);
	SpawnPlayer(playerid);
}

UpdatePlayerTeam(playerid, type, rank)
{
	new string[128];
	TeamInfo[playerid][tType] = type;
	TeamInfo[playerid][tRank] = rank;
	SetSkin(playerid);

	format(string,sizeof(string),"UPDATE `samp_team` SET `Type` = '%d',`Rank` = '%d',`Skin` = '%d' WHERE `Name`='%s'",
		TeamInfo[playerid][tType], TeamInfo[playerid][tRank], TeamInfo[playerid][tSkin], PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

	if(IsACop(playerid)) SetPVarInt(playerid,"OnDuty",1);
	
	SetPlayerPos(playerid,PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2]+5);
	SpawnPlayer(playerid);
}

DeletePlayerFromTeam(playerid)
{
	new string[80];
	format(string,sizeof(string),"DELETE FROM `samp_team` WHERE `Name`='%s'", 
		PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	format(string,sizeof(string),"UPDATE `samp_users` SET `Job`='0' WHERE `Name`='%s'",
		PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);

	format(string,sizeof(string),"DELETE FROM `samp_twarns` WHERE `Name`='%s'",
		PlayerInfo[playerid][pName]);
	mysql_tquery(MYSQL_DEFAULT_HANDLE, string);
	
	SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
	SetPlayerColor(playerid,0xFFFFFF30);
	
	TeamInfo[playerid][tType] = 0;
	TeamInfo[playerid][tID] = 0;
	TWarnInfo[playerid][wWarns] = 0;
	PlayerInfo[playerid][pJob] = 0;

	for(new i = 0; i < 25; i ++)
	{
		if(iData[playerid][inState][i] || oData[iData[playerid][inItems][i]][imType] > 12) continue;
		DropItem(playerid, i);
	}
	if(PlayerInfo[playerid][pTazer] != -1)
		DropItem(playerid, PlayerInfo[playerid][pTazer]);

	if(GetPVarInt(playerid,"Mask"))
	{
		SetPlayerSkin(playerid,GetPVarInt(playerid,"OldSkin"));
		DeletePVar(playerid,"Mask");
		DeletePVar(playerid,"MaskSkin");
		SetPlayerColor(playerid,0xFFFFFF30);
		ForEachPlayer(i) if(!PlayerInfo[i][pAdmin]) ShowPlayerNameTagForPlayer(i,playerid, true);
	}	
	
	SetPlayerPos(playerid,PlayerInfo[playerid][pPos][0],PlayerInfo[playerid][pPos][1],PlayerInfo[playerid][pPos][2]+5);
	SpawnPlayer(playerid);
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response)
    {
        atData[playerid][at_x][index] = fOffsetX;
        atData[playerid][at_y][index] = fOffsetY;
        atData[playerid][at_z][index] = fOffsetZ;
        atData[playerid][at_rx][index] = fRotX;
        atData[playerid][at_ry][index] = fRotY;
        atData[playerid][at_rz][index] = fRotZ;
        atData[playerid][at_sx][index] = fScaleX;
        atData[playerid][at_sy][index] = fScaleY;
        atData[playerid][at_sz][index] = fScaleZ;

        printf("%d (%d) %d: %f %f %f %f %f %f %f %f %f ",
        	modelid, boneid, GetPlayerSkin(playerid),
        	atData[playerid][at_x][index],
	        atData[playerid][at_y][index],
	        atData[playerid][at_z][index],
	        atData[playerid][at_rx][index],
	        atData[playerid][at_ry][index],
	        atData[playerid][at_rz][index],
	        atData[playerid][at_sx][index],
	        atData[playerid][at_sy][index],
	        atData[playerid][at_sz][index]);
    }
    else
    {
        SetPlayerAttachedObject(playerid, index, modelid, boneid, 
        	atData[playerid][at_x][index],
	        atData[playerid][at_y][index],
	        atData[playerid][at_z][index],
	        atData[playerid][at_rx][index],
	        atData[playerid][at_ry][index],
	        atData[playerid][at_rz][index],
	        atData[playerid][at_sx][index],
	        atData[playerid][at_sy][index],
	        atData[playerid][at_sz][index]);
    }
    return 1;
}

AttachObject(playerid, slotid, type)
{
	switch(type)
	{
		case 100:
		{
			atData[playerid][at_x][slotid] = ArmourPos[PlayerInfo[playerid][pSkin]][0];
	        atData[playerid][at_y][slotid] = ArmourPos[PlayerInfo[playerid][pSkin]][1];
	        atData[playerid][at_z][slotid] = ArmourPos[PlayerInfo[playerid][pSkin]][2];
	        atData[playerid][at_rx][slotid] = ArmourPos[PlayerInfo[playerid][pSkin]][3];
	        atData[playerid][at_ry][slotid] = ArmourPos[PlayerInfo[playerid][pSkin]][4];
	        atData[playerid][at_rz][slotid] = ArmourPos[PlayerInfo[playerid][pSkin]][5];
	        atData[playerid][at_sx][slotid] = ArmourPos[PlayerInfo[playerid][pSkin]][6];
	        atData[playerid][at_sy][slotid] = ArmourPos[PlayerInfo[playerid][pSkin]][7];
	        atData[playerid][at_sz][slotid] = ArmourPos[PlayerInfo[playerid][pSkin]][8];
			
			SetPlayerAttachedObject(playerid, 5, 19515, 1, 
	        	atData[playerid][at_x][slotid],
		        atData[playerid][at_y][slotid],
		        atData[playerid][at_z][slotid],
		        atData[playerid][at_rx][slotid],
		        atData[playerid][at_ry][slotid],
		        atData[playerid][at_rz][slotid],
		        atData[playerid][at_sx][slotid],
		        atData[playerid][at_sy][slotid],
		        atData[playerid][at_sz][slotid]);
		}
		default: return 1;
	}
	return 1;
}
